version: "3.8"

services:
  build:
    image: alpine
    volumes:
      - .:/workspace
      - ./out:/out
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    command: >
      sh -c "
        if ! command -v docker &> /dev/null; then
          apk add --no-cache docker-cli
        fi &&
        apk add --no-cache docker-cli-buildx &&
        docker buildx create --name builder || true &&
        docker buildx use builder &&
        docker buildx build --load -t ${IMAGE_NAME}:latest . &&
        docker save -o /out/${IMAGE_NAME}.tar ${IMAGE_NAME}:latest &&
        echo 'Image saved to out/${IMAGE_NAME}.tar'
      "

  push:
    image: alpine
    volumes:
      - .:/workspace
      - ./out:/out
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    env_file:
      - .env
    command: >
      sh -c "
        if ! command -v docker &> /dev/null; then
          apk add --no-cache docker-cli
        fi &&
        apk add --no-cache docker-cli-buildx &&
        docker buildx create --name builder || true &&
        echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin &&
        docker buildx use builder &&
        docker buildx build --platform linux/amd64,linux/arm64 --push -t ${DOCKER_USERNAME}/${IMAGE_NAME}:latest . &&
        echo 'Image pushed to Docker Hub'
      "

  run:
    image: alpine
    volumes:
      - ./out:/out
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "4000:4000"
    env_file:
      - .env
    command: >
      sh -c "
        if ! command -v docker &> /dev/null; then
          apk add --no-cache docker-cli
        fi &&
        docker load < /out/${IMAGE_NAME}.tar &&
        docker run --rm -p 6000:6000 ${IMAGE_NAME}:latest npm run start
      "
