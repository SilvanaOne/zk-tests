/*
 * Calculator API
 *
 * Simple API for mathematical operations
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MathResponse {
    /// Result of the mathematical operation
    #[serde(rename = "result")]
    pub result: i64,
    /// The operation that was performed
    #[serde(rename = "operation")]
    pub operation: Operation,
    /// Transaction hash from blockchain (only for add operation when using blockchain)
    #[serde(rename = "tx_hash", skip_serializing_if = "Option::is_none")]
    pub tx_hash: Option<String>,
}

impl MathResponse {
    pub fn new(result: i64, operation: Operation) -> MathResponse {
        MathResponse {
            result,
            operation,
            tx_hash: None,
        }
    }
}
/// The operation that was performed
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "add")]
    Add,
    #[serde(rename = "multiply")]
    Multiply,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::Add
    }
}

