// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client/index.js';
import type { AddNumbersData, AddNumbersResponses, AddNumbersErrors, MultiplyNumbersData, MultiplyNumbersResponses, MultiplyNumbersErrors, GenerateSuiKeypairData, GenerateSuiKeypairResponses, GenerateSuiKeypairErrors, CreateRegistryData, CreateRegistryResponses, CreateRegistryErrors } from './types.gen.js';
import { client as _heyApiClient } from './client.gen.js';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Add two numbers
 * Calculates the sum of two unsigned 64-bit integers
 */
export const addNumbers = <ThrowOnError extends boolean = false>(options: Options<AddNumbersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddNumbersResponses, AddNumbersErrors, ThrowOnError>({
        url: '/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Multiply two numbers
 * Calculates the product of two unsigned 64-bit integers
 */
export const multiplyNumbers = <ThrowOnError extends boolean = false>(options: Options<MultiplyNumbersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MultiplyNumbersResponses, MultiplyNumbersErrors, ThrowOnError>({
        url: '/multiply',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Generate or retrieve a Sui keypair
 * Generates a new Ed25519 keypair for the given login identifier or retrieves existing one
 */
export const generateSuiKeypair = <ThrowOnError extends boolean = false>(options: Options<GenerateSuiKeypairData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GenerateSuiKeypairResponses, GenerateSuiKeypairErrors, ThrowOnError>({
        url: '/generate-sui-keypair',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Create a Silvana registry on Sui blockchain
 * Creates a new Silvana registry with the specified name on the chosen Sui network
 */
export const createRegistry = <ThrowOnError extends boolean = false>(options: Options<CreateRegistryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateRegistryResponses, CreateRegistryErrors, ThrowOnError>({
        url: '/create-registry',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};