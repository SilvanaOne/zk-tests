Downloading package ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448...

> GET /v2/packages/ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448 HTTP/1.1
< HTTP/1.1 200 OK
< Content-Type: application/octet-stream
< Canton-Package-Hash: ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448
< Access-Control-Allow-Headers: Origin, Content-Type, Accept

Package downloaded to: hash-package-ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448.dalf
-rw-r--r--@ 1 mike  staff   169K Oct 14 18:43 hash-package-ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448.dalf

Verifying SHA256 hash...
✅ Hash verified: ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448

Adding DAML-LF envelope for decoding...
✅ DAML-LF envelope added (4 + 66 bytes)

Decoding DALF package...

package ebcb332af7ce9924ad0c72446c92daee8738d12f234211120d5665ab8a395448
daml-lf 2.1
metadata hash-v9-0.0.1

module HashRequest where
record @serializable Withdraw = {}
record @serializable Decline = {}
record @serializable Accept = {root_time : Optional Timestamp}
record @serializable HashRequest =
  {owner : Party;
   provider : Party;
   id : Text;
   add_result : Int64;
   keccak_result : Optional Text;
   sha256_result : Optional Text;
   root : Text}
def $sel:sha256_result:HashRequest : HashRequest:HashRequest -> Optional Text =
  \(ds : HashRequest:HashRequest).
    HashRequest:HashRequest.sha256_result ds
def $sel:root_time:Accept : HashRequest:Accept -> Optional Timestamp =
  \(ds : HashRequest:Accept). HashRequest:Accept.root_time ds
def $sel:root:HashRequest : HashRequest:HashRequest -> Text =
  \(ds : HashRequest:HashRequest). HashRequest:HashRequest.root ds
def $sel:provider:HashRequest : HashRequest:HashRequest -> Party =
  \(ds : HashRequest:HashRequest).
    HashRequest:HashRequest.provider ds
def $sel:owner:HashRequest : HashRequest:HashRequest -> Party =
  \(ds : HashRequest:HashRequest). HashRequest:HashRequest.owner ds
def $sel:keccak_result:HashRequest : HashRequest:HashRequest -> Optional Text =
  \(ds : HashRequest:HashRequest).
    HashRequest:HashRequest.keccak_result ds
def $sel:id:HashRequest : HashRequest:HashRequest -> Text =
  \(ds : HashRequest:HashRequest). HashRequest:HashRequest.id ds
def $sel:add_result:HashRequest : HashRequest:HashRequest -> Int64 =
  \(ds : HashRequest:HashRequest).
    HashRequest:HashRequest.add_result ds
def $fSetField"sha256_result"HashRequestOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_sha256_result :
                                                                                                                                                                                                                                                           Unit>) HashRequest:HashRequest (Optional Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Text) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with sha256_result = $$v1}>
def $fSetField"root_time"AcceptOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root_time :
                                                                                                                                                                                                                                                  Unit>) HashRequest:Accept (Optional Timestamp) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Timestamp) ($$v2 : HashRequest:Accept).
       HashRequest:Accept {$$v2 with root_time = $$v1}>
def $fSetField"root"HashRequestText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                              Unit>) HashRequest:HashRequest Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with root = $$v1}>
def $fSetField"provider"HashRequestParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                                   Unit>) HashRequest:HashRequest Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with provider = $$v1}>
def $fSetField"owner"HashRequestParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                                Unit>) HashRequest:HashRequest Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with owner = $$v1}>
def $fSetField"keccak_result"HashRequestOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_keccak_result :
                                                                                                                                                                                                                                                           Unit>) HashRequest:HashRequest (Optional Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Text) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with keccak_result = $$v1}>
def $fSetField"id"HashRequestText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                            Unit>) HashRequest:HashRequest Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with id = $$v1}>
def $fSetField"add_result"HashRequestInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_add_result :
                                                                                                                                                                                                                                                   Unit>) HashRequest:HashRequest Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : HashRequest:HashRequest).
       HashRequest:HashRequest {$$v2 with add_result = $$v1}>
def $fHasToAnyTemplateHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyTemplate HashRequest:HashRequest =
  <m__toAnyTemplate =
     \(_ : Unit) (template : HashRequest:HashRequest).
       to_any @HashRequest:HashRequest template>
def $$sc_$fHasToAnyChoiceHashRequestWithdraw()_1 : HashRequest:Withdraw -> Any =
  \(choice : HashRequest:Withdraw).
    to_any @HashRequest:Withdraw choice
def $$sc_$fHasToAnyChoiceHashRequestWithdraw()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> HashRequest:Withdraw -> Any =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasToAnyChoiceHashRequestWithdraw()_1
def $fHasToAnyChoiceHashRequestWithdraw() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice HashRequest:HashRequest HashRequest:Withdraw Unit =
  <m__toAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasToAnyChoiceHashRequestWithdraw()_2>
def $$sc_$fHasToAnyChoiceHashRequestDecline()_1 : HashRequest:Decline -> Any =
  \(choice : HashRequest:Decline). to_any @HashRequest:Decline choice
def $$sc_$fHasToAnyChoiceHashRequestDecline()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> HashRequest:Decline -> Any =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasToAnyChoiceHashRequestDecline()_1
def $fHasToAnyChoiceHashRequestDecline() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice HashRequest:HashRequest HashRequest:Decline Unit =
  <m__toAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasToAnyChoiceHashRequestDecline()_2>
def $$sc_$fHasToAnyChoiceHashRequestArchive()_1 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  \(choice : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    to_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      choice
def $$sc_$fHasToAnyChoiceHashRequestArchive()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasToAnyChoiceHashRequestArchive()_1
def $fHasToAnyChoiceHashRequestArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice HashRequest:HashRequest 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__toAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasToAnyChoiceHashRequestArchive()_2>
def $$sc_$fHasToAnyChoiceHashRequestAcceptContractId_1 : HashRequest:Accept -> Any =
  \(choice : HashRequest:Accept). to_any @HashRequest:Accept choice
def $$sc_$fHasToAnyChoiceHashRequestAcceptContractId_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> HashRequest:Accept -> Any =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasToAnyChoiceHashRequestAcceptContractId_1
def $fHasToAnyChoiceHashRequestAcceptContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice HashRequest:HashRequest HashRequest:Accept (ContractId Hash:Hash) =
  <m__toAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasToAnyChoiceHashRequestAcceptContractId_2>
def $$sc_$fHasTemplateTypeRepHashRequest_1 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> TypeRep =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      type_rep @HashRequest:HashRequest
def $fHasTemplateTypeRepHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasTemplateTypeRep HashRequest:HashRequest =
  <m__templateTypeRep =
     \(_ : Unit). HashRequest:$$sc_$fHasTemplateTypeRepHashRequest_1>
def $fHasFromAnyTemplateHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyTemplate HashRequest:HashRequest =
  <m__fromAnyTemplate =
     \(_ : Unit) (any : Any). from_any @HashRequest:HashRequest any>
def $$sc_$fHasFromAnyChoiceHashRequestWithdraw()_1 : Any -> Optional HashRequest:Withdraw =
  \(any : Any). from_any @HashRequest:Withdraw any
def $$sc_$fHasFromAnyChoiceHashRequestWithdraw()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> Any -> Optional HashRequest:Withdraw =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasFromAnyChoiceHashRequestWithdraw()_1
def $fHasFromAnyChoiceHashRequestWithdraw() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice HashRequest:HashRequest HashRequest:Withdraw Unit =
  <m__fromAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasFromAnyChoiceHashRequestWithdraw()_2>
def $$sc_$fHasFromAnyChoiceHashRequestDecline()_1 : Any -> Optional HashRequest:Decline =
  \(any : Any). from_any @HashRequest:Decline any
def $$sc_$fHasFromAnyChoiceHashRequestDecline()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> Any -> Optional HashRequest:Decline =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasFromAnyChoiceHashRequestDecline()_1
def $fHasFromAnyChoiceHashRequestDecline() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice HashRequest:HashRequest HashRequest:Decline Unit =
  <m__fromAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasFromAnyChoiceHashRequestDecline()_2>
def $$sc_$fHasFromAnyChoiceHashRequestArchive()_1 : Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  \(any : Any).
    from_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      any
def $$sc_$fHasFromAnyChoiceHashRequestArchive()_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasFromAnyChoiceHashRequestArchive()_1
def $fHasFromAnyChoiceHashRequestArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice HashRequest:HashRequest 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__fromAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasFromAnyChoiceHashRequestArchive()_2>
def $$sc_$fHasFromAnyChoiceHashRequestAcceptContractId_1 : Any -> Optional HashRequest:Accept =
  \(any : Any). from_any @HashRequest:Accept any
def $$sc_$fHasFromAnyChoiceHashRequestAcceptContractId_2 : forall (proxy : * -> *). proxy HashRequest:HashRequest -> Any -> Optional HashRequest:Accept =
  /\(proxy : * -> *).
    \(_ : proxy HashRequest:HashRequest).
      HashRequest:$$sc_$fHasFromAnyChoiceHashRequestAcceptContractId_1
def $fHasFromAnyChoiceHashRequestAcceptContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice HashRequest:HashRequest HashRequest:Accept (ContractId Hash:Hash) =
  <m__fromAnyChoice =
     \(_ : Unit).
       HashRequest:$$sc_$fHasFromAnyChoiceHashRequestAcceptContractId_2>
def $fHasFetchHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFetch HashRequest:HashRequest =
  <m_fetch =
     \(_ : Unit) (this : ContractId HashRequest:HashRequest).
       fetch @HashRequest:HashRequest this>
def $fHasExerciseHashRequestWithdraw() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise HashRequest:HashRequest HashRequest:Withdraw Unit =
  <m_exercise =
     \(_ : Unit) (this : ContractId HashRequest:HashRequest) (arg : HashRequest:Withdraw).
       exercise @HashRequest:HashRequest Withdraw this arg>
def $fHasExerciseHashRequestDecline() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise HashRequest:HashRequest HashRequest:Decline Unit =
  <m_exercise =
     \(_ : Unit) (this : ContractId HashRequest:HashRequest) (arg : HashRequest:Decline).
       exercise @HashRequest:HashRequest Decline this arg>
def $fHasExerciseHashRequestArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise HashRequest:HashRequest 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m_exercise =
     \(_ : Unit) (this : ContractId HashRequest:HashRequest) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
       exercise @HashRequest:HashRequest Archive this arg>
def $fHasExerciseHashRequestAcceptContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise HashRequest:HashRequest HashRequest:Accept (ContractId Hash:Hash) =
  <m_exercise =
     \(_ : Unit) (this : ContractId HashRequest:HashRequest) (arg : HashRequest:Accept).
       exercise @HashRequest:HashRequest Accept this arg>
def $fHasCreateHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasCreate HashRequest:HashRequest =
  <m_create =
     \(_ : Unit) (this : HashRequest:HashRequest).
       create @HashRequest:HashRequest this>
def $fGetField"sha256_result"HashRequestOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_sha256_result :
                                                                                                                                                                                                                                                           Unit>) HashRequest:HashRequest (Optional Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.sha256_result $$v1>
def $fGetField"root_time"AcceptOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root_time :
                                                                                                                                                                                                                                                  Unit>) HashRequest:Accept (Optional Timestamp) =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:Accept).
       HashRequest:Accept.root_time $$v1>
def $fGetField"root"HashRequestText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                              Unit>) HashRequest:HashRequest Text =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.root $$v1>
def $fGetField"provider"HashRequestParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                                   Unit>) HashRequest:HashRequest Party =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.provider $$v1>
def $fGetField"owner"HashRequestParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                                Unit>) HashRequest:HashRequest Party =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.owner $$v1>
def $fGetField"keccak_result"HashRequestOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_keccak_result :
                                                                                                                                                                                                                                                           Unit>) HashRequest:HashRequest (Optional Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.keccak_result $$v1>
def $fGetField"id"HashRequestText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                            Unit>) HashRequest:HashRequest Text =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.id $$v1>
def $fGetField"add_result"HashRequestInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_add_result :
                                                                                                                                                                                                                                                   Unit>) HashRequest:HashRequest Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : HashRequest:HashRequest).
       HashRequest:HashRequest.add_result $$v1>
def $csignatory : HashRequest:HashRequest -> List Party =
  \(this : HashRequest:HashRequest).
    let ds : Party = HashRequest:HashRequest.owner this
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
         ds
def $fHasSignatoryHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasSignatory HashRequest:HashRequest =
  <m_signatory = \(_ : Unit). HashRequest:$csignatory>
def $$sc_$cshowsPrec3_1 : Party -> Text -> Text =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$cshowsPrec3
    0
def $$sc_$cshowsPrec3_2 : Text -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show.Text:showsPrecText
    0
def $$sc_$cshowsPrec3_3 : Int64 -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$cshowsPrec2
    0
def $$sc_$cshowsPrec3_4 : Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
    "}"
def $$sc_$cshowsPrec3_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "root = ")
def $$sc_$cshowsPrec3_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showCommaSpace
def $$sc_$cshowsPrec3_7 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "sha256_result = ")
def $$sc_$cshowsPrec3_8 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "keccak_result = ")
def $$sc_$cshowsPrec3_9 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "add_result = ")
def $$sc_$cshowsPrec3_10 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "id = ")
def $$sc_$cshowsPrec3_11 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "provider = ")
def $$sc_$cshowsPrec3_12 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "owner = ")
def $$sc_$cshowsPrec3_13 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "HashRequest {")
def $cshowsPrec3 : Int64 -> HashRequest:HashRequest -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (Optional Text) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fShowOptional
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
  in \(a : Int64) (ds : HashRequest:HashRequest).
       let b1 : Party = HashRequest:HashRequest.owner ds
           b2 : Party = HashRequest:HashRequest.provider ds
           b3 : Text = HashRequest:HashRequest.id ds
           b4 : Int64 = HashRequest:HashRequest.add_result ds
           b5 : Optional Text = HashRequest:HashRequest.keccak_result ds
           b6 : Optional Text = HashRequest:HashRequest.sha256_result ds
           b7 : Text = HashRequest:HashRequest.root ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (HashRequest:$$sc_$cshowsPrec3_13
               (HashRequest:$$sc_$cshowsPrec3_12
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     (HashRequest:$$sc_$cshowsPrec3_1 b1)
                     (HashRequest:$$sc_$cshowsPrec3_6
                        (HashRequest:$$sc_$cshowsPrec3_11
                           (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                              @Text
                              @Text
                              @Text
                              (HashRequest:$$sc_$cshowsPrec3_1 b2)
                              (HashRequest:$$sc_$cshowsPrec3_6
                                 (HashRequest:$$sc_$cshowsPrec3_10
                                    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                       @Text
                                       @Text
                                       @Text
                                       (HashRequest:$$sc_$cshowsPrec3_2 b3)
                                       (HashRequest:$$sc_$cshowsPrec3_6
                                          (HashRequest:$$sc_$cshowsPrec3_9
                                             (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                @Text
                                                @Text
                                                @Text
                                                (HashRequest:$$sc_$cshowsPrec3_3 b4)
                                                (HashRequest:$$sc_$cshowsPrec3_6
                                                   (HashRequest:$$sc_$cshowsPrec3_8
                                                      (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                         @Text
                                                         @Text
                                                         @Text
                                                         ($dShow.m_showsPrec unit 0 b5)
                                                         (HashRequest:$$sc_$cshowsPrec3_6
                                                            (HashRequest:$$sc_$cshowsPrec3_7
                                                               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                  @Text
                                                                  @Text
                                                                  @Text
                                                                  ($dShow.m_showsPrec unit 0 b6)
                                                                  (HashRequest:$$sc_$cshowsPrec3_6
                                                                     (HashRequest:$$sc_$cshowsPrec3_5
                                                                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                           @Text
                                                                           @Text
                                                                           @Text
                                                                           (HashRequest:$$sc_$cshowsPrec3_2
                                                                              b7)
                                                                           HashRequest:$$sc_$cshowsPrec3_4)))))))))))))))))))))
def $$sc_$cshowsPrec2_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "root_time = ")
def $$sc_$cshowsPrec2_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Accept {")
def $cshowsPrec2 : Int64 -> HashRequest:Accept -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fShowOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fShowTime
  in \(a : Int64) (ds : HashRequest:Accept).
       let b1 : Optional Timestamp = HashRequest:Accept.root_time ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (HashRequest:$$sc_$cshowsPrec2_2
               (HashRequest:$$sc_$cshowsPrec2_1
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow.m_showsPrec unit 0 b1)
                     HashRequest:$$sc_$cshowsPrec3_4)))
def $$sc_$cshowsPrec1_1 : Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
    "Decline"
def $cshowsPrec1 : Int64 -> HashRequest:Decline -> Text -> Text =
  \(ds : Int64) (ds1 : HashRequest:Decline).
    HashRequest:$$sc_$cshowsPrec1_1
def $$sc_$cshowsPrec_1 : Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
    "Withdraw"
def $cshowsPrec : Int64 -> HashRequest:Withdraw -> Text -> Text =
  \(ds : Int64) (ds1 : HashRequest:Withdraw).
    HashRequest:$$sc_$cshowsPrec_1
def $cshow3 : HashRequest:HashRequest -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @HashRequest:HashRequest
    HashRequest:$fShowHashRequest
def $fShowHashRequest : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show HashRequest:HashRequest =
  <m_showsPrec = \(_ : Unit). HashRequest:$cshowsPrec3;
   m_show = \(_ : Unit). HashRequest:$cshow3;
   m_showList = \(_ : Unit). HashRequest:$cshowList3>
def $cshowList3 : List HashRequest:HashRequest -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @HashRequest:HashRequest
    HashRequest:$fShowHashRequest
def $cshow2 : HashRequest:Accept -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @HashRequest:Accept
    HashRequest:$fShowAccept
def $fShowAccept : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show HashRequest:Accept =
  <m_showsPrec = \(_ : Unit). HashRequest:$cshowsPrec2;
   m_show = \(_ : Unit). HashRequest:$cshow2;
   m_showList = \(_ : Unit). HashRequest:$cshowList2>
def $cshowList2 : List HashRequest:Accept -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @HashRequest:Accept
    HashRequest:$fShowAccept
def $cshow1 : HashRequest:Decline -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @HashRequest:Decline
    HashRequest:$fShowDecline
def $fShowDecline : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show HashRequest:Decline =
  <m_showsPrec = \(_ : Unit). HashRequest:$cshowsPrec1;
   m_show = \(_ : Unit). HashRequest:$cshow1;
   m_showList = \(_ : Unit). HashRequest:$cshowList1>
def $cshowList1 : List HashRequest:Decline -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @HashRequest:Decline
    HashRequest:$fShowDecline
def $cshow : HashRequest:Withdraw -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @HashRequest:Withdraw
    HashRequest:$fShowWithdraw
def $fShowWithdraw : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show HashRequest:Withdraw =
  <m_showsPrec = \(_ : Unit). HashRequest:$cshowsPrec;
   m_show = \(_ : Unit). HashRequest:$cshow;
   m_showList = \(_ : Unit). HashRequest:$cshowList>
def $cshowList : List HashRequest:Withdraw -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @HashRequest:Withdraw
    HashRequest:$fShowWithdraw
def $cobserver : HashRequest:HashRequest -> List Party =
  \(this : HashRequest:HashRequest).
    let ds1 : Party = HashRequest:HashRequest.provider this
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
         ds1
def $fHasObserverHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasObserver HashRequest:HashRequest =
  <m_observer = \(_ : Unit). HashRequest:$cobserver>
def $censure : HashRequest:HashRequest -> Bool =
  \(this : HashRequest:HashRequest). true
def $fHasEnsureHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasEnsure HashRequest:HashRequest =
  <m_ensure = \(_ : Unit). HashRequest:$censure>
def $$sc_$carchive_1 : ContractId HashRequest:HashRequest -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(this : ContractId HashRequest:HashRequest) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    exercise @HashRequest:HashRequest Archive this arg
def $$sc_$carchive_2 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
    {}
def $carchive : ContractId HashRequest:HashRequest -> Update Unit =
  \(cid : ContractId HashRequest:HashRequest).
    HashRequest:$$sc_$carchive_1 cid HashRequest:$$sc_$carchive_2
def $fHasArchiveHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasArchive HashRequest:HashRequest =
  <m_archive = \(_ : Unit). HashRequest:$carchive>
def $c_isInterfaceType : forall (proxy : * -> *). proxy HashRequest:HashRequest -> Bool =
  /\(proxy : * -> *). \(ds : proxy HashRequest:HashRequest). false
def $fHasIsInterfaceTypeHashRequest : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Desugar:HasIsInterfaceType HashRequest:HashRequest =
  <m__isInterfaceType = \(_ : Unit). HashRequest:$c_isInterfaceType>
def $c==3 : HashRequest:HashRequest -> HashRequest:HashRequest -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (Optional Text) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fEqOptional
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
  in \(ds : HashRequest:HashRequest) (ds1 : HashRequest:HashRequest).
       let a1 : Party = HashRequest:HashRequest.owner ds
           a2 : Party = HashRequest:HashRequest.provider ds
           a3 : Text = HashRequest:HashRequest.id ds
           a4 : Int64 = HashRequest:HashRequest.add_result ds
           a5 : Optional Text = HashRequest:HashRequest.keccak_result ds
           a6 : Optional Text = HashRequest:HashRequest.sha256_result ds
           a7 : Text = HashRequest:HashRequest.root ds
           b1 : Party = HashRequest:HashRequest.owner ds1
           b2 : Party = HashRequest:HashRequest.provider ds1
           b3 : Text = HashRequest:HashRequest.id ds1
           b4 : Int64 = HashRequest:HashRequest.add_result ds1
           b5 : Optional Text = HashRequest:HashRequest.keccak_result ds1
           b6 : Optional Text = HashRequest:HashRequest.sha256_result ds1
           b7 : Text = HashRequest:HashRequest.root ds1
       in case EQUAL @Party a1 b1 of
            true ->
              case EQUAL @Party a2 b2 of
                true ->
                  case EQUAL @Text a3 b3 of
                    true ->
                      case EQUAL @Int64 a4 b4 of
                        true ->
                          case $dEq.m_== unit a5 b5 of
                            true ->
                              case $dEq.m_== unit a6 b6 of
                                true -> EQUAL @Text a7 b7
                                false -> false
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
def $c==2 : HashRequest:Accept -> HashRequest:Accept -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fEqOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fEqTime
  in \(ds : HashRequest:Accept) (ds1 : HashRequest:Accept).
       let a1 : Optional Timestamp = HashRequest:Accept.root_time ds
           b1 : Optional Timestamp = HashRequest:Accept.root_time ds1
       in $dEq.m_== unit a1 b1
def $c==1 : HashRequest:Decline -> HashRequest:Decline -> Bool =
  \(ds : HashRequest:Decline) (ds1 : HashRequest:Decline). true
def $c== : HashRequest:Withdraw -> HashRequest:Withdraw -> Bool =
  \(ds : HashRequest:Withdraw) (ds1 : HashRequest:Withdraw). true
def $c/=3 : HashRequest:HashRequest -> HashRequest:HashRequest -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @HashRequest:HashRequest
    HashRequest:$fEqHashRequest
def $fEqHashRequest : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq HashRequest:HashRequest =
  <m_== = \(_ : Unit). HashRequest:$c==3;
   m_/= = \(_ : Unit). HashRequest:$c/=3>
def $c/=2 : HashRequest:Accept -> HashRequest:Accept -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @HashRequest:Accept
    HashRequest:$fEqAccept
def $fEqAccept : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq HashRequest:Accept =
  <m_== = \(_ : Unit). HashRequest:$c==2;
   m_/= = \(_ : Unit). HashRequest:$c/=2>
def $c/=1 : HashRequest:Decline -> HashRequest:Decline -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @HashRequest:Decline
    HashRequest:$fEqDecline
def $fEqDecline : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq HashRequest:Decline =
  <m_== = \(_ : Unit). HashRequest:$c==1;
   m_/= = \(_ : Unit). HashRequest:$c/=1>
def $c/= : HashRequest:Withdraw -> HashRequest:Withdraw -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @HashRequest:Withdraw
    HashRequest:$fEqWithdraw
def $fEqWithdraw : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq HashRequest:Withdraw =
  <m_== = \(_ : Unit). HashRequest:$c==;
   m_/= = \(_ : Unit). HashRequest:$c/=>
def $WHashRequest : Party -> Party -> Text -> Int64 -> Optional Text -> Optional Text -> Text -> HashRequest:HashRequest =
  \(dt_a5l2 : Party) (dt_a5l3 : Party) (dt_a5l4 : Text) (dt_a5l5 : Int64) (dt_a5l6 : Optional Text) (dt_a5l7 : Optional Text) (dt_a5l8 : Text).
    HashRequest:HashRequest
      {owner = dt_a5l2;
       provider = dt_a5l3;
       id = dt_a5l4;
       add_result = dt_a5l5;
       keccak_result = dt_a5l6;
       sha256_result = dt_a5l7;
       root = dt_a5l8}
def $WAccept : Optional Timestamp -> HashRequest:Accept =
  \(dt_a5mW : Optional Timestamp).
    HashRequest:Accept {root_time = dt_a5mW}
def $$imports : <_1 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Exception : Unit>>>;
                 _2 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
                 _3 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Interface : Unit>;
                       _4 : <AnyView : Unit>>>;
                 _4 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
                 _5 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Template : Unit>;
                       _4 : <Functions : Unit>>>> =
  ERROR
    @<_1 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Exception : Unit>>>;
      _2 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
      _3 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Interface : Unit>;
            _4 : <AnyView : Unit>>>;
      _4 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
      _5 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Template : Unit>;
            _4 : <Functions : Unit>>>>
    "undefined"
def $$explicitExports : Unit = ERROR @Unit "undefined"
def $$explicitExport3 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <HashRequest : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <HashRequest : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <HashRequest : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <HashRequest : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <add_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:add_result:HashRequest : Unit>>>>;
                               _2 :
                                 <_1 : <id : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>; _2 : <$sel:id:HashRequest : Unit>>>>;
                               _3 :
                                 <_1 : <keccak_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:keccak_result:HashRequest : Unit>>>>;
                               _4 :
                                 <_1 : <owner : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:owner:HashRequest : Unit>>>>;
                               _5 :
                                 <_1 : <provider : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:provider:HashRequest : Unit>>>>;
                               _6 :
                                 <_1 : <root : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:root:HashRequest : Unit>>>>;
                               _7 :
                                 <_1 : <sha256_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:sha256_result:HashRequest : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <HashRequest : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <HashRequest : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <HashRequest : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <HashRequest : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <add_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:add_result:HashRequest : Unit>>>>;
            _2 :
              <_1 : <id : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:id:HashRequest : Unit>>>>;
            _3 :
              <_1 : <keccak_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:keccak_result:HashRequest : Unit>>>>;
            _4 :
              <_1 : <owner : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:owner:HashRequest : Unit>>>>;
            _5 :
              <_1 : <provider : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:provider:HashRequest : Unit>>>>;
            _6 :
              <_1 : <root : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:root:HashRequest : Unit>>>>;
            _7 :
              <_1 : <sha256_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:sha256_result:HashRequest : Unit>>>>>>>
    "undefined"
def $$explicitExport2 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <HashRequest : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Accept : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <HashRequest : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Accept : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <root_time : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <HashRequest : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:root_time:Accept : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <HashRequest : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Accept : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <HashRequest : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Accept : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <root_time : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <HashRequest : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:root_time:Accept : Unit>>>>>>>
    "undefined"
def $$explicitExport1 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <HashRequest : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Decline : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <HashRequest : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Decline : Unit>>>>;
                            _3 : Unit>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <HashRequest : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Decline : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <HashRequest : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Decline : Unit>>>>;
         _3 : Unit>>
    "undefined"
def $$explicitExport0 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <HashRequest : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Withdraw : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <HashRequest : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Withdraw : Unit>>>>;
                            _3 : Unit>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <HashRequest : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Withdraw : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <HashRequest : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Withdraw : Unit>>>>;
         _3 : Unit>>
    "undefined"
def $$sc_HashRequest_1 : HashRequest:HashRequest -> Text =
  HashRequest:$fShowHashRequest.m_show unit
def $$sc_HashRequest_2 : Text -> Text =
  APPEND_TEXT "Template precondition violated: "
def $$sc_HashRequest_3 : HashRequest:HashRequest -> HashRequest:Accept -> List Party =
  \(this : HashRequest:HashRequest).
    let ds1 : Party = HashRequest:HashRequest.provider this
    in \(arg : HashRequest:Accept).
         09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
           ds1
def $$sc_HashRequest_4 : Hash:Hash -> Update (ContractId Hash:Hash) =
  \(this : Hash:Hash). create @Hash:Hash this
def $$sc_HashRequest_5 : ContractId HashRequest:HashRequest -> HashRequest:HashRequest -> HashRequest:Accept -> Update (ContractId Hash:Hash) =
  \(self : ContractId HashRequest:HashRequest) (this : HashRequest:HashRequest).
    let ds : Party = HashRequest:HashRequest.owner this
        ds1 : Party = HashRequest:HashRequest.provider this
        ds2 : Text = HashRequest:HashRequest.id this
        ds3 : Int64 = HashRequest:HashRequest.add_result this
        ds4 : Optional Text = HashRequest:HashRequest.keccak_result this
        ds5 : Optional Text = HashRequest:HashRequest.sha256_result this
        ds6 : Text = HashRequest:HashRequest.root this
    in \(arg : HashRequest:Accept).
         let ds7 : Optional Timestamp = HashRequest:Accept.root_time arg
         in HashRequest:$$sc_HashRequest_4
              (Hash:Hash
                 {owner = ds;
                  provider = ds1;
                  id = ds2;
                  add_result = ds3;
                  keccak_result = ds4;
                  sha256_result = ds5;
                  root = ds6;
                  root_time = ds7})
def $$sc_HashRequest_6 : HashRequest:HashRequest -> HashRequest:Decline -> List Party =
  \(this : HashRequest:HashRequest) (arg : HashRequest:Decline).
    let ds1 : Party = HashRequest:HashRequest.provider this
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
         ds1
def $$sc_HashRequest_7 : ContractId HashRequest:HashRequest -> HashRequest:HashRequest -> HashRequest:Decline -> Update Unit =
  \(self : ContractId HashRequest:HashRequest) (this : HashRequest:HashRequest) (arg : HashRequest:Decline).
    upure @Unit unit
def $$sc_HashRequest_8 : HashRequest:HashRequest -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> List Party =
  \(this : HashRequest:HashRequest) (ds : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    HashRequest:$csignatory this
def $$sc_HashRequest_9 : ContractId HashRequest:HashRequest -> HashRequest:HashRequest -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(ds : ContractId HashRequest:HashRequest) (ds1 : HashRequest:HashRequest) (ds2 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    upure @Unit unit
def $$sc_HashRequest_10 : HashRequest:HashRequest -> HashRequest:Withdraw -> List Party =
  \(this : HashRequest:HashRequest) (arg : HashRequest:Withdraw).
    let ds : Party = HashRequest:HashRequest.owner this
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
         ds
def $$sc_HashRequest_11 : ContractId HashRequest:HashRequest -> HashRequest:HashRequest -> HashRequest:Withdraw -> Update Unit =
  \(self : ContractId HashRequest:HashRequest) (this : HashRequest:HashRequest) (arg : HashRequest:Withdraw).
    upure @Unit unit
template HashRequest this where
  signatory HashRequest:$csignatory this
  observer HashRequest:$cobserver this
  ensure case HashRequest:$censure this of
           true -> true
           false ->
             throw
               @Bool
               @91e167fa7a256f21f990c526a0a0df840e99aeef0e67dc1f5415b0309486de74:DA.Exception.PreconditionFailed:PreconditionFailed
               (91e167fa7a256f21f990c526a0a0df840e99aeef0e67dc1f5415b0309486de74:DA.Exception.PreconditionFailed:PreconditionFailed
                  {message =
                     HashRequest:$$sc_HashRequest_2
                       (HashRequest:$$sc_HashRequest_1 this)})
  consuming choice Accept (self : ContractId HashRequest:HashRequest) (arg : HashRequest:Accept) : ContractId Hash:Hash
    controller HashRequest:$$sc_HashRequest_3 this arg
    observer Just (nil @Party)
    authority Nothing
    do HashRequest:$$sc_HashRequest_5 self this arg
  consuming choice Decline (self : ContractId HashRequest:HashRequest) (arg : HashRequest:Decline) : Unit
    controller HashRequest:$$sc_HashRequest_6 this arg
    observer Just (nil @Party)
    authority Nothing
    do HashRequest:$$sc_HashRequest_7 self this arg
  consuming choice Archive (self : ContractId HashRequest:HashRequest) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive) : Unit
    controller HashRequest:$$sc_HashRequest_8 this arg
    observer Just (nil @Party)
    authority Nothing
    do HashRequest:$$sc_HashRequest_9 self this arg
  consuming choice Withdraw (self : ContractId HashRequest:HashRequest) (arg : HashRequest:Withdraw) : Unit
    controller HashRequest:$$sc_HashRequest_10 this arg
    observer Just (nil @Party)
    authority Nothing
    do HashRequest:$$sc_HashRequest_11 self this arg

module Silvana where
record @serializable VerifyExclusion =
  {proof : Silvana:NonMembershipProof; requester : Party}
record @serializable VerifyInclusion =
  {proof : Silvana:MembershipProof; requester : Party}
record @serializable UpdateMapElement =
  {witness : Silvana:UpdateWitness}
record @serializable AddMapElement =
  {witness : Silvana:InsertWitness}
record @serializable IndexedMerkleMapView =
  {owner : Party;
   provider : Party;
   id : Text;
   root : Text;
   rootTime : Optional Timestamp}
record @serializable NonMembershipProof =
  {root : Text;
   key : Text;
   treeLength : Int64;
   lowLeaf : Silvana:Leaf;
   lowLeafProof : Silvana:MerkleProof}
record @serializable MembershipProof =
  {root : Text;
   key : Text;
   value : Text;
   treeLength : Int64;
   leaf : Silvana:Leaf;
   leafProof : Silvana:MerkleProof}
record @serializable UpdateWitness =
  {oldRoot : Text;
   newRoot : Text;
   key : Text;
   oldValue : Text;
   newValue : Text;
   treeLength : Int64;
   oldLeaf : Silvana:Leaf;
   oldLeafProof : Silvana:MerkleProof;
   updatedLeaf : Silvana:Leaf}
record @serializable InsertWitness =
  {oldRoot : Text;
   newRoot : Text;
   key : Text;
   value : Text;
   newLeafIndex : Int64;
   treeLength : Int64;
   lowLeaf : Silvana:Leaf;
   lowLeafProof : Silvana:MerkleProof;
   updatedLowLeaf : Silvana:Leaf;
   newLeaf : Silvana:Leaf;
   newLeafProofAfter : Silvana:MerkleProof}
record @serializable MerkleProof =
  {siblings : List Text; pathIndices : List Bool}
record @serializable Leaf =
  {key : Text; value : Text; nextKey : Text; index : Int64}
interface IndexedMerkleMap
def verifyInclusionImpl : Silvana:IndexedMerkleMap -> Silvana:MembershipProof -> Update Bool =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap verifyInclusionImpl i
def verifyExclusionImpl : Silvana:IndexedMerkleMap -> Silvana:NonMembershipProof -> Update Bool =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap verifyExclusionImpl i
def updateMapElementImpl : Silvana:IndexedMerkleMap -> Silvana:UpdateWitness -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap updateMapElementImpl i
def toHexDigit : Int64 -> Text =
  \(d : Int64).
    case LESS @Int64 d 10 of
      true -> TO_TEXT @Int64 d
      false ->
        case EQUAL @Int64 d 10 of
          true -> "a"
          false ->
            case EQUAL @Int64 d 11 of
              true -> "b"
              false ->
                case EQUAL @Int64 d 12 of
                  true -> "c"
                  false ->
                    case EQUAL @Int64 d 13 of
                      true -> "d"
                      false ->
                        case EQUAL @Int64 d 14 of
                          true -> "e"
                          false -> "f"
def toHexRec : Int64 -> Text -> Text =
  \(ds : Int64) (acc : Text).
    case EQUAL @Int64 ds 0 of
      false ->
        let remainder : Int64 =
              54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Num:%
                ds
                16
            quotient : Int64 = DIV_INT64 ds 16
        in Silvana:toHexRec
             quotient
             (APPEND_TEXT (Silvana:toHexDigit remainder) acc)
      true ->
        case EQUAL
               @Int64
               (09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:length
                  acc)
               0 of
          true -> "0"
          false -> acc
def $$sc_pathIndicesToIndex_1 : List Bool -> 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Int64 Int64 =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:foldl
    @(5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Int64 Int64)
    @Bool
    (\(ds1 : 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Int64 Int64) (isRight : Bool).
       let idx : Int64 =
             5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2._1
               @Int64
               @Int64
               ds1
           powerOf2 : Int64 =
             5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2._2
               @Int64
               @Int64
               ds1
           newIdx : Int64 =
             case isRight of
               true -> ADD_INT64 idx powerOf2
               false -> idx
           newPower : Int64 = MUL_INT64 powerOf2 2
       in 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2
            @Int64
            @Int64
            {_1 = newIdx; _2 = newPower})
    (5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2
       @Int64
       @Int64
       {_1 = 0; _2 = 1})
def pathIndicesToIndex : List Bool -> Int64 =
  \(bits : List Bool).
    let ds : 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Int64 Int64 =
          Silvana:$$sc_pathIndicesToIndex_1 bits
    in 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2._1
         @Int64
         @Int64
         ds
def isZeroField : Text -> Bool =
  \(field : Text).
    EQUAL
      @Text
      field
      "0000000000000000000000000000000000000000000000000000000000000000"
def $$sc_intToHex8Bytes_1 : Int64 -> Int64 = SUB_INT64 16
def intToHex8Bytes : Int64 -> Text =
  \(n : Int64).
    let hexText : Text = Silvana:toHexRec n ""
        hexLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:length
            hexText
        zerosNeeded : Int64 = Silvana:$$sc_intToHex8Bytes_1 hexLen
        padding : Text =
          case LESS_EQ @Int64 zerosNeeded 0 of
            true -> ""
            false ->
              09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:take
                zerosNeeded
                "0000000000000000"
    in APPEND_TEXT padding hexText
def hashPair : Text -> Text -> Text =
  \(left : Text) (right : Text).
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
      (APPEND_TEXT left right)
def hashUpToLevelRec : Text -> List Text -> List Bool -> Int64 -> Int64 -> Text =
  \(currentHash : Text) (ds : List Text) (ds1 : List Bool) (level : Int64) (targetLevel : Int64).
    case GREATER_EQ @Int64 level targetLevel of
      false ->
        let fail : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void# -> Text =
              \(ds4 : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void#).
                currentHash
        in case ds of
             cons sib sibs ->
               case ds1 of
                 cons isRight paths ->
                   let nextHash : Text =
                         case isRight of
                           true -> Silvana:hashPair sib currentHash
                           false -> Silvana:hashPair currentHash sib
                   in Silvana:hashUpToLevelRec
                        nextHash
                        sibs
                        paths
                        (ADD_INT64 level 1)
                        targetLevel
                 default ->
                   fail
                     fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
             default ->
               fail
                 fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
      true -> currentHash
def hashUpToLevel : Text -> List Text -> List Bool -> Int64 -> Text =
  \(leafHash : Text) (siblings : List Text) (pathIndices : List Bool) (targetLevel : Int64).
    Silvana:hashUpToLevelRec
      leafHash
      siblings
      pathIndices
      0
      targetLevel
def hashLeaf : Silvana:Leaf -> Text =
  \(leaf : Silvana:Leaf).
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
      (APPEND_TEXT
         (Silvana:Leaf.key leaf)
         (APPEND_TEXT
            (Silvana:Leaf.value leaf)
            (Silvana:Leaf.nextKey leaf)))
def getRootTime : Silvana:IndexedMerkleMap -> Optional Timestamp =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap getRootTime i
def getRoot : Silvana:IndexedMerkleMap -> Text =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap getRoot i
def getOwner : Silvana:IndexedMerkleMap -> Party =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap getOwner i
def getNth : Int64 -> List Text -> Text =
  \(ds : Int64) (ds1 : List Text).
    let fail : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void# -> Text =
          \(ds3 : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void#).
            case ds1 of
              nil ->
                "0000000000000000000000000000000000000000000000000000000000000000"
              cons ds4 xs -> Silvana:getNth (SUB_INT64 ds 1) xs
    in case EQUAL @Int64 ds 0 of
         false ->
           fail
             fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
         true ->
           case ds1 of
             cons x ds3 -> x
             default ->
               fail
                 fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
def findLCALevelRec : List Bool -> List Bool -> Int64 -> Int64 =
  \(ds : List Bool) (ds1 : List Bool) (level : Int64).
    let fail : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void# -> Int64 =
          \(ds2 : fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:Void#).
            level
    in case ds of
         nil ->
           case ds1 of
             nil -> level
             default ->
               fail
                 fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
         cons p1 rest1 ->
           case ds1 of
             cons p2 rest2 ->
               case EQUAL @Bool p1 p2 of
                 true -> Silvana:findLCALevelRec rest1 rest2 (ADD_INT64 level 1)
                 false -> level
             default ->
               fail
                 fcee8dfc1b81c449b421410edd5041c16ab59c45bbea85bcb094d1b17c3e9df7:GHC.Prim:void#
def findLCALevel : List Bool -> List Bool -> Int64 =
  \(path1 : List Bool) (path2 : List Bool).
    Silvana:findLCALevelRec path1 path2 0
def $$sc_computeRoot_1 : Text -> List (5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Text Bool) -> Text =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:foldl
    @Text
    @(5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Text Bool)
    (\(current : Text) (ds : 5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2 Text Bool).
       let sibling : Text =
             5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2._1
               @Text
               @Bool
               ds
           isRight : Bool =
             5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2._2
               @Text
               @Bool
               ds
       in case isRight of
            true -> Silvana:hashPair sibling current
            false -> Silvana:hashPair current sibling)
def computeRoot : Text -> Silvana:MerkleProof -> Text =
  \(leafHash : Text) (proof : Silvana:MerkleProof).
    Silvana:$$sc_computeRoot_1
      leafHash
      (09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:zip
         @Text
         @Bool
         (Silvana:MerkleProof.siblings proof)
         (Silvana:MerkleProof.pathIndices proof))
def compareFields : Text -> Text -> e7e0adfa881e7dbbb07da065ae54444da7c4bccebcb8872ab0cb5dcf9f3761ce:GHC.Types:Ordering =
  \(a : Text) (b : Text).
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$ccompare17
      a
      b
def combineRootWithLength : Text -> Int64 -> Text =
  \(internalRoot : Text) (length : Int64).
    let lengthHex : Text = Silvana:intToHex8Bytes length
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
         (APPEND_TEXT internalRoot lengthHex)
def $$sc_checkAllHexChars_1 : Text -> Text =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:take
    1
def checkAllHexChars : Text -> Int64 -> Int64 -> Bool =
  \(hexStr : Text) (i : Int64) (len : Int64).
    case GREATER_EQ @Int64 i len of
      true -> true
      false ->
        let char : Text =
              Silvana:$$sc_checkAllHexChars_1
                (09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:drop
                   i
                   hexStr)
        in case case case GREATER_EQ @Text char "0" of
                       true -> LESS_EQ @Text char "9"
                       false -> false of
                  true -> true
                  false ->
                    case GREATER_EQ @Text char "a" of
                      true -> LESS_EQ @Text char "f"
                      false -> false of
             true -> Silvana:checkAllHexChars hexStr (ADD_INT64 i 1) len
             false -> false
def isValidHex32 : Text -> Bool =
  \(hexStr : Text).
    let len : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Text:length
            hexStr
    in case EQUAL @Int64 len 64 of
         true -> Silvana:checkAllHexChars hexStr 0 len
         false -> false
def $$sc_verifyInsertWitness_1 : List Text -> Bool =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:all
    @Text
    Silvana:isValidHex32
def $$sc_verifyInsertWitness_2 : List Text -> Bool =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:all
    @Text
    Silvana:isValidHex32
def verifyInsertWitness : Silvana:InsertWitness -> Bool =
  \(witness : Silvana:InsertWitness).
    let hexFieldsValid : Bool =
          case Silvana:isValidHex32
                 (Silvana:InsertWitness.oldRoot witness) of
            true ->
              case Silvana:isValidHex32
                     (Silvana:InsertWitness.newRoot witness) of
                true ->
                  case Silvana:isValidHex32 (Silvana:InsertWitness.key witness) of
                    true ->
                      case Silvana:isValidHex32 (Silvana:InsertWitness.value witness) of
                        true ->
                          case Silvana:isValidHex32
                                 (Silvana:Leaf.key (Silvana:InsertWitness.lowLeaf witness)) of
                            true ->
                              case Silvana:isValidHex32
                                     (Silvana:Leaf.value (Silvana:InsertWitness.lowLeaf witness)) of
                                true ->
                                  case Silvana:isValidHex32
                                         (Silvana:Leaf.nextKey
                                            (Silvana:InsertWitness.lowLeaf witness)) of
                                    true ->
                                      case Silvana:isValidHex32
                                             (Silvana:Leaf.key
                                                (Silvana:InsertWitness.updatedLowLeaf witness)) of
                                        true ->
                                          case Silvana:isValidHex32
                                                 (Silvana:Leaf.value
                                                    (Silvana:InsertWitness.updatedLowLeaf
                                                       witness)) of
                                            true ->
                                              case Silvana:isValidHex32
                                                     (Silvana:Leaf.nextKey
                                                        (Silvana:InsertWitness.updatedLowLeaf
                                                           witness)) of
                                                true ->
                                                  case Silvana:isValidHex32
                                                         (Silvana:Leaf.key
                                                            (Silvana:InsertWitness.newLeaf
                                                               witness)) of
                                                    true ->
                                                      case Silvana:isValidHex32
                                                             (Silvana:Leaf.value
                                                                (Silvana:InsertWitness.newLeaf
                                                                   witness)) of
                                                        true ->
                                                          case Silvana:isValidHex32
                                                                 (Silvana:Leaf.nextKey
                                                                    (Silvana:InsertWitness.newLeaf
                                                                       witness)) of
                                                            true ->
                                                              case Silvana:$$sc_verifyInsertWitness_1
                                                                     (Silvana:MerkleProof.siblings
                                                                        (Silvana:InsertWitness.lowLeafProof
                                                                           witness)) of
                                                                true ->
                                                                  Silvana:$$sc_verifyInsertWitness_2
                                                                    (Silvana:MerkleProof.siblings
                                                                       (Silvana:InsertWitness.newLeafProofAfter
                                                                          witness))
                                                                false -> false
                                                            false -> false
                                                        false -> false
                                                    false -> false
                                                false -> false
                                            false -> false
                                        false -> false
                                    false -> false
                                false -> false
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
        lowProofSiblingsLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Text
            (Silvana:MerkleProof.siblings
               (Silvana:InsertWitness.lowLeafProof witness))
        lowProofIndicesLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Bool
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.lowLeafProof witness))
        newProofSiblingsLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Text
            (Silvana:MerkleProof.siblings
               (Silvana:InsertWitness.newLeafProofAfter witness))
        newProofIndicesLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Bool
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.newLeafProofAfter witness))
        proofLengthCheck : Bool =
          case EQUAL @Int64 lowProofSiblingsLen lowProofIndicesLen of
            true -> EQUAL @Int64 newProofSiblingsLen newProofIndicesLen
            false -> false
        proofBoundsCheck : Bool =
          case EQUAL @Int64 lowProofSiblingsLen 31 of
            true -> EQUAL @Int64 newProofSiblingsLen 31
            false -> false
        treeCapacityCheck : Bool =
          case GREATER @Int64 (Silvana:InsertWitness.treeLength witness) 0 of
            true ->
              case LESS_EQ
                     @Int64
                     (Silvana:InsertWitness.treeLength witness)
                     2147483648 of
                true ->
                  LESS_EQ
                    @Int64
                    (ADD_INT64 (Silvana:InsertWitness.treeLength witness) 1)
                    2147483648
                false -> false
            false -> false
        lowIdx : Int64 =
          Silvana:pathIndicesToIndex
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.lowLeafProof witness))
        newIdx : Int64 =
          Silvana:pathIndicesToIndex
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.newLeafProofAfter witness))
        indexBoundsCheck : Bool =
          case GREATER_EQ
                 @Int64
                 (Silvana:InsertWitness.treeLength witness)
                 1 of
            true ->
              case GREATER_EQ @Int64 lowIdx 0 of
                true ->
                  case LESS
                         @Int64
                         lowIdx
                         (Silvana:InsertWitness.treeLength witness) of
                    true ->
                      case GREATER_EQ
                             @Int64
                             (Silvana:InsertWitness.newLeafIndex witness)
                             0 of
                        true ->
                          EQUAL
                            @Int64
                            (Silvana:InsertWitness.newLeafIndex witness)
                            (Silvana:InsertWitness.treeLength witness)
                        false -> false
                    false -> false
                false -> false
            false -> false
        appendOnlyCheck : Bool =
          EQUAL
            @Int64
            (Silvana:InsertWitness.newLeafIndex witness)
            (Silvana:InsertWitness.treeLength witness)
        pathConsistencyCheck : Bool =
          case EQUAL
                 @Int64
                 lowIdx
                 (Silvana:Leaf.index (Silvana:InsertWitness.lowLeaf witness)) of
            true ->
              EQUAL @Int64 newIdx (Silvana:InsertWitness.newLeafIndex witness)
            false -> false
        lowLeafHash : Text =
          Silvana:hashLeaf (Silvana:InsertWitness.lowLeaf witness)
        lowLeafInternalRoot : Text =
          Silvana:computeRoot
            lowLeafHash
            (Silvana:InsertWitness.lowLeafProof witness)
        lowLeafRoot : Text =
          Silvana:combineRootWithLength
            lowLeafInternalRoot
            (Silvana:InsertWitness.treeLength witness)
        nonMembershipProofCheck : Bool =
          EQUAL @Text lowLeafRoot (Silvana:InsertWitness.oldRoot witness)
        keyOrderingCheck : Bool =
          case 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$c==2
                 (Silvana:compareFields
                    (Silvana:Leaf.key (Silvana:InsertWitness.lowLeaf witness))
                    (Silvana:InsertWitness.key witness))
                 e7e0adfa881e7dbbb07da065ae54444da7c4bccebcb8872ab0cb5dcf9f3761ce:GHC.Types:Ordering:LT of
            true ->
              case Silvana:isZeroField
                     (Silvana:Leaf.nextKey (Silvana:InsertWitness.lowLeaf witness)) of
                true -> true
                false ->
                  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$c==2
                    (Silvana:compareFields
                       (Silvana:InsertWitness.key witness)
                       (Silvana:Leaf.nextKey (Silvana:InsertWitness.lowLeaf witness)))
                    e7e0adfa881e7dbbb07da065ae54444da7c4bccebcb8872ab0cb5dcf9f3761ce:GHC.Types:Ordering:LT
            false -> false
        updatedLowLeafCheck : Bool =
          case EQUAL
                 @Text
                 (Silvana:Leaf.key (Silvana:InsertWitness.updatedLowLeaf witness))
                 (Silvana:Leaf.key (Silvana:InsertWitness.lowLeaf witness)) of
            true ->
              case EQUAL
                     @Text
                     (Silvana:Leaf.value (Silvana:InsertWitness.updatedLowLeaf witness))
                     (Silvana:Leaf.value (Silvana:InsertWitness.lowLeaf witness)) of
                true ->
                  case EQUAL
                         @Int64
                         (Silvana:Leaf.index (Silvana:InsertWitness.updatedLowLeaf witness))
                         (Silvana:Leaf.index (Silvana:InsertWitness.lowLeaf witness)) of
                    true ->
                      EQUAL
                        @Text
                        (Silvana:Leaf.nextKey
                           (Silvana:InsertWitness.updatedLowLeaf witness))
                        (Silvana:InsertWitness.key witness)
                    false -> false
                false -> false
            false -> false
        newLeafCheck : Bool =
          case EQUAL
                 @Text
                 (Silvana:Leaf.key (Silvana:InsertWitness.newLeaf witness))
                 (Silvana:InsertWitness.key witness) of
            true ->
              case EQUAL
                     @Text
                     (Silvana:Leaf.value (Silvana:InsertWitness.newLeaf witness))
                     (Silvana:InsertWitness.value witness) of
                true ->
                  case EQUAL
                         @Text
                         (Silvana:Leaf.nextKey (Silvana:InsertWitness.newLeaf witness))
                         (Silvana:Leaf.nextKey (Silvana:InsertWitness.lowLeaf witness)) of
                    true ->
                      EQUAL
                        @Int64
                        (Silvana:Leaf.index (Silvana:InsertWitness.newLeaf witness))
                        (Silvana:InsertWitness.newLeafIndex witness)
                    false -> false
                false -> false
            false -> false
        newLeafHash : Text =
          Silvana:hashLeaf (Silvana:InsertWitness.newLeaf witness)
        newLeafInternalRoot : Text =
          Silvana:computeRoot
            newLeafHash
            (Silvana:InsertWitness.newLeafProofAfter witness)
        computedNewRoot : Text =
          Silvana:combineRootWithLength
            newLeafInternalRoot
            (ADD_INT64 (Silvana:InsertWitness.treeLength witness) 1)
        finalRootCheck : Bool =
          EQUAL @Text computedNewRoot (Silvana:InsertWitness.newRoot witness)
        lcaLevel : Int64 =
          Silvana:findLCALevel
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.lowLeafProof witness))
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.newLeafProofAfter witness))
        anchorFromUpdatedLowLeaf : Text =
          Silvana:hashUpToLevel
            (Silvana:hashLeaf (Silvana:InsertWitness.updatedLowLeaf witness))
            (Silvana:MerkleProof.siblings
               (Silvana:InsertWitness.lowLeafProof witness))
            (Silvana:MerkleProof.pathIndices
               (Silvana:InsertWitness.lowLeafProof witness))
            lcaLevel
        expectedSiblingAtLCA : Text =
          Silvana:getNth
            lcaLevel
            (Silvana:MerkleProof.siblings
               (Silvana:InsertWitness.newLeafProofAfter witness))
        lcaAnchorCheck : Bool =
          case LESS @Int64 lcaLevel 31 of
            true -> EQUAL @Text anchorFromUpdatedLowLeaf expectedSiblingAtLCA
            false -> true
    in case hexFieldsValid of
         true ->
           case proofLengthCheck of
             true ->
               case proofBoundsCheck of
                 true ->
                   case treeCapacityCheck of
                     true ->
                       case indexBoundsCheck of
                         true ->
                           case appendOnlyCheck of
                             true ->
                               case pathConsistencyCheck of
                                 true ->
                                   case nonMembershipProofCheck of
                                     true ->
                                       case keyOrderingCheck of
                                         true ->
                                           case updatedLowLeafCheck of
                                             true ->
                                               case newLeafCheck of
                                                 true ->
                                                   case finalRootCheck of
                                                     true -> lcaAnchorCheck
                                                     false -> false
                                                 false -> false
                                             false -> false
                                         false -> false
                                     false -> false
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $$sc_verifyMembershipProof_1 : List Text -> Bool =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:all
    @Text
    Silvana:isValidHex32
def verifyMembershipProof : Silvana:MembershipProof -> Bool =
  \(proof : Silvana:MembershipProof).
    let hexFieldsValid : Bool =
          case Silvana:isValidHex32 (Silvana:MembershipProof.root proof) of
            true ->
              case Silvana:isValidHex32 (Silvana:MembershipProof.key proof) of
                true ->
                  case Silvana:isValidHex32 (Silvana:MembershipProof.value proof) of
                    true ->
                      case Silvana:isValidHex32
                             (Silvana:Leaf.key (Silvana:MembershipProof.leaf proof)) of
                        true ->
                          case Silvana:isValidHex32
                                 (Silvana:Leaf.value (Silvana:MembershipProof.leaf proof)) of
                            true ->
                              case Silvana:isValidHex32
                                     (Silvana:Leaf.nextKey (Silvana:MembershipProof.leaf proof)) of
                                true ->
                                  Silvana:$$sc_verifyMembershipProof_1
                                    (Silvana:MerkleProof.siblings
                                       (Silvana:MembershipProof.leafProof proof))
                                false -> false
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
        proofSiblingsLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Text
            (Silvana:MerkleProof.siblings
               (Silvana:MembershipProof.leafProof proof))
        proofIndicesLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Bool
            (Silvana:MerkleProof.pathIndices
               (Silvana:MembershipProof.leafProof proof))
        proofLengthCheck : Bool =
          EQUAL @Int64 proofSiblingsLen proofIndicesLen
        proofBoundsCheck : Bool = EQUAL @Int64 proofSiblingsLen 31
        treeCapacityCheck : Bool =
          case GREATER @Int64 (Silvana:MembershipProof.treeLength proof) 0 of
            true ->
              LESS_EQ
                @Int64
                (Silvana:MembershipProof.treeLength proof)
                2147483648
            false -> false
        indexBoundsCheck : Bool =
          case GREATER_EQ
                 @Int64
                 (Silvana:Leaf.index (Silvana:MembershipProof.leaf proof))
                 0 of
            true ->
              LESS
                @Int64
                (Silvana:Leaf.index (Silvana:MembershipProof.leaf proof))
                (Silvana:MembershipProof.treeLength proof)
            false -> false
        computedIndex : Int64 =
          Silvana:pathIndicesToIndex
            (Silvana:MerkleProof.pathIndices
               (Silvana:MembershipProof.leafProof proof))
        pathIndexConsistencyCheck : Bool =
          EQUAL
            @Int64
            computedIndex
            (Silvana:Leaf.index (Silvana:MembershipProof.leaf proof))
        leafMatchCheck : Bool =
          case EQUAL
                 @Text
                 (Silvana:Leaf.key (Silvana:MembershipProof.leaf proof))
                 (Silvana:MembershipProof.key proof) of
            true ->
              EQUAL
                @Text
                (Silvana:Leaf.value (Silvana:MembershipProof.leaf proof))
                (Silvana:MembershipProof.value proof)
            false -> false
        leafHash : Text =
          Silvana:hashLeaf (Silvana:MembershipProof.leaf proof)
        leafInternalRoot : Text =
          Silvana:computeRoot
            leafHash
            (Silvana:MembershipProof.leafProof proof)
        computedRoot : Text =
          Silvana:combineRootWithLength
            leafInternalRoot
            (Silvana:MembershipProof.treeLength proof)
        rootCheck : Bool =
          EQUAL @Text computedRoot (Silvana:MembershipProof.root proof)
    in case hexFieldsValid of
         true ->
           case proofLengthCheck of
             true ->
               case proofBoundsCheck of
                 true ->
                   case treeCapacityCheck of
                     true ->
                       case indexBoundsCheck of
                         true ->
                           case pathIndexConsistencyCheck of
                             true ->
                               case leafMatchCheck of
                                 true -> rootCheck
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $$sc_verifyNonMembershipProof_1 : List Text -> Bool =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:all
    @Text
    Silvana:isValidHex32
def verifyNonMembershipProof : Silvana:NonMembershipProof -> Bool =
  \(proof : Silvana:NonMembershipProof).
    let hexFieldsValid : Bool =
          case Silvana:isValidHex32
                 (Silvana:NonMembershipProof.root proof) of
            true ->
              case Silvana:isValidHex32 (Silvana:NonMembershipProof.key proof) of
                true ->
                  case Silvana:isValidHex32
                         (Silvana:Leaf.key (Silvana:NonMembershipProof.lowLeaf proof)) of
                    true ->
                      case Silvana:isValidHex32
                             (Silvana:Leaf.value (Silvana:NonMembershipProof.lowLeaf proof)) of
                        true ->
                          case Silvana:isValidHex32
                                 (Silvana:Leaf.nextKey
                                    (Silvana:NonMembershipProof.lowLeaf proof)) of
                            true ->
                              Silvana:$$sc_verifyNonMembershipProof_1
                                (Silvana:MerkleProof.siblings
                                   (Silvana:NonMembershipProof.lowLeafProof proof))
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
        proofSiblingsLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Text
            (Silvana:MerkleProof.siblings
               (Silvana:NonMembershipProof.lowLeafProof proof))
        proofPathIndicesLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Bool
            (Silvana:MerkleProof.pathIndices
               (Silvana:NonMembershipProof.lowLeafProof proof))
        proofLengthCheck : Bool =
          EQUAL @Int64 proofSiblingsLen proofPathIndicesLen
        proofBoundsCheck : Bool = EQUAL @Int64 proofSiblingsLen 31
        treeCapacityCheck : Bool =
          case GREATER
                 @Int64
                 (Silvana:NonMembershipProof.treeLength proof)
                 0 of
            true ->
              LESS_EQ
                @Int64
                (Silvana:NonMembershipProof.treeLength proof)
                2147483648
            false -> false
        indexBoundsCheck : Bool =
          case GREATER_EQ
                 @Int64
                 (Silvana:Leaf.index (Silvana:NonMembershipProof.lowLeaf proof))
                 0 of
            true ->
              LESS
                @Int64
                (Silvana:Leaf.index (Silvana:NonMembershipProof.lowLeaf proof))
                (Silvana:NonMembershipProof.treeLength proof)
            false -> false
        computedIndex : Int64 =
          Silvana:pathIndicesToIndex
            (Silvana:MerkleProof.pathIndices
               (Silvana:NonMembershipProof.lowLeafProof proof))
        pathIndexConsistencyCheck : Bool =
          EQUAL
            @Int64
            computedIndex
            (Silvana:Leaf.index (Silvana:NonMembershipProof.lowLeaf proof))
        keyOrderingCheck : Bool =
          LESS
            @Text
            (Silvana:Leaf.key (Silvana:NonMembershipProof.lowLeaf proof))
            (Silvana:NonMembershipProof.key proof)
        nextKeyCheck : Bool =
          case EQUAL
                 @Text
                 (Silvana:Leaf.nextKey (Silvana:NonMembershipProof.lowLeaf proof))
                 "0000000000000000000000000000000000000000000000000000000000000000" of
            true -> true
            false ->
              LESS
                @Text
                (Silvana:NonMembershipProof.key proof)
                (Silvana:Leaf.nextKey (Silvana:NonMembershipProof.lowLeaf proof))
        lowLeafHash : Text =
          Silvana:hashLeaf (Silvana:NonMembershipProof.lowLeaf proof)
        lowLeafInternalRoot : Text =
          Silvana:computeRoot
            lowLeafHash
            (Silvana:NonMembershipProof.lowLeafProof proof)
        computedRoot : Text =
          Silvana:combineRootWithLength
            lowLeafInternalRoot
            (Silvana:NonMembershipProof.treeLength proof)
        rootCheck : Bool =
          EQUAL @Text computedRoot (Silvana:NonMembershipProof.root proof)
    in case hexFieldsValid of
         true ->
           case proofLengthCheck of
             true ->
               case proofBoundsCheck of
                 true ->
                   case treeCapacityCheck of
                     true ->
                       case indexBoundsCheck of
                         true ->
                           case pathIndexConsistencyCheck of
                             true ->
                               case keyOrderingCheck of
                                 true ->
                                   case nextKeyCheck of
                                     true -> rootCheck
                                     false -> false
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $$sc_verifyUpdateWitness_1 : List Text -> Bool =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:all
    @Text
    Silvana:isValidHex32
def verifyUpdateWitness : Silvana:UpdateWitness -> Bool =
  \(witness : Silvana:UpdateWitness).
    let hexFieldsValid : Bool =
          case Silvana:isValidHex32
                 (Silvana:UpdateWitness.oldRoot witness) of
            true ->
              case Silvana:isValidHex32
                     (Silvana:UpdateWitness.newRoot witness) of
                true ->
                  case Silvana:isValidHex32 (Silvana:UpdateWitness.key witness) of
                    true ->
                      case Silvana:isValidHex32
                             (Silvana:UpdateWitness.oldValue witness) of
                        true ->
                          case Silvana:isValidHex32
                                 (Silvana:UpdateWitness.newValue witness) of
                            true ->
                              case Silvana:isValidHex32
                                     (Silvana:Leaf.key (Silvana:UpdateWitness.oldLeaf witness)) of
                                true ->
                                  case Silvana:isValidHex32
                                         (Silvana:Leaf.value
                                            (Silvana:UpdateWitness.oldLeaf witness)) of
                                    true ->
                                      case Silvana:isValidHex32
                                             (Silvana:Leaf.nextKey
                                                (Silvana:UpdateWitness.oldLeaf witness)) of
                                        true ->
                                          case Silvana:isValidHex32
                                                 (Silvana:Leaf.key
                                                    (Silvana:UpdateWitness.updatedLeaf witness)) of
                                            true ->
                                              case Silvana:isValidHex32
                                                     (Silvana:Leaf.value
                                                        (Silvana:UpdateWitness.updatedLeaf
                                                           witness)) of
                                                true ->
                                                  case Silvana:isValidHex32
                                                         (Silvana:Leaf.nextKey
                                                            (Silvana:UpdateWitness.updatedLeaf
                                                               witness)) of
                                                    true ->
                                                      Silvana:$$sc_verifyUpdateWitness_1
                                                        (Silvana:MerkleProof.siblings
                                                           (Silvana:UpdateWitness.oldLeafProof
                                                              witness))
                                                    false -> false
                                                false -> false
                                            false -> false
                                        false -> false
                                    false -> false
                                false -> false
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
        proofSiblingsLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Text
            (Silvana:MerkleProof.siblings
               (Silvana:UpdateWitness.oldLeafProof witness))
        proofIndicesLen : Int64 =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:length
            @Bool
            (Silvana:MerkleProof.pathIndices
               (Silvana:UpdateWitness.oldLeafProof witness))
        proofLengthCheck : Bool =
          EQUAL @Int64 proofSiblingsLen proofIndicesLen
        proofBoundsCheck : Bool = EQUAL @Int64 proofSiblingsLen 31
        treeCapacityCheck : Bool =
          case GREATER @Int64 (Silvana:UpdateWitness.treeLength witness) 0 of
            true ->
              LESS_EQ
                @Int64
                (Silvana:UpdateWitness.treeLength witness)
                2147483648
            false -> false
        indexBoundsCheck : Bool =
          case GREATER_EQ
                 @Int64
                 (Silvana:Leaf.index (Silvana:UpdateWitness.oldLeaf witness))
                 0 of
            true ->
              LESS
                @Int64
                (Silvana:Leaf.index (Silvana:UpdateWitness.oldLeaf witness))
                (Silvana:UpdateWitness.treeLength witness)
            false -> false
        computedIndex : Int64 =
          Silvana:pathIndicesToIndex
            (Silvana:MerkleProof.pathIndices
               (Silvana:UpdateWitness.oldLeafProof witness))
        pathIndexConsistencyCheck : Bool =
          EQUAL
            @Int64
            computedIndex
            (Silvana:Leaf.index (Silvana:UpdateWitness.oldLeaf witness))
        oldLeafHash : Text =
          Silvana:hashLeaf (Silvana:UpdateWitness.oldLeaf witness)
        oldLeafInternalRoot : Text =
          Silvana:computeRoot
            oldLeafHash
            (Silvana:UpdateWitness.oldLeafProof witness)
        oldLeafRoot : Text =
          Silvana:combineRootWithLength
            oldLeafInternalRoot
            (Silvana:UpdateWitness.treeLength witness)
        membershipProofCheck : Bool =
          case EQUAL
                 @Text
                 oldLeafRoot
                 (Silvana:UpdateWitness.oldRoot witness) of
            true ->
              case EQUAL
                     @Text
                     (Silvana:Leaf.key (Silvana:UpdateWitness.oldLeaf witness))
                     (Silvana:UpdateWitness.key witness) of
                true ->
                  EQUAL
                    @Text
                    (Silvana:Leaf.value (Silvana:UpdateWitness.oldLeaf witness))
                    (Silvana:UpdateWitness.oldValue witness)
                false -> false
            false -> false
        updatedLeafCheck : Bool =
          case EQUAL
                 @Text
                 (Silvana:Leaf.key (Silvana:UpdateWitness.updatedLeaf witness))
                 (Silvana:UpdateWitness.key witness) of
            true ->
              case EQUAL
                     @Text
                     (Silvana:Leaf.value (Silvana:UpdateWitness.updatedLeaf witness))
                     (Silvana:UpdateWitness.newValue witness) of
                true ->
                  case EQUAL
                         @Text
                         (Silvana:Leaf.nextKey (Silvana:UpdateWitness.updatedLeaf witness))
                         (Silvana:Leaf.nextKey (Silvana:UpdateWitness.oldLeaf witness)) of
                    true ->
                      EQUAL
                        @Int64
                        (Silvana:Leaf.index (Silvana:UpdateWitness.updatedLeaf witness))
                        (Silvana:Leaf.index (Silvana:UpdateWitness.oldLeaf witness))
                    false -> false
                false -> false
            false -> false
        newLeafHash : Text =
          Silvana:hashLeaf (Silvana:UpdateWitness.updatedLeaf witness)
        newLeafInternalRoot : Text =
          Silvana:computeRoot
            newLeafHash
            (Silvana:UpdateWitness.oldLeafProof witness)
        computedNewRoot : Text =
          Silvana:combineRootWithLength
            newLeafInternalRoot
            (Silvana:UpdateWitness.treeLength witness)
        finalRootCheck : Bool =
          EQUAL @Text computedNewRoot (Silvana:UpdateWitness.newRoot witness)
    in case hexFieldsValid of
         true ->
           case proofLengthCheck of
             true ->
               case proofBoundsCheck of
                 true ->
                   case treeCapacityCheck of
                     true ->
                       case indexBoundsCheck of
                         true ->
                           case pathIndexConsistencyCheck of
                             true ->
                               case membershipProofCheck of
                                 true ->
                                   case updatedLeafCheck of
                                     true -> finalRootCheck
                                     false -> false
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def addMapElementImpl : Silvana:IndexedMerkleMap -> Silvana:InsertWitness -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(i : Silvana:IndexedMerkleMap).
    call_interface @Silvana:IndexedMerkleMap addMapElementImpl i
def $sel:witness:UpdateMapElement : Silvana:UpdateMapElement -> Silvana:UpdateWitness =
  \(ds : Silvana:UpdateMapElement).
    Silvana:UpdateMapElement.witness ds
def $sel:witness:AddMapElement : Silvana:AddMapElement -> Silvana:InsertWitness =
  \(ds : Silvana:AddMapElement). Silvana:AddMapElement.witness ds
def $sel:value:MembershipProof : Silvana:MembershipProof -> Text =
  \(ds : Silvana:MembershipProof). Silvana:MembershipProof.value ds
def $sel:value:Leaf : Silvana:Leaf -> Text =
  \(ds : Silvana:Leaf). Silvana:Leaf.value ds
def $sel:value:InsertWitness : Silvana:InsertWitness -> Text =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.value ds
def $sel:updatedLowLeaf:InsertWitness : Silvana:InsertWitness -> Silvana:Leaf =
  \(ds : Silvana:InsertWitness).
    Silvana:InsertWitness.updatedLowLeaf ds
def $sel:updatedLeaf:UpdateWitness : Silvana:UpdateWitness -> Silvana:Leaf =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.updatedLeaf ds
def $sel:treeLength:UpdateWitness : Silvana:UpdateWitness -> Int64 =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.treeLength ds
def $sel:treeLength:NonMembershipProof : Silvana:NonMembershipProof -> Int64 =
  \(ds : Silvana:NonMembershipProof).
    Silvana:NonMembershipProof.treeLength ds
def $sel:treeLength:MembershipProof : Silvana:MembershipProof -> Int64 =
  \(ds : Silvana:MembershipProof).
    Silvana:MembershipProof.treeLength ds
def $sel:treeLength:InsertWitness : Silvana:InsertWitness -> Int64 =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.treeLength ds
def $sel:siblings:MerkleProof : Silvana:MerkleProof -> List Text =
  \(ds : Silvana:MerkleProof). Silvana:MerkleProof.siblings ds
def $sel:rootTime:IndexedMerkleMapView : Silvana:IndexedMerkleMapView -> Optional Timestamp =
  \(ds : Silvana:IndexedMerkleMapView).
    Silvana:IndexedMerkleMapView.rootTime ds
def $sel:root:NonMembershipProof : Silvana:NonMembershipProof -> Text =
  \(ds : Silvana:NonMembershipProof).
    Silvana:NonMembershipProof.root ds
def $sel:root:MembershipProof : Silvana:MembershipProof -> Text =
  \(ds : Silvana:MembershipProof). Silvana:MembershipProof.root ds
def $sel:root:IndexedMerkleMapView : Silvana:IndexedMerkleMapView -> Text =
  \(ds : Silvana:IndexedMerkleMapView).
    Silvana:IndexedMerkleMapView.root ds
def $sel:requester:VerifyInclusion : Silvana:VerifyInclusion -> Party =
  \(ds : Silvana:VerifyInclusion).
    Silvana:VerifyInclusion.requester ds
def $sel:requester:VerifyExclusion : Silvana:VerifyExclusion -> Party =
  \(ds : Silvana:VerifyExclusion).
    Silvana:VerifyExclusion.requester ds
def $sel:provider:IndexedMerkleMapView : Silvana:IndexedMerkleMapView -> Party =
  \(ds : Silvana:IndexedMerkleMapView).
    Silvana:IndexedMerkleMapView.provider ds
def $sel:proof:VerifyInclusion : Silvana:VerifyInclusion -> Silvana:MembershipProof =
  \(ds : Silvana:VerifyInclusion). Silvana:VerifyInclusion.proof ds
def $sel:proof:VerifyExclusion : Silvana:VerifyExclusion -> Silvana:NonMembershipProof =
  \(ds : Silvana:VerifyExclusion). Silvana:VerifyExclusion.proof ds
def $sel:pathIndices:MerkleProof : Silvana:MerkleProof -> List Bool =
  \(ds : Silvana:MerkleProof). Silvana:MerkleProof.pathIndices ds
def $sel:owner:IndexedMerkleMapView : Silvana:IndexedMerkleMapView -> Party =
  \(ds : Silvana:IndexedMerkleMapView).
    Silvana:IndexedMerkleMapView.owner ds
def $sel:oldValue:UpdateWitness : Silvana:UpdateWitness -> Text =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.oldValue ds
def $sel:oldRoot:UpdateWitness : Silvana:UpdateWitness -> Text =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.oldRoot ds
def $sel:oldRoot:InsertWitness : Silvana:InsertWitness -> Text =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.oldRoot ds
def $sel:oldLeafProof:UpdateWitness : Silvana:UpdateWitness -> Silvana:MerkleProof =
  \(ds : Silvana:UpdateWitness).
    Silvana:UpdateWitness.oldLeafProof ds
def $sel:oldLeaf:UpdateWitness : Silvana:UpdateWitness -> Silvana:Leaf =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.oldLeaf ds
def $sel:nextKey:Leaf : Silvana:Leaf -> Text =
  \(ds : Silvana:Leaf). Silvana:Leaf.nextKey ds
def $sel:newValue:UpdateWitness : Silvana:UpdateWitness -> Text =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.newValue ds
def $sel:newRoot:UpdateWitness : Silvana:UpdateWitness -> Text =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.newRoot ds
def $sel:newRoot:InsertWitness : Silvana:InsertWitness -> Text =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.newRoot ds
def $sel:newLeafProofAfter:InsertWitness : Silvana:InsertWitness -> Silvana:MerkleProof =
  \(ds : Silvana:InsertWitness).
    Silvana:InsertWitness.newLeafProofAfter ds
def $sel:newLeafIndex:InsertWitness : Silvana:InsertWitness -> Int64 =
  \(ds : Silvana:InsertWitness).
    Silvana:InsertWitness.newLeafIndex ds
def $sel:newLeaf:InsertWitness : Silvana:InsertWitness -> Silvana:Leaf =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.newLeaf ds
def $sel:lowLeafProof:NonMembershipProof : Silvana:NonMembershipProof -> Silvana:MerkleProof =
  \(ds : Silvana:NonMembershipProof).
    Silvana:NonMembershipProof.lowLeafProof ds
def $sel:lowLeafProof:InsertWitness : Silvana:InsertWitness -> Silvana:MerkleProof =
  \(ds : Silvana:InsertWitness).
    Silvana:InsertWitness.lowLeafProof ds
def $sel:lowLeaf:NonMembershipProof : Silvana:NonMembershipProof -> Silvana:Leaf =
  \(ds : Silvana:NonMembershipProof).
    Silvana:NonMembershipProof.lowLeaf ds
def $sel:lowLeaf:InsertWitness : Silvana:InsertWitness -> Silvana:Leaf =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.lowLeaf ds
def $sel:leafProof:MembershipProof : Silvana:MembershipProof -> Silvana:MerkleProof =
  \(ds : Silvana:MembershipProof).
    Silvana:MembershipProof.leafProof ds
def $sel:leaf:MembershipProof : Silvana:MembershipProof -> Silvana:Leaf =
  \(ds : Silvana:MembershipProof). Silvana:MembershipProof.leaf ds
def $sel:key:UpdateWitness : Silvana:UpdateWitness -> Text =
  \(ds : Silvana:UpdateWitness). Silvana:UpdateWitness.key ds
def $sel:key:NonMembershipProof : Silvana:NonMembershipProof -> Text =
  \(ds : Silvana:NonMembershipProof).
    Silvana:NonMembershipProof.key ds
def $sel:key:MembershipProof : Silvana:MembershipProof -> Text =
  \(ds : Silvana:MembershipProof). Silvana:MembershipProof.key ds
def $sel:key:Leaf : Silvana:Leaf -> Text =
  \(ds : Silvana:Leaf). Silvana:Leaf.key ds
def $sel:key:InsertWitness : Silvana:InsertWitness -> Text =
  \(ds : Silvana:InsertWitness). Silvana:InsertWitness.key ds
def $sel:index:Leaf : Silvana:Leaf -> Int64 =
  \(ds : Silvana:Leaf). Silvana:Leaf.index ds
def $sel:id:IndexedMerkleMapView : Silvana:IndexedMerkleMapView -> Text =
  \(ds : Silvana:IndexedMerkleMapView).
    Silvana:IndexedMerkleMapView.id ds
def $fSetField"witness"UpdateMapElementUpdateWitness : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_witness :
                                                                                                                                                                                                                                                               Unit>) Silvana:UpdateMapElement Silvana:UpdateWitness =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness) ($$v2 : Silvana:UpdateMapElement).
       Silvana:UpdateMapElement {$$v2 with witness = $$v1}>
def $fSetField"witness"AddMapElementInsertWitness : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_witness :
                                                                                                                                                                                                                                                            Unit>) Silvana:AddMapElement Silvana:InsertWitness =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness) ($$v2 : Silvana:AddMapElement).
       Silvana:AddMapElement {$$v2 with witness = $$v1}>
def $fSetField"value"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                                   Unit>) Silvana:MembershipProof Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with value = $$v1}>
def $fSetField"value"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                        Unit>) Silvana:Leaf Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:Leaf).
       Silvana:Leaf {$$v2 with value = $$v1}>
def $fSetField"value"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                                 Unit>) Silvana:InsertWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with value = $$v1}>
def $fSetField"updatedLowLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_updatedLowLeaf :
                                                                                                                                                                                                                                                          Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with updatedLowLeaf = $$v1}>
def $fSetField"updatedLeaf"UpdateWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_updatedLeaf :
                                                                                                                                                                                                                                                       Unit>) Silvana:UpdateWitness Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with updatedLeaf = $$v1}>
def $fSetField"treeLength"UpdateWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                     Unit>) Silvana:UpdateWitness Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with treeLength = $$v1}>
def $fSetField"treeLength"NonMembershipProofInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                          Unit>) Silvana:NonMembershipProof Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof {$$v2 with treeLength = $$v1}>
def $fSetField"treeLength"MembershipProofInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                       Unit>) Silvana:MembershipProof Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with treeLength = $$v1}>
def $fSetField"treeLength"InsertWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                     Unit>) Silvana:InsertWitness Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with treeLength = $$v1}>
def $fSetField"siblings"MerkleProof[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_siblings :
                                                                                                                                                                                                                                                Unit>) Silvana:MerkleProof (List Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Text) ($$v2 : Silvana:MerkleProof).
       Silvana:MerkleProof {$$v2 with siblings = $$v1}>
def $fSetField"rootTime"IndexedMerkleMapViewOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_rootTime :
                                                                                                                                                                                                                                                               Unit>) Silvana:IndexedMerkleMapView (Optional Timestamp) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Timestamp) ($$v2 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView {$$v2 with rootTime = $$v1}>
def $fSetField"root"NonMembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                     Unit>) Silvana:NonMembershipProof Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof {$$v2 with root = $$v1}>
def $fSetField"root"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                  Unit>) Silvana:MembershipProof Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with root = $$v1}>
def $fSetField"root"IndexedMerkleMapViewText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                       Unit>) Silvana:IndexedMerkleMapView Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView {$$v2 with root = $$v1}>
def $fSetField"requester"VerifyInclusionParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_requester :
                                                                                                                                                                                                                                                        Unit>) Silvana:VerifyInclusion Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Silvana:VerifyInclusion).
       Silvana:VerifyInclusion {$$v2 with requester = $$v1}>
def $fSetField"requester"VerifyExclusionParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_requester :
                                                                                                                                                                                                                                                        Unit>) Silvana:VerifyExclusion Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Silvana:VerifyExclusion).
       Silvana:VerifyExclusion {$$v2 with requester = $$v1}>
def $fSetField"provider"IndexedMerkleMapViewParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                                            Unit>) Silvana:IndexedMerkleMapView Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView {$$v2 with provider = $$v1}>
def $fSetField"proof"VerifyInclusionMembershipProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_proof :
                                                                                                                                                                                                                                                              Unit>) Silvana:VerifyInclusion Silvana:MembershipProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof) ($$v2 : Silvana:VerifyInclusion).
       Silvana:VerifyInclusion {$$v2 with proof = $$v1}>
def $fSetField"proof"VerifyExclusionNonMembershipProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_proof :
                                                                                                                                                                                                                                                                 Unit>) Silvana:VerifyExclusion Silvana:NonMembershipProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof) ($$v2 : Silvana:VerifyExclusion).
       Silvana:VerifyExclusion {$$v2 with proof = $$v1}>
def $fSetField"pathIndices"MerkleProof[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_pathIndices :
                                                                                                                                                                                                                                                   Unit>) Silvana:MerkleProof (List Bool) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Bool) ($$v2 : Silvana:MerkleProof).
       Silvana:MerkleProof {$$v2 with pathIndices = $$v1}>
def $fSetField"owner"IndexedMerkleMapViewParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                                         Unit>) Silvana:IndexedMerkleMapView Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView {$$v2 with owner = $$v1}>
def $fSetField"oldValue"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldValue :
                                                                                                                                                                                                                                                    Unit>) Silvana:UpdateWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with oldValue = $$v1}>
def $fSetField"oldRoot"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with oldRoot = $$v1}>
def $fSetField"oldRoot"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with oldRoot = $$v1}>
def $fSetField"oldLeafProof"UpdateWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldLeafProof :
                                                                                                                                                                                                                                                               Unit>) Silvana:UpdateWitness Silvana:MerkleProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with oldLeafProof = $$v1}>
def $fSetField"oldLeaf"UpdateWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with oldLeaf = $$v1}>
def $fSetField"nextKey"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_nextKey :
                                                                                                                                                                                                                                          Unit>) Silvana:Leaf Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:Leaf).
       Silvana:Leaf {$$v2 with nextKey = $$v1}>
def $fSetField"newValue"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newValue :
                                                                                                                                                                                                                                                    Unit>) Silvana:UpdateWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with newValue = $$v1}>
def $fSetField"newRoot"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with newRoot = $$v1}>
def $fSetField"newRoot"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with newRoot = $$v1}>
def $fSetField"newLeafProofAfter"InsertWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeafProofAfter :
                                                                                                                                                                                                                                                                    Unit>) Silvana:InsertWitness Silvana:MerkleProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with newLeafProofAfter = $$v1}>
def $fSetField"newLeafIndex"InsertWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeafIndex :
                                                                                                                                                                                                                                                       Unit>) Silvana:InsertWitness Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with newLeafIndex = $$v1}>
def $fSetField"newLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with newLeaf = $$v1}>
def $fSetField"lowLeafProof"NonMembershipProofMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeafProof :
                                                                                                                                                                                                                                                                    Unit>) Silvana:NonMembershipProof Silvana:MerkleProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof) ($$v2 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof {$$v2 with lowLeafProof = $$v1}>
def $fSetField"lowLeafProof"InsertWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeafProof :
                                                                                                                                                                                                                                                               Unit>) Silvana:InsertWitness Silvana:MerkleProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with lowLeafProof = $$v1}>
def $fSetField"lowLeaf"NonMembershipProofLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeaf :
                                                                                                                                                                                                                                                        Unit>) Silvana:NonMembershipProof Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof {$$v2 with lowLeaf = $$v1}>
def $fSetField"lowLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with lowLeaf = $$v1}>
def $fSetField"leafProof"MembershipProofMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_leafProof :
                                                                                                                                                                                                                                                              Unit>) Silvana:MembershipProof Silvana:MerkleProof =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with leafProof = $$v1}>
def $fSetField"leaf"MembershipProofLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_leaf :
                                                                                                                                                                                                                                                  Unit>) Silvana:MembershipProof Silvana:Leaf =
  <m_setField =
     \(_ : Unit) ($$v1 : Silvana:Leaf) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with leaf = $$v1}>
def $fSetField"key"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                               Unit>) Silvana:UpdateWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:UpdateWitness).
       Silvana:UpdateWitness {$$v2 with key = $$v1}>
def $fSetField"key"NonMembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                                    Unit>) Silvana:NonMembershipProof Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof {$$v2 with key = $$v1}>
def $fSetField"key"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                                 Unit>) Silvana:MembershipProof Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:MembershipProof).
       Silvana:MembershipProof {$$v2 with key = $$v1}>
def $fSetField"key"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                      Unit>) Silvana:Leaf Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:Leaf).
       Silvana:Leaf {$$v2 with key = $$v1}>
def $fSetField"key"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                               Unit>) Silvana:InsertWitness Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:InsertWitness).
       Silvana:InsertWitness {$$v2 with key = $$v1}>
def $fSetField"index"LeafInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_index :
                                                                                                                                                                                                                                       Unit>) Silvana:Leaf Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Silvana:Leaf).
       Silvana:Leaf {$$v2 with index = $$v1}>
def $fSetField"id"IndexedMerkleMapViewText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                                     Unit>) Silvana:IndexedMerkleMapView Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView {$$v2 with id = $$v1}>
def $fHasToAnyTemplateIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyTemplate Silvana:IndexedMerkleMap =
  <m__toAnyTemplate =
     \(_ : Unit) (template : Silvana:IndexedMerkleMap).
       to_any @Silvana:IndexedMerkleMap template>
def $$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyInclusionBool_1 : Silvana:VerifyInclusion -> Any =
  \(choice : Silvana:VerifyInclusion).
    to_any @Silvana:VerifyInclusion choice
def $$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyInclusionBool_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Silvana:VerifyInclusion -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyInclusionBool_1
def $fHasToAnyChoiceIndexedMerkleMapVerifyInclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Silvana:IndexedMerkleMap Silvana:VerifyInclusion Bool =
  <m__toAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyInclusionBool_2>
def $$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyExclusionBool_1 : Silvana:VerifyExclusion -> Any =
  \(choice : Silvana:VerifyExclusion).
    to_any @Silvana:VerifyExclusion choice
def $$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyExclusionBool_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Silvana:VerifyExclusion -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyExclusionBool_1
def $fHasToAnyChoiceIndexedMerkleMapVerifyExclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Silvana:IndexedMerkleMap Silvana:VerifyExclusion Bool =
  <m__toAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapVerifyExclusionBool_2>
def $$sc_$fHasToAnyChoiceIndexedMerkleMapUpdateMapElementContractId_1 : Silvana:UpdateMapElement -> Any =
  \(choice : Silvana:UpdateMapElement).
    to_any @Silvana:UpdateMapElement choice
def $$sc_$fHasToAnyChoiceIndexedMerkleMapUpdateMapElementContractId_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Silvana:UpdateMapElement -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapUpdateMapElementContractId_1
def $fHasToAnyChoiceIndexedMerkleMapUpdateMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Silvana:IndexedMerkleMap Silvana:UpdateMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m__toAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapUpdateMapElementContractId_2>
def $$sc_$fHasToAnyChoiceIndexedMerkleMapArchive()_1 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  \(choice : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    to_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      choice
def $$sc_$fHasToAnyChoiceIndexedMerkleMapArchive()_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapArchive()_1
def $fHasToAnyChoiceIndexedMerkleMapArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Silvana:IndexedMerkleMap 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__toAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapArchive()_2>
def $$sc_$fHasToAnyChoiceIndexedMerkleMapAddMapElementContractId_1 : Silvana:AddMapElement -> Any =
  \(choice : Silvana:AddMapElement).
    to_any @Silvana:AddMapElement choice
def $$sc_$fHasToAnyChoiceIndexedMerkleMapAddMapElementContractId_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Silvana:AddMapElement -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapAddMapElementContractId_1
def $fHasToAnyChoiceIndexedMerkleMapAddMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Silvana:IndexedMerkleMap Silvana:AddMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m__toAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasToAnyChoiceIndexedMerkleMapAddMapElementContractId_2>
def $$sc_$fHasTemplateTypeRepIndexedMerkleMap_1 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> TypeRep =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      type_rep @Silvana:IndexedMerkleMap
def $fHasTemplateTypeRepIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasTemplateTypeRep Silvana:IndexedMerkleMap =
  <m__templateTypeRep =
     \(_ : Unit). Silvana:$$sc_$fHasTemplateTypeRepIndexedMerkleMap_1>
def $fHasSignatoryIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasSignatory Silvana:IndexedMerkleMap =
  <m_signatory =
     \(_ : Unit) (this : Silvana:IndexedMerkleMap).
       signatory_interface @Silvana:IndexedMerkleMap this>
def $fHasObserverIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasObserver Silvana:IndexedMerkleMap =
  <m_observer =
     \(_ : Unit) (this : Silvana:IndexedMerkleMap).
       observer_interface @Silvana:IndexedMerkleMap this>
def $fHasInterfaceViewIndexedMerkleMapIndexedMerkleMapView : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasInterfaceView Silvana:IndexedMerkleMap Silvana:IndexedMerkleMapView =
  <m__view =
     \(_ : Unit) (i : Silvana:IndexedMerkleMap).
       view @Silvana:IndexedMerkleMap i>
def $fHasInterfaceTypeRepIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasInterfaceTypeRep Silvana:IndexedMerkleMap =
  <m__interfaceTypeRep =
     \(_ : Unit) (this : Silvana:IndexedMerkleMap).
       interface_template_type_rep @Silvana:IndexedMerkleMap this>
def $$sc_$fHasFromAnyViewIndexedMerkleMapIndexedMerkleMapView_1 : Any -> Optional Silvana:IndexedMerkleMapView =
  \(any : Any). from_any @Silvana:IndexedMerkleMapView any
def $$sc_$fHasFromAnyViewIndexedMerkleMapIndexedMerkleMapView_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional Silvana:IndexedMerkleMapView =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyViewIndexedMerkleMapIndexedMerkleMapView_1
def $fHasFromAnyViewIndexedMerkleMapIndexedMerkleMapView : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface.AnyView:HasFromAnyView Silvana:IndexedMerkleMap Silvana:IndexedMerkleMapView =
  <m__fromAnyView =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyViewIndexedMerkleMapIndexedMerkleMapView_2>
def $fHasFromAnyTemplateIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyTemplate Silvana:IndexedMerkleMap =
  <m__fromAnyTemplate =
     \(_ : Unit) (any : Any). from_any @Silvana:IndexedMerkleMap any>
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyInclusionBool_1 : Any -> Optional Silvana:VerifyInclusion =
  \(any : Any). from_any @Silvana:VerifyInclusion any
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyInclusionBool_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional Silvana:VerifyInclusion =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyInclusionBool_1
def $fHasFromAnyChoiceIndexedMerkleMapVerifyInclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Silvana:IndexedMerkleMap Silvana:VerifyInclusion Bool =
  <m__fromAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyInclusionBool_2>
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyExclusionBool_1 : Any -> Optional Silvana:VerifyExclusion =
  \(any : Any). from_any @Silvana:VerifyExclusion any
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyExclusionBool_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional Silvana:VerifyExclusion =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyExclusionBool_1
def $fHasFromAnyChoiceIndexedMerkleMapVerifyExclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Silvana:IndexedMerkleMap Silvana:VerifyExclusion Bool =
  <m__fromAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapVerifyExclusionBool_2>
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapUpdateMapElementContractId_1 : Any -> Optional Silvana:UpdateMapElement =
  \(any : Any). from_any @Silvana:UpdateMapElement any
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapUpdateMapElementContractId_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional Silvana:UpdateMapElement =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapUpdateMapElementContractId_1
def $fHasFromAnyChoiceIndexedMerkleMapUpdateMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Silvana:IndexedMerkleMap Silvana:UpdateMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m__fromAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapUpdateMapElementContractId_2>
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapArchive()_1 : Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  \(any : Any).
    from_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      any
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapArchive()_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapArchive()_1
def $fHasFromAnyChoiceIndexedMerkleMapArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Silvana:IndexedMerkleMap 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__fromAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapArchive()_2>
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapAddMapElementContractId_1 : Any -> Optional Silvana:AddMapElement =
  \(any : Any). from_any @Silvana:AddMapElement any
def $$sc_$fHasFromAnyChoiceIndexedMerkleMapAddMapElementContractId_2 : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Any -> Optional Silvana:AddMapElement =
  /\(proxy : * -> *).
    \(_ : proxy Silvana:IndexedMerkleMap).
      Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapAddMapElementContractId_1
def $fHasFromAnyChoiceIndexedMerkleMapAddMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Silvana:IndexedMerkleMap Silvana:AddMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m__fromAnyChoice =
     \(_ : Unit).
       Silvana:$$sc_$fHasFromAnyChoiceIndexedMerkleMapAddMapElementContractId_2>
def $fHasFetchIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFetch Silvana:IndexedMerkleMap =
  <m_fetch =
     \(_ : Unit) (this : ContractId Silvana:IndexedMerkleMap).
       fetch_interface @Silvana:IndexedMerkleMap this>
def $fHasCreateIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasCreate Silvana:IndexedMerkleMap =
  <m_create =
     \(_ : Unit) (this : Silvana:IndexedMerkleMap).
       create_interface @Silvana:IndexedMerkleMap this>
def $fGetField"witness"UpdateMapElementUpdateWitness : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_witness :
                                                                                                                                                                                                                                                               Unit>) Silvana:UpdateMapElement Silvana:UpdateWitness =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateMapElement).
       Silvana:UpdateMapElement.witness $$v1>
def $fGetField"witness"AddMapElementInsertWitness : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_witness :
                                                                                                                                                                                                                                                            Unit>) Silvana:AddMapElement Silvana:InsertWitness =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:AddMapElement).
       Silvana:AddMapElement.witness $$v1>
def $fGetField"value"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                                   Unit>) Silvana:MembershipProof Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.value $$v1>
def $fGetField"value"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                        Unit>) Silvana:Leaf Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:Leaf). Silvana:Leaf.value $$v1>
def $fGetField"value"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_value :
                                                                                                                                                                                                                                                 Unit>) Silvana:InsertWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.value $$v1>
def $fGetField"updatedLowLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_updatedLowLeaf :
                                                                                                                                                                                                                                                          Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.updatedLowLeaf $$v1>
def $fGetField"updatedLeaf"UpdateWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_updatedLeaf :
                                                                                                                                                                                                                                                       Unit>) Silvana:UpdateWitness Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.updatedLeaf $$v1>
def $fGetField"treeLength"UpdateWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                     Unit>) Silvana:UpdateWitness Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.treeLength $$v1>
def $fGetField"treeLength"NonMembershipProofInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                          Unit>) Silvana:NonMembershipProof Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof.treeLength $$v1>
def $fGetField"treeLength"MembershipProofInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                       Unit>) Silvana:MembershipProof Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.treeLength $$v1>
def $fGetField"treeLength"InsertWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_treeLength :
                                                                                                                                                                                                                                                     Unit>) Silvana:InsertWitness Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.treeLength $$v1>
def $fGetField"siblings"MerkleProof[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_siblings :
                                                                                                                                                                                                                                                Unit>) Silvana:MerkleProof (List Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof).
       Silvana:MerkleProof.siblings $$v1>
def $fGetField"rootTime"IndexedMerkleMapViewOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_rootTime :
                                                                                                                                                                                                                                                               Unit>) Silvana:IndexedMerkleMapView (Optional Timestamp) =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView.rootTime $$v1>
def $fGetField"root"NonMembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                     Unit>) Silvana:NonMembershipProof Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof.root $$v1>
def $fGetField"root"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                  Unit>) Silvana:MembershipProof Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.root $$v1>
def $fGetField"root"IndexedMerkleMapViewText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                                       Unit>) Silvana:IndexedMerkleMapView Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView.root $$v1>
def $fGetField"requester"VerifyInclusionParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_requester :
                                                                                                                                                                                                                                                        Unit>) Silvana:VerifyInclusion Party =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:VerifyInclusion).
       Silvana:VerifyInclusion.requester $$v1>
def $fGetField"requester"VerifyExclusionParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_requester :
                                                                                                                                                                                                                                                        Unit>) Silvana:VerifyExclusion Party =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:VerifyExclusion).
       Silvana:VerifyExclusion.requester $$v1>
def $fGetField"provider"IndexedMerkleMapViewParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                                            Unit>) Silvana:IndexedMerkleMapView Party =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView.provider $$v1>
def $fGetField"proof"VerifyInclusionMembershipProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_proof :
                                                                                                                                                                                                                                                              Unit>) Silvana:VerifyInclusion Silvana:MembershipProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:VerifyInclusion).
       Silvana:VerifyInclusion.proof $$v1>
def $fGetField"proof"VerifyExclusionNonMembershipProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_proof :
                                                                                                                                                                                                                                                                 Unit>) Silvana:VerifyExclusion Silvana:NonMembershipProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:VerifyExclusion).
       Silvana:VerifyExclusion.proof $$v1>
def $fGetField"pathIndices"MerkleProof[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_pathIndices :
                                                                                                                                                                                                                                                   Unit>) Silvana:MerkleProof (List Bool) =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MerkleProof).
       Silvana:MerkleProof.pathIndices $$v1>
def $fGetField"owner"IndexedMerkleMapViewParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                                         Unit>) Silvana:IndexedMerkleMapView Party =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView.owner $$v1>
def $fGetField"oldValue"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldValue :
                                                                                                                                                                                                                                                    Unit>) Silvana:UpdateWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.oldValue $$v1>
def $fGetField"oldRoot"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.oldRoot $$v1>
def $fGetField"oldRoot"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.oldRoot $$v1>
def $fGetField"oldLeafProof"UpdateWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldLeafProof :
                                                                                                                                                                                                                                                               Unit>) Silvana:UpdateWitness Silvana:MerkleProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.oldLeafProof $$v1>
def $fGetField"oldLeaf"UpdateWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_oldLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.oldLeaf $$v1>
def $fGetField"nextKey"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_nextKey :
                                                                                                                                                                                                                                          Unit>) Silvana:Leaf Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:Leaf). Silvana:Leaf.nextKey $$v1>
def $fGetField"newValue"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newValue :
                                                                                                                                                                                                                                                    Unit>) Silvana:UpdateWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.newValue $$v1>
def $fGetField"newRoot"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:UpdateWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.newRoot $$v1>
def $fGetField"newRoot"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newRoot :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.newRoot $$v1>
def $fGetField"newLeafProofAfter"InsertWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeafProofAfter :
                                                                                                                                                                                                                                                                    Unit>) Silvana:InsertWitness Silvana:MerkleProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.newLeafProofAfter $$v1>
def $fGetField"newLeafIndex"InsertWitnessInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeafIndex :
                                                                                                                                                                                                                                                       Unit>) Silvana:InsertWitness Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.newLeafIndex $$v1>
def $fGetField"newLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_newLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.newLeaf $$v1>
def $fGetField"lowLeafProof"NonMembershipProofMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeafProof :
                                                                                                                                                                                                                                                                    Unit>) Silvana:NonMembershipProof Silvana:MerkleProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof.lowLeafProof $$v1>
def $fGetField"lowLeafProof"InsertWitnessMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeafProof :
                                                                                                                                                                                                                                                               Unit>) Silvana:InsertWitness Silvana:MerkleProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.lowLeafProof $$v1>
def $fGetField"lowLeaf"NonMembershipProofLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeaf :
                                                                                                                                                                                                                                                        Unit>) Silvana:NonMembershipProof Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof.lowLeaf $$v1>
def $fGetField"lowLeaf"InsertWitnessLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_lowLeaf :
                                                                                                                                                                                                                                                   Unit>) Silvana:InsertWitness Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.lowLeaf $$v1>
def $fGetField"leafProof"MembershipProofMerkleProof : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_leafProof :
                                                                                                                                                                                                                                                              Unit>) Silvana:MembershipProof Silvana:MerkleProof =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.leafProof $$v1>
def $fGetField"leaf"MembershipProofLeaf : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_leaf :
                                                                                                                                                                                                                                                  Unit>) Silvana:MembershipProof Silvana:Leaf =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.leaf $$v1>
def $fGetField"key"UpdateWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                               Unit>) Silvana:UpdateWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:UpdateWitness).
       Silvana:UpdateWitness.key $$v1>
def $fGetField"key"NonMembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                                    Unit>) Silvana:NonMembershipProof Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:NonMembershipProof).
       Silvana:NonMembershipProof.key $$v1>
def $fGetField"key"MembershipProofText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                                 Unit>) Silvana:MembershipProof Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:MembershipProof).
       Silvana:MembershipProof.key $$v1>
def $fGetField"key"LeafText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                      Unit>) Silvana:Leaf Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:Leaf). Silvana:Leaf.key $$v1>
def $fGetField"key"InsertWitnessText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_key :
                                                                                                                                                                                                                                               Unit>) Silvana:InsertWitness Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:InsertWitness).
       Silvana:InsertWitness.key $$v1>
def $fGetField"index"LeafInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_index :
                                                                                                                                                                                                                                       Unit>) Silvana:Leaf Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:Leaf). Silvana:Leaf.index $$v1>
def $fGetField"id"IndexedMerkleMapViewText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                                     Unit>) Silvana:IndexedMerkleMapView Text =
  <m_getField =
     \(_ : Unit) ($$v1 : Silvana:IndexedMerkleMapView).
       Silvana:IndexedMerkleMapView.id $$v1>
def $cunsafeFromInterface : ContractId Silvana:IndexedMerkleMap -> Silvana:IndexedMerkleMap -> Silvana:IndexedMerkleMap =
  \(ds : ContractId Silvana:IndexedMerkleMap) (this : Silvana:IndexedMerkleMap).
    this
def $$sc_$cshowsPrec6_1 : Party -> Text -> Text =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$cshowsPrec3
    0
def $$sc_$cshowsPrec6_2 : Text -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show.Text:showsPrecText
    0
def $$sc_$cshowsPrec6_3 : Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
    "}"
def $$sc_$cshowsPrec6_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "rootTime = ")
def $$sc_$cshowsPrec6_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showCommaSpace
def $$sc_$cshowsPrec6_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "root = ")
def $$sc_$cshowsPrec6_7 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "id = ")
def $$sc_$cshowsPrec6_8 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "provider = ")
def $$sc_$cshowsPrec6_9 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "owner = ")
def $$sc_$cshowsPrec6_10 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "IndexedMerkleMapView {")
def $cshowsPrec6 : Int64 -> Silvana:IndexedMerkleMapView -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fShowOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fShowTime
  in \(a : Int64) (ds : Silvana:IndexedMerkleMapView).
       let b1 : Party = Silvana:IndexedMerkleMapView.owner ds
           b2 : Party = Silvana:IndexedMerkleMapView.provider ds
           b3 : Text = Silvana:IndexedMerkleMapView.id ds
           b4 : Text = Silvana:IndexedMerkleMapView.root ds
           b5 : Optional Timestamp = Silvana:IndexedMerkleMapView.rootTime ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Silvana:$$sc_$cshowsPrec6_10
               (Silvana:$$sc_$cshowsPrec6_9
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     (Silvana:$$sc_$cshowsPrec6_1 b1)
                     (Silvana:$$sc_$cshowsPrec6_5
                        (Silvana:$$sc_$cshowsPrec6_8
                           (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                              @Text
                              @Text
                              @Text
                              (Silvana:$$sc_$cshowsPrec6_1 b2)
                              (Silvana:$$sc_$cshowsPrec6_5
                                 (Silvana:$$sc_$cshowsPrec6_7
                                    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                       @Text
                                       @Text
                                       @Text
                                       (Silvana:$$sc_$cshowsPrec6_2 b3)
                                       (Silvana:$$sc_$cshowsPrec6_5
                                          (Silvana:$$sc_$cshowsPrec6_6
                                             (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                @Text
                                                @Text
                                                @Text
                                                (Silvana:$$sc_$cshowsPrec6_2 b4)
                                                (Silvana:$$sc_$cshowsPrec6_5
                                                   (Silvana:$$sc_$cshowsPrec6_4
                                                      (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                         @Text
                                                         @Text
                                                         @Text
                                                         ($dShow.m_showsPrec unit 0 b5)
                                                         Silvana:$$sc_$cshowsPrec6_3)))))))))))))))
def $$sc_$cshowsPrec1_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "pathIndices = ")
def $$sc_$cshowsPrec1_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "siblings = ")
def $$sc_$cshowsPrec1_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "MerkleProof {")
def $$sc_$cshowsPrec1_4 : <m_showsPrec :
                             Unit -> Int64 -> List Text -> Text -> Text;
                           m_show : Unit -> List Text -> Text;
                           m_showList : Unit -> List (List Text) -> Text -> Text> =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
def $cshowsPrec1 : Int64 -> Silvana:MerkleProof -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Bool) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
          @Bool
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowBool
      $dShow1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Text) =
        Silvana:$$sc_$cshowsPrec1_4
  in \(a : Int64) (ds : Silvana:MerkleProof).
       let b1 : List Text = Silvana:MerkleProof.siblings ds
           b2 : List Bool = Silvana:MerkleProof.pathIndices ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Silvana:$$sc_$cshowsPrec1_3
               (Silvana:$$sc_$cshowsPrec1_2
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow1.m_showsPrec unit 0 b1)
                     (Silvana:$$sc_$cshowsPrec6_5
                        (Silvana:$$sc_$cshowsPrec1_1
                           (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                              @Text
                              @Text
                              @Text
                              ($dShow.m_showsPrec unit 0 b2)
                              Silvana:$$sc_$cshowsPrec6_3))))))
def $$sc_$cshowsPrec_1 : Int64 -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$cshowsPrec2
    0
def $$sc_$cshowsPrec_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "index = ")
def $$sc_$cshowsPrec_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "nextKey = ")
def $$sc_$cshowsPrec_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "value = ")
def $$sc_$cshowsPrec_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "key = ")
def $$sc_$cshowsPrec_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Leaf {")
def $cshowsPrec : Int64 -> Silvana:Leaf -> Text -> Text =
  \(a : Int64) (ds : Silvana:Leaf).
    let b1 : Text = Silvana:Leaf.key ds
        b2 : Text = Silvana:Leaf.value ds
        b3 : Text = Silvana:Leaf.nextKey ds
        b4 : Int64 = Silvana:Leaf.index ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec_6
            (Silvana:$$sc_$cshowsPrec_5
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec6_2 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec_4
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_2 b2)
                           (Silvana:$$sc_$cshowsPrec6_5
                              (Silvana:$$sc_$cshowsPrec_3
                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                    @Text
                                    @Text
                                    @Text
                                    (Silvana:$$sc_$cshowsPrec6_2 b3)
                                    (Silvana:$$sc_$cshowsPrec6_5
                                       (Silvana:$$sc_$cshowsPrec_2
                                          (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                             @Text
                                             @Text
                                             @Text
                                             (Silvana:$$sc_$cshowsPrec_1 b4)
                                             Silvana:$$sc_$cshowsPrec6_3))))))))))))
def $cshow6 : Silvana:IndexedMerkleMapView -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:IndexedMerkleMapView
    Silvana:$fShowIndexedMerkleMapView
def $fShowIndexedMerkleMapView : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:IndexedMerkleMapView =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec6;
   m_show = \(_ : Unit). Silvana:$cshow6;
   m_showList = \(_ : Unit). Silvana:$cshowList6>
def $cshowList6 : List Silvana:IndexedMerkleMapView -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:IndexedMerkleMapView
    Silvana:$fShowIndexedMerkleMapView
def $cshow1 : Silvana:MerkleProof -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:MerkleProof
    Silvana:$fShowMerkleProof
def $fShowMerkleProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:MerkleProof =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec1;
   m_show = \(_ : Unit). Silvana:$cshow1;
   m_showList = \(_ : Unit). Silvana:$cshowList1>
def $cshowList1 : List Silvana:MerkleProof -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:MerkleProof
    Silvana:$fShowMerkleProof
def $cshow : Silvana:Leaf -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:Leaf
    Silvana:$fShowLeaf
def $fShowLeaf : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:Leaf =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec;
   m_show = \(_ : Unit). Silvana:$cshow;
   m_showList = \(_ : Unit). Silvana:$cshowList>
def $cshowList : List Silvana:Leaf -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:Leaf
    Silvana:$fShowLeaf
def $$sc_$cshowsPrec2_1 : Silvana:Leaf -> Text -> Text =
  Silvana:$cshowsPrec 0
def $$sc_$cshowsPrec2_2 : Silvana:MerkleProof -> Text -> Text =
  Silvana:$cshowsPrec1 0
def $$sc_$cshowsPrec2_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "newLeafProofAfter = ")
def $$sc_$cshowsPrec2_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "newLeaf = ")
def $$sc_$cshowsPrec2_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "updatedLowLeaf = ")
def $$sc_$cshowsPrec2_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "lowLeafProof = ")
def $$sc_$cshowsPrec2_7 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "lowLeaf = ")
def $$sc_$cshowsPrec2_8 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "treeLength = ")
def $$sc_$cshowsPrec2_9 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "newLeafIndex = ")
def $$sc_$cshowsPrec2_10 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "newRoot = ")
def $$sc_$cshowsPrec2_11 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "oldRoot = ")
def $$sc_$cshowsPrec2_12 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "InsertWitness {")
def $cshowsPrec2 : Int64 -> Silvana:InsertWitness -> Text -> Text =
  \(a : Int64) (ds : Silvana:InsertWitness).
    let b1 : Text = Silvana:InsertWitness.oldRoot ds
        b2 : Text = Silvana:InsertWitness.newRoot ds
        b3 : Text = Silvana:InsertWitness.key ds
        b4 : Text = Silvana:InsertWitness.value ds
        b5 : Int64 = Silvana:InsertWitness.newLeafIndex ds
        b6 : Int64 = Silvana:InsertWitness.treeLength ds
        b7 : Silvana:Leaf = Silvana:InsertWitness.lowLeaf ds
        b8 : Silvana:MerkleProof = Silvana:InsertWitness.lowLeafProof ds
        b9 : Silvana:Leaf = Silvana:InsertWitness.updatedLowLeaf ds
        b10 : Silvana:Leaf = Silvana:InsertWitness.newLeaf ds
        b11 : Silvana:MerkleProof =
          Silvana:InsertWitness.newLeafProofAfter ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec2_12
            (Silvana:$$sc_$cshowsPrec2_11
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec6_2 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec2_10
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_2 b2)
                           (Silvana:$$sc_$cshowsPrec6_5
                              (Silvana:$$sc_$cshowsPrec_5
                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                    @Text
                                    @Text
                                    @Text
                                    (Silvana:$$sc_$cshowsPrec6_2 b3)
                                    (Silvana:$$sc_$cshowsPrec6_5
                                       (Silvana:$$sc_$cshowsPrec_4
                                          (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                             @Text
                                             @Text
                                             @Text
                                             (Silvana:$$sc_$cshowsPrec6_2 b4)
                                             (Silvana:$$sc_$cshowsPrec6_5
                                                (Silvana:$$sc_$cshowsPrec2_9
                                                   (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                      @Text
                                                      @Text
                                                      @Text
                                                      (Silvana:$$sc_$cshowsPrec_1 b5)
                                                      (Silvana:$$sc_$cshowsPrec6_5
                                                         (Silvana:$$sc_$cshowsPrec2_8
                                                            (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                               @Text
                                                               @Text
                                                               @Text
                                                               (Silvana:$$sc_$cshowsPrec_1 b6)
                                                               (Silvana:$$sc_$cshowsPrec6_5
                                                                  (Silvana:$$sc_$cshowsPrec2_7
                                                                     (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                        @Text
                                                                        @Text
                                                                        @Text
                                                                        (Silvana:$$sc_$cshowsPrec2_1
                                                                           b7)
                                                                        (Silvana:$$sc_$cshowsPrec6_5
                                                                           (Silvana:$$sc_$cshowsPrec2_6
                                                                              (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                 @Text
                                                                                 @Text
                                                                                 @Text
                                                                                 (Silvana:$$sc_$cshowsPrec2_2
                                                                                    b8)
                                                                                 (Silvana:$$sc_$cshowsPrec6_5
                                                                                    (Silvana:$$sc_$cshowsPrec2_5
                                                                                       (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                          @Text
                                                                                          @Text
                                                                                          @Text
                                                                                          (Silvana:$$sc_$cshowsPrec2_1
                                                                                             b9)
                                                                                          (Silvana:$$sc_$cshowsPrec6_5
                                                                                             (Silvana:$$sc_$cshowsPrec2_4
                                                                                                (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                                   @Text
                                                                                                   @Text
                                                                                                   @Text
                                                                                                   (Silvana:$$sc_$cshowsPrec2_1
                                                                                                      b10)
                                                                                                   (Silvana:$$sc_$cshowsPrec6_5
                                                                                                      (Silvana:$$sc_$cshowsPrec2_3
                                                                                                         (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                                            @Text
                                                                                                            @Text
                                                                                                            @Text
                                                                                                            (Silvana:$$sc_$cshowsPrec2_2
                                                                                                               b11)
                                                                                                            Silvana:$$sc_$cshowsPrec6_3)))))))))))))))))))))))))))))))))
def $fShowInsertWitness : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:InsertWitness =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec2;
   m_show = \(_ : Unit). Silvana:$cshow2;
   m_showList = \(_ : Unit). Silvana:$cshowList2>
def $cshow2 : Silvana:InsertWitness -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:InsertWitness
    Silvana:$fShowInsertWitness
def $cshowList2 : List Silvana:InsertWitness -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:InsertWitness
    Silvana:$fShowInsertWitness
def $$sc_$cshowsPrec7_1 : Silvana:InsertWitness -> Text -> Text =
  Silvana:$cshowsPrec2 0
def $$sc_$cshowsPrec7_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "witness = ")
def $$sc_$cshowsPrec7_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "AddMapElement {")
def $cshowsPrec7 : Int64 -> Silvana:AddMapElement -> Text -> Text =
  \(a : Int64) (ds : Silvana:AddMapElement).
    let b1 : Silvana:InsertWitness = Silvana:AddMapElement.witness ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec7_3
            (Silvana:$$sc_$cshowsPrec7_2
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec7_1 b1)
                  Silvana:$$sc_$cshowsPrec6_3)))
def $fShowAddMapElement : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:AddMapElement =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec7;
   m_show = \(_ : Unit). Silvana:$cshow7;
   m_showList = \(_ : Unit). Silvana:$cshowList7>
def $cshow7 : Silvana:AddMapElement -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:AddMapElement
    Silvana:$fShowAddMapElement
def $cshowList7 : List Silvana:AddMapElement -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:AddMapElement
    Silvana:$fShowAddMapElement
def $$sc_$cshowsPrec3_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "updatedLeaf = ")
def $$sc_$cshowsPrec3_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "oldLeafProof = ")
def $$sc_$cshowsPrec3_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "oldLeaf = ")
def $$sc_$cshowsPrec3_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "newValue = ")
def $$sc_$cshowsPrec3_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "oldValue = ")
def $$sc_$cshowsPrec3_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "UpdateWitness {")
def $cshowsPrec3 : Int64 -> Silvana:UpdateWitness -> Text -> Text =
  \(a : Int64) (ds : Silvana:UpdateWitness).
    let b1 : Text = Silvana:UpdateWitness.oldRoot ds
        b2 : Text = Silvana:UpdateWitness.newRoot ds
        b3 : Text = Silvana:UpdateWitness.key ds
        b4 : Text = Silvana:UpdateWitness.oldValue ds
        b5 : Text = Silvana:UpdateWitness.newValue ds
        b6 : Int64 = Silvana:UpdateWitness.treeLength ds
        b7 : Silvana:Leaf = Silvana:UpdateWitness.oldLeaf ds
        b8 : Silvana:MerkleProof = Silvana:UpdateWitness.oldLeafProof ds
        b9 : Silvana:Leaf = Silvana:UpdateWitness.updatedLeaf ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec3_6
            (Silvana:$$sc_$cshowsPrec2_11
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec6_2 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec2_10
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_2 b2)
                           (Silvana:$$sc_$cshowsPrec6_5
                              (Silvana:$$sc_$cshowsPrec_5
                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                    @Text
                                    @Text
                                    @Text
                                    (Silvana:$$sc_$cshowsPrec6_2 b3)
                                    (Silvana:$$sc_$cshowsPrec6_5
                                       (Silvana:$$sc_$cshowsPrec3_5
                                          (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                             @Text
                                             @Text
                                             @Text
                                             (Silvana:$$sc_$cshowsPrec6_2 b4)
                                             (Silvana:$$sc_$cshowsPrec6_5
                                                (Silvana:$$sc_$cshowsPrec3_4
                                                   (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                      @Text
                                                      @Text
                                                      @Text
                                                      (Silvana:$$sc_$cshowsPrec6_2 b5)
                                                      (Silvana:$$sc_$cshowsPrec6_5
                                                         (Silvana:$$sc_$cshowsPrec2_8
                                                            (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                               @Text
                                                               @Text
                                                               @Text
                                                               (Silvana:$$sc_$cshowsPrec_1 b6)
                                                               (Silvana:$$sc_$cshowsPrec6_5
                                                                  (Silvana:$$sc_$cshowsPrec3_3
                                                                     (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                        @Text
                                                                        @Text
                                                                        @Text
                                                                        (Silvana:$$sc_$cshowsPrec2_1
                                                                           b7)
                                                                        (Silvana:$$sc_$cshowsPrec6_5
                                                                           (Silvana:$$sc_$cshowsPrec3_2
                                                                              (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                 @Text
                                                                                 @Text
                                                                                 @Text
                                                                                 (Silvana:$$sc_$cshowsPrec2_2
                                                                                    b8)
                                                                                 (Silvana:$$sc_$cshowsPrec6_5
                                                                                    (Silvana:$$sc_$cshowsPrec3_1
                                                                                       (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                          @Text
                                                                                          @Text
                                                                                          @Text
                                                                                          (Silvana:$$sc_$cshowsPrec2_1
                                                                                             b9)
                                                                                          Silvana:$$sc_$cshowsPrec6_3)))))))))))))))))))))))))))
def $fShowUpdateWitness : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:UpdateWitness =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec3;
   m_show = \(_ : Unit). Silvana:$cshow3;
   m_showList = \(_ : Unit). Silvana:$cshowList3>
def $cshow3 : Silvana:UpdateWitness -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:UpdateWitness
    Silvana:$fShowUpdateWitness
def $cshowList3 : List Silvana:UpdateWitness -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:UpdateWitness
    Silvana:$fShowUpdateWitness
def $$sc_$cshowsPrec8_1 : Silvana:UpdateWitness -> Text -> Text =
  Silvana:$cshowsPrec3 0
def $$sc_$cshowsPrec8_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "UpdateMapElement {")
def $cshowsPrec8 : Int64 -> Silvana:UpdateMapElement -> Text -> Text =
  \(a : Int64) (ds : Silvana:UpdateMapElement).
    let b1 : Silvana:UpdateWitness =
          Silvana:UpdateMapElement.witness ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec8_2
            (Silvana:$$sc_$cshowsPrec7_2
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec8_1 b1)
                  Silvana:$$sc_$cshowsPrec6_3)))
def $fShowUpdateMapElement : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:UpdateMapElement =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec8;
   m_show = \(_ : Unit). Silvana:$cshow8;
   m_showList = \(_ : Unit). Silvana:$cshowList8>
def $cshow8 : Silvana:UpdateMapElement -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:UpdateMapElement
    Silvana:$fShowUpdateMapElement
def $cshowList8 : List Silvana:UpdateMapElement -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:UpdateMapElement
    Silvana:$fShowUpdateMapElement
def $$sc_$cshowsPrec4_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "leafProof = ")
def $$sc_$cshowsPrec4_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "leaf = ")
def $$sc_$cshowsPrec4_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "MembershipProof {")
def $cshowsPrec4 : Int64 -> Silvana:MembershipProof -> Text -> Text =
  \(a : Int64) (ds : Silvana:MembershipProof).
    let b1 : Text = Silvana:MembershipProof.root ds
        b2 : Text = Silvana:MembershipProof.key ds
        b3 : Text = Silvana:MembershipProof.value ds
        b4 : Int64 = Silvana:MembershipProof.treeLength ds
        b5 : Silvana:Leaf = Silvana:MembershipProof.leaf ds
        b6 : Silvana:MerkleProof = Silvana:MembershipProof.leafProof ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec4_3
            (Silvana:$$sc_$cshowsPrec6_6
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec6_2 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec_5
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_2 b2)
                           (Silvana:$$sc_$cshowsPrec6_5
                              (Silvana:$$sc_$cshowsPrec_4
                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                    @Text
                                    @Text
                                    @Text
                                    (Silvana:$$sc_$cshowsPrec6_2 b3)
                                    (Silvana:$$sc_$cshowsPrec6_5
                                       (Silvana:$$sc_$cshowsPrec2_8
                                          (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                             @Text
                                             @Text
                                             @Text
                                             (Silvana:$$sc_$cshowsPrec_1 b4)
                                             (Silvana:$$sc_$cshowsPrec6_5
                                                (Silvana:$$sc_$cshowsPrec4_2
                                                   (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                      @Text
                                                      @Text
                                                      @Text
                                                      (Silvana:$$sc_$cshowsPrec2_1 b5)
                                                      (Silvana:$$sc_$cshowsPrec6_5
                                                         (Silvana:$$sc_$cshowsPrec4_1
                                                            (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                               @Text
                                                               @Text
                                                               @Text
                                                               (Silvana:$$sc_$cshowsPrec2_2 b6)
                                                               Silvana:$$sc_$cshowsPrec6_3))))))))))))))))))
def $fShowMembershipProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:MembershipProof =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec4;
   m_show = \(_ : Unit). Silvana:$cshow4;
   m_showList = \(_ : Unit). Silvana:$cshowList4>
def $cshow4 : Silvana:MembershipProof -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:MembershipProof
    Silvana:$fShowMembershipProof
def $cshowList4 : List Silvana:MembershipProof -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:MembershipProof
    Silvana:$fShowMembershipProof
def $$sc_$cshowsPrec9_1 : Silvana:MembershipProof -> Text -> Text =
  Silvana:$cshowsPrec4 0
def $$sc_$cshowsPrec9_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "requester = ")
def $$sc_$cshowsPrec9_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "proof = ")
def $$sc_$cshowsPrec9_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "VerifyInclusion {")
def $cshowsPrec9 : Int64 -> Silvana:VerifyInclusion -> Text -> Text =
  \(a : Int64) (ds : Silvana:VerifyInclusion).
    let b1 : Silvana:MembershipProof = Silvana:VerifyInclusion.proof ds
        b2 : Party = Silvana:VerifyInclusion.requester ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec9_4
            (Silvana:$$sc_$cshowsPrec9_3
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec9_1 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec9_2
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_1 b2)
                           Silvana:$$sc_$cshowsPrec6_3))))))
def $fShowVerifyInclusion : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:VerifyInclusion =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec9;
   m_show = \(_ : Unit). Silvana:$cshow9;
   m_showList = \(_ : Unit). Silvana:$cshowList9>
def $cshow9 : Silvana:VerifyInclusion -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:VerifyInclusion
    Silvana:$fShowVerifyInclusion
def $cshowList9 : List Silvana:VerifyInclusion -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:VerifyInclusion
    Silvana:$fShowVerifyInclusion
def $$sc_$cshowsPrec5_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "NonMembershipProof {")
def $cshowsPrec5 : Int64 -> Silvana:NonMembershipProof -> Text -> Text =
  \(a : Int64) (ds : Silvana:NonMembershipProof).
    let b1 : Text = Silvana:NonMembershipProof.root ds
        b2 : Text = Silvana:NonMembershipProof.key ds
        b3 : Int64 = Silvana:NonMembershipProof.treeLength ds
        b4 : Silvana:Leaf = Silvana:NonMembershipProof.lowLeaf ds
        b5 : Silvana:MerkleProof =
          Silvana:NonMembershipProof.lowLeafProof ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec5_1
            (Silvana:$$sc_$cshowsPrec6_6
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec6_2 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec_5
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_2 b2)
                           (Silvana:$$sc_$cshowsPrec6_5
                              (Silvana:$$sc_$cshowsPrec2_8
                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                    @Text
                                    @Text
                                    @Text
                                    (Silvana:$$sc_$cshowsPrec_1 b3)
                                    (Silvana:$$sc_$cshowsPrec6_5
                                       (Silvana:$$sc_$cshowsPrec2_7
                                          (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                             @Text
                                             @Text
                                             @Text
                                             (Silvana:$$sc_$cshowsPrec2_1 b4)
                                             (Silvana:$$sc_$cshowsPrec6_5
                                                (Silvana:$$sc_$cshowsPrec2_6
                                                   (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                      @Text
                                                      @Text
                                                      @Text
                                                      (Silvana:$$sc_$cshowsPrec2_2 b5)
                                                      Silvana:$$sc_$cshowsPrec6_3)))))))))))))))
def $fShowNonMembershipProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:NonMembershipProof =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec5;
   m_show = \(_ : Unit). Silvana:$cshow5;
   m_showList = \(_ : Unit). Silvana:$cshowList5>
def $cshow5 : Silvana:NonMembershipProof -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:NonMembershipProof
    Silvana:$fShowNonMembershipProof
def $cshowList5 : List Silvana:NonMembershipProof -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:NonMembershipProof
    Silvana:$fShowNonMembershipProof
def $$sc_$cshowsPrec10_1 : Silvana:NonMembershipProof -> Text -> Text =
  Silvana:$cshowsPrec5 0
def $$sc_$cshowsPrec10_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "VerifyExclusion {")
def $cshowsPrec10 : Int64 -> Silvana:VerifyExclusion -> Text -> Text =
  \(a : Int64) (ds : Silvana:VerifyExclusion).
    let b1 : Silvana:NonMembershipProof =
          Silvana:VerifyExclusion.proof ds
        b2 : Party = Silvana:VerifyExclusion.requester ds
    in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
         (GREATER_EQ @Int64 a 11)
         (Silvana:$$sc_$cshowsPrec10_2
            (Silvana:$$sc_$cshowsPrec9_3
               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                  @Text
                  @Text
                  @Text
                  (Silvana:$$sc_$cshowsPrec10_1 b1)
                  (Silvana:$$sc_$cshowsPrec6_5
                     (Silvana:$$sc_$cshowsPrec9_2
                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                           @Text
                           @Text
                           @Text
                           (Silvana:$$sc_$cshowsPrec6_1 b2)
                           Silvana:$$sc_$cshowsPrec6_3))))))
def $fShowVerifyExclusion : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Silvana:VerifyExclusion =
  <m_showsPrec = \(_ : Unit). Silvana:$cshowsPrec10;
   m_show = \(_ : Unit). Silvana:$cshow10;
   m_showList = \(_ : Unit). Silvana:$cshowList10>
def $cshow10 : Silvana:VerifyExclusion -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Silvana:VerifyExclusion
    Silvana:$fShowVerifyExclusion
def $cshowList10 : List Silvana:VerifyExclusion -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Silvana:VerifyExclusion
    Silvana:$fShowVerifyExclusion
def $cfromInterface : Silvana:IndexedMerkleMap -> Optional Silvana:IndexedMerkleMap =
  \(this : Silvana:IndexedMerkleMap).
    some @Silvana:IndexedMerkleMap this
def $fHasFromInterfaceIndexedMerkleMapIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasFromInterface Silvana:IndexedMerkleMap Silvana:IndexedMerkleMap =
  <m_fromInterface = \(_ : Unit). Silvana:$cfromInterface;
   m_unsafeFromInterface = \(_ : Unit). Silvana:$cunsafeFromInterface>
def $c_toInterface : Silvana:IndexedMerkleMap -> Silvana:IndexedMerkleMap =
  \(this : Silvana:IndexedMerkleMap). this
def $fHasToInterfaceIndexedMerkleMapIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasToInterface Silvana:IndexedMerkleMap Silvana:IndexedMerkleMap =
  <m__toInterface = \(_ : Unit). Silvana:$c_toInterface>
def $$sc_$cexercise_1 : ContractId Silvana:IndexedMerkleMap -> ContractId Silvana:IndexedMerkleMap =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:toInterfaceContractId
    @Silvana:IndexedMerkleMap
    @Silvana:IndexedMerkleMap
    Silvana:$fHasToInterfaceIndexedMerkleMapIndexedMerkleMap
def $$sc_$cexercise_2 : ContractId Silvana:IndexedMerkleMap -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(this : ContractId Silvana:IndexedMerkleMap) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    exercise_interface @Silvana:IndexedMerkleMap Archive this arg
def $cexercise : ContractId Silvana:IndexedMerkleMap -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(cid : ContractId Silvana:IndexedMerkleMap) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    Silvana:$$sc_$cexercise_2 (Silvana:$$sc_$cexercise_1 cid) arg
def $fHasExerciseIndexedMerkleMapArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Silvana:IndexedMerkleMap 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m_exercise = \(_ : Unit). Silvana:$cexercise>
def $$sc_$carchive_1 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
    {}
def $carchive : ContractId Silvana:IndexedMerkleMap -> Update Unit =
  \(cid : ContractId Silvana:IndexedMerkleMap).
    Silvana:$cexercise cid Silvana:$$sc_$carchive_1
def $fHasArchiveIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasArchive Silvana:IndexedMerkleMap =
  <m_archive = \(_ : Unit). Silvana:$carchive>
def $$sc_$cexercise1_1 : ContractId Silvana:IndexedMerkleMap -> Silvana:AddMapElement -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(this : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:AddMapElement).
    exercise_interface @Silvana:IndexedMerkleMap AddMapElement this arg
def $cexercise1 : ContractId Silvana:IndexedMerkleMap -> Silvana:AddMapElement -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(cid : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:AddMapElement).
    Silvana:$$sc_$cexercise1_1 (Silvana:$$sc_$cexercise_1 cid) arg
def $fHasExerciseIndexedMerkleMapAddMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Silvana:IndexedMerkleMap Silvana:AddMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m_exercise = \(_ : Unit). Silvana:$cexercise1>
def $$sc_$cexercise2_1 : ContractId Silvana:IndexedMerkleMap -> Silvana:UpdateMapElement -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(this : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:UpdateMapElement).
    exercise_interface
      @Silvana:IndexedMerkleMap
      UpdateMapElement
      this
      arg
def $cexercise2 : ContractId Silvana:IndexedMerkleMap -> Silvana:UpdateMapElement -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(cid : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:UpdateMapElement).
    Silvana:$$sc_$cexercise2_1 (Silvana:$$sc_$cexercise_1 cid) arg
def $fHasExerciseIndexedMerkleMapUpdateMapElementContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Silvana:IndexedMerkleMap Silvana:UpdateMapElement (ContractId Silvana:IndexedMerkleMap) =
  <m_exercise = \(_ : Unit). Silvana:$cexercise2>
def $$sc_$cexercise3_1 : ContractId Silvana:IndexedMerkleMap -> Silvana:VerifyInclusion -> Update Bool =
  \(this : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyInclusion).
    exercise_interface
      @Silvana:IndexedMerkleMap
      VerifyInclusion
      this
      arg
def $cexercise3 : ContractId Silvana:IndexedMerkleMap -> Silvana:VerifyInclusion -> Update Bool =
  \(cid : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyInclusion).
    Silvana:$$sc_$cexercise3_1 (Silvana:$$sc_$cexercise_1 cid) arg
def $fHasExerciseIndexedMerkleMapVerifyInclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Silvana:IndexedMerkleMap Silvana:VerifyInclusion Bool =
  <m_exercise = \(_ : Unit). Silvana:$cexercise3>
def $$sc_$cexercise4_1 : ContractId Silvana:IndexedMerkleMap -> Silvana:VerifyExclusion -> Update Bool =
  \(this : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyExclusion).
    exercise_interface
      @Silvana:IndexedMerkleMap
      VerifyExclusion
      this
      arg
def $cexercise4 : ContractId Silvana:IndexedMerkleMap -> Silvana:VerifyExclusion -> Update Bool =
  \(cid : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyExclusion).
    Silvana:$$sc_$cexercise4_1 (Silvana:$$sc_$cexercise_1 cid) arg
def $fHasExerciseIndexedMerkleMapVerifyExclusionBool : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Silvana:IndexedMerkleMap Silvana:VerifyExclusion Bool =
  <m_exercise = \(_ : Unit). Silvana:$cexercise4>
def $c_isInterfaceType : forall (proxy : * -> *). proxy Silvana:IndexedMerkleMap -> Bool =
  /\(proxy : * -> *). \(ds : proxy Silvana:IndexedMerkleMap). true
def $fHasIsInterfaceTypeIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Desugar:HasIsInterfaceType Silvana:IndexedMerkleMap =
  <m__isInterfaceType = \(_ : Unit). Silvana:$c_isInterfaceType>
def $c==2 : Silvana:Leaf -> Silvana:Leaf -> Bool =
  \(ds : Silvana:Leaf) (ds1 : Silvana:Leaf).
    let a1 : Text = Silvana:Leaf.key ds
        a2 : Text = Silvana:Leaf.value ds
        a3 : Text = Silvana:Leaf.nextKey ds
        a4 : Int64 = Silvana:Leaf.index ds
        b1 : Text = Silvana:Leaf.key ds1
        b2 : Text = Silvana:Leaf.value ds1
        b3 : Text = Silvana:Leaf.nextKey ds1
        b4 : Int64 = Silvana:Leaf.index ds1
    in case EQUAL @Text a1 b1 of
         true ->
           case EQUAL @Text a2 b2 of
             true ->
               case EQUAL @Text a3 b3 of
                 true -> EQUAL @Int64 a4 b4
                 false -> false
             false -> false
         false -> false
def $$sc_$c==1_1 : <m_== : Unit -> List Text -> List Text -> Bool;
                    m_/= : Unit -> List Text -> List Text -> Bool> =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
def $c==1 : Silvana:MerkleProof -> Silvana:MerkleProof -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Bool) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
          @Bool
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqBool
      $dEq1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Text) =
        Silvana:$$sc_$c==1_1
  in \(ds : Silvana:MerkleProof) (ds1 : Silvana:MerkleProof).
       let a1 : List Text = Silvana:MerkleProof.siblings ds
           a2 : List Bool = Silvana:MerkleProof.pathIndices ds
           b1 : List Text = Silvana:MerkleProof.siblings ds1
           b2 : List Bool = Silvana:MerkleProof.pathIndices ds1
       in case $dEq1.m_== unit a1 b1 of
            true -> $dEq.m_== unit a2 b2
            false -> false
def $c== : Silvana:IndexedMerkleMapView -> Silvana:IndexedMerkleMapView -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fEqOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fEqTime
  in \(ds : Silvana:IndexedMerkleMapView) (ds1 : Silvana:IndexedMerkleMapView).
       let a1 : Party = Silvana:IndexedMerkleMapView.owner ds
           a2 : Party = Silvana:IndexedMerkleMapView.provider ds
           a3 : Text = Silvana:IndexedMerkleMapView.id ds
           a4 : Text = Silvana:IndexedMerkleMapView.root ds
           a5 : Optional Timestamp = Silvana:IndexedMerkleMapView.rootTime ds
           b1 : Party = Silvana:IndexedMerkleMapView.owner ds1
           b2 : Party = Silvana:IndexedMerkleMapView.provider ds1
           b3 : Text = Silvana:IndexedMerkleMapView.id ds1
           b4 : Text = Silvana:IndexedMerkleMapView.root ds1
           b5 : Optional Timestamp = Silvana:IndexedMerkleMapView.rootTime ds1
       in case EQUAL @Party a1 b1 of
            true ->
              case EQUAL @Party a2 b2 of
                true ->
                  case EQUAL @Text a3 b3 of
                    true ->
                      case EQUAL @Text a4 b4 of
                        true -> $dEq.m_== unit a5 b5
                        false -> false
                    false -> false
                false -> false
            false -> false
def $c/=3 : Silvana:Leaf -> Silvana:Leaf -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:Leaf
    Silvana:$fEqLeaf
def $fEqLeaf : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:Leaf =
  <m_== = \(_ : Unit). Silvana:$c==2;
   m_/= = \(_ : Unit). Silvana:$c/=3>
def $c/=2 : Silvana:MerkleProof -> Silvana:MerkleProof -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:MerkleProof
    Silvana:$fEqMerkleProof
def $fEqMerkleProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:MerkleProof =
  <m_== = \(_ : Unit). Silvana:$c==1;
   m_/= = \(_ : Unit). Silvana:$c/=2>
def $c==3 : Silvana:InsertWitness -> Silvana:InsertWitness -> Bool =
  \(ds : Silvana:InsertWitness) (ds1 : Silvana:InsertWitness).
    let a1 : Text = Silvana:InsertWitness.oldRoot ds
        a2 : Text = Silvana:InsertWitness.newRoot ds
        a3 : Text = Silvana:InsertWitness.key ds
        a4 : Text = Silvana:InsertWitness.value ds
        a5 : Int64 = Silvana:InsertWitness.newLeafIndex ds
        a6 : Int64 = Silvana:InsertWitness.treeLength ds
        a7 : Silvana:Leaf = Silvana:InsertWitness.lowLeaf ds
        a8 : Silvana:MerkleProof = Silvana:InsertWitness.lowLeafProof ds
        a9 : Silvana:Leaf = Silvana:InsertWitness.updatedLowLeaf ds
        a10 : Silvana:Leaf = Silvana:InsertWitness.newLeaf ds
        a11 : Silvana:MerkleProof =
          Silvana:InsertWitness.newLeafProofAfter ds
        b1 : Text = Silvana:InsertWitness.oldRoot ds1
        b2 : Text = Silvana:InsertWitness.newRoot ds1
        b3 : Text = Silvana:InsertWitness.key ds1
        b4 : Text = Silvana:InsertWitness.value ds1
        b5 : Int64 = Silvana:InsertWitness.newLeafIndex ds1
        b6 : Int64 = Silvana:InsertWitness.treeLength ds1
        b7 : Silvana:Leaf = Silvana:InsertWitness.lowLeaf ds1
        b8 : Silvana:MerkleProof = Silvana:InsertWitness.lowLeafProof ds1
        b9 : Silvana:Leaf = Silvana:InsertWitness.updatedLowLeaf ds1
        b10 : Silvana:Leaf = Silvana:InsertWitness.newLeaf ds1
        b11 : Silvana:MerkleProof =
          Silvana:InsertWitness.newLeafProofAfter ds1
    in case EQUAL @Text a1 b1 of
         true ->
           case EQUAL @Text a2 b2 of
             true ->
               case EQUAL @Text a3 b3 of
                 true ->
                   case EQUAL @Text a4 b4 of
                     true ->
                       case EQUAL @Int64 a5 b5 of
                         true ->
                           case EQUAL @Int64 a6 b6 of
                             true ->
                               case Silvana:$c==2 a7 b7 of
                                 true ->
                                   case Silvana:$c==1 a8 b8 of
                                     true ->
                                       case Silvana:$c==2 a9 b9 of
                                         true ->
                                           case Silvana:$c==2 a10 b10 of
                                             true -> Silvana:$c==1 a11 b11
                                             false -> false
                                         false -> false
                                     false -> false
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $fEqInsertWitness : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:InsertWitness =
  <m_== = \(_ : Unit). Silvana:$c==3;
   m_/= = \(_ : Unit). Silvana:$c/=4>
def $c/=4 : Silvana:InsertWitness -> Silvana:InsertWitness -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:InsertWitness
    Silvana:$fEqInsertWitness
def $c==4 : Silvana:AddMapElement -> Silvana:AddMapElement -> Bool =
  \(ds : Silvana:AddMapElement) (ds1 : Silvana:AddMapElement).
    let a1 : Silvana:InsertWitness = Silvana:AddMapElement.witness ds
        b1 : Silvana:InsertWitness = Silvana:AddMapElement.witness ds1
    in Silvana:$c==3 a1 b1
def $fEqAddMapElement : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:AddMapElement =
  <m_== = \(_ : Unit). Silvana:$c==4;
   m_/= = \(_ : Unit). Silvana:$c/=5>
def $c/=5 : Silvana:AddMapElement -> Silvana:AddMapElement -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:AddMapElement
    Silvana:$fEqAddMapElement
def $c==5 : Silvana:UpdateWitness -> Silvana:UpdateWitness -> Bool =
  \(ds : Silvana:UpdateWitness) (ds1 : Silvana:UpdateWitness).
    let a1 : Text = Silvana:UpdateWitness.oldRoot ds
        a2 : Text = Silvana:UpdateWitness.newRoot ds
        a3 : Text = Silvana:UpdateWitness.key ds
        a4 : Text = Silvana:UpdateWitness.oldValue ds
        a5 : Text = Silvana:UpdateWitness.newValue ds
        a6 : Int64 = Silvana:UpdateWitness.treeLength ds
        a7 : Silvana:Leaf = Silvana:UpdateWitness.oldLeaf ds
        a8 : Silvana:MerkleProof = Silvana:UpdateWitness.oldLeafProof ds
        a9 : Silvana:Leaf = Silvana:UpdateWitness.updatedLeaf ds
        b1 : Text = Silvana:UpdateWitness.oldRoot ds1
        b2 : Text = Silvana:UpdateWitness.newRoot ds1
        b3 : Text = Silvana:UpdateWitness.key ds1
        b4 : Text = Silvana:UpdateWitness.oldValue ds1
        b5 : Text = Silvana:UpdateWitness.newValue ds1
        b6 : Int64 = Silvana:UpdateWitness.treeLength ds1
        b7 : Silvana:Leaf = Silvana:UpdateWitness.oldLeaf ds1
        b8 : Silvana:MerkleProof = Silvana:UpdateWitness.oldLeafProof ds1
        b9 : Silvana:Leaf = Silvana:UpdateWitness.updatedLeaf ds1
    in case EQUAL @Text a1 b1 of
         true ->
           case EQUAL @Text a2 b2 of
             true ->
               case EQUAL @Text a3 b3 of
                 true ->
                   case EQUAL @Text a4 b4 of
                     true ->
                       case EQUAL @Text a5 b5 of
                         true ->
                           case EQUAL @Int64 a6 b6 of
                             true ->
                               case Silvana:$c==2 a7 b7 of
                                 true ->
                                   case Silvana:$c==1 a8 b8 of
                                     true -> Silvana:$c==2 a9 b9
                                     false -> false
                                 false -> false
                             false -> false
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $fEqUpdateWitness : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:UpdateWitness =
  <m_== = \(_ : Unit). Silvana:$c==5;
   m_/= = \(_ : Unit). Silvana:$c/=6>
def $c/=6 : Silvana:UpdateWitness -> Silvana:UpdateWitness -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:UpdateWitness
    Silvana:$fEqUpdateWitness
def $c==6 : Silvana:UpdateMapElement -> Silvana:UpdateMapElement -> Bool =
  \(ds : Silvana:UpdateMapElement) (ds1 : Silvana:UpdateMapElement).
    let a1 : Silvana:UpdateWitness =
          Silvana:UpdateMapElement.witness ds
        b1 : Silvana:UpdateWitness = Silvana:UpdateMapElement.witness ds1
    in Silvana:$c==5 a1 b1
def $fEqUpdateMapElement : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:UpdateMapElement =
  <m_== = \(_ : Unit). Silvana:$c==6;
   m_/= = \(_ : Unit). Silvana:$c/=7>
def $c/=7 : Silvana:UpdateMapElement -> Silvana:UpdateMapElement -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:UpdateMapElement
    Silvana:$fEqUpdateMapElement
def $c==7 : Silvana:MembershipProof -> Silvana:MembershipProof -> Bool =
  \(ds : Silvana:MembershipProof) (ds1 : Silvana:MembershipProof).
    let a1 : Text = Silvana:MembershipProof.root ds
        a2 : Text = Silvana:MembershipProof.key ds
        a3 : Text = Silvana:MembershipProof.value ds
        a4 : Int64 = Silvana:MembershipProof.treeLength ds
        a5 : Silvana:Leaf = Silvana:MembershipProof.leaf ds
        a6 : Silvana:MerkleProof = Silvana:MembershipProof.leafProof ds
        b1 : Text = Silvana:MembershipProof.root ds1
        b2 : Text = Silvana:MembershipProof.key ds1
        b3 : Text = Silvana:MembershipProof.value ds1
        b4 : Int64 = Silvana:MembershipProof.treeLength ds1
        b5 : Silvana:Leaf = Silvana:MembershipProof.leaf ds1
        b6 : Silvana:MerkleProof = Silvana:MembershipProof.leafProof ds1
    in case EQUAL @Text a1 b1 of
         true ->
           case EQUAL @Text a2 b2 of
             true ->
               case EQUAL @Text a3 b3 of
                 true ->
                   case EQUAL @Int64 a4 b4 of
                     true ->
                       case Silvana:$c==2 a5 b5 of
                         true -> Silvana:$c==1 a6 b6
                         false -> false
                     false -> false
                 false -> false
             false -> false
         false -> false
def $fEqMembershipProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:MembershipProof =
  <m_== = \(_ : Unit). Silvana:$c==7;
   m_/= = \(_ : Unit). Silvana:$c/=8>
def $c/=8 : Silvana:MembershipProof -> Silvana:MembershipProof -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:MembershipProof
    Silvana:$fEqMembershipProof
def $c==8 : Silvana:VerifyInclusion -> Silvana:VerifyInclusion -> Bool =
  \(ds : Silvana:VerifyInclusion) (ds1 : Silvana:VerifyInclusion).
    let a1 : Silvana:MembershipProof = Silvana:VerifyInclusion.proof ds
        a2 : Party = Silvana:VerifyInclusion.requester ds
        b1 : Silvana:MembershipProof = Silvana:VerifyInclusion.proof ds1
        b2 : Party = Silvana:VerifyInclusion.requester ds1
    in case Silvana:$c==7 a1 b1 of
         true -> EQUAL @Party a2 b2
         false -> false
def $fEqVerifyInclusion : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:VerifyInclusion =
  <m_== = \(_ : Unit). Silvana:$c==8;
   m_/= = \(_ : Unit). Silvana:$c/=9>
def $c/=9 : Silvana:VerifyInclusion -> Silvana:VerifyInclusion -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:VerifyInclusion
    Silvana:$fEqVerifyInclusion
def $c==9 : Silvana:NonMembershipProof -> Silvana:NonMembershipProof -> Bool =
  \(ds : Silvana:NonMembershipProof) (ds1 : Silvana:NonMembershipProof).
    let a1 : Text = Silvana:NonMembershipProof.root ds
        a2 : Text = Silvana:NonMembershipProof.key ds
        a3 : Int64 = Silvana:NonMembershipProof.treeLength ds
        a4 : Silvana:Leaf = Silvana:NonMembershipProof.lowLeaf ds
        a5 : Silvana:MerkleProof =
          Silvana:NonMembershipProof.lowLeafProof ds
        b1 : Text = Silvana:NonMembershipProof.root ds1
        b2 : Text = Silvana:NonMembershipProof.key ds1
        b3 : Int64 = Silvana:NonMembershipProof.treeLength ds1
        b4 : Silvana:Leaf = Silvana:NonMembershipProof.lowLeaf ds1
        b5 : Silvana:MerkleProof =
          Silvana:NonMembershipProof.lowLeafProof ds1
    in case EQUAL @Text a1 b1 of
         true ->
           case EQUAL @Text a2 b2 of
             true ->
               case EQUAL @Int64 a3 b3 of
                 true ->
                   case Silvana:$c==2 a4 b4 of
                     true -> Silvana:$c==1 a5 b5
                     false -> false
                 false -> false
             false -> false
         false -> false
def $c/=10 : Silvana:NonMembershipProof -> Silvana:NonMembershipProof -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:NonMembershipProof
    Silvana:$fEqNonMembershipProof
def $fEqNonMembershipProof : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:NonMembershipProof =
  <m_== = \(_ : Unit). Silvana:$c==9;
   m_/= = \(_ : Unit). Silvana:$c/=10>
def $c==10 : Silvana:VerifyExclusion -> Silvana:VerifyExclusion -> Bool =
  \(ds : Silvana:VerifyExclusion) (ds1 : Silvana:VerifyExclusion).
    let a1 : Silvana:NonMembershipProof =
          Silvana:VerifyExclusion.proof ds
        a2 : Party = Silvana:VerifyExclusion.requester ds
        b1 : Silvana:NonMembershipProof = Silvana:VerifyExclusion.proof ds1
        b2 : Party = Silvana:VerifyExclusion.requester ds1
    in case Silvana:$c==9 a1 b1 of
         true -> EQUAL @Party a2 b2
         false -> false
def $fEqVerifyExclusion : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:VerifyExclusion =
  <m_== = \(_ : Unit). Silvana:$c==10;
   m_/= = \(_ : Unit). Silvana:$c/=11>
def $c/=11 : Silvana:VerifyExclusion -> Silvana:VerifyExclusion -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:VerifyExclusion
    Silvana:$fEqVerifyExclusion
def $c/=1 : Silvana:IndexedMerkleMapView -> Silvana:IndexedMerkleMapView -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:IndexedMerkleMapView
    Silvana:$fEqIndexedMerkleMapView
def $fEqIndexedMerkleMapView : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:IndexedMerkleMapView =
  <m_== = \(_ : Unit). Silvana:$c==;
   m_/= = \(_ : Unit). Silvana:$c/=1>
def $c/= : Silvana:IndexedMerkleMap -> Silvana:IndexedMerkleMap -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Silvana:IndexedMerkleMap
    Silvana:$fEqIndexedMerkleMap
def $fEqIndexedMerkleMap : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Silvana:IndexedMerkleMap =
  <m_== = \(_ : Unit). EQUAL @Silvana:IndexedMerkleMap;
   m_/= = \(_ : Unit). Silvana:$c/=>
def $WVerifyInclusion : Silvana:MembershipProof -> Party -> Silvana:VerifyInclusion =
  \(dt_a1BG : Silvana:MembershipProof) (dt_a1BH : Party).
    Silvana:VerifyInclusion {proof = dt_a1BG; requester = dt_a1BH}
def $WVerifyExclusion : Silvana:NonMembershipProof -> Party -> Silvana:VerifyExclusion =
  \(dt_a1Cw : Silvana:NonMembershipProof) (dt_a1Cx : Party).
    Silvana:VerifyExclusion {proof = dt_a1Cw; requester = dt_a1Cx}
def $WUpdateWitness : Text -> Text -> Text -> Text -> Text -> Int64 -> Silvana:Leaf -> Silvana:MerkleProof -> Silvana:Leaf -> Silvana:UpdateWitness =
  \(dt_a1qZ : Text) (dt_a1r0 : Text) (dt_a1r1 : Text) (dt_a1r2 : Text) (dt_a1r3 : Text) (dt_a1r4 : Int64) (dt_a1r5 : Silvana:Leaf) (dt_a1r6 : Silvana:MerkleProof) (dt_a1r7 : Silvana:Leaf).
    Silvana:UpdateWitness
      {oldRoot = dt_a1qZ;
       newRoot = dt_a1r0;
       key = dt_a1r1;
       oldValue = dt_a1r2;
       newValue = dt_a1r3;
       treeLength = dt_a1r4;
       oldLeaf = dt_a1r5;
       oldLeafProof = dt_a1r6;
       updatedLeaf = dt_a1r7}
def $WUpdateMapElement : Silvana:UpdateWitness -> Silvana:UpdateMapElement =
  \(dt_a1AY : Silvana:UpdateWitness).
    Silvana:UpdateMapElement {witness = dt_a1AY}
def $WNonMembershipProof : Text -> Text -> Int64 -> Silvana:Leaf -> Silvana:MerkleProof -> Silvana:NonMembershipProof =
  \(dt_a1tC : Text) (dt_a1tD : Text) (dt_a1tE : Int64) (dt_a1tF : Silvana:Leaf) (dt_a1tG : Silvana:MerkleProof).
    Silvana:NonMembershipProof
      {root = dt_a1tC;
       key = dt_a1tD;
       treeLength = dt_a1tE;
       lowLeaf = dt_a1tF;
       lowLeafProof = dt_a1tG}
def $WMerkleProof : List Text -> List Bool -> Silvana:MerkleProof =
  \(dt_a1ot : List Text) (dt_a1ou : List Bool).
    Silvana:MerkleProof {siblings = dt_a1ot; pathIndices = dt_a1ou}
def $WMembershipProof : Text -> Text -> Text -> Int64 -> Silvana:Leaf -> Silvana:MerkleProof -> Silvana:MembershipProof =
  \(dt_a1sv : Text) (dt_a1sw : Text) (dt_a1sx : Text) (dt_a1sy : Int64) (dt_a1sz : Silvana:Leaf) (dt_a1sA : Silvana:MerkleProof).
    Silvana:MembershipProof
      {root = dt_a1sv;
       key = dt_a1sw;
       value = dt_a1sx;
       treeLength = dt_a1sy;
       leaf = dt_a1sz;
       leafProof = dt_a1sA}
def $WLeaf : Text -> Text -> Text -> Int64 -> Silvana:Leaf =
  \(dt_a1nt : Text) (dt_a1nu : Text) (dt_a1nv : Text) (dt_a1nw : Int64).
    Silvana:Leaf
      {key = dt_a1nt;
       value = dt_a1nu;
       nextKey = dt_a1nv;
       index = dt_a1nw}
def $WInsertWitness : Text -> Text -> Text -> Text -> Int64 -> Int64 -> Silvana:Leaf -> Silvana:MerkleProof -> Silvana:Leaf -> Silvana:Leaf -> Silvana:MerkleProof -> Silvana:InsertWitness =
  \(dt_a1pa : Text) (dt_a1pb : Text) (dt_a1pc : Text) (dt_a1pd : Text) (dt_a1pe : Int64) (dt_a1pf : Int64) (dt_a1pg : Silvana:Leaf) (dt_a1ph : Silvana:MerkleProof) (dt_a1pi : Silvana:Leaf) (dt_a1pj : Silvana:Leaf) (dt_a1pk : Silvana:MerkleProof).
    Silvana:InsertWitness
      {oldRoot = dt_a1pa;
       newRoot = dt_a1pb;
       key = dt_a1pc;
       value = dt_a1pd;
       newLeafIndex = dt_a1pe;
       treeLength = dt_a1pf;
       lowLeaf = dt_a1pg;
       lowLeafProof = dt_a1ph;
       updatedLowLeaf = dt_a1pi;
       newLeaf = dt_a1pj;
       newLeafProofAfter = dt_a1pk}
def $WIndexedMerkleMapView : Party -> Party -> Text -> Text -> Optional Timestamp -> Silvana:IndexedMerkleMapView =
  \(dt_a1uL : Party) (dt_a1uM : Party) (dt_a1uN : Text) (dt_a1uO : Text) (dt_a1uP : Optional Timestamp).
    Silvana:IndexedMerkleMapView
      {owner = dt_a1uL;
       provider = dt_a1uM;
       id = dt_a1uN;
       root = dt_a1uO;
       rootTime = dt_a1uP}
def $WAddMapElement : Silvana:InsertWitness -> Silvana:AddMapElement =
  \(dt_a1Ah : Silvana:InsertWitness).
    Silvana:AddMapElement {witness = dt_a1Ah}
def $$imports : <_1 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Exception : Unit>>>;
                 _2 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
                 _3 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Interface : Unit>;
                       _4 : <AnyView : Unit>>>;
                 _4 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
                 _5 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Template : Unit>;
                       _4 : <Functions : Unit>>>> =
  ERROR
    @<_1 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Exception : Unit>>>;
      _2 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
      _3 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Interface : Unit>;
            _4 : <AnyView : Unit>>>;
      _4 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
      _5 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Template : Unit>;
            _4 : <Functions : Unit>>>>
    "undefined"
def $$explicitExports : Unit = ERROR @Unit "undefined"
def $$explicitExport9 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <InsertWitness : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <InsertWitness : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <key : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:key:InsertWitness : Unit>>>>;
                               _2 :
                                 <_1 : <lowLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:lowLeaf:InsertWitness : Unit>>>>;
                               _3 :
                                 <_1 : <lowLeafProof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:lowLeafProof:InsertWitness : Unit>>>>;
                               _4 :
                                 <_1 : <newLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newLeaf:InsertWitness : Unit>>>>;
                               _5 :
                                 <_1 : <newLeafIndex : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newLeafIndex:InsertWitness : Unit>>>>;
                               _6 :
                                 <_1 : <newLeafProofAfter : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newLeafProofAfter:InsertWitness : Unit>>>>;
                               _7 :
                                 <_1 : <newRoot : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newRoot:InsertWitness : Unit>>>>;
                               _8 :
                                 <_1 : <oldRoot : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:oldRoot:InsertWitness : Unit>>>>;
                               _9 :
                                 <_1 : <treeLength : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:treeLength:InsertWitness : Unit>>>>;
                               _10 :
                                 <_1 : <updatedLowLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:updatedLowLeaf:InsertWitness : Unit>>>>;
                               _11 :
                                 <_1 : <value : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:value:InsertWitness : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <InsertWitness : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <InsertWitness : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <key : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:key:InsertWitness : Unit>>>>;
            _2 :
              <_1 : <lowLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:lowLeaf:InsertWitness : Unit>>>>;
            _3 :
              <_1 : <lowLeafProof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:lowLeafProof:InsertWitness : Unit>>>>;
            _4 :
              <_1 : <newLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newLeaf:InsertWitness : Unit>>>>;
            _5 :
              <_1 : <newLeafIndex : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newLeafIndex:InsertWitness : Unit>>>>;
            _6 :
              <_1 : <newLeafProofAfter : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newLeafProofAfter:InsertWitness : Unit>>>>;
            _7 :
              <_1 : <newRoot : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newRoot:InsertWitness : Unit>>>>;
            _8 :
              <_1 : <oldRoot : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:oldRoot:InsertWitness : Unit>>>>;
            _9 :
              <_1 : <treeLength : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:treeLength:InsertWitness : Unit>>>>;
            _10 :
              <_1 : <updatedLowLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:updatedLowLeaf:InsertWitness : Unit>>>>;
            _11 :
              <_1 : <value : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:value:InsertWitness : Unit>>>>>>>
    "undefined"
def $$explicitExport8 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <UpdateWitness : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <UpdateWitness : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <key : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:key:UpdateWitness : Unit>>>>;
                               _2 :
                                 <_1 : <newRoot : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newRoot:UpdateWitness : Unit>>>>;
                               _3 :
                                 <_1 : <newValue : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:newValue:UpdateWitness : Unit>>>>;
                               _4 :
                                 <_1 : <oldLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:oldLeaf:UpdateWitness : Unit>>>>;
                               _5 :
                                 <_1 : <oldLeafProof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:oldLeafProof:UpdateWitness : Unit>>>>;
                               _6 :
                                 <_1 : <oldRoot : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:oldRoot:UpdateWitness : Unit>>>>;
                               _7 :
                                 <_1 : <oldValue : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:oldValue:UpdateWitness : Unit>>>>;
                               _8 :
                                 <_1 : <treeLength : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:treeLength:UpdateWitness : Unit>>>>;
                               _9 :
                                 <_1 : <updatedLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:updatedLeaf:UpdateWitness : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <UpdateWitness : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <UpdateWitness : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <key : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:key:UpdateWitness : Unit>>>>;
            _2 :
              <_1 : <newRoot : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newRoot:UpdateWitness : Unit>>>>;
            _3 :
              <_1 : <newValue : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:newValue:UpdateWitness : Unit>>>>;
            _4 :
              <_1 : <oldLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:oldLeaf:UpdateWitness : Unit>>>>;
            _5 :
              <_1 : <oldLeafProof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:oldLeafProof:UpdateWitness : Unit>>>>;
            _6 :
              <_1 : <oldRoot : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:oldRoot:UpdateWitness : Unit>>>>;
            _7 :
              <_1 : <oldValue : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:oldValue:UpdateWitness : Unit>>>>;
            _8 :
              <_1 : <treeLength : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:treeLength:UpdateWitness : Unit>>>>;
            _9 :
              <_1 : <updatedLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:updatedLeaf:UpdateWitness : Unit>>>>>>>
    "undefined"
def $$explicitExport7 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <MembershipProof : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <MembershipProof : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <key : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:key:MembershipProof : Unit>>>>;
                               _2 :
                                 <_1 : <leaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:leaf:MembershipProof : Unit>>>>;
                               _3 :
                                 <_1 : <leafProof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:leafProof:MembershipProof : Unit>>>>;
                               _4 :
                                 <_1 : <root : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:root:MembershipProof : Unit>>>>;
                               _5 :
                                 <_1 : <treeLength : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:treeLength:MembershipProof : Unit>>>>;
                               _6 :
                                 <_1 : <value : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:value:MembershipProof : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <MembershipProof : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <MembershipProof : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <key : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:key:MembershipProof : Unit>>>>;
            _2 :
              <_1 : <leaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:leaf:MembershipProof : Unit>>>>;
            _3 :
              <_1 : <leafProof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:leafProof:MembershipProof : Unit>>>>;
            _4 :
              <_1 : <root : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:root:MembershipProof : Unit>>>>;
            _5 :
              <_1 : <treeLength : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:treeLength:MembershipProof : Unit>>>>;
            _6 :
              <_1 : <value : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:value:MembershipProof : Unit>>>>>>>
    "undefined"
def $$explicitExport6 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <NonMembershipProof : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <NonMembershipProof : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <key : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:key:NonMembershipProof : Unit>>>>;
                               _2 :
                                 <_1 : <lowLeaf : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:lowLeaf:NonMembershipProof : Unit>>>>;
                               _3 :
                                 <_1 : <lowLeafProof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:lowLeafProof:NonMembershipProof : Unit>>>>;
                               _4 :
                                 <_1 : <root : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:root:NonMembershipProof : Unit>>>>;
                               _5 :
                                 <_1 : <treeLength : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:treeLength:NonMembershipProof : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <NonMembershipProof : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <NonMembershipProof : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <key : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:key:NonMembershipProof : Unit>>>>;
            _2 :
              <_1 : <lowLeaf : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:lowLeaf:NonMembershipProof : Unit>>>>;
            _3 :
              <_1 : <lowLeafProof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:lowLeafProof:NonMembershipProof : Unit>>>>;
            _4 :
              <_1 : <root : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:root:NonMembershipProof : Unit>>>>;
            _5 :
              <_1 : <treeLength : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:treeLength:NonMembershipProof : Unit>>>>>>>
    "undefined"
def $$explicitExport5 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 :
                                 <_1 : <TcClsName : Unit>; _2 : <IndexedMerkleMapView : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 :
                                    <_1 : <DataName : Unit>; _2 : <IndexedMerkleMapView : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <id : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:id:IndexedMerkleMapView : Unit>>>>;
                               _2 :
                                 <_1 : <owner : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:owner:IndexedMerkleMapView : Unit>>>>;
                               _3 :
                                 <_1 : <provider : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:provider:IndexedMerkleMapView : Unit>>>>;
                               _4 :
                                 <_1 : <root : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:root:IndexedMerkleMapView : Unit>>>>;
                               _5 :
                                 <_1 : <rootTime : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:rootTime:IndexedMerkleMapView : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 :
              <_1 : <TcClsName : Unit>; _2 : <IndexedMerkleMapView : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 :
                 <_1 : <DataName : Unit>; _2 : <IndexedMerkleMapView : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <id : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:id:IndexedMerkleMapView : Unit>>>>;
            _2 :
              <_1 : <owner : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:owner:IndexedMerkleMapView : Unit>>>>;
            _3 :
              <_1 : <provider : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:provider:IndexedMerkleMapView : Unit>>>>;
            _4 :
              <_1 : <root : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:root:IndexedMerkleMapView : Unit>>>>;
            _5 :
              <_1 : <rootTime : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:rootTime:IndexedMerkleMapView : Unit>>>>>>>
    "undefined"
def $$explicitExport4 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <IndexedMerkleMap : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <IndexedMerkleMap : Unit>>>>;
                            _3 : Unit>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <IndexedMerkleMap : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <IndexedMerkleMap : Unit>>>>;
         _3 : Unit>>
    "undefined"
def $$explicitExport39 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <verifyExclusionImpl : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <verifyExclusionImpl : Unit>>>>>
    "undefined"
def $$explicitExport38 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <verifyInclusionImpl : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <verifyInclusionImpl : Unit>>>>>
    "undefined"
def $$explicitExport37 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <updateMapElementImpl : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <updateMapElementImpl : Unit>>>>>
    "undefined"
def $$explicitExport36 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <addMapElementImpl : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <addMapElementImpl : Unit>>>>>
    "undefined"
def $$explicitExport35 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <getRootTime : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <getRootTime : Unit>>>>>
    "undefined"
def $$explicitExport34 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <getRoot : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <getRoot : Unit>>>>>
    "undefined"
def $$explicitExport33 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <getOwner : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <getOwner : Unit>>>>>
    "undefined"
def $$explicitExport32 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>;
                                   _2 : <verifyNonMembershipProof : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 :
              <_1 : <VarName : Unit>; _2 : <verifyNonMembershipProof : Unit>>>>>
    "undefined"
def $$explicitExport31 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <verifyMembershipProof : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 :
              <_1 : <VarName : Unit>; _2 : <verifyMembershipProof : Unit>>>>>
    "undefined"
def $$explicitExport30 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <verifyUpdateWitness : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <verifyUpdateWitness : Unit>>>>>
    "undefined"
def $$explicitExport3 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <AddMapElement : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <AddMapElement : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <witness : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:witness:AddMapElement : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <AddMapElement : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <AddMapElement : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <witness : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:witness:AddMapElement : Unit>>>>>>>
    "undefined"
def $$explicitExport29 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <verifyInsertWitness : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <verifyInsertWitness : Unit>>>>>
    "undefined"
def $$explicitExport28 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <hashUpToLevel : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <hashUpToLevel : Unit>>>>>
    "undefined"
def $$explicitExport27 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <hashUpToLevelRec : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <hashUpToLevelRec : Unit>>>>>
    "undefined"
def $$explicitExport26 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <getNth : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <getNth : Unit>>>>>
    "undefined"
def $$explicitExport25 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <findLCALevel : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <findLCALevel : Unit>>>>>
    "undefined"
def $$explicitExport24 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <findLCALevelRec : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <findLCALevelRec : Unit>>>>>
    "undefined"
def $$explicitExport23 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <isValidHex32 : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <isValidHex32 : Unit>>>>>
    "undefined"
def $$explicitExport22 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <checkAllHexChars : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <checkAllHexChars : Unit>>>>>
    "undefined"
def $$explicitExport21 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <isZeroField : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <isZeroField : Unit>>>>>
    "undefined"
def $$explicitExport20 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <compareFields : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <compareFields : Unit>>>>>
    "undefined"
def $$explicitExport2 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <UpdateMapElement : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <UpdateMapElement : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <witness : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:witness:UpdateMapElement : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <UpdateMapElement : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <UpdateMapElement : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <witness : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:witness:UpdateMapElement : Unit>>>>>>>
    "undefined"
def $$explicitExport19 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <pathIndicesToIndex : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <pathIndicesToIndex : Unit>>>>>
    "undefined"
def $$explicitExport18 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 :
                                  <_1 : <VarName : Unit>; _2 : <combineRootWithLength : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 :
              <_1 : <VarName : Unit>; _2 : <combineRootWithLength : Unit>>>>>
    "undefined"
def $$explicitExport17 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <computeRoot : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <computeRoot : Unit>>>>>
    "undefined"
def $$explicitExport16 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <hashPair : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <hashPair : Unit>>>>>
    "undefined"
def $$explicitExport15 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <hashLeaf : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <hashLeaf : Unit>>>>>
    "undefined"
def $$explicitExport14 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <intToHex8Bytes : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <intToHex8Bytes : Unit>>>>>
    "undefined"
def $$explicitExport13 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <toHexRec : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <toHexRec : Unit>>>>>
    "undefined"
def $$explicitExport12 : <ExportInfoVal :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <VarName : Unit>; _2 : <toHexDigit : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <toHexDigit : Unit>>>>>
    "undefined"
def $$explicitExport11 : <ExportInfoTC :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <TcClsName : Unit>; _2 : <Leaf : Unit>>>;
                             _2 :
                               <_1 :
                                  <_1 : Unit;
                                   _2 : <_1 : <Silvana : Unit>>;
                                   _3 : <_1 : <DataName : Unit>; _2 : <Leaf : Unit>>>>;
                             _3 :
                               <_1 :
                                  <_1 : <index : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 : <_1 : <VarName : Unit>; _2 : <$sel:index:Leaf : Unit>>>>;
                                _2 :
                                  <_1 : <key : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 : <_1 : <VarName : Unit>; _2 : <$sel:key:Leaf : Unit>>>>;
                                _3 :
                                  <_1 : <nextKey : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 :
                                        <_1 : <VarName : Unit>; _2 : <$sel:nextKey:Leaf : Unit>>>>;
                                _4 :
                                  <_1 : <value : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 :
                                        <_1 : <VarName : Unit>;
                                         _2 : <$sel:value:Leaf : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Leaf : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Leaf : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <index : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:index:Leaf : Unit>>>>;
            _2 :
              <_1 : <key : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:key:Leaf : Unit>>>>;
            _3 :
              <_1 : <nextKey : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:nextKey:Leaf : Unit>>>>;
            _4 :
              <_1 : <value : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:value:Leaf : Unit>>>>>>>
    "undefined"
def $$explicitExport10 : <ExportInfoTC :
                            <_1 :
                               <_1 : Unit;
                                _2 : <_1 : <Silvana : Unit>>;
                                _3 : <_1 : <TcClsName : Unit>; _2 : <MerkleProof : Unit>>>;
                             _2 :
                               <_1 :
                                  <_1 : Unit;
                                   _2 : <_1 : <Silvana : Unit>>;
                                   _3 : <_1 : <DataName : Unit>; _2 : <MerkleProof : Unit>>>>;
                             _3 :
                               <_1 :
                                  <_1 : <pathIndices : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 :
                                        <_1 : <VarName : Unit>;
                                         _2 : <$sel:pathIndices:MerkleProof : Unit>>>>;
                                _2 :
                                  <_1 : <siblings : Unit>;
                                   _2 : <True : Unit>;
                                   _3 :
                                     <_1 : Unit;
                                      _2 : <_1 : <Silvana : Unit>>;
                                      _3 :
                                        <_1 : <VarName : Unit>;
                                         _2 : <$sel:siblings:MerkleProof : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <MerkleProof : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <MerkleProof : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <pathIndices : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:pathIndices:MerkleProof : Unit>>>>;
            _2 :
              <_1 : <siblings : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:siblings:MerkleProof : Unit>>>>>>>
    "undefined"
def $$explicitExport1 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <VerifyInclusion : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <VerifyInclusion : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <proof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:proof:VerifyInclusion : Unit>>>>;
                               _2 :
                                 <_1 : <requester : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:requester:VerifyInclusion : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <VerifyInclusion : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <VerifyInclusion : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <proof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:proof:VerifyInclusion : Unit>>>>;
            _2 :
              <_1 : <requester : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:requester:VerifyInclusion : Unit>>>>>>>
    "undefined"
def $$explicitExport0 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Silvana : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <VerifyExclusion : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Silvana : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <VerifyExclusion : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <proof : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:proof:VerifyExclusion : Unit>>>>;
                               _2 :
                                 <_1 : <requester : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Silvana : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:requester:VerifyExclusion : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Silvana : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <VerifyExclusion : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Silvana : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <VerifyExclusion : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <proof : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:proof:VerifyExclusion : Unit>>>>;
            _2 :
              <_1 : <requester : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Silvana : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>;
                     _2 : <$sel:requester:VerifyExclusion : Unit>>>>>>>
    "undefined"
interface IndexedMerkleMap this where
  viewtype Silvana:IndexedMerkleMapView
  method addMapElementImpl : Silvana:InsertWitness -> Update (ContractId Silvana:IndexedMerkleMap)
  method getOwner : Party
  method getRoot : Text
  method getRootTime : Optional Timestamp
  method updateMapElementImpl : Silvana:UpdateWitness -> Update (ContractId Silvana:IndexedMerkleMap)
  method verifyExclusionImpl : Silvana:NonMembershipProof -> Update Bool
  method verifyInclusionImpl : Silvana:MembershipProof -> Update Bool
  consuming choice Archive (self : ContractId Silvana:IndexedMerkleMap) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive) : Unit
    controller (\(this : Silvana:IndexedMerkleMap) (ds : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
                  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:signatory
                    @Silvana:IndexedMerkleMap
                    Silvana:$fHasSignatoryIndexedMerkleMap
                    this)
                 this
                 arg
    observer Just (nil @Party)
    authority Nothing
    do (\(ds : ContractId Silvana:IndexedMerkleMap) (ds1 : Silvana:IndexedMerkleMap) (ds2 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
          upure @Unit unit)
         self
         this
         arg
  consuming choice UpdateMapElement (self : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:UpdateMapElement) : ContractId Silvana:IndexedMerkleMap
    controller (\(this : Silvana:IndexedMerkleMap) (arg : Silvana:UpdateMapElement).
                  let ds1 : Unit = unit
                      ds2 : Unit = unit
                  in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:toParties
                       @Party
                       09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$fIsPartiesParty
                       (Silvana:getOwner this))
                 this
                 arg
    observer Just (nil @Party)
    authority Nothing
    do (\(self : ContractId Silvana:IndexedMerkleMap) (this : Silvana:IndexedMerkleMap) (arg : Silvana:UpdateMapElement).
          let ds : Silvana:UpdateWitness =
                Silvana:UpdateMapElement.witness arg
              ds1 : Unit = unit
              ds2 : Unit = unit
              ds3 : Unit = unit
          in Silvana:updateMapElementImpl this ds)
         self
         this
         arg
  consuming choice AddMapElement (self : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:AddMapElement) : ContractId Silvana:IndexedMerkleMap
    controller (\(this : Silvana:IndexedMerkleMap) (arg : Silvana:AddMapElement).
                  let ds1 : Unit = unit
                      ds2 : Unit = unit
                  in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:toParties
                       @Party
                       09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$fIsPartiesParty
                       (Silvana:getOwner this))
                 this
                 arg
    observer Just (nil @Party)
    authority Nothing
    do (\(self : ContractId Silvana:IndexedMerkleMap) (this : Silvana:IndexedMerkleMap) (arg : Silvana:AddMapElement).
          let ds : Silvana:InsertWitness = Silvana:AddMapElement.witness arg
              ds1 : Unit = unit
              ds2 : Unit = unit
              ds3 : Unit = unit
          in Silvana:addMapElementImpl this ds)
         self
         this
         arg
  non-consuming choice VerifyInclusion (self : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyInclusion) : Bool
    controller (\(this : Silvana:IndexedMerkleMap) (arg : Silvana:VerifyInclusion).
                  let ds1 : Party = Silvana:VerifyInclusion.requester arg
                      ds2 : Unit = unit
                      ds3 : Unit = unit
                  in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:toParties
                       @Party
                       09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$fIsPartiesParty
                       ds1)
                 this
                 arg
    observer Just (nil @Party)
    authority Nothing
    do (\(self : ContractId Silvana:IndexedMerkleMap) (this : Silvana:IndexedMerkleMap) (arg : Silvana:VerifyInclusion).
          let ds : Silvana:MembershipProof =
                Silvana:VerifyInclusion.proof arg
              ds2 : Unit = unit
              ds3 : Unit = unit
              ds4 : Unit = unit
          in Silvana:verifyInclusionImpl this ds)
         self
         this
         arg
  non-consuming choice VerifyExclusion (self : ContractId Silvana:IndexedMerkleMap) (arg : Silvana:VerifyExclusion) : Bool
    controller (\(this : Silvana:IndexedMerkleMap) (arg : Silvana:VerifyExclusion).
                  let ds1 : Party = Silvana:VerifyExclusion.requester arg
                      ds2 : Unit = unit
                      ds3 : Unit = unit
                  in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:toParties
                       @Party
                       09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$fIsPartiesParty
                       ds1)
                 this
                 arg
    observer Just (nil @Party)
    authority Nothing
    do (\(self : ContractId Silvana:IndexedMerkleMap) (this : Silvana:IndexedMerkleMap) (arg : Silvana:VerifyExclusion).
          let ds : Silvana:NonMembershipProof =
                Silvana:VerifyExclusion.proof arg
              ds2 : Unit = unit
              ds3 : Unit = unit
              ds4 : Unit = unit
          in Silvana:verifyExclusionImpl this ds)
         self
         this
         arg

module Hash where
record @serializable Sha256n =
  {hexStrings : List Text; count : Int64}
record @serializable Sha256 = {hexStrings : List Text}
record @serializable Keccak = {hexStrings : List Text}
record @serializable Add = {numbers : List Int64}
record @serializable Hash =
  {owner : Party;
   provider : Party;
   id : Text;
   add_result : Int64;
   keccak_result : Optional Text;
   sha256_result : Optional Text;
   root : Text;
   root_time : Optional Timestamp}
synonym HashId =
  ContractId Hash:Hash
def hashNTimes : Int64 -> Text -> Text -> Text =
  \(ds : Int64) (currentHash : Text) (ds1 : Text).
    case EQUAL @Int64 ds 0 of
      false ->
        let nextHash : Text =
              09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
                (APPEND_TEXT currentHash ds1)
        in Hash:hashNTimes (SUB_INT64 ds 1) nextHash ds1
      true -> currentHash
def $sel:sha256_result:Hash : Hash:Hash -> Optional Text =
  \(ds : Hash:Hash). Hash:Hash.sha256_result ds
def $sel:root_time:Hash : Hash:Hash -> Optional Timestamp =
  \(ds : Hash:Hash). Hash:Hash.root_time ds
def $sel:root:Hash : Hash:Hash -> Text =
  \(ds : Hash:Hash). Hash:Hash.root ds
def $sel:provider:Hash : Hash:Hash -> Party =
  \(ds : Hash:Hash). Hash:Hash.provider ds
def $sel:owner:Hash : Hash:Hash -> Party =
  \(ds : Hash:Hash). Hash:Hash.owner ds
def $sel:numbers:Add : Hash:Add -> List Int64 =
  \(ds : Hash:Add). Hash:Add.numbers ds
def $sel:keccak_result:Hash : Hash:Hash -> Optional Text =
  \(ds : Hash:Hash). Hash:Hash.keccak_result ds
def $sel:id:Hash : Hash:Hash -> Text =
  \(ds : Hash:Hash). Hash:Hash.id ds
def $sel:hexStrings:Sha256n : Hash:Sha256n -> List Text =
  \(ds : Hash:Sha256n). Hash:Sha256n.hexStrings ds
def $sel:hexStrings:Sha256 : Hash:Sha256 -> List Text =
  \(ds : Hash:Sha256). Hash:Sha256.hexStrings ds
def $sel:hexStrings:Keccak : Hash:Keccak -> List Text =
  \(ds : Hash:Keccak). Hash:Keccak.hexStrings ds
def $sel:count:Sha256n : Hash:Sha256n -> Int64 =
  \(ds : Hash:Sha256n). Hash:Sha256n.count ds
def $sel:add_result:Hash : Hash:Hash -> Int64 =
  \(ds : Hash:Hash). Hash:Hash.add_result ds
def $fSetField"sha256_result"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_sha256_result :
                                                                                                                                                                                                                                                    Unit>) Hash:Hash (Optional Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Text) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with sha256_result = $$v1}>
def $fSetField"root_time"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root_time :
                                                                                                                                                                                                                                                Unit>) Hash:Hash (Optional Timestamp) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Timestamp) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with root_time = $$v1}>
def $fSetField"root"HashText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                       Unit>) Hash:Hash Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with root = $$v1}>
def $fSetField"provider"HashParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                            Unit>) Hash:Hash Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with provider = $$v1}>
def $fSetField"owner"HashParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                         Unit>) Hash:Hash Party =
  <m_setField =
     \(_ : Unit) ($$v1 : Party) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with owner = $$v1}>
def $fSetField"numbers"Add[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_numbers :
                                                                                                                                                                                                                                       Unit>) Hash:Add (List Int64) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Int64) ($$v2 : Hash:Add).
       Hash:Add {$$v2 with numbers = $$v1}>
def $fSetField"keccak_result"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_keccak_result :
                                                                                                                                                                                                                                                    Unit>) Hash:Hash (Optional Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : Optional Text) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with keccak_result = $$v1}>
def $fSetField"id"HashText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                     Unit>) Hash:Hash Text =
  <m_setField =
     \(_ : Unit) ($$v1 : Text) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with id = $$v1}>
def $fSetField"hexStrings"Sha256n[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                              Unit>) Hash:Sha256n (List Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Text) ($$v2 : Hash:Sha256n).
       Hash:Sha256n {$$v2 with hexStrings = $$v1}>
def $fSetField"hexStrings"Sha256[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                             Unit>) Hash:Sha256 (List Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Text) ($$v2 : Hash:Sha256).
       Hash:Sha256 {$$v2 with hexStrings = $$v1}>
def $fSetField"hexStrings"Keccak[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                             Unit>) Hash:Keccak (List Text) =
  <m_setField =
     \(_ : Unit) ($$v1 : List Text) ($$v2 : Hash:Keccak).
       Hash:Keccak {$$v2 with hexStrings = $$v1}>
def $fSetField"count"Sha256nInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_count :
                                                                                                                                                                                                                                          Unit>) Hash:Sha256n Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Hash:Sha256n).
       Hash:Sha256n {$$v2 with count = $$v1}>
def $fSetField"add_result"HashInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:SetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_add_result :
                                                                                                                                                                                                                                            Unit>) Hash:Hash Int64 =
  <m_setField =
     \(_ : Unit) ($$v1 : Int64) ($$v2 : Hash:Hash).
       Hash:Hash {$$v2 with add_result = $$v1}>
def $fHasToInterfaceHashIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasToInterface Hash:Hash Silvana:IndexedMerkleMap =
  <m__toInterface =
     \(_ : Unit) (t : Hash:Hash).
       to_interface @Silvana:IndexedMerkleMap @Hash:Hash t>
def $fHasToAnyTemplateHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyTemplate Hash:Hash =
  <m__toAnyTemplate =
     \(_ : Unit) (template : Hash:Hash). to_any @Hash:Hash template>
def $$sc_$fHasToAnyChoiceHashSha256nContractId_1 : Hash:Sha256n -> Any =
  \(choice : Hash:Sha256n). to_any @Hash:Sha256n choice
def $$sc_$fHasToAnyChoiceHashSha256nContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Hash:Sha256n -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasToAnyChoiceHashSha256nContractId_1
def $fHasToAnyChoiceHashSha256nContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Hash:Hash Hash:Sha256n (ContractId Hash:Hash) =
  <m__toAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasToAnyChoiceHashSha256nContractId_2>
def $$sc_$fHasToAnyChoiceHashSha256ContractId_1 : Hash:Sha256 -> Any =
  \(choice : Hash:Sha256). to_any @Hash:Sha256 choice
def $$sc_$fHasToAnyChoiceHashSha256ContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Hash:Sha256 -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasToAnyChoiceHashSha256ContractId_1
def $fHasToAnyChoiceHashSha256ContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Hash:Hash Hash:Sha256 (ContractId Hash:Hash) =
  <m__toAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasToAnyChoiceHashSha256ContractId_2>
def $$sc_$fHasToAnyChoiceHashKeccakContractId_1 : Hash:Keccak -> Any =
  \(choice : Hash:Keccak). to_any @Hash:Keccak choice
def $$sc_$fHasToAnyChoiceHashKeccakContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Hash:Keccak -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasToAnyChoiceHashKeccakContractId_1
def $fHasToAnyChoiceHashKeccakContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Hash:Hash Hash:Keccak (ContractId Hash:Hash) =
  <m__toAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasToAnyChoiceHashKeccakContractId_2>
def $$sc_$fHasToAnyChoiceHashArchive()_1 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  \(choice : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    to_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      choice
def $$sc_$fHasToAnyChoiceHashArchive()_2 : forall (proxy : * -> *). proxy Hash:Hash -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash). Hash:$$sc_$fHasToAnyChoiceHashArchive()_1
def $fHasToAnyChoiceHashArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Hash:Hash 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__toAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasToAnyChoiceHashArchive()_2>
def $$sc_$fHasToAnyChoiceHashAddContractId_1 : Hash:Add -> Any =
  \(choice : Hash:Add). to_any @Hash:Add choice
def $$sc_$fHasToAnyChoiceHashAddContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Hash:Add -> Any =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasToAnyChoiceHashAddContractId_1
def $fHasToAnyChoiceHashAddContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasToAnyChoice Hash:Hash Hash:Add (ContractId Hash:Hash) =
  <m__toAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasToAnyChoiceHashAddContractId_2>
def $$sc_$fHasTemplateTypeRepHash_1 : forall (proxy : * -> *). proxy Hash:Hash -> TypeRep =
  /\(proxy : * -> *). \(_ : proxy Hash:Hash). type_rep @Hash:Hash
def $fHasTemplateTypeRepHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasTemplateTypeRep Hash:Hash =
  <m__templateTypeRep =
     \(_ : Unit). Hash:$$sc_$fHasTemplateTypeRepHash_1>
def $fHasFromInterfaceHashIndexedMerkleMap : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasFromInterface Hash:Hash Silvana:IndexedMerkleMap =
  <m_fromInterface =
     \(_ : Unit) (i : Silvana:IndexedMerkleMap).
       from_interface @Silvana:IndexedMerkleMap @Hash:Hash i;
   m_unsafeFromInterface =
     \(_ : Unit) (cid : ContractId Silvana:IndexedMerkleMap) (i : Silvana:IndexedMerkleMap).
       unsafe_from_interface @Silvana:IndexedMerkleMap @Hash:Hash cid i>
def $fHasFromAnyTemplateHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyTemplate Hash:Hash =
  <m__fromAnyTemplate =
     \(_ : Unit) (any : Any). from_any @Hash:Hash any>
def $$sc_$fHasFromAnyChoiceHashSha256nContractId_1 : Any -> Optional Hash:Sha256n =
  \(any : Any). from_any @Hash:Sha256n any
def $$sc_$fHasFromAnyChoiceHashSha256nContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Any -> Optional Hash:Sha256n =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasFromAnyChoiceHashSha256nContractId_1
def $fHasFromAnyChoiceHashSha256nContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Hash:Hash Hash:Sha256n (ContractId Hash:Hash) =
  <m__fromAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasFromAnyChoiceHashSha256nContractId_2>
def $$sc_$fHasFromAnyChoiceHashSha256ContractId_1 : Any -> Optional Hash:Sha256 =
  \(any : Any). from_any @Hash:Sha256 any
def $$sc_$fHasFromAnyChoiceHashSha256ContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Any -> Optional Hash:Sha256 =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasFromAnyChoiceHashSha256ContractId_1
def $fHasFromAnyChoiceHashSha256ContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Hash:Hash Hash:Sha256 (ContractId Hash:Hash) =
  <m__fromAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasFromAnyChoiceHashSha256ContractId_2>
def $$sc_$fHasFromAnyChoiceHashKeccakContractId_1 : Any -> Optional Hash:Keccak =
  \(any : Any). from_any @Hash:Keccak any
def $$sc_$fHasFromAnyChoiceHashKeccakContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Any -> Optional Hash:Keccak =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasFromAnyChoiceHashKeccakContractId_1
def $fHasFromAnyChoiceHashKeccakContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Hash:Hash Hash:Keccak (ContractId Hash:Hash) =
  <m__fromAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasFromAnyChoiceHashKeccakContractId_2>
def $$sc_$fHasFromAnyChoiceHashArchive()_1 : Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  \(any : Any).
    from_any
      @9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
      any
def $$sc_$fHasFromAnyChoiceHashArchive()_2 : forall (proxy : * -> *). proxy Hash:Hash -> Any -> Optional 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash). Hash:$$sc_$fHasFromAnyChoiceHashArchive()_1
def $fHasFromAnyChoiceHashArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Hash:Hash 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m__fromAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasFromAnyChoiceHashArchive()_2>
def $$sc_$fHasFromAnyChoiceHashAddContractId_1 : Any -> Optional Hash:Add =
  \(any : Any). from_any @Hash:Add any
def $$sc_$fHasFromAnyChoiceHashAddContractId_2 : forall (proxy : * -> *). proxy Hash:Hash -> Any -> Optional Hash:Add =
  /\(proxy : * -> *).
    \(_ : proxy Hash:Hash).
      Hash:$$sc_$fHasFromAnyChoiceHashAddContractId_1
def $fHasFromAnyChoiceHashAddContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFromAnyChoice Hash:Hash Hash:Add (ContractId Hash:Hash) =
  <m__fromAnyChoice =
     \(_ : Unit). Hash:$$sc_$fHasFromAnyChoiceHashAddContractId_2>
def $fHasFetchHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasFetch Hash:Hash =
  <m_fetch =
     \(_ : Unit) (this : ContractId Hash:Hash). fetch @Hash:Hash this>
def $fHasExerciseHashSha256nContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Hash:Hash Hash:Sha256n (ContractId Hash:Hash) =
  <m_exercise =
     \(_ : Unit) (this : ContractId Hash:Hash) (arg : Hash:Sha256n).
       exercise @Hash:Hash Sha256n this arg>
def $fHasExerciseHashSha256ContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Hash:Hash Hash:Sha256 (ContractId Hash:Hash) =
  <m_exercise =
     \(_ : Unit) (this : ContractId Hash:Hash) (arg : Hash:Sha256).
       exercise @Hash:Hash Sha256 this arg>
def $fHasExerciseHashKeccakContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Hash:Hash Hash:Keccak (ContractId Hash:Hash) =
  <m_exercise =
     \(_ : Unit) (this : ContractId Hash:Hash) (arg : Hash:Keccak).
       exercise @Hash:Hash Keccak this arg>
def $fHasExerciseHashArchive() : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Hash:Hash 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive Unit =
  <m_exercise =
     \(_ : Unit) (this : ContractId Hash:Hash) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
       exercise @Hash:Hash Archive this arg>
def $fHasExerciseHashAddContractId : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasExercise Hash:Hash Hash:Add (ContractId Hash:Hash) =
  <m_exercise =
     \(_ : Unit) (this : ContractId Hash:Hash) (arg : Hash:Add).
       exercise @Hash:Hash Add this arg>
def $fHasCreateHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasCreate Hash:Hash =
  <m_create = \(_ : Unit) (this : Hash:Hash). create @Hash:Hash this>
def $fGetField"sha256_result"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_sha256_result :
                                                                                                                                                                                                                                                    Unit>) Hash:Hash (Optional Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.sha256_result $$v1>
def $fGetField"root_time"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root_time :
                                                                                                                                                                                                                                                Unit>) Hash:Hash (Optional Timestamp) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.root_time $$v1>
def $fGetField"root"HashText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_root :
                                                                                                                                                                                                                                       Unit>) Hash:Hash Text =
  <m_getField = \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.root $$v1>
def $fGetField"provider"HashParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_provider :
                                                                                                                                                                                                                                            Unit>) Hash:Hash Party =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.provider $$v1>
def $fGetField"owner"HashParty : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_owner :
                                                                                                                                                                                                                                         Unit>) Hash:Hash Party =
  <m_getField = \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.owner $$v1>
def $fGetField"numbers"Add[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_numbers :
                                                                                                                                                                                                                                       Unit>) Hash:Add (List Int64) =
  <m_getField = \(_ : Unit) ($$v1 : Hash:Add). Hash:Add.numbers $$v1>
def $fGetField"keccak_result"HashOptional : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_keccak_result :
                                                                                                                                                                                                                                                    Unit>) Hash:Hash (Optional Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.keccak_result $$v1>
def $fGetField"id"HashText : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_id :
                                                                                                                                                                                                                                     Unit>) Hash:Hash Text =
  <m_getField = \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.id $$v1>
def $fGetField"hexStrings"Sha256n[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                              Unit>) Hash:Sha256n (List Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Sha256n). Hash:Sha256n.hexStrings $$v1>
def $fGetField"hexStrings"Sha256[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                             Unit>) Hash:Sha256 (List Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Sha256). Hash:Sha256.hexStrings $$v1>
def $fGetField"hexStrings"Keccak[] : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_hexStrings :
                                                                                                                                                                                                                                             Unit>) Hash:Keccak (List Text) =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Keccak). Hash:Keccak.hexStrings $$v1>
def $fGetField"count"Sha256nInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_count :
                                                                                                                                                                                                                                          Unit>) Hash:Sha256n Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Sha256n). Hash:Sha256n.count $$v1>
def $fGetField"add_result"HashInt : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Record:GetField (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_add_result :
                                                                                                                                                                                                                                            Unit>) Hash:Hash Int64 =
  <m_getField =
     \(_ : Unit) ($$v1 : Hash:Hash). Hash:Hash.add_result $$v1>
def $$sc_$dIP1_1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:CallStack =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:pushCallStack
    (5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2
       @Text
       @54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:SrcLoc
       {_1 = "getTime";
        _2 =
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:SrcLoc
            {srcLocPackage = "hash-v9-0.0.1";
             srcLocModule = "Hash";
             srcLocFile = "daml/Hash.daml";
             srcLocStartLine = 99;
             srcLocStartCol = 24;
             srcLocEndLine = 99;
             srcLocEndCol = 31}})
    (let _ : Unit = unit
     in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:emptyCallStack)
def $dIP1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:IP (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_callStack :
                                                                                                                                                                                                       Unit>) 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:CallStack =
  <m_ip = \(_ : Unit). Hash:$$sc_$dIP1_1>
def $$sc_$dIP_1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:CallStack =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:pushCallStack
    (5aee9b21b8e9a4c4975b5f4c4198e6e6e8469df49e2010820e792f393db870f4:DA.Types:Tuple2
       @Text
       @54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:SrcLoc
       {_1 = "getTime";
        _2 =
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:SrcLoc
            {srcLocPackage = "hash-v9-0.0.1";
             srcLocModule = "Hash";
             srcLocFile = "daml/Hash.daml";
             srcLocStartLine = 90;
             srcLocStartCol = 24;
             srcLocEndLine = 90;
             srcLocEndCol = 31}})
    (let _ : Unit = unit
     in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:emptyCallStack)
def $dIP : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:IP (ab068e2f920d0e06347975c2a342b71f8b8e3b4be0f02ead9442caac51aa8877:DA.Internal.PromotedText:PromotedText <_callStack :
                                                                                                                                                                                                      Unit>) 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Stack.Types:CallStack =
  <m_ip = \(_ : Unit). Hash:$$sc_$dIP_1>
def $d(%,,%) : <s_1 :
                  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasInterfaceTypeRep Silvana:IndexedMerkleMap;
                s_2 :
                  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasToInterface Hash:Hash Silvana:IndexedMerkleMap;
                s_3 :
                  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:HasFromInterface Hash:Hash Silvana:IndexedMerkleMap> =
  <s_1 = Silvana:$fHasInterfaceTypeRepIndexedMerkleMap;
   s_2 = Hash:$fHasToInterfaceHashIndexedMerkleMap;
   s_3 = Hash:$fHasFromInterfaceHashIndexedMerkleMap>
def $csignatory : Hash:Hash -> List Party =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
        ds1 : Party = Hash:Hash.provider this
    in 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:concat
         @Party
         (cons
            @(List Party)
            (09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
               ds1)
            (cons
               @(List Party)
               (09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
                  ds)
               (nil @(List Party))))
def $fHasSignatoryHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasSignatory Hash:Hash =
  <m_signatory = \(_ : Unit). Hash:$csignatory>
def $$sc_$cshowsPrec4_1 : Int64 -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$cshowsPrec2
    0
def $$sc_$cshowsPrec4_2 : Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
    "}"
def $$sc_$cshowsPrec4_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "count = ")
def $$sc_$cshowsPrec4_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showCommaSpace
def $$sc_$cshowsPrec4_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "hexStrings = ")
def $$sc_$cshowsPrec4_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Sha256n {")
def $cshowsPrec4 : Int64 -> Hash:Sha256n -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
  in \(a : Int64) (ds : Hash:Sha256n).
       let b1 : List Text = Hash:Sha256n.hexStrings ds
           b2 : Int64 = Hash:Sha256n.count ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Hash:$$sc_$cshowsPrec4_6
               (Hash:$$sc_$cshowsPrec4_5
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow.m_showsPrec unit 0 b1)
                     (Hash:$$sc_$cshowsPrec4_4
                        (Hash:$$sc_$cshowsPrec4_3
                           (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                              @Text
                              @Text
                              @Text
                              (Hash:$$sc_$cshowsPrec4_1 b2)
                              Hash:$$sc_$cshowsPrec4_2))))))
def $$sc_$cshowsPrec3_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Sha256 {")
def $cshowsPrec3 : Int64 -> Hash:Sha256 -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
  in \(a : Int64) (ds : Hash:Sha256).
       let b1 : List Text = Hash:Sha256.hexStrings ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Hash:$$sc_$cshowsPrec3_1
               (Hash:$$sc_$cshowsPrec4_5
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow.m_showsPrec unit 0 b1)
                     Hash:$$sc_$cshowsPrec4_2)))
def $$sc_$cshowsPrec2_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Keccak {")
def $cshowsPrec2 : Int64 -> Hash:Keccak -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
  in \(a : Int64) (ds : Hash:Keccak).
       let b1 : List Text = Hash:Keccak.hexStrings ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Hash:$$sc_$cshowsPrec2_1
               (Hash:$$sc_$cshowsPrec4_5
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow.m_showsPrec unit 0 b1)
                     Hash:$$sc_$cshowsPrec4_2)))
def $$sc_$cshowsPrec1_1 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "numbers = ")
def $$sc_$cshowsPrec1_2 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Add {")
def $cshowsPrec1 : Int64 -> Hash:Add -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (List Int64) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShow[]
          @Int64
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowInt
  in \(a : Int64) (ds : Hash:Add).
       let b1 : List Int64 = Hash:Add.numbers ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Hash:$$sc_$cshowsPrec1_2
               (Hash:$$sc_$cshowsPrec1_1
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     ($dShow.m_showsPrec unit 0 b1)
                     Hash:$$sc_$cshowsPrec4_2)))
def $$sc_$cshowsPrec_1 : Party -> Text -> Text =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$cshowsPrec3
    0
def $$sc_$cshowsPrec_2 : Text -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show.Text:showsPrecText
    0
def $$sc_$cshowsPrec_3 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "root_time = ")
def $$sc_$cshowsPrec_4 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "root = ")
def $$sc_$cshowsPrec_5 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "sha256_result = ")
def $$sc_$cshowsPrec_6 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "keccak_result = ")
def $$sc_$cshowsPrec_7 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "add_result = ")
def $$sc_$cshowsPrec_8 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "id = ")
def $$sc_$cshowsPrec_9 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "provider = ")
def $$sc_$cshowsPrec_10 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "owner = ")
def $$sc_$cshowsPrec_11 : (Text -> Text) -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
    @Text
    @Text
    @Text
    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showString
       "Hash {")
def $$sc_$cshowsPrec_12 : <m_showsPrec :
                             Unit -> Int64 -> Optional Text -> Text -> Text;
                           m_show : Unit -> Optional Text -> Text;
                           m_showList : Unit -> List (Optional Text) -> Text -> Text> =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fShowOptional
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$fShowText
def $cshowsPrec : Int64 -> Hash:Hash -> Text -> Text =
  let $dShow : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fShowOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fShowTime
      $dShow1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show (Optional Text) =
        Hash:$$sc_$cshowsPrec_12
  in \(a : Int64) (ds : Hash:Hash).
       let b1 : Party = Hash:Hash.owner ds
           b2 : Party = Hash:Hash.provider ds
           b3 : Text = Hash:Hash.id ds
           b4 : Int64 = Hash:Hash.add_result ds
           b5 : Optional Text = Hash:Hash.keccak_result ds
           b6 : Optional Text = Hash:Hash.sha256_result ds
           b7 : Text = Hash:Hash.root ds
           b8 : Optional Timestamp = Hash:Hash.root_time ds
       in 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:showParen
            (GREATER_EQ @Int64 a 11)
            (Hash:$$sc_$cshowsPrec_11
               (Hash:$$sc_$cshowsPrec_10
                  (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                     @Text
                     @Text
                     @Text
                     (Hash:$$sc_$cshowsPrec_1 b1)
                     (Hash:$$sc_$cshowsPrec4_4
                        (Hash:$$sc_$cshowsPrec_9
                           (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                              @Text
                              @Text
                              @Text
                              (Hash:$$sc_$cshowsPrec_1 b2)
                              (Hash:$$sc_$cshowsPrec4_4
                                 (Hash:$$sc_$cshowsPrec_8
                                    (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                       @Text
                                       @Text
                                       @Text
                                       (Hash:$$sc_$cshowsPrec_2 b3)
                                       (Hash:$$sc_$cshowsPrec4_4
                                          (Hash:$$sc_$cshowsPrec_7
                                             (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                @Text
                                                @Text
                                                @Text
                                                (Hash:$$sc_$cshowsPrec4_1 b4)
                                                (Hash:$$sc_$cshowsPrec4_4
                                                   (Hash:$$sc_$cshowsPrec_6
                                                      (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                         @Text
                                                         @Text
                                                         @Text
                                                         ($dShow1.m_showsPrec unit 0 b5)
                                                         (Hash:$$sc_$cshowsPrec4_4
                                                            (Hash:$$sc_$cshowsPrec_5
                                                               (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                  @Text
                                                                  @Text
                                                                  @Text
                                                                  ($dShow1.m_showsPrec unit 0 b6)
                                                                  (Hash:$$sc_$cshowsPrec4_4
                                                                     (Hash:$$sc_$cshowsPrec_4
                                                                        (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                           @Text
                                                                           @Text
                                                                           @Text
                                                                           (Hash:$$sc_$cshowsPrec_2
                                                                              b7)
                                                                           (Hash:$$sc_$cshowsPrec4_4
                                                                              (Hash:$$sc_$cshowsPrec_3
                                                                                 (54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Base:.
                                                                                    @Text
                                                                                    @Text
                                                                                    @Text
                                                                                    ($dShow.m_showsPrec
                                                                                       unit
                                                                                       0
                                                                                       b8)
                                                                                    Hash:$$sc_$cshowsPrec4_2))))))))))))))))))))))))
def $cshow4 : Hash:Sha256n -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Hash:Sha256n
    Hash:$fShowSha256n
def $fShowSha256n : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Hash:Sha256n =
  <m_showsPrec = \(_ : Unit). Hash:$cshowsPrec4;
   m_show = \(_ : Unit). Hash:$cshow4;
   m_showList = \(_ : Unit). Hash:$cshowList4>
def $cshowList4 : List Hash:Sha256n -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Hash:Sha256n
    Hash:$fShowSha256n
def $cshow3 : Hash:Sha256 -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Hash:Sha256
    Hash:$fShowSha256
def $fShowSha256 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Hash:Sha256 =
  <m_showsPrec = \(_ : Unit). Hash:$cshowsPrec3;
   m_show = \(_ : Unit). Hash:$cshow3;
   m_showList = \(_ : Unit). Hash:$cshowList3>
def $cshowList3 : List Hash:Sha256 -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Hash:Sha256
    Hash:$fShowSha256
def $cshow2 : Hash:Keccak -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Hash:Keccak
    Hash:$fShowKeccak
def $fShowKeccak : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Hash:Keccak =
  <m_showsPrec = \(_ : Unit). Hash:$cshowsPrec2;
   m_show = \(_ : Unit). Hash:$cshow2;
   m_showList = \(_ : Unit). Hash:$cshowList2>
def $cshowList2 : List Hash:Keccak -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Hash:Keccak
    Hash:$fShowKeccak
def $cshow1 : Hash:Add -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Hash:Add
    Hash:$fShowAdd
def $fShowAdd : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Hash:Add =
  <m_showsPrec = \(_ : Unit). Hash:$cshowsPrec1;
   m_show = \(_ : Unit). Hash:$cshow1;
   m_showList = \(_ : Unit). Hash:$cshowList1>
def $cshowList1 : List Hash:Add -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Hash:Add
    Hash:$fShowAdd
def $cshow : Hash:Hash -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshow
    @Hash:Hash
    Hash:$fShowHash
def $fShowHash : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:Show Hash:Hash =
  <m_showsPrec = \(_ : Unit). Hash:$cshowsPrec;
   m_show = \(_ : Unit). Hash:$cshow;
   m_showList = \(_ : Unit). Hash:$cshowList>
def $cshowList : List Hash:Hash -> Text -> Text =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Show:$dmshowList
    @Hash:Hash
    Hash:$fShowHash
def $cobserver : Hash:Hash -> List Party =
  \(this : Hash:Hash). nil @Party
def $fHasObserverHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasObserver Hash:Hash =
  <m_observer = \(_ : Unit). Hash:$cobserver>
def $censure : Hash:Hash -> Bool = \(this : Hash:Hash). true
def $fHasEnsureHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasEnsure Hash:Hash =
  <m_ensure = \(_ : Unit). Hash:$censure>
def $$sc_$carchive_1 : ContractId Hash:Hash -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(this : ContractId Hash:Hash) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    exercise @Hash:Hash Archive this arg
def $$sc_$carchive_2 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive =
  9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive
    {}
def $carchive : ContractId Hash:Hash -> Update Unit =
  \(cid : ContractId Hash:Hash).
    Hash:$$sc_$carchive_1 cid Hash:$$sc_$carchive_2
def $fHasArchiveHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:HasArchive Hash:Hash =
  <m_archive = \(_ : Unit). Hash:$carchive>
def $c_isInterfaceType : forall (proxy : * -> *). proxy Hash:Hash -> Bool =
  /\(proxy : * -> *). \(ds : proxy Hash:Hash). false
def $fHasIsInterfaceTypeHash : 09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Desugar:HasIsInterfaceType Hash:Hash =
  <m__isInterfaceType = \(_ : Unit). Hash:$c_isInterfaceType>
def $c==4 : Hash:Sha256n -> Hash:Sha256n -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
  in \(ds : Hash:Sha256n) (ds1 : Hash:Sha256n).
       let a1 : List Text = Hash:Sha256n.hexStrings ds
           a2 : Int64 = Hash:Sha256n.count ds
           b1 : List Text = Hash:Sha256n.hexStrings ds1
           b2 : Int64 = Hash:Sha256n.count ds1
       in case $dEq.m_== unit a1 b1 of
            true -> EQUAL @Int64 a2 b2
            false -> false
def $c==3 : Hash:Sha256 -> Hash:Sha256 -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
  in \(ds : Hash:Sha256) (ds1 : Hash:Sha256).
       let a1 : List Text = Hash:Sha256.hexStrings ds
           b1 : List Text = Hash:Sha256.hexStrings ds1
       in $dEq.m_== unit a1 b1
def $c==2 : Hash:Keccak -> Hash:Keccak -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Text) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
          @Text
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
  in \(ds : Hash:Keccak) (ds1 : Hash:Keccak).
       let a1 : List Text = Hash:Keccak.hexStrings ds
           b1 : List Text = Hash:Keccak.hexStrings ds1
       in $dEq.m_== unit a1 b1
def $$sc_$c==1_1 : <m_== :
                      Unit -> Optional Text -> Optional Text -> Bool;
                    m_/= : Unit -> Optional Text -> Optional Text -> Bool> =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fEqOptional
    @Text
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqText
def $c==1 : Hash:Hash -> Hash:Hash -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (Optional Timestamp) =
        09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$fEqOptional
          @Timestamp
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$fEqTime
      $dEq1 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (Optional Text) =
        Hash:$$sc_$c==1_1
  in \(ds : Hash:Hash) (ds1 : Hash:Hash).
       let a1 : Party = Hash:Hash.owner ds
           a2 : Party = Hash:Hash.provider ds
           a3 : Text = Hash:Hash.id ds
           a4 : Int64 = Hash:Hash.add_result ds
           a5 : Optional Text = Hash:Hash.keccak_result ds
           a6 : Optional Text = Hash:Hash.sha256_result ds
           a7 : Text = Hash:Hash.root ds
           a8 : Optional Timestamp = Hash:Hash.root_time ds
           b1 : Party = Hash:Hash.owner ds1
           b2 : Party = Hash:Hash.provider ds1
           b3 : Text = Hash:Hash.id ds1
           b4 : Int64 = Hash:Hash.add_result ds1
           b5 : Optional Text = Hash:Hash.keccak_result ds1
           b6 : Optional Text = Hash:Hash.sha256_result ds1
           b7 : Text = Hash:Hash.root ds1
           b8 : Optional Timestamp = Hash:Hash.root_time ds1
       in case EQUAL @Party a1 b1 of
            true ->
              case EQUAL @Party a2 b2 of
                true ->
                  case EQUAL @Text a3 b3 of
                    true ->
                      case EQUAL @Int64 a4 b4 of
                        true ->
                          case $dEq1.m_== unit a5 b5 of
                            true ->
                              case $dEq1.m_== unit a6 b6 of
                                true ->
                                  case EQUAL @Text a7 b7 of
                                    true -> $dEq.m_== unit a8 b8
                                    false -> false
                                false -> false
                            false -> false
                        false -> false
                    false -> false
                false -> false
            false -> false
def $c== : Hash:Add -> Hash:Add -> Bool =
  let $dEq : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq (List Int64) =
        54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEq[]
          @Int64
          54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$fEqInt
  in \(ds : Hash:Add) (ds1 : Hash:Add).
       let a1 : List Int64 = Hash:Add.numbers ds
           b1 : List Int64 = Hash:Add.numbers ds1
       in $dEq.m_== unit a1 b1
def $c/=4 : Hash:Sha256n -> Hash:Sha256n -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Hash:Sha256n
    Hash:$fEqSha256n
def $fEqSha256n : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Hash:Sha256n =
  <m_== = \(_ : Unit). Hash:$c==4; m_/= = \(_ : Unit). Hash:$c/=4>
def $c/=3 : Hash:Sha256 -> Hash:Sha256 -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Hash:Sha256
    Hash:$fEqSha256
def $fEqSha256 : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Hash:Sha256 =
  <m_== = \(_ : Unit). Hash:$c==3; m_/= = \(_ : Unit). Hash:$c/=3>
def $c/=2 : Hash:Keccak -> Hash:Keccak -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Hash:Keccak
    Hash:$fEqKeccak
def $fEqKeccak : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Hash:Keccak =
  <m_== = \(_ : Unit). Hash:$c==2; m_/= = \(_ : Unit). Hash:$c/=2>
def $c/=1 : Hash:Hash -> Hash:Hash -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Hash:Hash
    Hash:$fEqHash
def $fEqHash : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Hash:Hash =
  <m_== = \(_ : Unit). Hash:$c==1; m_/= = \(_ : Unit). Hash:$c/=1>
def $c/= : Hash:Add -> Hash:Add -> Bool =
  54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:$dm/=
    @Hash:Add
    Hash:$fEqAdd
def $fEqAdd : 54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Classes:Eq Hash:Add =
  <m_== = \(_ : Unit). Hash:$c==; m_/= = \(_ : Unit). Hash:$c/=>
def $WSha256n : List Text -> Int64 -> Hash:Sha256n =
  \(dt_a49b : List Text) (dt_a49c : Int64).
    Hash:Sha256n {hexStrings = dt_a49b; count = dt_a49c}
def $WSha256 : List Text -> Hash:Sha256 =
  \(dt_a48w : List Text). Hash:Sha256 {hexStrings = dt_a48w}
def $WKeccak : List Text -> Hash:Keccak =
  \(dt_a47S : List Text). Hash:Keccak {hexStrings = dt_a47S}
def $WHash : Party -> Party -> Text -> Int64 -> Optional Text -> Optional Text -> Text -> Optional Timestamp -> Hash:Hash =
  \(dt_a44X : Party) (dt_a44Y : Party) (dt_a44Z : Text) (dt_a450 : Int64) (dt_a451 : Optional Text) (dt_a452 : Optional Text) (dt_a453 : Text) (dt_a454 : Optional Timestamp).
    Hash:Hash
      {owner = dt_a44X;
       provider = dt_a44Y;
       id = dt_a44Z;
       add_result = dt_a450;
       keccak_result = dt_a451;
       sha256_result = dt_a452;
       root = dt_a453;
       root_time = dt_a454}
def $WAdd : List Int64 -> Hash:Add =
  \(dt_a47e : List Int64). Hash:Add {numbers = dt_a47e}
def $$imports : <_1 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Exception : Unit>>>;
                 _2 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
                 _3 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Interface : Unit>;
                       _4 : <AnyView : Unit>>>;
                 _4 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
                 _5 :
                   <_1 :
                      <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
                         Unit>;
                    _2 :
                      <_1 : <DA : Unit>;
                       _2 : <Internal : Unit>;
                       _3 : <Template : Unit>;
                       _4 : <Functions : Unit>>>> =
  ERROR
    @<_1 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Exception : Unit>>>;
      _2 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Fail : Unit>>>;
      _3 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Interface : Unit>;
            _4 : <AnyView : Unit>>>;
      _4 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>; _2 : <Internal : Unit>; _3 : <Prelude : Unit>>>;
      _5 :
        <_1 :
           <09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6 :
              Unit>;
         _2 :
           <_1 : <DA : Unit>;
            _2 : <Internal : Unit>;
            _3 : <Template : Unit>;
            _4 : <Functions : Unit>>>>
    "undefined"
def $$explicitExports : Unit = ERROR @Unit "undefined"
def $$explicitExport6 : <ExportInfoVal :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <VarName : Unit>; _2 : <hashNTimes : Unit>>>>> =
  ERROR
    @<ExportInfoVal :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <VarName : Unit>; _2 : <hashNTimes : Unit>>>>>
    "undefined"
def $$explicitExport5 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <HashId : Unit>>>;
                            _2 : Unit;
                            _3 : Unit>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <HashId : Unit>>>;
         _2 : Unit;
         _3 : Unit>>
    "undefined"
def $$explicitExport4 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Hash : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Hash : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Hash : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <add_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:add_result:Hash : Unit>>>>;
                               _2 :
                                 <_1 : <id : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 : <_1 : <VarName : Unit>; _2 : <$sel:id:Hash : Unit>>>>;
                               _3 :
                                 <_1 : <keccak_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:keccak_result:Hash : Unit>>>>;
                               _4 :
                                 <_1 : <owner : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 : <_1 : <VarName : Unit>; _2 : <$sel:owner:Hash : Unit>>>>;
                               _5 :
                                 <_1 : <provider : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>; _2 : <$sel:provider:Hash : Unit>>>>;
                               _6 :
                                 <_1 : <root : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 : <_1 : <VarName : Unit>; _2 : <$sel:root:Hash : Unit>>>>;
                               _7 :
                                 <_1 : <root_time : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>; _2 : <$sel:root_time:Hash : Unit>>>>;
                               _8 :
                                 <_1 : <sha256_result : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:sha256_result:Hash : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Hash : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Hash : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Hash : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <add_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:add_result:Hash : Unit>>>>;
            _2 :
              <_1 : <id : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:id:Hash : Unit>>>>;
            _3 :
              <_1 : <keccak_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:keccak_result:Hash : Unit>>>>;
            _4 :
              <_1 : <owner : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:owner:Hash : Unit>>>>;
            _5 :
              <_1 : <provider : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:provider:Hash : Unit>>>>;
            _6 :
              <_1 : <root : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:root:Hash : Unit>>>>;
            _7 :
              <_1 : <root_time : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:root_time:Hash : Unit>>>>;
            _8 :
              <_1 : <sha256_result : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:sha256_result:Hash : Unit>>>>>>>
    "undefined"
def $$explicitExport3 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Add : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Hash : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Add : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <numbers : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:numbers:Add : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Add : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Hash : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Add : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <numbers : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:numbers:Add : Unit>>>>>>>
    "undefined"
def $$explicitExport2 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Keccak : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Hash : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Keccak : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <hexStrings : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:hexStrings:Keccak : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Keccak : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Hash : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Keccak : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <hexStrings : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:hexStrings:Keccak : Unit>>>>>>>
    "undefined"
def $$explicitExport1 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Sha256 : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Hash : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Sha256 : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <hexStrings : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:hexStrings:Sha256 : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Sha256 : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Hash : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Sha256 : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <hexStrings : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:hexStrings:Sha256 : Unit>>>>>>>
    "undefined"
def $$explicitExport0 : <ExportInfoTC :
                           <_1 :
                              <_1 : Unit;
                               _2 : <_1 : <Hash : Unit>>;
                               _3 : <_1 : <TcClsName : Unit>; _2 : <Sha256n : Unit>>>;
                            _2 :
                              <_1 :
                                 <_1 : Unit;
                                  _2 : <_1 : <Hash : Unit>>;
                                  _3 : <_1 : <DataName : Unit>; _2 : <Sha256n : Unit>>>>;
                            _3 :
                              <_1 :
                                 <_1 : <count : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>; _2 : <$sel:count:Sha256n : Unit>>>>;
                               _2 :
                                 <_1 : <hexStrings : Unit>;
                                  _2 : <True : Unit>;
                                  _3 :
                                    <_1 : Unit;
                                     _2 : <_1 : <Hash : Unit>>;
                                     _3 :
                                       <_1 : <VarName : Unit>;
                                        _2 : <$sel:hexStrings:Sha256n : Unit>>>>>>> =
  ERROR
    @<ExportInfoTC :
        <_1 :
           <_1 : Unit;
            _2 : <_1 : <Hash : Unit>>;
            _3 : <_1 : <TcClsName : Unit>; _2 : <Sha256n : Unit>>>;
         _2 :
           <_1 :
              <_1 : Unit;
               _2 : <_1 : <Hash : Unit>>;
               _3 : <_1 : <DataName : Unit>; _2 : <Sha256n : Unit>>>>;
         _3 :
           <_1 :
              <_1 : <count : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 : <_1 : <VarName : Unit>; _2 : <$sel:count:Sha256n : Unit>>>>;
            _2 :
              <_1 : <hexStrings : Unit>;
               _2 : <True : Unit>;
               _3 :
                 <_1 : Unit;
                  _2 : <_1 : <Hash : Unit>>;
                  _3 :
                    <_1 : <VarName : Unit>; _2 : <$sel:hexStrings:Sha256n : Unit>>>>>>>
    "undefined"
def $$sc_Hash_1 : Hash:Hash -> Text = Hash:$fShowHash.m_show unit
def $$sc_Hash_2 : Text -> Text =
  APPEND_TEXT "Template precondition violated: "
def $$sc_Hash_3 : Hash:Hash -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> List Party =
  \(this : Hash:Hash) (ds : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    Hash:$csignatory this
def $$sc_Hash_4 : ContractId Hash:Hash -> Hash:Hash -> 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive -> Update Unit =
  \(ds : ContractId Hash:Hash) (ds1 : Hash:Hash) (ds2 : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive).
    upure @Unit unit
def $$sc_Hash_5 : Hash:Hash -> Hash:Sha256n -> List Party =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
    in \(arg : Hash:Sha256n).
         09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
           ds
def $$sc_Hash_6 : Hash:Hash -> Update (ContractId Hash:Hash) =
  \(this : Hash:Hash). create @Hash:Hash this
def $$sc_Hash_7 : ContractId Hash:Hash -> Hash:Hash -> Hash:Sha256n -> Update (ContractId Hash:Hash) =
  \(self : ContractId Hash:Hash) (this : Hash:Hash) (arg : Hash:Sha256n).
    let ds8 : List Text = Hash:Sha256n.hexStrings arg
        ds9 : Int64 = Hash:Sha256n.count arg
        concatenated : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$cmconcat1
            ds8
        initialHash : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
            concatenated
        finalHash : Text =
          case LESS_EQ @Int64 ds9 1 of
            true -> initialHash
            false -> Hash:hashNTimes (SUB_INT64 ds9 1) initialHash concatenated
    in Hash:$$sc_Hash_6
         (Hash:Hash {this with sha256_result = some @Text finalHash})
def $$sc_Hash_8 : Hash:Hash -> Hash:Add -> List Party =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
    in \(arg : Hash:Add).
         09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
           ds
def $$sc_Hash_9 : List Int64 -> Int64 =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:sum
    @Int64
    54f85ebfc7dfae18f7d70370015dcc6c6792f60135ab369c44ae52c6fc17c274:GHC.Num:$fAdditiveInt
def $$sc_Hash_10 : ContractId Hash:Hash -> Hash:Hash -> Hash:Add -> Update (ContractId Hash:Hash) =
  \(self : ContractId Hash:Hash) (this : Hash:Hash) (arg : Hash:Add).
    let ds8 : List Int64 = Hash:Add.numbers arg
    in Hash:$$sc_Hash_6
         (Hash:Hash {this with add_result = Hash:$$sc_Hash_9 ds8})
def $$sc_Hash_11 : Hash:Hash -> Hash:Keccak -> List Party =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
    in \(arg : Hash:Keccak).
         09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
           ds
def $$sc_Hash_12 : ContractId Hash:Hash -> Hash:Hash -> Hash:Keccak -> Update (ContractId Hash:Hash) =
  \(self : ContractId Hash:Hash) (this : Hash:Hash) (arg : Hash:Keccak).
    let ds8 : List Text = Hash:Keccak.hexStrings arg
        concatenated : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$cmconcat1
            ds8
        hash : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:keccak256
            concatenated
    in Hash:$$sc_Hash_6
         (Hash:Hash {this with keccak_result = some @Text hash})
def $$sc_Hash_13 : Hash:Hash -> Hash:Sha256 -> List Party =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
    in \(arg : Hash:Sha256).
         09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Template.Functions:$ctoParties
           ds
def $$sc_Hash_14 : ContractId Hash:Hash -> Hash:Hash -> Hash:Sha256 -> Update (ContractId Hash:Hash) =
  \(self : ContractId Hash:Hash) (this : Hash:Hash) (arg : Hash:Sha256).
    let ds8 : List Text = Hash:Sha256.hexStrings arg
        concatenated : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Prelude:$cmconcat1
            ds8
        hash : Text =
          09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Crypto.Text:sha256
            concatenated
    in Hash:$$sc_Hash_6
         (Hash:Hash {this with sha256_result = some @Text hash})
def $$sc_Hash_15 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Old root does not match current state"
def $$sc_Hash_16 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Insert witness verification failed"
def $$sc_Hash_17 : ContractId Hash:Hash -> ContractId Silvana:IndexedMerkleMap =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Interface:toInterfaceContractId
    @Silvana:IndexedMerkleMap
    @Hash:Hash
    Hash:$fHasToInterfaceHashIndexedMerkleMap
def $$sc_Hash_18 : Update Timestamp =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$cgetTime
    Hash:$dIP
def $$sc_Hash_19 : Hash:Hash -> Silvana:InsertWitness -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(this : Hash:Hash).
    let ds6 : Text = Hash:Hash.root this
    in \(witness : Silvana:InsertWitness).
         ubind currentTime : Timestamp = Hash:$$sc_Hash_18
               _ : Unit =
                 Hash:$$sc_Hash_15
                   (EQUAL @Text (Silvana:InsertWitness.oldRoot witness) ds6)
               _ : Unit = Hash:$$sc_Hash_16 (Silvana:verifyInsertWitness witness)
               cid : ContractId Hash:Hash =
                 Hash:$$sc_Hash_6
                   (Hash:Hash
                      {Hash:Hash {this with root = Silvana:InsertWitness.newRoot witness}
                       with
                       root_time = some @Timestamp currentTime})
         in upure
              @(ContractId Silvana:IndexedMerkleMap)
              (Hash:$$sc_Hash_17 cid)
def $$sc_Hash_20 : Hash:Hash -> Party =
  \(this : Hash:Hash). Hash:Hash.owner this
def $$sc_Hash_21 : Hash:Hash -> Text =
  \(this : Hash:Hash). Hash:Hash.root this
def $$sc_Hash_22 : Hash:Hash -> Optional Timestamp =
  \(this : Hash:Hash). Hash:Hash.root_time this
def $$sc_Hash_23 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Old root does not match current state"
def $$sc_Hash_24 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Update witness verification failed"
def $$sc_Hash_25 : Update Timestamp =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.LF:$cgetTime
    Hash:$dIP1
def $$sc_Hash_26 : Hash:Hash -> Silvana:UpdateWitness -> Update (ContractId Silvana:IndexedMerkleMap) =
  \(this : Hash:Hash).
    let ds6 : Text = Hash:Hash.root this
    in \(witness : Silvana:UpdateWitness).
         ubind currentTime : Timestamp = Hash:$$sc_Hash_25
               _ : Unit =
                 Hash:$$sc_Hash_23
                   (EQUAL @Text (Silvana:UpdateWitness.oldRoot witness) ds6)
               _ : Unit = Hash:$$sc_Hash_24 (Silvana:verifyUpdateWitness witness)
               cid : ContractId Hash:Hash =
                 Hash:$$sc_Hash_6
                   (Hash:Hash
                      {Hash:Hash {this with root = Silvana:UpdateWitness.newRoot witness}
                       with
                       root_time = some @Timestamp currentTime})
         in upure
              @(ContractId Silvana:IndexedMerkleMap)
              (Hash:$$sc_Hash_17 cid)
def $$sc_Hash_27 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Proof root does not match current state"
def $$sc_Hash_28 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Non-membership proof verification failed"
def $$sc_Hash_29 : Hash:Hash -> Silvana:NonMembershipProof -> Update Bool =
  \(this : Hash:Hash).
    let ds6 : Text = Hash:Hash.root this
    in \(proof : Silvana:NonMembershipProof).
         ubind _ : Unit =
                 Hash:$$sc_Hash_27
                   (EQUAL @Text (Silvana:NonMembershipProof.root proof) ds6)
         in let isValid : Bool = Silvana:verifyNonMembershipProof proof
            in ubind _ : Unit = Hash:$$sc_Hash_28 isValid
               in upure @Bool isValid
def $$sc_Hash_30 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Proof root does not match current state"
def $$sc_Hash_31 : Bool -> Update Unit =
  09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:assertMsg
    @Update
    09edf931f4753659b4d84606aaef7de6ba699557ae33afdb688744cb563c71d6:DA.Internal.Assert:$fCanAssertUpdate
    "Membership proof verification failed"
def $$sc_Hash_32 : Hash:Hash -> Silvana:MembershipProof -> Update Bool =
  \(this : Hash:Hash).
    let ds6 : Text = Hash:Hash.root this
    in \(proof : Silvana:MembershipProof).
         ubind _ : Unit =
                 Hash:$$sc_Hash_30
                   (EQUAL @Text (Silvana:MembershipProof.root proof) ds6)
         in let isValid : Bool = Silvana:verifyMembershipProof proof
            in ubind _ : Unit = Hash:$$sc_Hash_31 isValid
               in upure @Bool isValid
def $$sc_Hash_33 : Hash:Hash -> Silvana:IndexedMerkleMapView =
  \(this : Hash:Hash).
    let ds : Party = Hash:Hash.owner this
        ds1 : Party = Hash:Hash.provider this
        ds2 : Text = Hash:Hash.id this
        ds6 : Text = Hash:Hash.root this
        ds7 : Optional Timestamp = Hash:Hash.root_time this
    in Silvana:IndexedMerkleMapView
         {owner = ds; provider = ds1; id = ds2; root = ds6; rootTime = ds7}
template Hash this where
  signatory Hash:$csignatory this
  observer Hash:$cobserver this
  ensure case Hash:$censure this of
           true -> true
           false ->
             throw
               @Bool
               @91e167fa7a256f21f990c526a0a0df840e99aeef0e67dc1f5415b0309486de74:DA.Exception.PreconditionFailed:PreconditionFailed
               (91e167fa7a256f21f990c526a0a0df840e99aeef0e67dc1f5415b0309486de74:DA.Exception.PreconditionFailed:PreconditionFailed
                  {message = Hash:$$sc_Hash_2 (Hash:$$sc_Hash_1 this)})
  interface instance Silvana:IndexedMerkleMap for Hash:Hash
    addMapElementImpl = Hash:$$sc_Hash_19 this
    getOwner = Hash:$$sc_Hash_20 this
    getRoot = Hash:$$sc_Hash_21 this
    getRootTime = Hash:$$sc_Hash_22 this
    updateMapElementImpl = Hash:$$sc_Hash_26 this
    verifyExclusionImpl = Hash:$$sc_Hash_29 this
    verifyInclusionImpl = Hash:$$sc_Hash_32 this
  consuming choice Archive (self : ContractId Hash:Hash) (arg : 9e70a8b3510d617f8a136213f33d6a903a10ca0eeec76bb06ba55d1ed9680f69:DA.Internal.Template:Archive) : Unit
    controller Hash:$$sc_Hash_3 this arg
    observer Just (nil @Party)
    authority Nothing
    do Hash:$$sc_Hash_4 self this arg
  consuming choice Sha256n (self : ContractId Hash:Hash) (arg : Hash:Sha256n) : ContractId Hash:Hash
    controller Hash:$$sc_Hash_5 this arg
    observer Just (nil @Party)
    authority Nothing
    do Hash:$$sc_Hash_7 self this arg
  consuming choice Add (self : ContractId Hash:Hash) (arg : Hash:Add) : ContractId Hash:Hash
    controller Hash:$$sc_Hash_8 this arg
    observer Just (nil @Party)
    authority Nothing
    do Hash:$$sc_Hash_10 self this arg
  consuming choice Keccak (self : ContractId Hash:Hash) (arg : Hash:Keccak) : ContractId Hash:Hash
    controller Hash:$$sc_Hash_11 this arg
    observer Just (nil @Party)
    authority Nothing
    do Hash:$$sc_Hash_12 self this arg
  consuming choice Sha256 (self : ContractId Hash:Hash) (arg : Hash:Sha256) : ContractId Hash:Hash
    controller Hash:$$sc_Hash_13 this arg
    observer Just (nil @Party)
    authority Nothing
    do Hash:$$sc_Hash_14 self this arg
