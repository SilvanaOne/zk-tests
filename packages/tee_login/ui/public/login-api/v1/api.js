"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __esm = (fn2, res) => function __init() {
    return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
  };
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from2, except, desc) => {
    if (from2 && typeof from2 === "object" || typeof from2 === "function") {
      for (let key of __getOwnPropNames(from2))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc(from2, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // node-modules-polyfills:buffer
  var buffer_exports = {};
  __export(buffer_exports, {
    Buffer: () => Buffer2,
    INSPECT_MAX_BYTES: () => INSPECT_MAX_BYTES,
    SlowBuffer: () => SlowBuffer,
    isBuffer: () => isBuffer,
    kMaxLength: () => _kMaxLength
  });
  function init() {
    inited = true;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
  }
  function toByteArray(b64) {
    if (!inited) {
      init();
    }
    var i, j2, l, tmp, placeHolders, arr;
    var len = b64.length;
    if (len % 4 > 0) {
      throw new Error("Invalid string. Length must be a multiple of 4");
    }
    placeHolders = b64[len - 2] === "=" ? 2 : b64[len - 1] === "=" ? 1 : 0;
    arr = new Arr(len * 3 / 4 - placeHolders);
    l = placeHolders > 0 ? len - 4 : len;
    var L3 = 0;
    for (i = 0, j2 = 0; i < l; i += 4, j2 += 3) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[L3++] = tmp >> 16 & 255;
      arr[L3++] = tmp >> 8 & 255;
      arr[L3++] = tmp & 255;
    }
    if (placeHolders === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[L3++] = tmp & 255;
    } else if (placeHolders === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[L3++] = tmp >> 8 & 255;
      arr[L3++] = tmp & 255;
    }
    return arr;
  }
  function tripletToBase64(num) {
    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
  }
  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
      output.push(tripletToBase64(tmp));
    }
    return output.join("");
  }
  function fromByteArray(uint8) {
    if (!inited) {
      init();
    }
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3;
    var output = "";
    var parts = [];
    var maxChunkLength = 16383;
    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      output += lookup[tmp >> 2];
      output += lookup[tmp << 4 & 63];
      output += "==";
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      output += lookup[tmp >> 10];
      output += lookup[tmp >> 4 & 63];
      output += lookup[tmp << 2 & 63];
      output += "=";
    }
    parts.push(output);
    return parts.join("");
  }
  function read(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {
    }
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
    }
    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  }
  function write(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt2 = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt2 / c;
      } else {
        value += rt2 * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }
      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }
    for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {
    }
    e = e << mLen | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {
    }
    buffer[offset + i - d] |= s * 128;
  }
  function kMaxLength() {
    return Buffer2.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
  }
  function createBuffer(that, length) {
    if (kMaxLength() < length) {
      throw new RangeError("Invalid typed array length");
    }
    if (Buffer2.TYPED_ARRAY_SUPPORT) {
      that = new Uint8Array(length);
      that.__proto__ = Buffer2.prototype;
    } else {
      if (that === null) {
        that = new Buffer2(length);
      }
      that.length = length;
    }
    return that;
  }
  function Buffer2(arg, encodingOrOffset, length) {
    if (!Buffer2.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer2)) {
      return new Buffer2(arg, encodingOrOffset, length);
    }
    if (typeof arg === "number") {
      if (typeof encodingOrOffset === "string") {
        throw new Error(
          "If encoding is specified then the first argument must be a string"
        );
      }
      return allocUnsafe(this, arg);
    }
    return from(this, arg, encodingOrOffset, length);
  }
  function from(that, value, encodingOrOffset, length) {
    if (typeof value === "number") {
      throw new TypeError('"value" argument must not be a number');
    }
    if (typeof ArrayBuffer !== "undefined" && value instanceof ArrayBuffer) {
      return fromArrayBuffer(that, value, encodingOrOffset, length);
    }
    if (typeof value === "string") {
      return fromString(that, value, encodingOrOffset);
    }
    return fromObject(that, value);
  }
  function assertSize(size) {
    if (typeof size !== "number") {
      throw new TypeError('"size" argument must be a number');
    } else if (size < 0) {
      throw new RangeError('"size" argument must not be negative');
    }
  }
  function alloc(that, size, fill2, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(that, size);
    }
    if (fill2 !== void 0) {
      return typeof encoding === "string" ? createBuffer(that, size).fill(fill2, encoding) : createBuffer(that, size).fill(fill2);
    }
    return createBuffer(that, size);
  }
  function allocUnsafe(that, size) {
    assertSize(size);
    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
    if (!Buffer2.TYPED_ARRAY_SUPPORT) {
      for (var i = 0; i < size; ++i) {
        that[i] = 0;
      }
    }
    return that;
  }
  function fromString(that, string, encoding) {
    if (typeof encoding !== "string" || encoding === "") {
      encoding = "utf8";
    }
    if (!Buffer2.isEncoding(encoding)) {
      throw new TypeError('"encoding" must be a valid string encoding');
    }
    var length = byteLength(string, encoding) | 0;
    that = createBuffer(that, length);
    var actual = that.write(string, encoding);
    if (actual !== length) {
      that = that.slice(0, actual);
    }
    return that;
  }
  function fromArrayLike(that, array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    that = createBuffer(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  function fromArrayBuffer(that, array, byteOffset, length) {
    array.byteLength;
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError("'offset' is out of bounds");
    }
    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError("'length' is out of bounds");
    }
    if (byteOffset === void 0 && length === void 0) {
      array = new Uint8Array(array);
    } else if (length === void 0) {
      array = new Uint8Array(array, byteOffset);
    } else {
      array = new Uint8Array(array, byteOffset, length);
    }
    if (Buffer2.TYPED_ARRAY_SUPPORT) {
      that = array;
      that.__proto__ = Buffer2.prototype;
    } else {
      that = fromArrayLike(that, array);
    }
    return that;
  }
  function fromObject(that, obj) {
    if (internalIsBuffer(obj)) {
      var len = checked(obj.length) | 0;
      that = createBuffer(that, len);
      if (that.length === 0) {
        return that;
      }
      obj.copy(that, 0, 0, len);
      return that;
    }
    if (obj) {
      if (typeof ArrayBuffer !== "undefined" && obj.buffer instanceof ArrayBuffer || "length" in obj) {
        if (typeof obj.length !== "number" || isnan(obj.length)) {
          return createBuffer(that, 0);
        }
        return fromArrayLike(that, obj);
      }
      if (obj.type === "Buffer" && isArray(obj.data)) {
        return fromArrayLike(that, obj.data);
      }
    }
    throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
  }
  function checked(length) {
    if (length >= kMaxLength()) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
    }
    return length | 0;
  }
  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }
    return Buffer2.alloc(+length);
  }
  function internalIsBuffer(b) {
    return !!(b != null && b._isBuffer);
  }
  function byteLength(string, encoding) {
    if (internalIsBuffer(string)) {
      return string.length;
    }
    if (typeof ArrayBuffer !== "undefined" && typeof ArrayBuffer.isView === "function" && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
      return string.byteLength;
    }
    if (typeof string !== "string") {
      string = "" + string;
    }
    var len = string.length;
    if (len === 0) return 0;
    var loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case "ascii":
        case "latin1":
        case "binary":
          return len;
        case "utf8":
        case "utf-8":
        case void 0:
          return utf8ToBytes(string).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return len * 2;
        case "hex":
          return len >>> 1;
        case "base64":
          return base64ToBytes(string).length;
        default:
          if (loweredCase) return utf8ToBytes(string).length;
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  function slowToString(encoding, start, end) {
    var loweredCase = false;
    if (start === void 0 || start < 0) {
      start = 0;
    }
    if (start > this.length) {
      return "";
    }
    if (end === void 0 || end > this.length) {
      end = this.length;
    }
    if (end <= 0) {
      return "";
    }
    end >>>= 0;
    start >>>= 0;
    if (end <= start) {
      return "";
    }
    if (!encoding) encoding = "utf8";
    while (true) {
      switch (encoding) {
        case "hex":
          return hexSlice(this, start, end);
        case "utf8":
        case "utf-8":
          return utf8Slice(this, start, end);
        case "ascii":
          return asciiSlice(this, start, end);
        case "latin1":
        case "binary":
          return latin1Slice(this, start, end);
        case "base64":
          return base64Slice(this, start, end);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return utf16leSlice(this, start, end);
        default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase();
          loweredCase = true;
      }
    }
  }
  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }
  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;
    if (typeof byteOffset === "string") {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 2147483647) {
      byteOffset = 2147483647;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }
    byteOffset = +byteOffset;
    if (isNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
      if (dir) return -1;
      else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;
      else return -1;
    }
    if (typeof val === "string") {
      val = Buffer2.from(val, encoding);
    }
    if (internalIsBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }
      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === "number") {
      val = val & 255;
      if (Buffer2.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === "function") {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }
      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }
    throw new TypeError("val must be string, number or Buffer");
  }
  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== void 0) {
      encoding = String(encoding).toLowerCase();
      if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }
    function read2(buf, i3) {
      if (indexSize === 1) {
        return buf[i3];
      } else {
        return buf.readUInt16BE(i3 * indexSize);
      }
    }
    var i;
    if (dir) {
      var foundIndex = -1;
      for (i = byteOffset; i < arrLength; i++) {
        if (read2(arr, i) === read2(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
      for (i = byteOffset; i >= 0; i--) {
        var found = true;
        for (var j2 = 0; j2 < valLength; j2++) {
          if (read2(arr, i + j2) !== read2(val, j2)) {
            found = false;
            break;
          }
        }
        if (found) return i;
      }
    }
    return -1;
  }
  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }
    var strLen = string.length;
    if (strLen % 2 !== 0) throw new TypeError("Invalid hex string");
    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (isNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }
    return i;
  }
  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }
  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }
  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }
  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }
  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }
  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return fromByteArray(buf);
    } else {
      return fromByteArray(buf.slice(start, end));
    }
  }
  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;
        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 128) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 192) === 128) {
              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
              if (tempCodePoint > 127) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                codePoint = tempCodePoint;
              }
            }
        }
      }
      if (codePoint === null) {
        codePoint = 65533;
        bytesPerSequence = 1;
      } else if (codePoint > 65535) {
        codePoint -= 65536;
        res.push(codePoint >>> 10 & 1023 | 55296);
        codePoint = 56320 | codePoint & 1023;
      }
      res.push(codePoint);
      i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
  }
  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }
    var res = "";
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(
        String,
        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
      );
    }
    return res;
  }
  function asciiSlice(buf, start, end) {
    var ret = "";
    end = Math.min(buf.length, end);
    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 127);
    }
    return ret;
  }
  function latin1Slice(buf, start, end) {
    var ret = "";
    end = Math.min(buf.length, end);
    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret;
  }
  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = "";
    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }
    return out;
  }
  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = "";
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
  }
  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
    if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
  }
  function checkInt(buf, value, offset, ext, max, min) {
    if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError("Index out of range");
  }
  function objectWriteUInt16(buf, value, offset, littleEndian) {
    if (value < 0) value = 65535 + value + 1;
    for (var i = 0, j2 = Math.min(buf.length - offset, 2); i < j2; ++i) {
      buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
    }
  }
  function objectWriteUInt32(buf, value, offset, littleEndian) {
    if (value < 0) value = 4294967295 + value + 1;
    for (var i = 0, j2 = Math.min(buf.length - offset, 4); i < j2; ++i) {
      buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;
    }
  }
  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError("Index out of range");
    if (offset < 0) throw new RangeError("Index out of range");
  }
  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4);
    }
    write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }
  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8);
    }
    write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }
  function base64clean(str) {
    str = stringtrim(str).replace(INVALID_BASE64_RE, "");
    if (str.length < 2) return "";
    while (str.length % 4 !== 0) {
      str = str + "=";
    }
    return str;
  }
  function stringtrim(str) {
    if (str.trim) return str.trim();
    return str.replace(/^\s+|\s+$/g, "");
  }
  function toHex(n) {
    if (n < 16) return "0" + n.toString(16);
    return n.toString(16);
  }
  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);
      if (codePoint > 55295 && codePoint < 57344) {
        if (!leadSurrogate) {
          if (codePoint > 56319) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            continue;
          }
          leadSurrogate = codePoint;
          continue;
        }
        if (codePoint < 56320) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
          leadSurrogate = codePoint;
          continue;
        }
        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(239, 191, 189);
      }
      leadSurrogate = null;
      if (codePoint < 128) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 2048) {
        if ((units -= 2) < 0) break;
        bytes.push(
          codePoint >> 6 | 192,
          codePoint & 63 | 128
        );
      } else if (codePoint < 65536) {
        if ((units -= 3) < 0) break;
        bytes.push(
          codePoint >> 12 | 224,
          codePoint >> 6 & 63 | 128,
          codePoint & 63 | 128
        );
      } else if (codePoint < 1114112) {
        if ((units -= 4) < 0) break;
        bytes.push(
          codePoint >> 18 | 240,
          codePoint >> 12 & 63 | 128,
          codePoint >> 6 & 63 | 128,
          codePoint & 63 | 128
        );
      } else {
        throw new Error("Invalid code point");
      }
    }
    return bytes;
  }
  function asciiToBytes(str) {
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 255);
    }
    return byteArray;
  }
  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }
    return byteArray;
  }
  function base64ToBytes(str) {
    return toByteArray(base64clean(str));
  }
  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }
    return i;
  }
  function isnan(val) {
    return val !== val;
  }
  function isBuffer(obj) {
    return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj));
  }
  function isFastBuffer(obj) {
    return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
  }
  function isSlowBuffer(obj) {
    return typeof obj.readFloatLE === "function" && typeof obj.slice === "function" && isFastBuffer(obj.slice(0, 0));
  }
  var lookup, revLookup, Arr, inited, toString, isArray, INSPECT_MAX_BYTES, _kMaxLength, MAX_ARGUMENTS_LENGTH, INVALID_BASE64_RE;
  var init_buffer = __esm({
    "node-modules-polyfills:buffer"() {
      init_polyfills();
      lookup = [];
      revLookup = [];
      Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      inited = false;
      toString = {}.toString;
      isArray = Array.isArray || function(arr) {
        return toString.call(arr) == "[object Array]";
      };
      INSPECT_MAX_BYTES = 50;
      Buffer2.TYPED_ARRAY_SUPPORT = globalThis.TYPED_ARRAY_SUPPORT !== void 0 ? globalThis.TYPED_ARRAY_SUPPORT : true;
      _kMaxLength = kMaxLength();
      Buffer2.poolSize = 8192;
      Buffer2._augment = function(arr) {
        arr.__proto__ = Buffer2.prototype;
        return arr;
      };
      Buffer2.from = function(value, encodingOrOffset, length) {
        return from(null, value, encodingOrOffset, length);
      };
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        Buffer2.prototype.__proto__ = Uint8Array.prototype;
        Buffer2.__proto__ = Uint8Array;
      }
      Buffer2.alloc = function(size, fill2, encoding) {
        return alloc(null, size, fill2, encoding);
      };
      Buffer2.allocUnsafe = function(size) {
        return allocUnsafe(null, size);
      };
      Buffer2.allocUnsafeSlow = function(size) {
        return allocUnsafe(null, size);
      };
      Buffer2.isBuffer = isBuffer;
      Buffer2.compare = function compare(a, b) {
        if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
          throw new TypeError("Arguments must be Buffers");
        }
        if (a === b) return 0;
        var x = a.length;
        var y = b.length;
        for (var i = 0, len = Math.min(x, y); i < len; ++i) {
          if (a[i] !== b[i]) {
            x = a[i];
            y = b[i];
            break;
          }
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      Buffer2.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      Buffer2.concat = function concat(list, length) {
        if (!isArray(list)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        if (list.length === 0) {
          return Buffer2.alloc(0);
        }
        var i;
        if (length === void 0) {
          length = 0;
          for (i = 0; i < list.length; ++i) {
            length += list[i].length;
          }
        }
        var buffer = Buffer2.allocUnsafe(length);
        var pos = 0;
        for (i = 0; i < list.length; ++i) {
          var buf = list[i];
          if (!internalIsBuffer(buf)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          }
          buf.copy(buffer, pos);
          pos += buf.length;
        }
        return buffer;
      };
      Buffer2.byteLength = byteLength;
      Buffer2.prototype._isBuffer = true;
      Buffer2.prototype.swap16 = function swap16() {
        var len = this.length;
        if (len % 2 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for (var i = 0; i < len; i += 2) {
          swap(this, i, i + 1);
        }
        return this;
      };
      Buffer2.prototype.swap32 = function swap32() {
        var len = this.length;
        if (len % 4 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for (var i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer2.prototype.swap64 = function swap64() {
        var len = this.length;
        if (len % 8 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for (var i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer2.prototype.toString = function toString2() {
        var length = this.length | 0;
        if (length === 0) return "";
        if (arguments.length === 0) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer2.prototype.equals = function equals(b) {
        if (!internalIsBuffer(b)) throw new TypeError("Argument must be a Buffer");
        if (this === b) return true;
        return Buffer2.compare(this, b) === 0;
      };
      Buffer2.prototype.inspect = function inspect() {
        var str = "";
        var max = INSPECT_MAX_BYTES;
        if (this.length > 0) {
          str = this.toString("hex", 0, max).match(/.{2}/g).join(" ");
          if (this.length > max) str += " ... ";
        }
        return "<Buffer " + str + ">";
      };
      Buffer2.prototype.compare = function compare2(target, start, end, thisStart, thisEnd) {
        if (!internalIsBuffer(target)) {
          throw new TypeError("Argument must be a Buffer");
        }
        if (start === void 0) {
          start = 0;
        }
        if (end === void 0) {
          end = target ? target.length : 0;
        }
        if (thisStart === void 0) {
          thisStart = 0;
        }
        if (thisEnd === void 0) {
          thisEnd = this.length;
        }
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
          throw new RangeError("out of range index");
        }
        if (thisStart >= thisEnd && start >= end) {
          return 0;
        }
        if (thisStart >= thisEnd) {
          return -1;
        }
        if (start >= end) {
          return 1;
        }
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);
        for (var i = 0; i < len; ++i) {
          if (thisCopy[i] !== targetCopy[i]) {
            x = thisCopy[i];
            y = targetCopy[i];
            break;
          }
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
      };
      Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      Buffer2.prototype.write = function write2(string, offset, length, encoding) {
        if (offset === void 0) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (length === void 0 && typeof offset === "string") {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else if (isFinite(offset)) {
          offset = offset | 0;
          if (isFinite(length)) {
            length = length | 0;
            if (encoding === void 0) encoding = "utf8";
          } else {
            encoding = length;
            length = void 0;
          }
        } else {
          throw new Error(
            "Buffer.write(string, encoding, offset[, length]) is no longer supported"
          );
        }
        var remaining = this.length - offset;
        if (length === void 0 || length > remaining) length = remaining;
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
          throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!encoding) encoding = "utf8";
        var loweredCase = false;
        for (; ; ) {
          switch (encoding) {
            case "hex":
              return hexWrite(this, string, offset, length);
            case "utf8":
            case "utf-8":
              return utf8Write(this, string, offset, length);
            case "ascii":
              return asciiWrite(this, string, offset, length);
            case "latin1":
            case "binary":
              return latin1Write(this, string, offset, length);
            case "base64":
              return base64Write(this, string, offset, length);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ucs2Write(this, string, offset, length);
            default:
              if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
              encoding = ("" + encoding).toLowerCase();
              loweredCase = true;
          }
        }
      };
      Buffer2.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      MAX_ARGUMENTS_LENGTH = 4096;
      Buffer2.prototype.slice = function slice(start, end) {
        var len = this.length;
        start = ~~start;
        end = end === void 0 ? len : ~~end;
        if (start < 0) {
          start += len;
          if (start < 0) start = 0;
        } else if (start > len) {
          start = len;
        }
        if (end < 0) {
          end += len;
          if (end < 0) end = 0;
        } else if (end > len) {
          end = len;
        }
        if (end < start) end = start;
        var newBuf;
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          newBuf = this.subarray(start, end);
          newBuf.__proto__ = Buffer2.prototype;
        } else {
          var sliceLen = end - start;
          newBuf = new Buffer2(sliceLen, void 0);
          for (var i = 0; i < sliceLen; ++i) {
            newBuf[i] = this[i + start];
          }
        }
        return newBuf;
      };
      Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) {
          checkOffset(offset, byteLength2, this.length);
        }
        var val = this[offset + --byteLength2];
        var mul = 1;
        while (byteLength2 > 0 && (mul *= 256)) {
          val += this[offset + --byteLength2] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
      };
      Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        mul *= 128;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        var i = byteLength2;
        var mul = 1;
        var val = this[offset + --i];
        while (i > 0 && (mul *= 256)) {
          val += this[offset + --i] * mul;
        }
        mul *= 128;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 1, this.length);
        if (!(this[offset] & 128)) return this[offset];
        return (255 - this[offset] + 1) * -1;
      };
      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return read(this, offset, true, 23, 4);
      };
      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 4, this.length);
        return read(this, offset, false, 23, 4);
      };
      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 8, this.length);
        return read(this, offset, true, 52, 8);
      };
      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        if (!noAssert) checkOffset(offset, 8, this.length);
        return read(this, offset, false, 52, 8);
      };
      Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        var mul = 1;
        var i = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset | 0;
        byteLength2 = byteLength2 | 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        var i = byteLength2 - 1;
        var mul = 1;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 1, 255, 0);
        if (!Buffer2.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value & 255;
          this[offset + 1] = value >>> 8;
        } else {
          objectWriteUInt16(this, value, offset, true);
        }
        return offset + 2;
      };
      Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = value & 255;
        } else {
          objectWriteUInt16(this, value, offset, false);
        }
        return offset + 2;
      };
      Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset + 3] = value >>> 24;
          this[offset + 2] = value >>> 16;
          this[offset + 1] = value >>> 8;
          this[offset] = value & 255;
        } else {
          objectWriteUInt32(this, value, offset, true);
        }
        return offset + 4;
      };
      Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = value & 255;
        } else {
          objectWriteUInt32(this, value, offset, false);
        }
        return offset + 4;
      };
      Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        var i = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        var i = byteLength2 - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 1, 127, -128);
        if (!Buffer2.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
        if (value < 0) value = 255 + value + 1;
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value & 255;
          this[offset + 1] = value >>> 8;
        } else {
          objectWriteUInt16(this, value, offset, true);
        }
        return offset + 2;
      };
      Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = value & 255;
        } else {
          objectWriteUInt16(this, value, offset, false);
        }
        return offset + 2;
      };
      Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value & 255;
          this[offset + 1] = value >>> 8;
          this[offset + 2] = value >>> 16;
          this[offset + 3] = value >>> 24;
        } else {
          objectWriteUInt32(this, value, offset, true);
        }
        return offset + 4;
      };
      Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset | 0;
        if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (value < 0) value = 4294967295 + value + 1;
        if (Buffer2.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = value & 255;
        } else {
          objectWriteUInt32(this, value, offset, false);
        }
        return offset + 4;
      };
      Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
        if (!start) start = 0;
        if (!end && end !== 0) end = this.length;
        if (targetStart >= target.length) targetStart = target.length;
        if (!targetStart) targetStart = 0;
        if (end > 0 && end < start) end = start;
        if (end === start) return 0;
        if (target.length === 0 || this.length === 0) return 0;
        if (targetStart < 0) {
          throw new RangeError("targetStart out of bounds");
        }
        if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        if (end > this.length) end = this.length;
        if (target.length - targetStart < end - start) {
          end = target.length - targetStart + start;
        }
        var len = end - start;
        var i;
        if (this === target && start < targetStart && targetStart < end) {
          for (i = len - 1; i >= 0; --i) {
            target[i + targetStart] = this[i + start];
          }
        } else if (len < 1e3 || !Buffer2.TYPED_ARRAY_SUPPORT) {
          for (i = 0; i < len; ++i) {
            target[i + targetStart] = this[i + start];
          }
        } else {
          Uint8Array.prototype.set.call(
            target,
            this.subarray(start, start + len),
            targetStart
          );
        }
        return len;
      };
      Buffer2.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === "string") {
          if (typeof start === "string") {
            encoding = start;
            start = 0;
            end = this.length;
          } else if (typeof end === "string") {
            encoding = end;
            end = this.length;
          }
          if (val.length === 1) {
            var code = val.charCodeAt(0);
            if (code < 256) {
              val = code;
            }
          }
          if (encoding !== void 0 && typeof encoding !== "string") {
            throw new TypeError("encoding must be a string");
          }
          if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
            throw new TypeError("Unknown encoding: " + encoding);
          }
        } else if (typeof val === "number") {
          val = val & 255;
        }
        if (start < 0 || this.length < start || this.length < end) {
          throw new RangeError("Out of range index");
        }
        if (end <= start) {
          return this;
        }
        start = start >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val) val = 0;
        var i;
        if (typeof val === "number") {
          for (i = start; i < end; ++i) {
            this[i] = val;
          }
        } else {
          var bytes = internalIsBuffer(val) ? val : utf8ToBytes(new Buffer2(val, encoding).toString());
          var len = bytes.length;
          for (i = 0; i < end - start; ++i) {
            this[i + start] = bytes[i % len];
          }
        }
        return this;
      };
      INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
    }
  });

  // src/polyfills.js
  var init_polyfills = __esm({
    "src/polyfills.js"() {
      "use strict";
      init_buffer();
      globalThis.Buffer = Buffer2;
      if (typeof globalThis.process === "undefined") {
        globalThis.process = {
          env: {},
          nextTick: (fn2, ...args) => Promise.resolve().then(() => fn2(...args)),
          version: "",
          versions: { node: "" },
          platform: "browser",
          browser: true
        };
      }
    }
  });

  // node_modules/inherits/inherits_browser.js
  var require_inherits_browser = __commonJS({
    "node_modules/inherits/inherits_browser.js"(exports2, module2) {
      init_polyfills();
      if (typeof Object.create === "function") {
        module2.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
              constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
          }
        };
      } else {
        module2.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {
            };
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          }
        };
      }
    }
  });

  // node-modules-polyfills-commonjs:buffer
  var require_buffer = __commonJS({
    "node-modules-polyfills-commonjs:buffer"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_buffer(), __toCommonJS(buffer_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node_modules/safe-buffer/index.js
  var require_safe_buffer = __commonJS({
    "node_modules/safe-buffer/index.js"(exports2, module2) {
      init_polyfills();
      var buffer = require_buffer();
      var Buffer4 = buffer.Buffer;
      function copyProps(src, dst) {
        for (var key in src) {
          dst[key] = src[key];
        }
      }
      if (Buffer4.from && Buffer4.alloc && Buffer4.allocUnsafe && Buffer4.allocUnsafeSlow) {
        module2.exports = buffer;
      } else {
        copyProps(buffer, exports2);
        exports2.Buffer = SafeBuffer;
      }
      function SafeBuffer(arg, encodingOrOffset, length) {
        return Buffer4(arg, encodingOrOffset, length);
      }
      SafeBuffer.prototype = Object.create(Buffer4.prototype);
      copyProps(Buffer4, SafeBuffer);
      SafeBuffer.from = function(arg, encodingOrOffset, length) {
        if (typeof arg === "number") {
          throw new TypeError("Argument must not be a number");
        }
        return Buffer4(arg, encodingOrOffset, length);
      };
      SafeBuffer.alloc = function(size, fill2, encoding) {
        if (typeof size !== "number") {
          throw new TypeError("Argument must be a number");
        }
        var buf = Buffer4(size);
        if (fill2 !== void 0) {
          if (typeof encoding === "string") {
            buf.fill(fill2, encoding);
          } else {
            buf.fill(fill2);
          }
        } else {
          buf.fill(0);
        }
        return buf;
      };
      SafeBuffer.allocUnsafe = function(size) {
        if (typeof size !== "number") {
          throw new TypeError("Argument must be a number");
        }
        return Buffer4(size);
      };
      SafeBuffer.allocUnsafeSlow = function(size) {
        if (typeof size !== "number") {
          throw new TypeError("Argument must be a number");
        }
        return buffer.SlowBuffer(size);
      };
    }
  });

  // node-modules-polyfills:events
  var events_exports = {};
  __export(events_exports, {
    EventEmitter: () => EventEmitter,
    default: () => events_default
  });
  function EventHandlers() {
  }
  function EventEmitter() {
    EventEmitter.init.call(this);
  }
  function $getMaxListeners(that) {
    if (that._maxListeners === void 0)
      return EventEmitter.defaultMaxListeners;
    return that._maxListeners;
  }
  function emitNone(handler, isFn, self2) {
    if (isFn)
      handler.call(self2);
    else {
      var len = handler.length;
      var listeners2 = arrayClone(handler, len);
      for (var i = 0; i < len; ++i)
        listeners2[i].call(self2);
    }
  }
  function emitOne(handler, isFn, self2, arg1) {
    if (isFn)
      handler.call(self2, arg1);
    else {
      var len = handler.length;
      var listeners2 = arrayClone(handler, len);
      for (var i = 0; i < len; ++i)
        listeners2[i].call(self2, arg1);
    }
  }
  function emitTwo(handler, isFn, self2, arg1, arg2) {
    if (isFn)
      handler.call(self2, arg1, arg2);
    else {
      var len = handler.length;
      var listeners2 = arrayClone(handler, len);
      for (var i = 0; i < len; ++i)
        listeners2[i].call(self2, arg1, arg2);
    }
  }
  function emitThree(handler, isFn, self2, arg1, arg2, arg3) {
    if (isFn)
      handler.call(self2, arg1, arg2, arg3);
    else {
      var len = handler.length;
      var listeners2 = arrayClone(handler, len);
      for (var i = 0; i < len; ++i)
        listeners2[i].call(self2, arg1, arg2, arg3);
    }
  }
  function emitMany(handler, isFn, self2, args) {
    if (isFn)
      handler.apply(self2, args);
    else {
      var len = handler.length;
      var listeners2 = arrayClone(handler, len);
      for (var i = 0; i < len; ++i)
        listeners2[i].apply(self2, args);
    }
  }
  function _addListener(target, type, listener, prepend) {
    var m;
    var events;
    var existing;
    if (typeof listener !== "function")
      throw new TypeError('"listener" argument must be a function');
    events = target._events;
    if (!events) {
      events = target._events = new EventHandlers();
      target._eventsCount = 0;
    } else {
      if (events.newListener) {
        target.emit(
          "newListener",
          type,
          listener.listener ? listener.listener : listener
        );
        events = target._events;
      }
      existing = events[type];
    }
    if (!existing) {
      existing = events[type] = listener;
      ++target._eventsCount;
    } else {
      if (typeof existing === "function") {
        existing = events[type] = prepend ? [listener, existing] : [existing, listener];
      } else {
        if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
      }
      if (!existing.warned) {
        m = $getMaxListeners(target);
        if (m && m > 0 && existing.length > m) {
          existing.warned = true;
          var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + type + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w.name = "MaxListenersExceededWarning";
          w.emitter = target;
          w.type = type;
          w.count = existing.length;
          emitWarning(w);
        }
      }
    }
    return target;
  }
  function emitWarning(e) {
    typeof console.warn === "function" ? console.warn(e) : console.log(e);
  }
  function _onceWrap(target, type, listener) {
    var fired = false;
    function g4() {
      target.removeListener(type, g4);
      if (!fired) {
        fired = true;
        listener.apply(target, arguments);
      }
    }
    g4.listener = listener;
    return g4;
  }
  function listenerCount(type) {
    var events = this._events;
    if (events) {
      var evlistener = events[type];
      if (typeof evlistener === "function") {
        return 1;
      } else if (evlistener) {
        return evlistener.length;
      }
    }
    return 0;
  }
  function spliceOne(list, index) {
    for (var i = index, k4 = i + 1, n = list.length; k4 < n; i += 1, k4 += 1)
      list[i] = list[k4];
    list.pop();
  }
  function arrayClone(arr, i) {
    var copy2 = new Array(i);
    while (i--)
      copy2[i] = arr[i];
    return copy2;
  }
  function unwrapListeners(arr) {
    var ret = new Array(arr.length);
    for (var i = 0; i < ret.length; ++i) {
      ret[i] = arr[i].listener || arr[i];
    }
    return ret;
  }
  var domain, events_default;
  var init_events = __esm({
    "node-modules-polyfills:events"() {
      "use strict";
      init_polyfills();
      EventHandlers.prototype = /* @__PURE__ */ Object.create(null);
      events_default = EventEmitter;
      EventEmitter.EventEmitter = EventEmitter;
      EventEmitter.usingDomains = false;
      EventEmitter.prototype.domain = void 0;
      EventEmitter.prototype._events = void 0;
      EventEmitter.prototype._maxListeners = void 0;
      EventEmitter.defaultMaxListeners = 10;
      EventEmitter.init = function() {
        this.domain = null;
        if (EventEmitter.usingDomains) {
          if (domain.active && !(this instanceof domain.Domain)) {
            this.domain = domain.active;
          }
        }
        if (!this._events || this._events === Object.getPrototypeOf(this)._events) {
          this._events = new EventHandlers();
          this._eventsCount = 0;
        }
        this._maxListeners = this._maxListeners || void 0;
      };
      EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
        if (typeof n !== "number" || n < 0 || isNaN(n))
          throw new TypeError('"n" argument must be a positive number');
        this._maxListeners = n;
        return this;
      };
      EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
        return $getMaxListeners(this);
      };
      EventEmitter.prototype.emit = function emit(type) {
        var er, handler, len, args, i, events, domain2;
        var needDomainExit = false;
        var doError = type === "error";
        events = this._events;
        if (events)
          doError = doError && events.error == null;
        else if (!doError)
          return false;
        domain2 = this.domain;
        if (doError) {
          er = arguments[1];
          if (domain2) {
            if (!er)
              er = new Error('Uncaught, unspecified "error" event');
            er.domainEmitter = this;
            er.domain = domain2;
            er.domainThrown = false;
            domain2.emit("error", er);
          } else if (er instanceof Error) {
            throw er;
          } else {
            var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
            err.context = er;
            throw err;
          }
          return false;
        }
        handler = events[type];
        if (!handler)
          return false;
        var isFn = typeof handler === "function";
        len = arguments.length;
        switch (len) {
          // fast cases
          case 1:
            emitNone(handler, isFn, this);
            break;
          case 2:
            emitOne(handler, isFn, this, arguments[1]);
            break;
          case 3:
            emitTwo(handler, isFn, this, arguments[1], arguments[2]);
            break;
          case 4:
            emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
            break;
          // slower
          default:
            args = new Array(len - 1);
            for (i = 1; i < len; i++)
              args[i - 1] = arguments[i];
            emitMany(handler, isFn, this, args);
        }
        if (needDomainExit)
          domain2.exit();
        return true;
      };
      EventEmitter.prototype.addListener = function addListener(type, listener) {
        return _addListener(this, type, listener, false);
      };
      EventEmitter.prototype.on = EventEmitter.prototype.addListener;
      EventEmitter.prototype.prependListener = function prependListener(type, listener) {
        return _addListener(this, type, listener, true);
      };
      EventEmitter.prototype.once = function once(type, listener) {
        if (typeof listener !== "function")
          throw new TypeError('"listener" argument must be a function');
        this.on(type, _onceWrap(this, type, listener));
        return this;
      };
      EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
        if (typeof listener !== "function")
          throw new TypeError('"listener" argument must be a function');
        this.prependListener(type, _onceWrap(this, type, listener));
        return this;
      };
      EventEmitter.prototype.removeListener = function removeListener(type, listener) {
        var list, events, position, i, originalListener;
        if (typeof listener !== "function")
          throw new TypeError('"listener" argument must be a function');
        events = this._events;
        if (!events)
          return this;
        list = events[type];
        if (!list)
          return this;
        if (list === listener || list.listener && list.listener === listener) {
          if (--this._eventsCount === 0)
            this._events = new EventHandlers();
          else {
            delete events[type];
            if (events.removeListener)
              this.emit("removeListener", type, list.listener || listener);
          }
        } else if (typeof list !== "function") {
          position = -1;
          for (i = list.length; i-- > 0; ) {
            if (list[i] === listener || list[i].listener && list[i].listener === listener) {
              originalListener = list[i].listener;
              position = i;
              break;
            }
          }
          if (position < 0)
            return this;
          if (list.length === 1) {
            list[0] = void 0;
            if (--this._eventsCount === 0) {
              this._events = new EventHandlers();
              return this;
            } else {
              delete events[type];
            }
          } else {
            spliceOne(list, position);
          }
          if (events.removeListener)
            this.emit("removeListener", type, originalListener || listener);
        }
        return this;
      };
      EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
        var listeners2, events;
        events = this._events;
        if (!events)
          return this;
        if (!events.removeListener) {
          if (arguments.length === 0) {
            this._events = new EventHandlers();
            this._eventsCount = 0;
          } else if (events[type]) {
            if (--this._eventsCount === 0)
              this._events = new EventHandlers();
            else
              delete events[type];
          }
          return this;
        }
        if (arguments.length === 0) {
          var keys3 = Object.keys(events);
          for (var i = 0, key; i < keys3.length; ++i) {
            key = keys3[i];
            if (key === "removeListener") continue;
            this.removeAllListeners(key);
          }
          this.removeAllListeners("removeListener");
          this._events = new EventHandlers();
          this._eventsCount = 0;
          return this;
        }
        listeners2 = events[type];
        if (typeof listeners2 === "function") {
          this.removeListener(type, listeners2);
        } else if (listeners2) {
          do {
            this.removeListener(type, listeners2[listeners2.length - 1]);
          } while (listeners2[0]);
        }
        return this;
      };
      EventEmitter.prototype.listeners = function listeners(type) {
        var evlistener;
        var ret;
        var events = this._events;
        if (!events)
          ret = [];
        else {
          evlistener = events[type];
          if (!evlistener)
            ret = [];
          else if (typeof evlistener === "function")
            ret = [evlistener.listener || evlistener];
          else
            ret = unwrapListeners(evlistener);
        }
        return ret;
      };
      EventEmitter.listenerCount = function(emitter, type) {
        if (typeof emitter.listenerCount === "function") {
          return emitter.listenerCount(type);
        } else {
          return listenerCount.call(emitter, type);
        }
      };
      EventEmitter.prototype.listenerCount = listenerCount;
      EventEmitter.prototype.eventNames = function eventNames() {
        return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
      };
    }
  });

  // node-modules-polyfills-commonjs:events
  var require_events = __commonJS({
    "node-modules-polyfills-commonjs:events"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_events(), __toCommonJS(events_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node_modules/readable-stream/lib/internal/streams/stream-browser.js
  var require_stream_browser = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/stream-browser.js"(exports2, module2) {
      init_polyfills();
      module2.exports = require_events().EventEmitter;
    }
  });

  // node-modules-polyfills:process
  function defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
  }
  function defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
  }
  function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
      return setTimeout(fun, 0);
    }
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
      cachedSetTimeout = setTimeout;
      return setTimeout(fun, 0);
    }
    try {
      return cachedSetTimeout(fun, 0);
    } catch (e) {
      try {
        return cachedSetTimeout.call(null, fun, 0);
      } catch (e3) {
        return cachedSetTimeout.call(this, fun, 0);
      }
    }
  }
  function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
      return clearTimeout(marker);
    }
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
      cachedClearTimeout = clearTimeout;
      return clearTimeout(marker);
    }
    try {
      return cachedClearTimeout(marker);
    } catch (e) {
      try {
        return cachedClearTimeout.call(null, marker);
      } catch (e3) {
        return cachedClearTimeout.call(this, marker);
      }
    }
  }
  function cleanUpNextTick() {
    if (!draining || !currentQueue) {
      return;
    }
    draining = false;
    if (currentQueue.length) {
      queue = currentQueue.concat(queue);
    } else {
      queueIndex = -1;
    }
    if (queue.length) {
      drainQueue();
    }
  }
  function drainQueue() {
    if (draining) {
      return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      while (++queueIndex < len) {
        if (currentQueue) {
          currentQueue[queueIndex].run();
        }
      }
      queueIndex = -1;
      len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
  }
  function nextTick(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
      runTimeout(drainQueue);
    }
  }
  function Item(fun, array) {
    this.fun = fun;
    this.array = array;
  }
  function noop() {
  }
  function binding(name) {
    throw new Error("process.binding is not supported");
  }
  function cwd() {
    return "/";
  }
  function chdir(dir) {
    throw new Error("process.chdir is not supported");
  }
  function umask() {
    return 0;
  }
  function hrtime(previousTimestamp) {
    var clocktime = performanceNow.call(performance) * 1e-3;
    var seconds = Math.floor(clocktime);
    var nanoseconds = Math.floor(clocktime % 1 * 1e9);
    if (previousTimestamp) {
      seconds = seconds - previousTimestamp[0];
      nanoseconds = nanoseconds - previousTimestamp[1];
      if (nanoseconds < 0) {
        seconds--;
        nanoseconds += 1e9;
      }
    }
    return [seconds, nanoseconds];
  }
  function uptime() {
    var currentTime = /* @__PURE__ */ new Date();
    var dif = currentTime - startTime;
    return dif / 1e3;
  }
  var cachedSetTimeout, cachedClearTimeout, queue, draining, currentQueue, queueIndex, title, platform, browser, env, argv, version, versions, release, config, on, addListener2, once2, off, removeListener2, removeAllListeners2, emit2, performance, performanceNow, startTime, browser$1, process_default;
  var init_process = __esm({
    "node-modules-polyfills:process"() {
      init_polyfills();
      cachedSetTimeout = defaultSetTimout;
      cachedClearTimeout = defaultClearTimeout;
      if (typeof globalThis.setTimeout === "function") {
        cachedSetTimeout = setTimeout;
      }
      if (typeof globalThis.clearTimeout === "function") {
        cachedClearTimeout = clearTimeout;
      }
      queue = [];
      draining = false;
      queueIndex = -1;
      Item.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      title = "browser";
      platform = "browser";
      browser = true;
      env = {};
      argv = [];
      version = "";
      versions = {};
      release = {};
      config = {};
      on = noop;
      addListener2 = noop;
      once2 = noop;
      off = noop;
      removeListener2 = noop;
      removeAllListeners2 = noop;
      emit2 = noop;
      performance = globalThis.performance || {};
      performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function() {
        return (/* @__PURE__ */ new Date()).getTime();
      };
      startTime = /* @__PURE__ */ new Date();
      browser$1 = {
        nextTick,
        title,
        browser,
        env,
        argv,
        version,
        versions,
        on,
        addListener: addListener2,
        once: once2,
        off,
        removeListener: removeListener2,
        removeAllListeners: removeAllListeners2,
        emit: emit2,
        binding,
        cwd,
        chdir,
        umask,
        hrtime,
        platform,
        release,
        config,
        uptime
      };
      process_default = browser$1;
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js
  var inherits, inherits_default;
  var init_inherits = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js"() {
      init_polyfills();
      if (typeof Object.create === "function") {
        inherits = function inherits2(ctor, superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        };
      } else {
        inherits = function inherits2(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        };
      }
      inherits_default = inherits;
    }
  });

  // node-modules-polyfills:util
  var util_exports = {};
  __export(util_exports, {
    _extend: () => _extend,
    debuglog: () => debuglog,
    default: () => util_default,
    deprecate: () => deprecate,
    format: () => format,
    inherits: () => inherits_default,
    inspect: () => inspect2,
    isArray: () => isArray2,
    isBoolean: () => isBoolean,
    isBuffer: () => isBuffer2,
    isDate: () => isDate,
    isError: () => isError,
    isFunction: () => isFunction,
    isNull: () => isNull,
    isNullOrUndefined: () => isNullOrUndefined,
    isNumber: () => isNumber,
    isObject: () => isObject,
    isPrimitive: () => isPrimitive,
    isRegExp: () => isRegExp,
    isString: () => isString,
    isSymbol: () => isSymbol,
    isUndefined: () => isUndefined,
    log: () => log
  });
  function format(f) {
    if (!isString(f)) {
      var objects = [];
      for (var i = 0; i < arguments.length; i++) {
        objects.push(inspect2(arguments[i]));
      }
      return objects.join(" ");
    }
    var i = 1;
    var args = arguments;
    var len = args.length;
    var str = String(f).replace(formatRegExp, function(x4) {
      if (x4 === "%%") return "%";
      if (i >= len) return x4;
      switch (x4) {
        case "%s":
          return String(args[i++]);
        case "%d":
          return Number(args[i++]);
        case "%j":
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return "[Circular]";
          }
        default:
          return x4;
      }
    });
    for (var x = args[i]; i < len; x = args[++i]) {
      if (isNull(x) || !isObject(x)) {
        str += " " + x;
      } else {
        str += " " + inspect2(x);
      }
    }
    return str;
  }
  function deprecate(fn2, msg) {
    if (isUndefined(globalThis.process)) {
      return function() {
        return deprecate(fn2, msg).apply(this, arguments);
      };
    }
    if (process_default.noDeprecation === true) {
      return fn2;
    }
    var warned = false;
    function deprecated() {
      if (!warned) {
        if (process_default.throwDeprecation) {
          throw new Error(msg);
        } else if (process_default.traceDeprecation) {
          console.trace(msg);
        } else {
          console.error(msg);
        }
        warned = true;
      }
      return fn2.apply(this, arguments);
    }
    return deprecated;
  }
  function debuglog(set) {
    if (isUndefined(debugEnviron))
      debugEnviron = process_default.env.NODE_DEBUG || "";
    set = set.toUpperCase();
    if (!debugs[set]) {
      if (new RegExp("\\b" + set + "\\b", "i").test(debugEnviron)) {
        var pid = 0;
        debugs[set] = function() {
          var msg = format.apply(null, arguments);
          console.error("%s %d: %s", set, pid, msg);
        };
      } else {
        debugs[set] = function() {
        };
      }
    }
    return debugs[set];
  }
  function inspect2(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    if (arguments.length >= 3) ctx.depth = arguments[2];
    if (arguments.length >= 4) ctx.colors = arguments[3];
    if (isBoolean(opts)) {
      ctx.showHidden = opts;
    } else if (opts) {
      _extend(ctx, opts);
    }
    if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
    if (isUndefined(ctx.depth)) ctx.depth = 2;
    if (isUndefined(ctx.colors)) ctx.colors = false;
    if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
    if (ctx.colors) ctx.stylize = stylizeWithColor;
    return formatValue(ctx, obj, ctx.depth);
  }
  function stylizeWithColor(str, styleType) {
    var style = inspect2.styles[styleType];
    if (style) {
      return "\x1B[" + inspect2.colors[style][0] + "m" + str + "\x1B[" + inspect2.colors[style][1] + "m";
    } else {
      return str;
    }
  }
  function stylizeNoColor(str, styleType) {
    return str;
  }
  function arrayToHash(array) {
    var hash = {};
    array.forEach(function(val, idx) {
      hash[val] = true;
    });
    return hash;
  }
  function formatValue(ctx, value, recurseTimes) {
    if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
    value.inspect !== inspect2 && // Also filter out any prototype objects using the circular check.
    !(value.constructor && value.constructor.prototype === value)) {
      var ret = value.inspect(recurseTimes, ctx);
      if (!isString(ret)) {
        ret = formatValue(ctx, ret, recurseTimes);
      }
      return ret;
    }
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }
    var keys3 = Object.keys(value);
    var visibleKeys = arrayToHash(keys3);
    if (ctx.showHidden) {
      keys3 = Object.getOwnPropertyNames(value);
    }
    if (isError(value) && (keys3.indexOf("message") >= 0 || keys3.indexOf("description") >= 0)) {
      return formatError(value);
    }
    if (keys3.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ": " + value.name : "";
        return ctx.stylize("[Function" + name + "]", "special");
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), "date");
      }
      if (isError(value)) {
        return formatError(value);
      }
    }
    var base = "", array = false, braces = ["{", "}"];
    if (isArray2(value)) {
      array = true;
      braces = ["[", "]"];
    }
    if (isFunction(value)) {
      var n = value.name ? ": " + value.name : "";
      base = " [Function" + n + "]";
    }
    if (isRegExp(value)) {
      base = " " + RegExp.prototype.toString.call(value);
    }
    if (isDate(value)) {
      base = " " + Date.prototype.toUTCString.call(value);
    }
    if (isError(value)) {
      base = " " + formatError(value);
    }
    if (keys3.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }
    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
      } else {
        return ctx.stylize("[Object]", "special");
      }
    }
    ctx.seen.push(value);
    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys3);
    } else {
      output = keys3.map(function(key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }
    ctx.seen.pop();
    return reduceToSingleString(output, base, braces);
  }
  function formatPrimitive(ctx, value) {
    if (isUndefined(value))
      return ctx.stylize("undefined", "undefined");
    if (isString(value)) {
      var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
      return ctx.stylize(simple, "string");
    }
    if (isNumber(value))
      return ctx.stylize("" + value, "number");
    if (isBoolean(value))
      return ctx.stylize("" + value, "boolean");
    if (isNull(value))
      return ctx.stylize("null", "null");
  }
  function formatError(value) {
    return "[" + Error.prototype.toString.call(value) + "]";
  }
  function formatArray(ctx, value, recurseTimes, visibleKeys, keys3) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(
          ctx,
          value,
          recurseTimes,
          visibleKeys,
          String(i),
          true
        ));
      } else {
        output.push("");
      }
    }
    keys3.forEach(function(key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(
          ctx,
          value,
          recurseTimes,
          visibleKeys,
          key,
          true
        ));
      }
    });
    return output;
  }
  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize("[Getter/Setter]", "special");
      } else {
        str = ctx.stylize("[Getter]", "special");
      }
    } else {
      if (desc.set) {
        str = ctx.stylize("[Setter]", "special");
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = "[" + key + "]";
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf("\n") > -1) {
          if (array) {
            str = str.split("\n").map(function(line) {
              return "  " + line;
            }).join("\n").substr(2);
          } else {
            str = "\n" + str.split("\n").map(function(line) {
              return "   " + line;
            }).join("\n");
          }
        }
      } else {
        str = ctx.stylize("[Circular]", "special");
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify("" + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, "name");
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, "string");
      }
    }
    return name + ": " + str;
  }
  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function(prev, cur) {
      numLinesEst++;
      if (cur.indexOf("\n") >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
    }, 0);
    if (length > 60) {
      return braces[0] + (base === "" ? "" : base + "\n ") + " " + output.join(",\n  ") + " " + braces[1];
    }
    return braces[0] + base + " " + output.join(", ") + " " + braces[1];
  }
  function isArray2(ar) {
    return Array.isArray(ar);
  }
  function isBoolean(arg) {
    return typeof arg === "boolean";
  }
  function isNull(arg) {
    return arg === null;
  }
  function isNullOrUndefined(arg) {
    return arg == null;
  }
  function isNumber(arg) {
    return typeof arg === "number";
  }
  function isString(arg) {
    return typeof arg === "string";
  }
  function isSymbol(arg) {
    return typeof arg === "symbol";
  }
  function isUndefined(arg) {
    return arg === void 0;
  }
  function isRegExp(re) {
    return isObject(re) && objectToString(re) === "[object RegExp]";
  }
  function isObject(arg) {
    return typeof arg === "object" && arg !== null;
  }
  function isDate(d) {
    return isObject(d) && objectToString(d) === "[object Date]";
  }
  function isError(e) {
    return isObject(e) && (objectToString(e) === "[object Error]" || e instanceof Error);
  }
  function isFunction(arg) {
    return typeof arg === "function";
  }
  function isPrimitive(arg) {
    return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || // ES6 symbol
    typeof arg === "undefined";
  }
  function isBuffer2(maybeBuf) {
    return Buffer2.isBuffer(maybeBuf);
  }
  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }
  function pad(n) {
    return n < 10 ? "0" + n.toString(10) : n.toString(10);
  }
  function timestamp() {
    var d = /* @__PURE__ */ new Date();
    var time = [
      pad(d.getHours()),
      pad(d.getMinutes()),
      pad(d.getSeconds())
    ].join(":");
    return [d.getDate(), months[d.getMonth()], time].join(" ");
  }
  function log() {
    console.log("%s - %s", timestamp(), format.apply(null, arguments));
  }
  function _extend(origin, add) {
    if (!add || !isObject(add)) return origin;
    var keys3 = Object.keys(add);
    var i = keys3.length;
    while (i--) {
      origin[keys3[i]] = add[keys3[i]];
    }
    return origin;
  }
  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }
  var formatRegExp, debugs, debugEnviron, months, util_default;
  var init_util = __esm({
    "node-modules-polyfills:util"() {
      init_polyfills();
      init_process();
      init_inherits();
      formatRegExp = /%[sdj%]/g;
      debugs = {};
      inspect2.colors = {
        "bold": [1, 22],
        "italic": [3, 23],
        "underline": [4, 24],
        "inverse": [7, 27],
        "white": [37, 39],
        "grey": [90, 39],
        "black": [30, 39],
        "blue": [34, 39],
        "cyan": [36, 39],
        "green": [32, 39],
        "magenta": [35, 39],
        "red": [31, 39],
        "yellow": [33, 39]
      };
      inspect2.styles = {
        "special": "cyan",
        "number": "yellow",
        "boolean": "yellow",
        "undefined": "grey",
        "null": "bold",
        "string": "green",
        "date": "magenta",
        // "name": intentionally not styling
        "regexp": "red"
      };
      months = [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ];
      util_default = {
        inherits: inherits_default,
        _extend,
        log,
        isBuffer: isBuffer2,
        isPrimitive,
        isFunction,
        isError,
        isDate,
        isObject,
        isRegExp,
        isUndefined,
        isSymbol,
        isString,
        isNumber,
        isNullOrUndefined,
        isNull,
        isBoolean,
        isArray: isArray2,
        inspect: inspect2,
        deprecate,
        format,
        debuglog
      };
    }
  });

  // node-modules-polyfills-commonjs:util
  var require_util = __commonJS({
    "node-modules-polyfills-commonjs:util"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_util(), __toCommonJS(util_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node_modules/readable-stream/lib/internal/streams/buffer_list.js
  var require_buffer_list = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      function ownKeys(object, enumerableOnly) {
        var keys3 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          })), keys3.push.apply(keys3, symbols);
        }
        return keys3;
      }
      function _objectSpread(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = null != arguments[i] ? arguments[i] : {};
          i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
        return target;
      }
      function _defineProperty(obj, key, value) {
        key = _toPropertyKey(key);
        if (key in obj) {
          Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
        }
      }
      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        Object.defineProperty(Constructor, "prototype", { writable: false });
        return Constructor;
      }
      function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return typeof key === "symbol" ? key : String(key);
      }
      function _toPrimitive(input, hint) {
        if (typeof input !== "object" || input === null) return input;
        var prim = input[Symbol.toPrimitive];
        if (prim !== void 0) {
          var res = prim.call(input, hint || "default");
          if (typeof res !== "object") return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
      }
      var _require = require_buffer();
      var Buffer4 = _require.Buffer;
      var _require2 = require_util();
      var inspect3 = _require2.inspect;
      var custom = inspect3 && inspect3.custom || "inspect";
      function copyBuffer(src, target, offset) {
        Buffer4.prototype.copy.call(src, target, offset);
      }
      module2.exports = /* @__PURE__ */ function() {
        function BufferList2() {
          _classCallCheck(this, BufferList2);
          this.head = null;
          this.tail = null;
          this.length = 0;
        }
        _createClass(BufferList2, [{
          key: "push",
          value: function push(v4) {
            var entry = {
              data: v4,
              next: null
            };
            if (this.length > 0) this.tail.next = entry;
            else this.head = entry;
            this.tail = entry;
            ++this.length;
          }
        }, {
          key: "unshift",
          value: function unshift(v4) {
            var entry = {
              data: v4,
              next: this.head
            };
            if (this.length === 0) this.tail = entry;
            this.head = entry;
            ++this.length;
          }
        }, {
          key: "shift",
          value: function shift() {
            if (this.length === 0) return;
            var ret = this.head.data;
            if (this.length === 1) this.head = this.tail = null;
            else this.head = this.head.next;
            --this.length;
            return ret;
          }
        }, {
          key: "clear",
          value: function clear() {
            this.head = this.tail = null;
            this.length = 0;
          }
        }, {
          key: "join",
          value: function join(s) {
            if (this.length === 0) return "";
            var p = this.head;
            var ret = "" + p.data;
            while (p = p.next) ret += s + p.data;
            return ret;
          }
        }, {
          key: "concat",
          value: function concat2(n) {
            if (this.length === 0) return Buffer4.alloc(0);
            var ret = Buffer4.allocUnsafe(n >>> 0);
            var p = this.head;
            var i = 0;
            while (p) {
              copyBuffer(p.data, ret, i);
              i += p.data.length;
              p = p.next;
            }
            return ret;
          }
          // Consumes a specified amount of bytes or characters from the buffered data.
        }, {
          key: "consume",
          value: function consume(n, hasStrings) {
            var ret;
            if (n < this.head.data.length) {
              ret = this.head.data.slice(0, n);
              this.head.data = this.head.data.slice(n);
            } else if (n === this.head.data.length) {
              ret = this.shift();
            } else {
              ret = hasStrings ? this._getString(n) : this._getBuffer(n);
            }
            return ret;
          }
        }, {
          key: "first",
          value: function first() {
            return this.head.data;
          }
          // Consumes a specified amount of characters from the buffered data.
        }, {
          key: "_getString",
          value: function _getString(n) {
            var p = this.head;
            var c = 1;
            var ret = p.data;
            n -= ret.length;
            while (p = p.next) {
              var str = p.data;
              var nb = n > str.length ? str.length : n;
              if (nb === str.length) ret += str;
              else ret += str.slice(0, n);
              n -= nb;
              if (n === 0) {
                if (nb === str.length) {
                  ++c;
                  if (p.next) this.head = p.next;
                  else this.head = this.tail = null;
                } else {
                  this.head = p;
                  p.data = str.slice(nb);
                }
                break;
              }
              ++c;
            }
            this.length -= c;
            return ret;
          }
          // Consumes a specified amount of bytes from the buffered data.
        }, {
          key: "_getBuffer",
          value: function _getBuffer(n) {
            var ret = Buffer4.allocUnsafe(n);
            var p = this.head;
            var c = 1;
            p.data.copy(ret);
            n -= p.data.length;
            while (p = p.next) {
              var buf = p.data;
              var nb = n > buf.length ? buf.length : n;
              buf.copy(ret, ret.length - n, 0, nb);
              n -= nb;
              if (n === 0) {
                if (nb === buf.length) {
                  ++c;
                  if (p.next) this.head = p.next;
                  else this.head = this.tail = null;
                } else {
                  this.head = p;
                  p.data = buf.slice(nb);
                }
                break;
              }
              ++c;
            }
            this.length -= c;
            return ret;
          }
          // Make sure the linked list only shows the minimal necessary information.
        }, {
          key: custom,
          value: function value(_, options) {
            return inspect3(this, _objectSpread(_objectSpread({}, options), {}, {
              // Only inspect one level.
              depth: 0,
              // It should not recurse.
              customInspect: false
            }));
          }
        }]);
        return BufferList2;
      }();
    }
  });

  // node_modules/readable-stream/lib/internal/streams/destroy.js
  var require_destroy = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/destroy.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      function destroy(err, cb) {
        var _this = this;
        var readableDestroyed = this._readableState && this._readableState.destroyed;
        var writableDestroyed = this._writableState && this._writableState.destroyed;
        if (readableDestroyed || writableDestroyed) {
          if (cb) {
            cb(err);
          } else if (err) {
            if (!this._writableState) {
              process.nextTick(emitErrorNT, this, err);
            } else if (!this._writableState.errorEmitted) {
              this._writableState.errorEmitted = true;
              process.nextTick(emitErrorNT, this, err);
            }
          }
          return this;
        }
        if (this._readableState) {
          this._readableState.destroyed = true;
        }
        if (this._writableState) {
          this._writableState.destroyed = true;
        }
        this._destroy(err || null, function(err2) {
          if (!cb && err2) {
            if (!_this._writableState) {
              process.nextTick(emitErrorAndCloseNT, _this, err2);
            } else if (!_this._writableState.errorEmitted) {
              _this._writableState.errorEmitted = true;
              process.nextTick(emitErrorAndCloseNT, _this, err2);
            } else {
              process.nextTick(emitCloseNT, _this);
            }
          } else if (cb) {
            process.nextTick(emitCloseNT, _this);
            cb(err2);
          } else {
            process.nextTick(emitCloseNT, _this);
          }
        });
        return this;
      }
      function emitErrorAndCloseNT(self2, err) {
        emitErrorNT(self2, err);
        emitCloseNT(self2);
      }
      function emitCloseNT(self2) {
        if (self2._writableState && !self2._writableState.emitClose) return;
        if (self2._readableState && !self2._readableState.emitClose) return;
        self2.emit("close");
      }
      function undestroy() {
        if (this._readableState) {
          this._readableState.destroyed = false;
          this._readableState.reading = false;
          this._readableState.ended = false;
          this._readableState.endEmitted = false;
        }
        if (this._writableState) {
          this._writableState.destroyed = false;
          this._writableState.ended = false;
          this._writableState.ending = false;
          this._writableState.finalCalled = false;
          this._writableState.prefinished = false;
          this._writableState.finished = false;
          this._writableState.errorEmitted = false;
        }
      }
      function emitErrorNT(self2, err) {
        self2.emit("error", err);
      }
      function errorOrDestroy(stream, err) {
        var rState = stream._readableState;
        var wState = stream._writableState;
        if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);
        else stream.emit("error", err);
      }
      module2.exports = {
        destroy,
        undestroy,
        errorOrDestroy
      };
    }
  });

  // node_modules/readable-stream/errors-browser.js
  var require_errors_browser = __commonJS({
    "node_modules/readable-stream/errors-browser.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
      }
      var codes = {};
      function createErrorType(code, message, Base) {
        if (!Base) {
          Base = Error;
        }
        function getMessage(arg1, arg2, arg3) {
          if (typeof message === "string") {
            return message;
          } else {
            return message(arg1, arg2, arg3);
          }
        }
        var NodeError = /* @__PURE__ */ function(_Base) {
          _inheritsLoose(NodeError2, _Base);
          function NodeError2(arg1, arg2, arg3) {
            return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
          }
          return NodeError2;
        }(Base);
        NodeError.prototype.name = Base.name;
        NodeError.prototype.code = code;
        codes[code] = NodeError;
      }
      function oneOf(expected, thing) {
        if (Array.isArray(expected)) {
          var len = expected.length;
          expected = expected.map(function(i) {
            return String(i);
          });
          if (len > 2) {
            return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1];
          } else if (len === 2) {
            return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
          } else {
            return "of ".concat(thing, " ").concat(expected[0]);
          }
        } else {
          return "of ".concat(thing, " ").concat(String(expected));
        }
      }
      function startsWith(str, search, pos) {
        return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
      }
      function endsWith(str, search, this_len) {
        if (this_len === void 0 || this_len > str.length) {
          this_len = str.length;
        }
        return str.substring(this_len - search.length, this_len) === search;
      }
      function includes2(str, search, start) {
        if (typeof start !== "number") {
          start = 0;
        }
        if (start + search.length > str.length) {
          return false;
        } else {
          return str.indexOf(search, start) !== -1;
        }
      }
      createErrorType("ERR_INVALID_OPT_VALUE", function(name, value) {
        return 'The value "' + value + '" is invalid for option "' + name + '"';
      }, TypeError);
      createErrorType("ERR_INVALID_ARG_TYPE", function(name, expected, actual) {
        var determiner;
        if (typeof expected === "string" && startsWith(expected, "not ")) {
          determiner = "must not be";
          expected = expected.replace(/^not /, "");
        } else {
          determiner = "must be";
        }
        var msg;
        if (endsWith(name, " argument")) {
          msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
        } else {
          var type = includes2(name, ".") ? "property" : "argument";
          msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
        }
        msg += ". Received type ".concat(typeof actual);
        return msg;
      }, TypeError);
      createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
      createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(name) {
        return "The " + name + " method is not implemented";
      });
      createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
      createErrorType("ERR_STREAM_DESTROYED", function(name) {
        return "Cannot call " + name + " after a stream was destroyed";
      });
      createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
      createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
      createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
      createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
      createErrorType("ERR_UNKNOWN_ENCODING", function(arg) {
        return "Unknown encoding: " + arg;
      }, TypeError);
      createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
      module2.exports.codes = codes;
    }
  });

  // node_modules/readable-stream/lib/internal/streams/state.js
  var require_state = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/state.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var ERR_INVALID_OPT_VALUE = require_errors_browser().codes.ERR_INVALID_OPT_VALUE;
      function highWaterMarkFrom(options, isDuplex, duplexKey) {
        return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
      }
      function getHighWaterMark(state, options, duplexKey, isDuplex) {
        var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
        if (hwm != null) {
          if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
            var name = isDuplex ? duplexKey : "highWaterMark";
            throw new ERR_INVALID_OPT_VALUE(name, hwm);
          }
          return Math.floor(hwm);
        }
        return state.objectMode ? 16 : 16 * 1024;
      }
      module2.exports = {
        getHighWaterMark
      };
    }
  });

  // node_modules/util-deprecate/browser.js
  var require_browser = __commonJS({
    "node_modules/util-deprecate/browser.js"(exports2, module2) {
      init_polyfills();
      module2.exports = deprecate2;
      function deprecate2(fn2, msg) {
        if (config2("noDeprecation")) {
          return fn2;
        }
        var warned = false;
        function deprecated() {
          if (!warned) {
            if (config2("throwDeprecation")) {
              throw new Error(msg);
            } else if (config2("traceDeprecation")) {
              console.trace(msg);
            } else {
              console.warn(msg);
            }
            warned = true;
          }
          return fn2.apply(this, arguments);
        }
        return deprecated;
      }
      function config2(name) {
        try {
          if (!globalThis.localStorage) return false;
        } catch (_) {
          return false;
        }
        var val = globalThis.localStorage[name];
        if (null == val) return false;
        return String(val).toLowerCase() === "true";
      }
    }
  });

  // node_modules/readable-stream/lib/_stream_writable.js
  var require_stream_writable = __commonJS({
    "node_modules/readable-stream/lib/_stream_writable.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      module2.exports = Writable2;
      function CorkedRequest2(state) {
        var _this = this;
        this.next = null;
        this.entry = null;
        this.finish = function() {
          onCorkedFinish(_this, state);
        };
      }
      var Duplex2;
      Writable2.WritableState = WritableState2;
      var internalUtil = {
        deprecate: require_browser()
      };
      var Stream2 = require_stream_browser();
      var Buffer4 = require_buffer().Buffer;
      var OurUint8Array = (typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : {}).Uint8Array || function() {
      };
      function _uint8ArrayToBuffer(chunk) {
        return Buffer4.from(chunk);
      }
      function _isUint8Array(obj) {
        return Buffer4.isBuffer(obj) || obj instanceof OurUint8Array;
      }
      var destroyImpl = require_destroy();
      var _require = require_state();
      var getHighWaterMark = _require.getHighWaterMark;
      var _require$codes = require_errors_browser().codes;
      var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
      var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
      var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
      var ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE;
      var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
      var ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES;
      var ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END;
      var ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
      var errorOrDestroy = destroyImpl.errorOrDestroy;
      require_inherits_browser()(Writable2, Stream2);
      function nop2() {
      }
      function WritableState2(options, stream, isDuplex) {
        Duplex2 = Duplex2 || require_stream_duplex();
        options = options || {};
        if (typeof isDuplex !== "boolean") isDuplex = stream instanceof Duplex2;
        this.objectMode = !!options.objectMode;
        if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
        this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex);
        this.finalCalled = false;
        this.needDrain = false;
        this.ending = false;
        this.ended = false;
        this.finished = false;
        this.destroyed = false;
        var noDecode = options.decodeStrings === false;
        this.decodeStrings = !noDecode;
        this.defaultEncoding = options.defaultEncoding || "utf8";
        this.length = 0;
        this.writing = false;
        this.corked = 0;
        this.sync = true;
        this.bufferProcessing = false;
        this.onwrite = function(er) {
          onwrite2(stream, er);
        };
        this.writecb = null;
        this.writelen = 0;
        this.bufferedRequest = null;
        this.lastBufferedRequest = null;
        this.pendingcb = 0;
        this.prefinished = false;
        this.errorEmitted = false;
        this.emitClose = options.emitClose !== false;
        this.autoDestroy = !!options.autoDestroy;
        this.bufferedRequestCount = 0;
        this.corkedRequestsFree = new CorkedRequest2(this);
      }
      WritableState2.prototype.getBuffer = function getBuffer() {
        var current = this.bufferedRequest;
        var out = [];
        while (current) {
          out.push(current);
          current = current.next;
        }
        return out;
      };
      (function() {
        try {
          Object.defineProperty(WritableState2.prototype, "buffer", {
            get: internalUtil.deprecate(function writableStateBufferGetter() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (_) {
        }
      })();
      var realHasInstance;
      if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
        realHasInstance = Function.prototype[Symbol.hasInstance];
        Object.defineProperty(Writable2, Symbol.hasInstance, {
          value: function value(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable2) return false;
            return object && object._writableState instanceof WritableState2;
          }
        });
      } else {
        realHasInstance = function realHasInstance2(object) {
          return object instanceof this;
        };
      }
      function Writable2(options) {
        Duplex2 = Duplex2 || require_stream_duplex();
        var isDuplex = this instanceof Duplex2;
        if (!isDuplex && !realHasInstance.call(Writable2, this)) return new Writable2(options);
        this._writableState = new WritableState2(options, this, isDuplex);
        this.writable = true;
        if (options) {
          if (typeof options.write === "function") this._write = options.write;
          if (typeof options.writev === "function") this._writev = options.writev;
          if (typeof options.destroy === "function") this._destroy = options.destroy;
          if (typeof options.final === "function") this._final = options.final;
        }
        Stream2.call(this);
      }
      Writable2.prototype.pipe = function() {
        errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
      };
      function writeAfterEnd2(stream, cb) {
        var er = new ERR_STREAM_WRITE_AFTER_END();
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
      }
      function validChunk2(stream, state, chunk, cb) {
        var er;
        if (chunk === null) {
          er = new ERR_STREAM_NULL_VALUES();
        } else if (typeof chunk !== "string" && !state.objectMode) {
          er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk);
        }
        if (er) {
          errorOrDestroy(stream, er);
          process.nextTick(cb, er);
          return false;
        }
        return true;
      }
      Writable2.prototype.write = function(chunk, encoding, cb) {
        var state = this._writableState;
        var ret = false;
        var isBuf = !state.objectMode && _isUint8Array(chunk);
        if (isBuf && !Buffer4.isBuffer(chunk)) {
          chunk = _uint8ArrayToBuffer(chunk);
        }
        if (typeof encoding === "function") {
          cb = encoding;
          encoding = null;
        }
        if (isBuf) encoding = "buffer";
        else if (!encoding) encoding = state.defaultEncoding;
        if (typeof cb !== "function") cb = nop2;
        if (state.ending) writeAfterEnd2(this, cb);
        else if (isBuf || validChunk2(this, state, chunk, cb)) {
          state.pendingcb++;
          ret = writeOrBuffer2(this, state, isBuf, chunk, encoding, cb);
        }
        return ret;
      };
      Writable2.prototype.cork = function() {
        this._writableState.corked++;
      };
      Writable2.prototype.uncork = function() {
        var state = this._writableState;
        if (state.corked) {
          state.corked--;
          if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer2(this, state);
        }
      };
      Writable2.prototype.setDefaultEncoding = function setDefaultEncoding2(encoding) {
        if (typeof encoding === "string") encoding = encoding.toLowerCase();
        if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
        this._writableState.defaultEncoding = encoding;
        return this;
      };
      Object.defineProperty(Writable2.prototype, "writableBuffer", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      });
      function decodeChunk2(state, chunk, encoding) {
        if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
          chunk = Buffer4.from(chunk, encoding);
        }
        return chunk;
      }
      Object.defineProperty(Writable2.prototype, "writableHighWaterMark", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      });
      function writeOrBuffer2(stream, state, isBuf, chunk, encoding, cb) {
        if (!isBuf) {
          var newChunk = decodeChunk2(state, chunk, encoding);
          if (chunk !== newChunk) {
            isBuf = true;
            encoding = "buffer";
            chunk = newChunk;
          }
        }
        var len = state.objectMode ? 1 : chunk.length;
        state.length += len;
        var ret = state.length < state.highWaterMark;
        if (!ret) state.needDrain = true;
        if (state.writing || state.corked) {
          var last = state.lastBufferedRequest;
          state.lastBufferedRequest = {
            chunk,
            encoding,
            isBuf,
            callback: cb,
            next: null
          };
          if (last) {
            last.next = state.lastBufferedRequest;
          } else {
            state.bufferedRequest = state.lastBufferedRequest;
          }
          state.bufferedRequestCount += 1;
        } else {
          doWrite2(stream, state, false, len, chunk, encoding, cb);
        }
        return ret;
      }
      function doWrite2(stream, state, writev, len, chunk, encoding, cb) {
        state.writelen = len;
        state.writecb = cb;
        state.writing = true;
        state.sync = true;
        if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED("write"));
        else if (writev) stream._writev(chunk, state.onwrite);
        else stream._write(chunk, encoding, state.onwrite);
        state.sync = false;
      }
      function onwriteError2(stream, state, sync, er, cb) {
        --state.pendingcb;
        if (sync) {
          process.nextTick(cb, er);
          process.nextTick(finishMaybe2, stream, state);
          stream._writableState.errorEmitted = true;
          errorOrDestroy(stream, er);
        } else {
          cb(er);
          stream._writableState.errorEmitted = true;
          errorOrDestroy(stream, er);
          finishMaybe2(stream, state);
        }
      }
      function onwriteStateUpdate2(state) {
        state.writing = false;
        state.writecb = null;
        state.length -= state.writelen;
        state.writelen = 0;
      }
      function onwrite2(stream, er) {
        var state = stream._writableState;
        var sync = state.sync;
        var cb = state.writecb;
        if (typeof cb !== "function") throw new ERR_MULTIPLE_CALLBACK();
        onwriteStateUpdate2(state);
        if (er) onwriteError2(stream, state, sync, er, cb);
        else {
          var finished = needFinish2(state) || stream.destroyed;
          if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
            clearBuffer2(stream, state);
          }
          if (sync) {
            process.nextTick(afterWrite2, stream, state, finished, cb);
          } else {
            afterWrite2(stream, state, finished, cb);
          }
        }
      }
      function afterWrite2(stream, state, finished, cb) {
        if (!finished) onwriteDrain2(stream, state);
        state.pendingcb--;
        cb();
        finishMaybe2(stream, state);
      }
      function onwriteDrain2(stream, state) {
        if (state.length === 0 && state.needDrain) {
          state.needDrain = false;
          stream.emit("drain");
        }
      }
      function clearBuffer2(stream, state) {
        state.bufferProcessing = true;
        var entry = state.bufferedRequest;
        if (stream._writev && entry && entry.next) {
          var l = state.bufferedRequestCount;
          var buffer = new Array(l);
          var holder = state.corkedRequestsFree;
          holder.entry = entry;
          var count = 0;
          var allBuffers = true;
          while (entry) {
            buffer[count] = entry;
            if (!entry.isBuf) allBuffers = false;
            entry = entry.next;
            count += 1;
          }
          buffer.allBuffers = allBuffers;
          doWrite2(stream, state, true, state.length, buffer, "", holder.finish);
          state.pendingcb++;
          state.lastBufferedRequest = null;
          if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
          } else {
            state.corkedRequestsFree = new CorkedRequest2(state);
          }
          state.bufferedRequestCount = 0;
        } else {
          while (entry) {
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite2(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--;
            if (state.writing) {
              break;
            }
          }
          if (entry === null) state.lastBufferedRequest = null;
        }
        state.bufferedRequest = entry;
        state.bufferProcessing = false;
      }
      Writable2.prototype._write = function(chunk, encoding, cb) {
        cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
      };
      Writable2.prototype._writev = null;
      Writable2.prototype.end = function(chunk, encoding, cb) {
        var state = this._writableState;
        if (typeof chunk === "function") {
          cb = chunk;
          chunk = null;
          encoding = null;
        } else if (typeof encoding === "function") {
          cb = encoding;
          encoding = null;
        }
        if (chunk !== null && chunk !== void 0) this.write(chunk, encoding);
        if (state.corked) {
          state.corked = 1;
          this.uncork();
        }
        if (!state.ending) endWritable2(this, state, cb);
        return this;
      };
      Object.defineProperty(Writable2.prototype, "writableLength", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState.length;
        }
      });
      function needFinish2(state) {
        return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
      }
      function callFinal(stream, state) {
        stream._final(function(err) {
          state.pendingcb--;
          if (err) {
            errorOrDestroy(stream, err);
          }
          state.prefinished = true;
          stream.emit("prefinish");
          finishMaybe2(stream, state);
        });
      }
      function prefinish2(stream, state) {
        if (!state.prefinished && !state.finalCalled) {
          if (typeof stream._final === "function" && !state.destroyed) {
            state.pendingcb++;
            state.finalCalled = true;
            process.nextTick(callFinal, stream, state);
          } else {
            state.prefinished = true;
            stream.emit("prefinish");
          }
        }
      }
      function finishMaybe2(stream, state) {
        var need = needFinish2(state);
        if (need) {
          prefinish2(stream, state);
          if (state.pendingcb === 0) {
            state.finished = true;
            stream.emit("finish");
            if (state.autoDestroy) {
              var rState = stream._readableState;
              if (!rState || rState.autoDestroy && rState.endEmitted) {
                stream.destroy();
              }
            }
          }
        }
        return need;
      }
      function endWritable2(stream, state, cb) {
        state.ending = true;
        finishMaybe2(stream, state);
        if (cb) {
          if (state.finished) process.nextTick(cb);
          else stream.once("finish", cb);
        }
        state.ended = true;
        stream.writable = false;
      }
      function onCorkedFinish(corkReq, state, err) {
        var entry = corkReq.entry;
        corkReq.entry = null;
        while (entry) {
          var cb = entry.callback;
          state.pendingcb--;
          cb(err);
          entry = entry.next;
        }
        state.corkedRequestsFree.next = corkReq;
      }
      Object.defineProperty(Writable2.prototype, "destroyed", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          if (this._writableState === void 0) {
            return false;
          }
          return this._writableState.destroyed;
        },
        set: function set(value) {
          if (!this._writableState) {
            return;
          }
          this._writableState.destroyed = value;
        }
      });
      Writable2.prototype.destroy = destroyImpl.destroy;
      Writable2.prototype._undestroy = destroyImpl.undestroy;
      Writable2.prototype._destroy = function(err, cb) {
        cb(err);
      };
    }
  });

  // node_modules/readable-stream/lib/_stream_duplex.js
  var require_stream_duplex = __commonJS({
    "node_modules/readable-stream/lib/_stream_duplex.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var objectKeys = Object.keys || function(obj) {
        var keys4 = [];
        for (var key in obj) keys4.push(key);
        return keys4;
      };
      module2.exports = Duplex2;
      var Readable2 = require_stream_readable();
      var Writable2 = require_stream_writable();
      require_inherits_browser()(Duplex2, Readable2);
      {
        keys3 = objectKeys(Writable2.prototype);
        for (v4 = 0; v4 < keys3.length; v4++) {
          method2 = keys3[v4];
          if (!Duplex2.prototype[method2]) Duplex2.prototype[method2] = Writable2.prototype[method2];
        }
      }
      var keys3;
      var method2;
      var v4;
      function Duplex2(options) {
        if (!(this instanceof Duplex2)) return new Duplex2(options);
        Readable2.call(this, options);
        Writable2.call(this, options);
        this.allowHalfOpen = true;
        if (options) {
          if (options.readable === false) this.readable = false;
          if (options.writable === false) this.writable = false;
          if (options.allowHalfOpen === false) {
            this.allowHalfOpen = false;
            this.once("end", onend2);
          }
        }
      }
      Object.defineProperty(Duplex2.prototype, "writableHighWaterMark", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      });
      Object.defineProperty(Duplex2.prototype, "writableBuffer", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      });
      Object.defineProperty(Duplex2.prototype, "writableLength", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._writableState.length;
        }
      });
      function onend2() {
        if (this._writableState.ended) return;
        process.nextTick(onEndNT2, this);
      }
      function onEndNT2(self2) {
        self2.end();
      }
      Object.defineProperty(Duplex2.prototype, "destroyed", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          if (this._readableState === void 0 || this._writableState === void 0) {
            return false;
          }
          return this._readableState.destroyed && this._writableState.destroyed;
        },
        set: function set(value) {
          if (this._readableState === void 0 || this._writableState === void 0) {
            return;
          }
          this._readableState.destroyed = value;
          this._writableState.destroyed = value;
        }
      });
    }
  });

  // node_modules/string_decoder/lib/string_decoder.js
  var require_string_decoder = __commonJS({
    "node_modules/string_decoder/lib/string_decoder.js"(exports2) {
      "use strict";
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      var isEncoding2 = Buffer4.isEncoding || function(encoding) {
        encoding = "" + encoding;
        switch (encoding && encoding.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function _normalizeEncoding(enc) {
        if (!enc) return "utf8";
        var retried;
        while (true) {
          switch (enc) {
            case "utf8":
            case "utf-8":
              return "utf8";
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return "utf16le";
            case "latin1":
            case "binary":
              return "latin1";
            case "base64":
            case "ascii":
            case "hex":
              return enc;
            default:
              if (retried) return;
              enc = ("" + enc).toLowerCase();
              retried = true;
          }
        }
      }
      function normalizeEncoding(enc) {
        var nenc = _normalizeEncoding(enc);
        if (typeof nenc !== "string" && (Buffer4.isEncoding === isEncoding2 || !isEncoding2(enc))) throw new Error("Unknown encoding: " + enc);
        return nenc || enc;
      }
      exports2.StringDecoder = StringDecoder2;
      function StringDecoder2(encoding) {
        this.encoding = normalizeEncoding(encoding);
        var nb;
        switch (this.encoding) {
          case "utf16le":
            this.text = utf16Text;
            this.end = utf16End;
            nb = 4;
            break;
          case "utf8":
            this.fillLast = utf8FillLast;
            nb = 4;
            break;
          case "base64":
            this.text = base64Text;
            this.end = base64End;
            nb = 3;
            break;
          default:
            this.write = simpleWrite;
            this.end = simpleEnd;
            return;
        }
        this.lastNeed = 0;
        this.lastTotal = 0;
        this.lastChar = Buffer4.allocUnsafe(nb);
      }
      StringDecoder2.prototype.write = function(buf) {
        if (buf.length === 0) return "";
        var r;
        var i;
        if (this.lastNeed) {
          r = this.fillLast(buf);
          if (r === void 0) return "";
          i = this.lastNeed;
          this.lastNeed = 0;
        } else {
          i = 0;
        }
        if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
        return r || "";
      };
      StringDecoder2.prototype.end = utf8End;
      StringDecoder2.prototype.text = utf8Text;
      StringDecoder2.prototype.fillLast = function(buf) {
        if (this.lastNeed <= buf.length) {
          buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
          return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
        this.lastNeed -= buf.length;
      };
      function utf8CheckByte(byte) {
        if (byte <= 127) return 0;
        else if (byte >> 5 === 6) return 2;
        else if (byte >> 4 === 14) return 3;
        else if (byte >> 3 === 30) return 4;
        return byte >> 6 === 2 ? -1 : -2;
      }
      function utf8CheckIncomplete(self2, buf, i) {
        var j2 = buf.length - 1;
        if (j2 < i) return 0;
        var nb = utf8CheckByte(buf[j2]);
        if (nb >= 0) {
          if (nb > 0) self2.lastNeed = nb - 1;
          return nb;
        }
        if (--j2 < i || nb === -2) return 0;
        nb = utf8CheckByte(buf[j2]);
        if (nb >= 0) {
          if (nb > 0) self2.lastNeed = nb - 2;
          return nb;
        }
        if (--j2 < i || nb === -2) return 0;
        nb = utf8CheckByte(buf[j2]);
        if (nb >= 0) {
          if (nb > 0) {
            if (nb === 2) nb = 0;
            else self2.lastNeed = nb - 3;
          }
          return nb;
        }
        return 0;
      }
      function utf8CheckExtraBytes(self2, buf, p) {
        if ((buf[0] & 192) !== 128) {
          self2.lastNeed = 0;
          return "\uFFFD";
        }
        if (self2.lastNeed > 1 && buf.length > 1) {
          if ((buf[1] & 192) !== 128) {
            self2.lastNeed = 1;
            return "\uFFFD";
          }
          if (self2.lastNeed > 2 && buf.length > 2) {
            if ((buf[2] & 192) !== 128) {
              self2.lastNeed = 2;
              return "\uFFFD";
            }
          }
        }
      }
      function utf8FillLast(buf) {
        var p = this.lastTotal - this.lastNeed;
        var r = utf8CheckExtraBytes(this, buf, p);
        if (r !== void 0) return r;
        if (this.lastNeed <= buf.length) {
          buf.copy(this.lastChar, p, 0, this.lastNeed);
          return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, p, 0, buf.length);
        this.lastNeed -= buf.length;
      }
      function utf8Text(buf, i) {
        var total = utf8CheckIncomplete(this, buf, i);
        if (!this.lastNeed) return buf.toString("utf8", i);
        this.lastTotal = total;
        var end = buf.length - (total - this.lastNeed);
        buf.copy(this.lastChar, 0, end);
        return buf.toString("utf8", i, end);
      }
      function utf8End(buf) {
        var r = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) return r + "\uFFFD";
        return r;
      }
      function utf16Text(buf, i) {
        if ((buf.length - i) % 2 === 0) {
          var r = buf.toString("utf16le", i);
          if (r) {
            var c = r.charCodeAt(r.length - 1);
            if (c >= 55296 && c <= 56319) {
              this.lastNeed = 2;
              this.lastTotal = 4;
              this.lastChar[0] = buf[buf.length - 2];
              this.lastChar[1] = buf[buf.length - 1];
              return r.slice(0, -1);
            }
          }
          return r;
        }
        this.lastNeed = 1;
        this.lastTotal = 2;
        this.lastChar[0] = buf[buf.length - 1];
        return buf.toString("utf16le", i, buf.length - 1);
      }
      function utf16End(buf) {
        var r = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) {
          var end = this.lastTotal - this.lastNeed;
          return r + this.lastChar.toString("utf16le", 0, end);
        }
        return r;
      }
      function base64Text(buf, i) {
        var n = (buf.length - i) % 3;
        if (n === 0) return buf.toString("base64", i);
        this.lastNeed = 3 - n;
        this.lastTotal = 3;
        if (n === 1) {
          this.lastChar[0] = buf[buf.length - 1];
        } else {
          this.lastChar[0] = buf[buf.length - 2];
          this.lastChar[1] = buf[buf.length - 1];
        }
        return buf.toString("base64", i, buf.length - n);
      }
      function base64End(buf) {
        var r = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) return r + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
        return r;
      }
      function simpleWrite(buf) {
        return buf.toString(this.encoding);
      }
      function simpleEnd(buf) {
        return buf && buf.length ? this.write(buf) : "";
      }
    }
  });

  // node_modules/readable-stream/lib/internal/streams/end-of-stream.js
  var require_end_of_stream = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var ERR_STREAM_PREMATURE_CLOSE = require_errors_browser().codes.ERR_STREAM_PREMATURE_CLOSE;
      function once3(callback) {
        var called = false;
        return function() {
          if (called) return;
          called = true;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          callback.apply(this, args);
        };
      }
      function noop2() {
      }
      function isRequest(stream) {
        return stream.setHeader && typeof stream.abort === "function";
      }
      function eos(stream, opts, callback) {
        if (typeof opts === "function") return eos(stream, null, opts);
        if (!opts) opts = {};
        callback = once3(callback || noop2);
        var readable = opts.readable || opts.readable !== false && stream.readable;
        var writable = opts.writable || opts.writable !== false && stream.writable;
        var onlegacyfinish = function onlegacyfinish2() {
          if (!stream.writable) onfinish();
        };
        var writableEnded = stream._writableState && stream._writableState.finished;
        var onfinish = function onfinish2() {
          writable = false;
          writableEnded = true;
          if (!readable) callback.call(stream);
        };
        var readableEnded = stream._readableState && stream._readableState.endEmitted;
        var onend2 = function onend3() {
          readable = false;
          readableEnded = true;
          if (!writable) callback.call(stream);
        };
        var onerror = function onerror2(err) {
          callback.call(stream, err);
        };
        var onclose = function onclose2() {
          var err;
          if (readable && !readableEnded) {
            if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
          }
          if (writable && !writableEnded) {
            if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
          }
        };
        var onrequest = function onrequest2() {
          stream.req.on("finish", onfinish);
        };
        if (isRequest(stream)) {
          stream.on("complete", onfinish);
          stream.on("abort", onclose);
          if (stream.req) onrequest();
          else stream.on("request", onrequest);
        } else if (writable && !stream._writableState) {
          stream.on("end", onlegacyfinish);
          stream.on("close", onlegacyfinish);
        }
        stream.on("end", onend2);
        stream.on("finish", onfinish);
        if (opts.error !== false) stream.on("error", onerror);
        stream.on("close", onclose);
        return function() {
          stream.removeListener("complete", onfinish);
          stream.removeListener("abort", onclose);
          stream.removeListener("request", onrequest);
          if (stream.req) stream.req.removeListener("finish", onfinish);
          stream.removeListener("end", onlegacyfinish);
          stream.removeListener("close", onlegacyfinish);
          stream.removeListener("finish", onfinish);
          stream.removeListener("end", onend2);
          stream.removeListener("error", onerror);
          stream.removeListener("close", onclose);
        };
      }
      module2.exports = eos;
    }
  });

  // node_modules/readable-stream/lib/internal/streams/async_iterator.js
  var require_async_iterator = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/async_iterator.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var _Object$setPrototypeO;
      function _defineProperty(obj, key, value) {
        key = _toPropertyKey(key);
        if (key in obj) {
          Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return typeof key === "symbol" ? key : String(key);
      }
      function _toPrimitive(input, hint) {
        if (typeof input !== "object" || input === null) return input;
        var prim = input[Symbol.toPrimitive];
        if (prim !== void 0) {
          var res = prim.call(input, hint || "default");
          if (typeof res !== "object") return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
      }
      var finished = require_end_of_stream();
      var kLastResolve = Symbol("lastResolve");
      var kLastReject = Symbol("lastReject");
      var kError = Symbol("error");
      var kEnded = Symbol("ended");
      var kLastPromise = Symbol("lastPromise");
      var kHandlePromise = Symbol("handlePromise");
      var kStream = Symbol("stream");
      function createIterResult(value, done2) {
        return {
          value,
          done: done2
        };
      }
      function readAndResolve(iter) {
        var resolve = iter[kLastResolve];
        if (resolve !== null) {
          var data = iter[kStream].read();
          if (data !== null) {
            iter[kLastPromise] = null;
            iter[kLastResolve] = null;
            iter[kLastReject] = null;
            resolve(createIterResult(data, false));
          }
        }
      }
      function onReadable(iter) {
        process.nextTick(readAndResolve, iter);
      }
      function wrapForNext(lastPromise, iter) {
        return function(resolve, reject) {
          lastPromise.then(function() {
            if (iter[kEnded]) {
              resolve(createIterResult(void 0, true));
              return;
            }
            iter[kHandlePromise](resolve, reject);
          }, reject);
        };
      }
      var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
      });
      var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
        get stream() {
          return this[kStream];
        },
        next: function next() {
          var _this = this;
          var error = this[kError];
          if (error !== null) {
            return Promise.reject(error);
          }
          if (this[kEnded]) {
            return Promise.resolve(createIterResult(void 0, true));
          }
          if (this[kStream].destroyed) {
            return new Promise(function(resolve, reject) {
              process.nextTick(function() {
                if (_this[kError]) {
                  reject(_this[kError]);
                } else {
                  resolve(createIterResult(void 0, true));
                }
              });
            });
          }
          var lastPromise = this[kLastPromise];
          var promise;
          if (lastPromise) {
            promise = new Promise(wrapForNext(lastPromise, this));
          } else {
            var data = this[kStream].read();
            if (data !== null) {
              return Promise.resolve(createIterResult(data, false));
            }
            promise = new Promise(this[kHandlePromise]);
          }
          this[kLastPromise] = promise;
          return promise;
        }
      }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
        return this;
      }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
        var _this2 = this;
        return new Promise(function(resolve, reject) {
          _this2[kStream].destroy(null, function(err) {
            if (err) {
              reject(err);
              return;
            }
            resolve(createIterResult(void 0, true));
          });
        });
      }), _Object$setPrototypeO), AsyncIteratorPrototype);
      var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator2(stream) {
        var _Object$create;
        var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
          value: stream,
          writable: true
        }), _defineProperty(_Object$create, kLastResolve, {
          value: null,
          writable: true
        }), _defineProperty(_Object$create, kLastReject, {
          value: null,
          writable: true
        }), _defineProperty(_Object$create, kError, {
          value: null,
          writable: true
        }), _defineProperty(_Object$create, kEnded, {
          value: stream._readableState.endEmitted,
          writable: true
        }), _defineProperty(_Object$create, kHandlePromise, {
          value: function value(resolve, reject) {
            var data = iterator[kStream].read();
            if (data) {
              iterator[kLastPromise] = null;
              iterator[kLastResolve] = null;
              iterator[kLastReject] = null;
              resolve(createIterResult(data, false));
            } else {
              iterator[kLastResolve] = resolve;
              iterator[kLastReject] = reject;
            }
          },
          writable: true
        }), _Object$create));
        iterator[kLastPromise] = null;
        finished(stream, function(err) {
          if (err && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
            var reject = iterator[kLastReject];
            if (reject !== null) {
              iterator[kLastPromise] = null;
              iterator[kLastResolve] = null;
              iterator[kLastReject] = null;
              reject(err);
            }
            iterator[kError] = err;
            return;
          }
          var resolve = iterator[kLastResolve];
          if (resolve !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(void 0, true));
          }
          iterator[kEnded] = true;
        });
        stream.on("readable", onReadable.bind(null, iterator));
        return iterator;
      };
      module2.exports = createReadableStreamAsyncIterator;
    }
  });

  // node_modules/readable-stream/lib/internal/streams/from-browser.js
  var require_from_browser = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/from-browser.js"(exports2, module2) {
      init_polyfills();
      module2.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }
  });

  // node_modules/readable-stream/lib/_stream_readable.js
  var require_stream_readable = __commonJS({
    "node_modules/readable-stream/lib/_stream_readable.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      module2.exports = Readable2;
      var Duplex2;
      Readable2.ReadableState = ReadableState2;
      var EE = require_events().EventEmitter;
      var EElistenerCount = function EElistenerCount2(emitter, type) {
        return emitter.listeners(type).length;
      };
      var Stream2 = require_stream_browser();
      var Buffer4 = require_buffer().Buffer;
      var OurUint8Array = (typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : {}).Uint8Array || function() {
      };
      function _uint8ArrayToBuffer(chunk) {
        return Buffer4.from(chunk);
      }
      function _isUint8Array(obj) {
        return Buffer4.isBuffer(obj) || obj instanceof OurUint8Array;
      }
      var debugUtil = require_util();
      var debug3;
      if (debugUtil && debugUtil.debuglog) {
        debug3 = debugUtil.debuglog("stream");
      } else {
        debug3 = function debug4() {
        };
      }
      var BufferList2 = require_buffer_list();
      var destroyImpl = require_destroy();
      var _require = require_state();
      var getHighWaterMark = _require.getHighWaterMark;
      var _require$codes = require_errors_browser().codes;
      var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
      var ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF;
      var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
      var ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      var StringDecoder2;
      var createReadableStreamAsyncIterator;
      var from2;
      require_inherits_browser()(Readable2, Stream2);
      var errorOrDestroy = destroyImpl.errorOrDestroy;
      var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
      function prependListener3(emitter, event, fn2) {
        if (typeof emitter.prependListener === "function") return emitter.prependListener(event, fn2);
        if (!emitter._events || !emitter._events[event]) emitter.on(event, fn2);
        else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn2);
        else emitter._events[event] = [fn2, emitter._events[event]];
      }
      function ReadableState2(options, stream, isDuplex) {
        Duplex2 = Duplex2 || require_stream_duplex();
        options = options || {};
        if (typeof isDuplex !== "boolean") isDuplex = stream instanceof Duplex2;
        this.objectMode = !!options.objectMode;
        if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
        this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex);
        this.buffer = new BufferList2();
        this.length = 0;
        this.pipes = null;
        this.pipesCount = 0;
        this.flowing = null;
        this.ended = false;
        this.endEmitted = false;
        this.reading = false;
        this.sync = true;
        this.needReadable = false;
        this.emittedReadable = false;
        this.readableListening = false;
        this.resumeScheduled = false;
        this.paused = true;
        this.emitClose = options.emitClose !== false;
        this.autoDestroy = !!options.autoDestroy;
        this.destroyed = false;
        this.defaultEncoding = options.defaultEncoding || "utf8";
        this.awaitDrain = 0;
        this.readingMore = false;
        this.decoder = null;
        this.encoding = null;
        if (options.encoding) {
          if (!StringDecoder2) StringDecoder2 = require_string_decoder().StringDecoder;
          this.decoder = new StringDecoder2(options.encoding);
          this.encoding = options.encoding;
        }
      }
      function Readable2(options) {
        Duplex2 = Duplex2 || require_stream_duplex();
        if (!(this instanceof Readable2)) return new Readable2(options);
        var isDuplex = this instanceof Duplex2;
        this._readableState = new ReadableState2(options, this, isDuplex);
        this.readable = true;
        if (options) {
          if (typeof options.read === "function") this._read = options.read;
          if (typeof options.destroy === "function") this._destroy = options.destroy;
        }
        Stream2.call(this);
      }
      Object.defineProperty(Readable2.prototype, "destroyed", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          if (this._readableState === void 0) {
            return false;
          }
          return this._readableState.destroyed;
        },
        set: function set(value) {
          if (!this._readableState) {
            return;
          }
          this._readableState.destroyed = value;
        }
      });
      Readable2.prototype.destroy = destroyImpl.destroy;
      Readable2.prototype._undestroy = destroyImpl.undestroy;
      Readable2.prototype._destroy = function(err, cb) {
        cb(err);
      };
      Readable2.prototype.push = function(chunk, encoding) {
        var state = this._readableState;
        var skipChunkCheck;
        if (!state.objectMode) {
          if (typeof chunk === "string") {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
              chunk = Buffer4.from(chunk, encoding);
              encoding = "";
            }
            skipChunkCheck = true;
          }
        } else {
          skipChunkCheck = true;
        }
        return readableAddChunk2(this, chunk, encoding, false, skipChunkCheck);
      };
      Readable2.prototype.unshift = function(chunk) {
        return readableAddChunk2(this, chunk, null, true, false);
      };
      function readableAddChunk2(stream, chunk, encoding, addToFront, skipChunkCheck) {
        debug3("readableAddChunk", chunk);
        var state = stream._readableState;
        if (chunk === null) {
          state.reading = false;
          onEofChunk2(stream, state);
        } else {
          var er;
          if (!skipChunkCheck) er = chunkInvalid2(state, chunk);
          if (er) {
            errorOrDestroy(stream, er);
          } else if (state.objectMode || chunk && chunk.length > 0) {
            if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer4.prototype) {
              chunk = _uint8ArrayToBuffer(chunk);
            }
            if (addToFront) {
              if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
              else addChunk(stream, state, chunk, true);
            } else if (state.ended) {
              errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
            } else if (state.destroyed) {
              return false;
            } else {
              state.reading = false;
              if (state.decoder && !encoding) {
                chunk = state.decoder.write(chunk);
                if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);
                else maybeReadMore2(stream, state);
              } else {
                addChunk(stream, state, chunk, false);
              }
            }
          } else if (!addToFront) {
            state.reading = false;
            maybeReadMore2(stream, state);
          }
        }
        return !state.ended && (state.length < state.highWaterMark || state.length === 0);
      }
      function addChunk(stream, state, chunk, addToFront) {
        if (state.flowing && state.length === 0 && !state.sync) {
          state.awaitDrain = 0;
          stream.emit("data", chunk);
        } else {
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);
          else state.buffer.push(chunk);
          if (state.needReadable) emitReadable2(stream);
        }
        maybeReadMore2(stream, state);
      }
      function chunkInvalid2(state, chunk) {
        var er;
        if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
          er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
        }
        return er;
      }
      Readable2.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      };
      Readable2.prototype.setEncoding = function(enc) {
        if (!StringDecoder2) StringDecoder2 = require_string_decoder().StringDecoder;
        var decoder = new StringDecoder2(enc);
        this._readableState.decoder = decoder;
        this._readableState.encoding = this._readableState.decoder.encoding;
        var p = this._readableState.buffer.head;
        var content = "";
        while (p !== null) {
          content += decoder.write(p.data);
          p = p.next;
        }
        this._readableState.buffer.clear();
        if (content !== "") this._readableState.buffer.push(content);
        this._readableState.length = content.length;
        return this;
      };
      var MAX_HWM2 = 1073741824;
      function computeNewHighWaterMark2(n) {
        if (n >= MAX_HWM2) {
          n = MAX_HWM2;
        } else {
          n--;
          n |= n >>> 1;
          n |= n >>> 2;
          n |= n >>> 4;
          n |= n >>> 8;
          n |= n >>> 16;
          n++;
        }
        return n;
      }
      function howMuchToRead2(n, state) {
        if (n <= 0 || state.length === 0 && state.ended) return 0;
        if (state.objectMode) return 1;
        if (n !== n) {
          if (state.flowing && state.length) return state.buffer.head.data.length;
          else return state.length;
        }
        if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark2(n);
        if (n <= state.length) return n;
        if (!state.ended) {
          state.needReadable = true;
          return 0;
        }
        return state.length;
      }
      Readable2.prototype.read = function(n) {
        debug3("read", n);
        n = parseInt(n, 10);
        var state = this._readableState;
        var nOrig = n;
        if (n !== 0) state.emittedReadable = false;
        if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
          debug3("read: emitReadable", state.length, state.ended);
          if (state.length === 0 && state.ended) endReadable2(this);
          else emitReadable2(this);
          return null;
        }
        n = howMuchToRead2(n, state);
        if (n === 0 && state.ended) {
          if (state.length === 0) endReadable2(this);
          return null;
        }
        var doRead = state.needReadable;
        debug3("need readable", doRead);
        if (state.length === 0 || state.length - n < state.highWaterMark) {
          doRead = true;
          debug3("length less than watermark", doRead);
        }
        if (state.ended || state.reading) {
          doRead = false;
          debug3("reading or ended", doRead);
        } else if (doRead) {
          debug3("do read");
          state.reading = true;
          state.sync = true;
          if (state.length === 0) state.needReadable = true;
          this._read(state.highWaterMark);
          state.sync = false;
          if (!state.reading) n = howMuchToRead2(nOrig, state);
        }
        var ret;
        if (n > 0) ret = fromList2(n, state);
        else ret = null;
        if (ret === null) {
          state.needReadable = state.length <= state.highWaterMark;
          n = 0;
        } else {
          state.length -= n;
          state.awaitDrain = 0;
        }
        if (state.length === 0) {
          if (!state.ended) state.needReadable = true;
          if (nOrig !== n && state.ended) endReadable2(this);
        }
        if (ret !== null) this.emit("data", ret);
        return ret;
      };
      function onEofChunk2(stream, state) {
        debug3("onEofChunk");
        if (state.ended) return;
        if (state.decoder) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
          }
        }
        state.ended = true;
        if (state.sync) {
          emitReadable2(stream);
        } else {
          state.needReadable = false;
          if (!state.emittedReadable) {
            state.emittedReadable = true;
            emitReadable_2(stream);
          }
        }
      }
      function emitReadable2(stream) {
        var state = stream._readableState;
        debug3("emitReadable", state.needReadable, state.emittedReadable);
        state.needReadable = false;
        if (!state.emittedReadable) {
          debug3("emitReadable", state.flowing);
          state.emittedReadable = true;
          process.nextTick(emitReadable_2, stream);
        }
      }
      function emitReadable_2(stream) {
        var state = stream._readableState;
        debug3("emitReadable_", state.destroyed, state.length, state.ended);
        if (!state.destroyed && (state.length || state.ended)) {
          stream.emit("readable");
          state.emittedReadable = false;
        }
        state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
        flow2(stream);
      }
      function maybeReadMore2(stream, state) {
        if (!state.readingMore) {
          state.readingMore = true;
          process.nextTick(maybeReadMore_2, stream, state);
        }
      }
      function maybeReadMore_2(stream, state) {
        while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
          var len = state.length;
          debug3("maybeReadMore read 0");
          stream.read(0);
          if (len === state.length)
            break;
        }
        state.readingMore = false;
      }
      Readable2.prototype._read = function(n) {
        errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
      };
      Readable2.prototype.pipe = function(dest, pipeOpts) {
        var src = this;
        var state = this._readableState;
        switch (state.pipesCount) {
          case 0:
            state.pipes = dest;
            break;
          case 1:
            state.pipes = [state.pipes, dest];
            break;
          default:
            state.pipes.push(dest);
            break;
        }
        state.pipesCount += 1;
        debug3("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
        var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
        var endFn = doEnd ? onend2 : unpipe;
        if (state.endEmitted) process.nextTick(endFn);
        else src.once("end", endFn);
        dest.on("unpipe", onunpipe);
        function onunpipe(readable, unpipeInfo) {
          debug3("onunpipe");
          if (readable === src) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
              unpipeInfo.hasUnpiped = true;
              cleanup();
            }
          }
        }
        function onend2() {
          debug3("onend");
          dest.end();
        }
        var ondrain = pipeOnDrain2(src);
        dest.on("drain", ondrain);
        var cleanedUp = false;
        function cleanup() {
          debug3("cleanup");
          dest.removeListener("close", onclose);
          dest.removeListener("finish", onfinish);
          dest.removeListener("drain", ondrain);
          dest.removeListener("error", onerror);
          dest.removeListener("unpipe", onunpipe);
          src.removeListener("end", onend2);
          src.removeListener("end", unpipe);
          src.removeListener("data", ondata);
          cleanedUp = true;
          if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
        }
        src.on("data", ondata);
        function ondata(chunk) {
          debug3("ondata");
          var ret = dest.write(chunk);
          debug3("dest.write", ret);
          if (ret === false) {
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf3(state.pipes, dest) !== -1) && !cleanedUp) {
              debug3("false write response, pause", state.awaitDrain);
              state.awaitDrain++;
            }
            src.pause();
          }
        }
        function onerror(er) {
          debug3("onerror", er);
          unpipe();
          dest.removeListener("error", onerror);
          if (EElistenerCount(dest, "error") === 0) errorOrDestroy(dest, er);
        }
        prependListener3(dest, "error", onerror);
        function onclose() {
          dest.removeListener("finish", onfinish);
          unpipe();
        }
        dest.once("close", onclose);
        function onfinish() {
          debug3("onfinish");
          dest.removeListener("close", onclose);
          unpipe();
        }
        dest.once("finish", onfinish);
        function unpipe() {
          debug3("unpipe");
          src.unpipe(dest);
        }
        dest.emit("pipe", src);
        if (!state.flowing) {
          debug3("pipe resume");
          src.resume();
        }
        return dest;
      };
      function pipeOnDrain2(src) {
        return function pipeOnDrainFunctionResult() {
          var state = src._readableState;
          debug3("pipeOnDrain", state.awaitDrain);
          if (state.awaitDrain) state.awaitDrain--;
          if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
            state.flowing = true;
            flow2(src);
          }
        };
      }
      Readable2.prototype.unpipe = function(dest) {
        var state = this._readableState;
        var unpipeInfo = {
          hasUnpiped: false
        };
        if (state.pipesCount === 0) return this;
        if (state.pipesCount === 1) {
          if (dest && dest !== state.pipes) return this;
          if (!dest) dest = state.pipes;
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          if (dest) dest.emit("unpipe", this, unpipeInfo);
          return this;
        }
        if (!dest) {
          var dests = state.pipes;
          var len = state.pipesCount;
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, {
            hasUnpiped: false
          });
          return this;
        }
        var index = indexOf3(state.pipes, dest);
        if (index === -1) return this;
        state.pipes.splice(index, 1);
        state.pipesCount -= 1;
        if (state.pipesCount === 1) state.pipes = state.pipes[0];
        dest.emit("unpipe", this, unpipeInfo);
        return this;
      };
      Readable2.prototype.on = function(ev, fn2) {
        var res = Stream2.prototype.on.call(this, ev, fn2);
        var state = this._readableState;
        if (ev === "data") {
          state.readableListening = this.listenerCount("readable") > 0;
          if (state.flowing !== false) this.resume();
        } else if (ev === "readable") {
          if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.flowing = false;
            state.emittedReadable = false;
            debug3("on readable", state.length, state.reading);
            if (state.length) {
              emitReadable2(this);
            } else if (!state.reading) {
              process.nextTick(nReadingNextTick2, this);
            }
          }
        }
        return res;
      };
      Readable2.prototype.addListener = Readable2.prototype.on;
      Readable2.prototype.removeListener = function(ev, fn2) {
        var res = Stream2.prototype.removeListener.call(this, ev, fn2);
        if (ev === "readable") {
          process.nextTick(updateReadableListening, this);
        }
        return res;
      };
      Readable2.prototype.removeAllListeners = function(ev) {
        var res = Stream2.prototype.removeAllListeners.apply(this, arguments);
        if (ev === "readable" || ev === void 0) {
          process.nextTick(updateReadableListening, this);
        }
        return res;
      };
      function updateReadableListening(self2) {
        var state = self2._readableState;
        state.readableListening = self2.listenerCount("readable") > 0;
        if (state.resumeScheduled && !state.paused) {
          state.flowing = true;
        } else if (self2.listenerCount("data") > 0) {
          self2.resume();
        }
      }
      function nReadingNextTick2(self2) {
        debug3("readable nexttick read 0");
        self2.read(0);
      }
      Readable2.prototype.resume = function() {
        var state = this._readableState;
        if (!state.flowing) {
          debug3("resume");
          state.flowing = !state.readableListening;
          resume2(this, state);
        }
        state.paused = false;
        return this;
      };
      function resume2(stream, state) {
        if (!state.resumeScheduled) {
          state.resumeScheduled = true;
          process.nextTick(resume_2, stream, state);
        }
      }
      function resume_2(stream, state) {
        debug3("resume", state.reading);
        if (!state.reading) {
          stream.read(0);
        }
        state.resumeScheduled = false;
        stream.emit("resume");
        flow2(stream);
        if (state.flowing && !state.reading) stream.read(0);
      }
      Readable2.prototype.pause = function() {
        debug3("call pause flowing=%j", this._readableState.flowing);
        if (this._readableState.flowing !== false) {
          debug3("pause");
          this._readableState.flowing = false;
          this.emit("pause");
        }
        this._readableState.paused = true;
        return this;
      };
      function flow2(stream) {
        var state = stream._readableState;
        debug3("flow", state.flowing);
        while (state.flowing && stream.read() !== null) ;
      }
      Readable2.prototype.wrap = function(stream) {
        var _this = this;
        var state = this._readableState;
        var paused = false;
        stream.on("end", function() {
          debug3("wrapped end");
          if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) _this.push(chunk);
          }
          _this.push(null);
        });
        stream.on("data", function(chunk) {
          debug3("wrapped data");
          if (state.decoder) chunk = state.decoder.write(chunk);
          if (state.objectMode && (chunk === null || chunk === void 0)) return;
          else if (!state.objectMode && (!chunk || !chunk.length)) return;
          var ret = _this.push(chunk);
          if (!ret) {
            paused = true;
            stream.pause();
          }
        });
        for (var i in stream) {
          if (this[i] === void 0 && typeof stream[i] === "function") {
            this[i] = /* @__PURE__ */ function methodWrap(method2) {
              return function methodWrapReturnFunction() {
                return stream[method2].apply(stream, arguments);
              };
            }(i);
          }
        }
        for (var n = 0; n < kProxyEvents.length; n++) {
          stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
        }
        this._read = function(n3) {
          debug3("wrapped _read", n3);
          if (paused) {
            paused = false;
            stream.resume();
          }
        };
        return this;
      };
      if (typeof Symbol === "function") {
        Readable2.prototype[Symbol.asyncIterator] = function() {
          if (createReadableStreamAsyncIterator === void 0) {
            createReadableStreamAsyncIterator = require_async_iterator();
          }
          return createReadableStreamAsyncIterator(this);
        };
      }
      Object.defineProperty(Readable2.prototype, "readableHighWaterMark", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._readableState.highWaterMark;
        }
      });
      Object.defineProperty(Readable2.prototype, "readableBuffer", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._readableState && this._readableState.buffer;
        }
      });
      Object.defineProperty(Readable2.prototype, "readableFlowing", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._readableState.flowing;
        },
        set: function set(state) {
          if (this._readableState) {
            this._readableState.flowing = state;
          }
        }
      });
      Readable2._fromList = fromList2;
      Object.defineProperty(Readable2.prototype, "readableLength", {
        // making it explicit this property is not enumerable
        // because otherwise some prototype manipulation in
        // userland will fail
        enumerable: false,
        get: function get() {
          return this._readableState.length;
        }
      });
      function fromList2(n, state) {
        if (state.length === 0) return null;
        var ret;
        if (state.objectMode) ret = state.buffer.shift();
        else if (!n || n >= state.length) {
          if (state.decoder) ret = state.buffer.join("");
          else if (state.buffer.length === 1) ret = state.buffer.first();
          else ret = state.buffer.concat(state.length);
          state.buffer.clear();
        } else {
          ret = state.buffer.consume(n, state.decoder);
        }
        return ret;
      }
      function endReadable2(stream) {
        var state = stream._readableState;
        debug3("endReadable", state.endEmitted);
        if (!state.endEmitted) {
          state.ended = true;
          process.nextTick(endReadableNT2, state, stream);
        }
      }
      function endReadableNT2(state, stream) {
        debug3("endReadableNT", state.endEmitted, state.length);
        if (!state.endEmitted && state.length === 0) {
          state.endEmitted = true;
          stream.readable = false;
          stream.emit("end");
          if (state.autoDestroy) {
            var wState = stream._writableState;
            if (!wState || wState.autoDestroy && wState.finished) {
              stream.destroy();
            }
          }
        }
      }
      if (typeof Symbol === "function") {
        Readable2.from = function(iterable, opts) {
          if (from2 === void 0) {
            from2 = require_from_browser();
          }
          return from2(Readable2, iterable, opts);
        };
      }
      function indexOf3(xs, x) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (xs[i] === x) return i;
        }
        return -1;
      }
    }
  });

  // node_modules/readable-stream/lib/_stream_transform.js
  var require_stream_transform = __commonJS({
    "node_modules/readable-stream/lib/_stream_transform.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      module2.exports = Transform2;
      var _require$codes = require_errors_browser().codes;
      var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
      var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
      var ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING;
      var ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
      var Duplex2 = require_stream_duplex();
      require_inherits_browser()(Transform2, Duplex2);
      function afterTransform2(er, data) {
        var ts = this._transformState;
        ts.transforming = false;
        var cb = ts.writecb;
        if (cb === null) {
          return this.emit("error", new ERR_MULTIPLE_CALLBACK());
        }
        ts.writechunk = null;
        ts.writecb = null;
        if (data != null)
          this.push(data);
        cb(er);
        var rs = this._readableState;
        rs.reading = false;
        if (rs.needReadable || rs.length < rs.highWaterMark) {
          this._read(rs.highWaterMark);
        }
      }
      function Transform2(options) {
        if (!(this instanceof Transform2)) return new Transform2(options);
        Duplex2.call(this, options);
        this._transformState = {
          afterTransform: afterTransform2.bind(this),
          needTransform: false,
          transforming: false,
          writecb: null,
          writechunk: null,
          writeencoding: null
        };
        this._readableState.needReadable = true;
        this._readableState.sync = false;
        if (options) {
          if (typeof options.transform === "function") this._transform = options.transform;
          if (typeof options.flush === "function") this._flush = options.flush;
        }
        this.on("prefinish", prefinish2);
      }
      function prefinish2() {
        var _this = this;
        if (typeof this._flush === "function" && !this._readableState.destroyed) {
          this._flush(function(er, data) {
            done2(_this, er, data);
          });
        } else {
          done2(this, null, null);
        }
      }
      Transform2.prototype.push = function(chunk, encoding) {
        this._transformState.needTransform = false;
        return Duplex2.prototype.push.call(this, chunk, encoding);
      };
      Transform2.prototype._transform = function(chunk, encoding, cb) {
        cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
      };
      Transform2.prototype._write = function(chunk, encoding, cb) {
        var ts = this._transformState;
        ts.writecb = cb;
        ts.writechunk = chunk;
        ts.writeencoding = encoding;
        if (!ts.transforming) {
          var rs = this._readableState;
          if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
        }
      };
      Transform2.prototype._read = function(n) {
        var ts = this._transformState;
        if (ts.writechunk !== null && !ts.transforming) {
          ts.transforming = true;
          this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
        } else {
          ts.needTransform = true;
        }
      };
      Transform2.prototype._destroy = function(err, cb) {
        Duplex2.prototype._destroy.call(this, err, function(err2) {
          cb(err2);
        });
      };
      function done2(stream, er, data) {
        if (er) return stream.emit("error", er);
        if (data != null)
          stream.push(data);
        if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
        if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
        return stream.push(null);
      }
    }
  });

  // node_modules/readable-stream/lib/_stream_passthrough.js
  var require_stream_passthrough = __commonJS({
    "node_modules/readable-stream/lib/_stream_passthrough.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      module2.exports = PassThrough2;
      var Transform2 = require_stream_transform();
      require_inherits_browser()(PassThrough2, Transform2);
      function PassThrough2(options) {
        if (!(this instanceof PassThrough2)) return new PassThrough2(options);
        Transform2.call(this, options);
      }
      PassThrough2.prototype._transform = function(chunk, encoding, cb) {
        cb(null, chunk);
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/pipeline.js
  var require_pipeline = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var eos;
      function once3(callback) {
        var called = false;
        return function() {
          if (called) return;
          called = true;
          callback.apply(void 0, arguments);
        };
      }
      var _require$codes = require_errors_browser().codes;
      var ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
      var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
      function noop2(err) {
        if (err) throw err;
      }
      function isRequest(stream) {
        return stream.setHeader && typeof stream.abort === "function";
      }
      function destroyer(stream, reading, writing, callback) {
        callback = once3(callback);
        var closed = false;
        stream.on("close", function() {
          closed = true;
        });
        if (eos === void 0) eos = require_end_of_stream();
        eos(stream, {
          readable: reading,
          writable: writing
        }, function(err) {
          if (err) return callback(err);
          closed = true;
          callback();
        });
        var destroyed = false;
        return function(err) {
          if (closed) return;
          if (destroyed) return;
          destroyed = true;
          if (isRequest(stream)) return stream.abort();
          if (typeof stream.destroy === "function") return stream.destroy();
          callback(err || new ERR_STREAM_DESTROYED("pipe"));
        };
      }
      function call(fn2) {
        fn2();
      }
      function pipe(from2, to) {
        return from2.pipe(to);
      }
      function popCallback(streams) {
        if (!streams.length) return noop2;
        if (typeof streams[streams.length - 1] !== "function") return noop2;
        return streams.pop();
      }
      function pipeline() {
        for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
          streams[_key] = arguments[_key];
        }
        var callback = popCallback(streams);
        if (Array.isArray(streams[0])) streams = streams[0];
        if (streams.length < 2) {
          throw new ERR_MISSING_ARGS("streams");
        }
        var error;
        var destroys = streams.map(function(stream, i) {
          var reading = i < streams.length - 1;
          var writing = i > 0;
          return destroyer(stream, reading, writing, function(err) {
            if (!error) error = err;
            if (err) destroys.forEach(call);
            if (reading) return;
            destroys.forEach(call);
            callback(error);
          });
        });
        return streams.reduce(pipe);
      }
      module2.exports = pipeline;
    }
  });

  // node_modules/readable-stream/readable-browser.js
  var require_readable_browser = __commonJS({
    "node_modules/readable-stream/readable-browser.js"(exports2, module2) {
      init_polyfills();
      exports2 = module2.exports = require_stream_readable();
      exports2.Stream = exports2;
      exports2.Readable = exports2;
      exports2.Writable = require_stream_writable();
      exports2.Duplex = require_stream_duplex();
      exports2.Transform = require_stream_transform();
      exports2.PassThrough = require_stream_passthrough();
      exports2.finished = require_end_of_stream();
      exports2.pipeline = require_pipeline();
    }
  });

  // node_modules/hash-base/index.js
  var require_hash_base = __commonJS({
    "node_modules/hash-base/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      var Transform2 = require_readable_browser().Transform;
      var inherits2 = require_inherits_browser();
      function throwIfNotStringOrBuffer(val, prefix) {
        if (!Buffer4.isBuffer(val) && typeof val !== "string") {
          throw new TypeError(prefix + " must be a string or a buffer");
        }
      }
      function HashBase(blockSize) {
        Transform2.call(this);
        this._block = Buffer4.allocUnsafe(blockSize);
        this._blockSize = blockSize;
        this._blockOffset = 0;
        this._length = [0, 0, 0, 0];
        this._finalized = false;
      }
      inherits2(HashBase, Transform2);
      HashBase.prototype._transform = function(chunk, encoding, callback) {
        var error = null;
        try {
          this.update(chunk, encoding);
        } catch (err) {
          error = err;
        }
        callback(error);
      };
      HashBase.prototype._flush = function(callback) {
        var error = null;
        try {
          this.push(this.digest());
        } catch (err) {
          error = err;
        }
        callback(error);
      };
      HashBase.prototype.update = function(data, encoding) {
        throwIfNotStringOrBuffer(data, "Data");
        if (this._finalized) throw new Error("Digest already called");
        if (!Buffer4.isBuffer(data)) data = Buffer4.from(data, encoding);
        var block = this._block;
        var offset = 0;
        while (this._blockOffset + data.length - offset >= this._blockSize) {
          for (var i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++];
          this._update();
          this._blockOffset = 0;
        }
        while (offset < data.length) block[this._blockOffset++] = data[offset++];
        for (var j2 = 0, carry = data.length * 8; carry > 0; ++j2) {
          this._length[j2] += carry;
          carry = this._length[j2] / 4294967296 | 0;
          if (carry > 0) this._length[j2] -= 4294967296 * carry;
        }
        return this;
      };
      HashBase.prototype._update = function() {
        throw new Error("_update is not implemented");
      };
      HashBase.prototype.digest = function(encoding) {
        if (this._finalized) throw new Error("Digest already called");
        this._finalized = true;
        var digest = this._digest();
        if (encoding !== void 0) digest = digest.toString(encoding);
        this._block.fill(0);
        this._blockOffset = 0;
        for (var i = 0; i < 4; ++i) this._length[i] = 0;
        return digest;
      };
      HashBase.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      };
      module2.exports = HashBase;
    }
  });

  // node_modules/md5.js/index.js
  var require_md5 = __commonJS({
    "node_modules/md5.js/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var HashBase = require_hash_base();
      var Buffer4 = require_safe_buffer().Buffer;
      var ARRAY16 = new Array(16);
      function MD5() {
        HashBase.call(this, 64);
        this._a = 1732584193;
        this._b = 4023233417;
        this._c = 2562383102;
        this._d = 271733878;
      }
      inherits2(MD5, HashBase);
      MD5.prototype._update = function() {
        var M4 = ARRAY16;
        for (var i = 0; i < 16; ++i) M4[i] = this._block.readInt32LE(i * 4);
        var a = this._a;
        var b = this._b;
        var c = this._c;
        var d = this._d;
        a = fnF(a, b, c, d, M4[0], 3614090360, 7);
        d = fnF(d, a, b, c, M4[1], 3905402710, 12);
        c = fnF(c, d, a, b, M4[2], 606105819, 17);
        b = fnF(b, c, d, a, M4[3], 3250441966, 22);
        a = fnF(a, b, c, d, M4[4], 4118548399, 7);
        d = fnF(d, a, b, c, M4[5], 1200080426, 12);
        c = fnF(c, d, a, b, M4[6], 2821735955, 17);
        b = fnF(b, c, d, a, M4[7], 4249261313, 22);
        a = fnF(a, b, c, d, M4[8], 1770035416, 7);
        d = fnF(d, a, b, c, M4[9], 2336552879, 12);
        c = fnF(c, d, a, b, M4[10], 4294925233, 17);
        b = fnF(b, c, d, a, M4[11], 2304563134, 22);
        a = fnF(a, b, c, d, M4[12], 1804603682, 7);
        d = fnF(d, a, b, c, M4[13], 4254626195, 12);
        c = fnF(c, d, a, b, M4[14], 2792965006, 17);
        b = fnF(b, c, d, a, M4[15], 1236535329, 22);
        a = fnG(a, b, c, d, M4[1], 4129170786, 5);
        d = fnG(d, a, b, c, M4[6], 3225465664, 9);
        c = fnG(c, d, a, b, M4[11], 643717713, 14);
        b = fnG(b, c, d, a, M4[0], 3921069994, 20);
        a = fnG(a, b, c, d, M4[5], 3593408605, 5);
        d = fnG(d, a, b, c, M4[10], 38016083, 9);
        c = fnG(c, d, a, b, M4[15], 3634488961, 14);
        b = fnG(b, c, d, a, M4[4], 3889429448, 20);
        a = fnG(a, b, c, d, M4[9], 568446438, 5);
        d = fnG(d, a, b, c, M4[14], 3275163606, 9);
        c = fnG(c, d, a, b, M4[3], 4107603335, 14);
        b = fnG(b, c, d, a, M4[8], 1163531501, 20);
        a = fnG(a, b, c, d, M4[13], 2850285829, 5);
        d = fnG(d, a, b, c, M4[2], 4243563512, 9);
        c = fnG(c, d, a, b, M4[7], 1735328473, 14);
        b = fnG(b, c, d, a, M4[12], 2368359562, 20);
        a = fnH(a, b, c, d, M4[5], 4294588738, 4);
        d = fnH(d, a, b, c, M4[8], 2272392833, 11);
        c = fnH(c, d, a, b, M4[11], 1839030562, 16);
        b = fnH(b, c, d, a, M4[14], 4259657740, 23);
        a = fnH(a, b, c, d, M4[1], 2763975236, 4);
        d = fnH(d, a, b, c, M4[4], 1272893353, 11);
        c = fnH(c, d, a, b, M4[7], 4139469664, 16);
        b = fnH(b, c, d, a, M4[10], 3200236656, 23);
        a = fnH(a, b, c, d, M4[13], 681279174, 4);
        d = fnH(d, a, b, c, M4[0], 3936430074, 11);
        c = fnH(c, d, a, b, M4[3], 3572445317, 16);
        b = fnH(b, c, d, a, M4[6], 76029189, 23);
        a = fnH(a, b, c, d, M4[9], 3654602809, 4);
        d = fnH(d, a, b, c, M4[12], 3873151461, 11);
        c = fnH(c, d, a, b, M4[15], 530742520, 16);
        b = fnH(b, c, d, a, M4[2], 3299628645, 23);
        a = fnI(a, b, c, d, M4[0], 4096336452, 6);
        d = fnI(d, a, b, c, M4[7], 1126891415, 10);
        c = fnI(c, d, a, b, M4[14], 2878612391, 15);
        b = fnI(b, c, d, a, M4[5], 4237533241, 21);
        a = fnI(a, b, c, d, M4[12], 1700485571, 6);
        d = fnI(d, a, b, c, M4[3], 2399980690, 10);
        c = fnI(c, d, a, b, M4[10], 4293915773, 15);
        b = fnI(b, c, d, a, M4[1], 2240044497, 21);
        a = fnI(a, b, c, d, M4[8], 1873313359, 6);
        d = fnI(d, a, b, c, M4[15], 4264355552, 10);
        c = fnI(c, d, a, b, M4[6], 2734768916, 15);
        b = fnI(b, c, d, a, M4[13], 1309151649, 21);
        a = fnI(a, b, c, d, M4[4], 4149444226, 6);
        d = fnI(d, a, b, c, M4[11], 3174756917, 10);
        c = fnI(c, d, a, b, M4[2], 718787259, 15);
        b = fnI(b, c, d, a, M4[9], 3951481745, 21);
        this._a = this._a + a | 0;
        this._b = this._b + b | 0;
        this._c = this._c + c | 0;
        this._d = this._d + d | 0;
      };
      MD5.prototype._digest = function() {
        this._block[this._blockOffset++] = 128;
        if (this._blockOffset > 56) {
          this._block.fill(0, this._blockOffset, 64);
          this._update();
          this._blockOffset = 0;
        }
        this._block.fill(0, this._blockOffset, 56);
        this._block.writeUInt32LE(this._length[0], 56);
        this._block.writeUInt32LE(this._length[1], 60);
        this._update();
        var buffer = Buffer4.allocUnsafe(16);
        buffer.writeInt32LE(this._a, 0);
        buffer.writeInt32LE(this._b, 4);
        buffer.writeInt32LE(this._c, 8);
        buffer.writeInt32LE(this._d, 12);
        return buffer;
      };
      function rotl(x, n) {
        return x << n | x >>> 32 - n;
      }
      function fnF(a, b, c, d, m, k4, s) {
        return rotl(a + (b & c | ~b & d) + m + k4 | 0, s) + b | 0;
      }
      function fnG(a, b, c, d, m, k4, s) {
        return rotl(a + (b & d | c & ~d) + m + k4 | 0, s) + b | 0;
      }
      function fnH(a, b, c, d, m, k4, s) {
        return rotl(a + (b ^ c ^ d) + m + k4 | 0, s) + b | 0;
      }
      function fnI(a, b, c, d, m, k4, s) {
        return rotl(a + (c ^ (b | ~d)) + m + k4 | 0, s) + b | 0;
      }
      module2.exports = MD5;
    }
  });

  // node_modules/ripemd160/index.js
  var require_ripemd160 = __commonJS({
    "node_modules/ripemd160/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var Buffer4 = require_buffer().Buffer;
      var inherits2 = require_inherits_browser();
      var HashBase = require_hash_base();
      var ARRAY16 = new Array(16);
      var zl = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ];
      var zr = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ];
      var sl = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ];
      var sr = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
      var hl = [0, 1518500249, 1859775393, 2400959708, 2840853838];
      var hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
      function RIPEMD160() {
        HashBase.call(this, 64);
        this._a = 1732584193;
        this._b = 4023233417;
        this._c = 2562383102;
        this._d = 271733878;
        this._e = 3285377520;
      }
      inherits2(RIPEMD160, HashBase);
      RIPEMD160.prototype._update = function() {
        var words = ARRAY16;
        for (var j2 = 0; j2 < 16; ++j2) words[j2] = this._block.readInt32LE(j2 * 4);
        var al = this._a | 0;
        var bl = this._b | 0;
        var cl = this._c | 0;
        var dl = this._d | 0;
        var el = this._e | 0;
        var ar = this._a | 0;
        var br = this._b | 0;
        var cr = this._c | 0;
        var dr = this._d | 0;
        var er = this._e | 0;
        for (var i = 0; i < 80; i += 1) {
          var tl;
          var tr;
          if (i < 16) {
            tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
            tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
          } else if (i < 32) {
            tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
            tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
          } else if (i < 48) {
            tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
            tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
          } else if (i < 64) {
            tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
            tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
          } else {
            tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
            tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
          }
          al = el;
          el = dl;
          dl = rotl(cl, 10);
          cl = bl;
          bl = tl;
          ar = er;
          er = dr;
          dr = rotl(cr, 10);
          cr = br;
          br = tr;
        }
        var t = this._b + cl + dr | 0;
        this._b = this._c + dl + er | 0;
        this._c = this._d + el + ar | 0;
        this._d = this._e + al + br | 0;
        this._e = this._a + bl + cr | 0;
        this._a = t;
      };
      RIPEMD160.prototype._digest = function() {
        this._block[this._blockOffset++] = 128;
        if (this._blockOffset > 56) {
          this._block.fill(0, this._blockOffset, 64);
          this._update();
          this._blockOffset = 0;
        }
        this._block.fill(0, this._blockOffset, 56);
        this._block.writeUInt32LE(this._length[0], 56);
        this._block.writeUInt32LE(this._length[1], 60);
        this._update();
        var buffer = Buffer4.alloc ? Buffer4.alloc(20) : new Buffer4(20);
        buffer.writeInt32LE(this._a, 0);
        buffer.writeInt32LE(this._b, 4);
        buffer.writeInt32LE(this._c, 8);
        buffer.writeInt32LE(this._d, 12);
        buffer.writeInt32LE(this._e, 16);
        return buffer;
      };
      function rotl(x, n) {
        return x << n | x >>> 32 - n;
      }
      function fn1(a, b, c, d, e, m, k4, s) {
        return rotl(a + (b ^ c ^ d) + m + k4 | 0, s) + e | 0;
      }
      function fn2(a, b, c, d, e, m, k4, s) {
        return rotl(a + (b & c | ~b & d) + m + k4 | 0, s) + e | 0;
      }
      function fn3(a, b, c, d, e, m, k4, s) {
        return rotl(a + ((b | ~c) ^ d) + m + k4 | 0, s) + e | 0;
      }
      function fn4(a, b, c, d, e, m, k4, s) {
        return rotl(a + (b & d | c & ~d) + m + k4 | 0, s) + e | 0;
      }
      function fn5(a, b, c, d, e, m, k4, s) {
        return rotl(a + (b ^ (c | ~d)) + m + k4 | 0, s) + e | 0;
      }
      module2.exports = RIPEMD160;
    }
  });

  // node_modules/sha.js/hash.js
  var require_hash = __commonJS({
    "node_modules/sha.js/hash.js"(exports2, module2) {
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      function Hash(blockSize, finalSize) {
        this._block = Buffer4.alloc(blockSize);
        this._finalSize = finalSize;
        this._blockSize = blockSize;
        this._len = 0;
      }
      Hash.prototype.update = function(data, enc) {
        if (typeof data === "string") {
          enc = enc || "utf8";
          data = Buffer4.from(data, enc);
        }
        var block = this._block;
        var blockSize = this._blockSize;
        var length = data.length;
        var accum = this._len;
        for (var offset = 0; offset < length; ) {
          var assigned = accum % blockSize;
          var remainder = Math.min(length - offset, blockSize - assigned);
          for (var i = 0; i < remainder; i++) {
            block[assigned + i] = data[offset + i];
          }
          accum += remainder;
          offset += remainder;
          if (accum % blockSize === 0) {
            this._update(block);
          }
        }
        this._len += length;
        return this;
      };
      Hash.prototype.digest = function(enc) {
        var rem = this._len % this._blockSize;
        this._block[rem] = 128;
        this._block.fill(0, rem + 1);
        if (rem >= this._finalSize) {
          this._update(this._block);
          this._block.fill(0);
        }
        var bits = this._len * 8;
        if (bits <= 4294967295) {
          this._block.writeUInt32BE(bits, this._blockSize - 4);
        } else {
          var lowBits = (bits & 4294967295) >>> 0;
          var highBits = (bits - lowBits) / 4294967296;
          this._block.writeUInt32BE(highBits, this._blockSize - 8);
          this._block.writeUInt32BE(lowBits, this._blockSize - 4);
        }
        this._update(this._block);
        var hash = this._hash();
        return enc ? hash.toString(enc) : hash;
      };
      Hash.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      };
      module2.exports = Hash;
    }
  });

  // node_modules/sha.js/sha.js
  var require_sha = __commonJS({
    "node_modules/sha.js/sha.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var K4 = [
        1518500249,
        1859775393,
        2400959708 | 0,
        3395469782 | 0
      ];
      var W2 = new Array(80);
      function Sha() {
        this.init();
        this._w = W2;
        Hash.call(this, 64, 56);
      }
      inherits2(Sha, Hash);
      Sha.prototype.init = function() {
        this._a = 1732584193;
        this._b = 4023233417;
        this._c = 2562383102;
        this._d = 271733878;
        this._e = 3285377520;
        return this;
      };
      function rotl5(num) {
        return num << 5 | num >>> 27;
      }
      function rotl30(num) {
        return num << 30 | num >>> 2;
      }
      function ft2(s, b, c, d) {
        if (s === 0) return b & c | ~b & d;
        if (s === 2) return b & c | b & d | c & d;
        return b ^ c ^ d;
      }
      Sha.prototype._update = function(M4) {
        var W3 = this._w;
        var a = this._a | 0;
        var b = this._b | 0;
        var c = this._c | 0;
        var d = this._d | 0;
        var e = this._e | 0;
        for (var i = 0; i < 16; ++i) W3[i] = M4.readInt32BE(i * 4);
        for (; i < 80; ++i) W3[i] = W3[i - 3] ^ W3[i - 8] ^ W3[i - 14] ^ W3[i - 16];
        for (var j2 = 0; j2 < 80; ++j2) {
          var s = ~~(j2 / 20);
          var t = rotl5(a) + ft2(s, b, c, d) + e + W3[j2] + K4[s] | 0;
          e = d;
          d = c;
          c = rotl30(b);
          b = a;
          a = t;
        }
        this._a = a + this._a | 0;
        this._b = b + this._b | 0;
        this._c = c + this._c | 0;
        this._d = d + this._d | 0;
        this._e = e + this._e | 0;
      };
      Sha.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(20);
        H4.writeInt32BE(this._a | 0, 0);
        H4.writeInt32BE(this._b | 0, 4);
        H4.writeInt32BE(this._c | 0, 8);
        H4.writeInt32BE(this._d | 0, 12);
        H4.writeInt32BE(this._e | 0, 16);
        return H4;
      };
      module2.exports = Sha;
    }
  });

  // node_modules/sha.js/sha1.js
  var require_sha1 = __commonJS({
    "node_modules/sha.js/sha1.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var K4 = [
        1518500249,
        1859775393,
        2400959708 | 0,
        3395469782 | 0
      ];
      var W2 = new Array(80);
      function Sha1() {
        this.init();
        this._w = W2;
        Hash.call(this, 64, 56);
      }
      inherits2(Sha1, Hash);
      Sha1.prototype.init = function() {
        this._a = 1732584193;
        this._b = 4023233417;
        this._c = 2562383102;
        this._d = 271733878;
        this._e = 3285377520;
        return this;
      };
      function rotl1(num) {
        return num << 1 | num >>> 31;
      }
      function rotl5(num) {
        return num << 5 | num >>> 27;
      }
      function rotl30(num) {
        return num << 30 | num >>> 2;
      }
      function ft2(s, b, c, d) {
        if (s === 0) return b & c | ~b & d;
        if (s === 2) return b & c | b & d | c & d;
        return b ^ c ^ d;
      }
      Sha1.prototype._update = function(M4) {
        var W3 = this._w;
        var a = this._a | 0;
        var b = this._b | 0;
        var c = this._c | 0;
        var d = this._d | 0;
        var e = this._e | 0;
        for (var i = 0; i < 16; ++i) W3[i] = M4.readInt32BE(i * 4);
        for (; i < 80; ++i) W3[i] = rotl1(W3[i - 3] ^ W3[i - 8] ^ W3[i - 14] ^ W3[i - 16]);
        for (var j2 = 0; j2 < 80; ++j2) {
          var s = ~~(j2 / 20);
          var t = rotl5(a) + ft2(s, b, c, d) + e + W3[j2] + K4[s] | 0;
          e = d;
          d = c;
          c = rotl30(b);
          b = a;
          a = t;
        }
        this._a = a + this._a | 0;
        this._b = b + this._b | 0;
        this._c = c + this._c | 0;
        this._d = d + this._d | 0;
        this._e = e + this._e | 0;
      };
      Sha1.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(20);
        H4.writeInt32BE(this._a | 0, 0);
        H4.writeInt32BE(this._b | 0, 4);
        H4.writeInt32BE(this._c | 0, 8);
        H4.writeInt32BE(this._d | 0, 12);
        H4.writeInt32BE(this._e | 0, 16);
        return H4;
      };
      module2.exports = Sha1;
    }
  });

  // node_modules/sha.js/sha256.js
  var require_sha256 = __commonJS({
    "node_modules/sha.js/sha256.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var K4 = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
      var W2 = new Array(64);
      function Sha2562() {
        this.init();
        this._w = W2;
        Hash.call(this, 64, 56);
      }
      inherits2(Sha2562, Hash);
      Sha2562.prototype.init = function() {
        this._a = 1779033703;
        this._b = 3144134277;
        this._c = 1013904242;
        this._d = 2773480762;
        this._e = 1359893119;
        this._f = 2600822924;
        this._g = 528734635;
        this._h = 1541459225;
        return this;
      };
      function ch(x, y, z) {
        return z ^ x & (y ^ z);
      }
      function maj(x, y, z) {
        return x & y | z & (x | y);
      }
      function sigma0(x) {
        return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
      }
      function sigma1(x) {
        return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
      }
      function gamma0(x) {
        return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
      }
      function gamma1(x) {
        return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
      }
      Sha2562.prototype._update = function(M4) {
        var W3 = this._w;
        var a = this._a | 0;
        var b = this._b | 0;
        var c = this._c | 0;
        var d = this._d | 0;
        var e = this._e | 0;
        var f = this._f | 0;
        var g4 = this._g | 0;
        var h = this._h | 0;
        for (var i = 0; i < 16; ++i) W3[i] = M4.readInt32BE(i * 4);
        for (; i < 64; ++i) W3[i] = gamma1(W3[i - 2]) + W3[i - 7] + gamma0(W3[i - 15]) + W3[i - 16] | 0;
        for (var j2 = 0; j2 < 64; ++j2) {
          var T1 = h + sigma1(e) + ch(e, f, g4) + K4[j2] + W3[j2] | 0;
          var T22 = sigma0(a) + maj(a, b, c) | 0;
          h = g4;
          g4 = f;
          f = e;
          e = d + T1 | 0;
          d = c;
          c = b;
          b = a;
          a = T1 + T22 | 0;
        }
        this._a = a + this._a | 0;
        this._b = b + this._b | 0;
        this._c = c + this._c | 0;
        this._d = d + this._d | 0;
        this._e = e + this._e | 0;
        this._f = f + this._f | 0;
        this._g = g4 + this._g | 0;
        this._h = h + this._h | 0;
      };
      Sha2562.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(32);
        H4.writeInt32BE(this._a, 0);
        H4.writeInt32BE(this._b, 4);
        H4.writeInt32BE(this._c, 8);
        H4.writeInt32BE(this._d, 12);
        H4.writeInt32BE(this._e, 16);
        H4.writeInt32BE(this._f, 20);
        H4.writeInt32BE(this._g, 24);
        H4.writeInt32BE(this._h, 28);
        return H4;
      };
      module2.exports = Sha2562;
    }
  });

  // node_modules/sha.js/sha224.js
  var require_sha224 = __commonJS({
    "node_modules/sha.js/sha224.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Sha2562 = require_sha256();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var W2 = new Array(64);
      function Sha224() {
        this.init();
        this._w = W2;
        Hash.call(this, 64, 56);
      }
      inherits2(Sha224, Sha2562);
      Sha224.prototype.init = function() {
        this._a = 3238371032;
        this._b = 914150663;
        this._c = 812702999;
        this._d = 4144912697;
        this._e = 4290775857;
        this._f = 1750603025;
        this._g = 1694076839;
        this._h = 3204075428;
        return this;
      };
      Sha224.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(28);
        H4.writeInt32BE(this._a, 0);
        H4.writeInt32BE(this._b, 4);
        H4.writeInt32BE(this._c, 8);
        H4.writeInt32BE(this._d, 12);
        H4.writeInt32BE(this._e, 16);
        H4.writeInt32BE(this._f, 20);
        H4.writeInt32BE(this._g, 24);
        return H4;
      };
      module2.exports = Sha224;
    }
  });

  // node_modules/sha.js/sha512.js
  var require_sha512 = __commonJS({
    "node_modules/sha.js/sha512.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var K4 = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      var W2 = new Array(160);
      function Sha512() {
        this.init();
        this._w = W2;
        Hash.call(this, 128, 112);
      }
      inherits2(Sha512, Hash);
      Sha512.prototype.init = function() {
        this._ah = 1779033703;
        this._bh = 3144134277;
        this._ch = 1013904242;
        this._dh = 2773480762;
        this._eh = 1359893119;
        this._fh = 2600822924;
        this._gh = 528734635;
        this._hh = 1541459225;
        this._al = 4089235720;
        this._bl = 2227873595;
        this._cl = 4271175723;
        this._dl = 1595750129;
        this._el = 2917565137;
        this._fl = 725511199;
        this._gl = 4215389547;
        this._hl = 327033209;
        return this;
      };
      function Ch(x, y, z) {
        return z ^ x & (y ^ z);
      }
      function maj(x, y, z) {
        return x & y | z & (x | y);
      }
      function sigma0(x, xl) {
        return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
      }
      function sigma1(x, xl) {
        return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
      }
      function Gamma0(x, xl) {
        return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
      }
      function Gamma0l(x, xl) {
        return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
      }
      function Gamma1(x, xl) {
        return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
      }
      function Gamma1l(x, xl) {
        return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
      }
      function getCarry(a, b) {
        return a >>> 0 < b >>> 0 ? 1 : 0;
      }
      Sha512.prototype._update = function(M4) {
        var W3 = this._w;
        var ah = this._ah | 0;
        var bh = this._bh | 0;
        var ch = this._ch | 0;
        var dh = this._dh | 0;
        var eh = this._eh | 0;
        var fh = this._fh | 0;
        var gh = this._gh | 0;
        var hh = this._hh | 0;
        var al = this._al | 0;
        var bl = this._bl | 0;
        var cl = this._cl | 0;
        var dl = this._dl | 0;
        var el = this._el | 0;
        var fl = this._fl | 0;
        var gl = this._gl | 0;
        var hl = this._hl | 0;
        for (var i = 0; i < 32; i += 2) {
          W3[i] = M4.readInt32BE(i * 4);
          W3[i + 1] = M4.readInt32BE(i * 4 + 4);
        }
        for (; i < 160; i += 2) {
          var xh = W3[i - 15 * 2];
          var xl = W3[i - 15 * 2 + 1];
          var gamma0 = Gamma0(xh, xl);
          var gamma0l = Gamma0l(xl, xh);
          xh = W3[i - 2 * 2];
          xl = W3[i - 2 * 2 + 1];
          var gamma1 = Gamma1(xh, xl);
          var gamma1l = Gamma1l(xl, xh);
          var Wi7h = W3[i - 7 * 2];
          var Wi7l = W3[i - 7 * 2 + 1];
          var Wi16h = W3[i - 16 * 2];
          var Wi16l = W3[i - 16 * 2 + 1];
          var Wil = gamma0l + Wi7l | 0;
          var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
          Wil = Wil + gamma1l | 0;
          Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
          Wil = Wil + Wi16l | 0;
          Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
          W3[i] = Wih;
          W3[i + 1] = Wil;
        }
        for (var j2 = 0; j2 < 160; j2 += 2) {
          Wih = W3[j2];
          Wil = W3[j2 + 1];
          var majh = maj(ah, bh, ch);
          var majl = maj(al, bl, cl);
          var sigma0h = sigma0(ah, al);
          var sigma0l = sigma0(al, ah);
          var sigma1h = sigma1(eh, el);
          var sigma1l = sigma1(el, eh);
          var Kih = K4[j2];
          var Kil = K4[j2 + 1];
          var chh = Ch(eh, fh, gh);
          var chl = Ch(el, fl, gl);
          var t1l = hl + sigma1l | 0;
          var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
          t1l = t1l + chl | 0;
          t1h = t1h + chh + getCarry(t1l, chl) | 0;
          t1l = t1l + Kil | 0;
          t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
          t1l = t1l + Wil | 0;
          t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
          var t2l = sigma0l + majl | 0;
          var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          el = dl + t1l | 0;
          eh = dh + t1h + getCarry(el, dl) | 0;
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          al = t1l + t2l | 0;
          ah = t1h + t2h + getCarry(al, t1l) | 0;
        }
        this._al = this._al + al | 0;
        this._bl = this._bl + bl | 0;
        this._cl = this._cl + cl | 0;
        this._dl = this._dl + dl | 0;
        this._el = this._el + el | 0;
        this._fl = this._fl + fl | 0;
        this._gl = this._gl + gl | 0;
        this._hl = this._hl + hl | 0;
        this._ah = this._ah + ah + getCarry(this._al, al) | 0;
        this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
        this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
        this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
        this._eh = this._eh + eh + getCarry(this._el, el) | 0;
        this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
        this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
        this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
      };
      Sha512.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(64);
        function writeInt64BE(h, l, offset) {
          H4.writeInt32BE(h, offset);
          H4.writeInt32BE(l, offset + 4);
        }
        writeInt64BE(this._ah, this._al, 0);
        writeInt64BE(this._bh, this._bl, 8);
        writeInt64BE(this._ch, this._cl, 16);
        writeInt64BE(this._dh, this._dl, 24);
        writeInt64BE(this._eh, this._el, 32);
        writeInt64BE(this._fh, this._fl, 40);
        writeInt64BE(this._gh, this._gl, 48);
        writeInt64BE(this._hh, this._hl, 56);
        return H4;
      };
      module2.exports = Sha512;
    }
  });

  // node_modules/sha.js/sha384.js
  var require_sha384 = __commonJS({
    "node_modules/sha.js/sha384.js"(exports2, module2) {
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var SHA512 = require_sha512();
      var Hash = require_hash();
      var Buffer4 = require_safe_buffer().Buffer;
      var W2 = new Array(160);
      function Sha384() {
        this.init();
        this._w = W2;
        Hash.call(this, 128, 112);
      }
      inherits2(Sha384, SHA512);
      Sha384.prototype.init = function() {
        this._ah = 3418070365;
        this._bh = 1654270250;
        this._ch = 2438529370;
        this._dh = 355462360;
        this._eh = 1731405415;
        this._fh = 2394180231;
        this._gh = 3675008525;
        this._hh = 1203062813;
        this._al = 3238371032;
        this._bl = 914150663;
        this._cl = 812702999;
        this._dl = 4144912697;
        this._el = 4290775857;
        this._fl = 1750603025;
        this._gl = 1694076839;
        this._hl = 3204075428;
        return this;
      };
      Sha384.prototype._hash = function() {
        var H4 = Buffer4.allocUnsafe(48);
        function writeInt64BE(h, l, offset) {
          H4.writeInt32BE(h, offset);
          H4.writeInt32BE(l, offset + 4);
        }
        writeInt64BE(this._ah, this._al, 0);
        writeInt64BE(this._bh, this._bl, 8);
        writeInt64BE(this._ch, this._cl, 16);
        writeInt64BE(this._dh, this._dl, 24);
        writeInt64BE(this._eh, this._el, 32);
        writeInt64BE(this._fh, this._fl, 40);
        return H4;
      };
      module2.exports = Sha384;
    }
  });

  // node_modules/sha.js/index.js
  var require_sha2 = __commonJS({
    "node_modules/sha.js/index.js"(exports2, module2) {
      init_polyfills();
      var exports2 = module2.exports = function SHA(algorithm2) {
        algorithm2 = algorithm2.toLowerCase();
        var Algorithm = exports2[algorithm2];
        if (!Algorithm) throw new Error(algorithm2 + " is not supported (we accept pull requests)");
        return new Algorithm();
      };
      exports2.sha = require_sha();
      exports2.sha1 = require_sha1();
      exports2.sha224 = require_sha224();
      exports2.sha256 = require_sha256();
      exports2.sha384 = require_sha384();
      exports2.sha512 = require_sha512();
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js
  function BufferList() {
    this.head = null;
    this.tail = null;
    this.length = 0;
  }
  var buffer_list_default;
  var init_buffer_list = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js"() {
      init_polyfills();
      init_buffer();
      buffer_list_default = BufferList;
      BufferList.prototype.push = function(v4) {
        var entry = { data: v4, next: null };
        if (this.length > 0) this.tail.next = entry;
        else this.head = entry;
        this.tail = entry;
        ++this.length;
      };
      BufferList.prototype.unshift = function(v4) {
        var entry = { data: v4, next: this.head };
        if (this.length === 0) this.tail = entry;
        this.head = entry;
        ++this.length;
      };
      BufferList.prototype.shift = function() {
        if (this.length === 0) return;
        var ret = this.head.data;
        if (this.length === 1) this.head = this.tail = null;
        else this.head = this.head.next;
        --this.length;
        return ret;
      };
      BufferList.prototype.clear = function() {
        this.head = this.tail = null;
        this.length = 0;
      };
      BufferList.prototype.join = function(s) {
        if (this.length === 0) return "";
        var p = this.head;
        var ret = "" + p.data;
        while (p = p.next) {
          ret += s + p.data;
        }
        return ret;
      };
      BufferList.prototype.concat = function(n) {
        if (this.length === 0) return Buffer2.alloc(0);
        if (this.length === 1) return this.head.data;
        var ret = Buffer2.allocUnsafe(n >>> 0);
        var p = this.head;
        var i = 0;
        while (p) {
          p.data.copy(ret, i);
          i += p.data.length;
          p = p.next;
        }
        return ret;
      };
    }
  });

  // node-modules-polyfills:string_decoder
  var string_decoder_exports = {};
  __export(string_decoder_exports, {
    StringDecoder: () => StringDecoder
  });
  function assertEncoding(encoding) {
    if (encoding && !isBufferEncoding(encoding)) {
      throw new Error("Unknown encoding: " + encoding);
    }
  }
  function StringDecoder(encoding) {
    this.encoding = (encoding || "utf8").toLowerCase().replace(/[-_]/, "");
    assertEncoding(encoding);
    switch (this.encoding) {
      case "utf8":
        this.surrogateSize = 3;
        break;
      case "ucs2":
      case "utf16le":
        this.surrogateSize = 2;
        this.detectIncompleteChar = utf16DetectIncompleteChar;
        break;
      case "base64":
        this.surrogateSize = 3;
        this.detectIncompleteChar = base64DetectIncompleteChar;
        break;
      default:
        this.write = passThroughWrite;
        return;
    }
    this.charBuffer = new Buffer2(6);
    this.charReceived = 0;
    this.charLength = 0;
  }
  function passThroughWrite(buffer) {
    return buffer.toString(this.encoding);
  }
  function utf16DetectIncompleteChar(buffer) {
    this.charReceived = buffer.length % 2;
    this.charLength = this.charReceived ? 2 : 0;
  }
  function base64DetectIncompleteChar(buffer) {
    this.charReceived = buffer.length % 3;
    this.charLength = this.charReceived ? 3 : 0;
  }
  var isBufferEncoding;
  var init_string_decoder = __esm({
    "node-modules-polyfills:string_decoder"() {
      init_polyfills();
      init_buffer();
      isBufferEncoding = Buffer2.isEncoding || function(encoding) {
        switch (encoding && encoding.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      StringDecoder.prototype.write = function(buffer) {
        var charStr = "";
        while (this.charLength) {
          var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length;
          buffer.copy(this.charBuffer, this.charReceived, 0, available);
          this.charReceived += available;
          if (this.charReceived < this.charLength) {
            return "";
          }
          buffer = buffer.slice(available, buffer.length);
          charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
          var charCode = charStr.charCodeAt(charStr.length - 1);
          if (charCode >= 55296 && charCode <= 56319) {
            this.charLength += this.surrogateSize;
            charStr = "";
            continue;
          }
          this.charReceived = this.charLength = 0;
          if (buffer.length === 0) {
            return charStr;
          }
          break;
        }
        this.detectIncompleteChar(buffer);
        var end = buffer.length;
        if (this.charLength) {
          buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
          end -= this.charReceived;
        }
        charStr += buffer.toString(this.encoding, 0, end);
        var end = charStr.length - 1;
        var charCode = charStr.charCodeAt(end);
        if (charCode >= 55296 && charCode <= 56319) {
          var size = this.surrogateSize;
          this.charLength += size;
          this.charReceived += size;
          this.charBuffer.copy(this.charBuffer, size, 0, size);
          buffer.copy(this.charBuffer, 0, 0, size);
          return charStr.substring(0, end);
        }
        return charStr;
      };
      StringDecoder.prototype.detectIncompleteChar = function(buffer) {
        var i = buffer.length >= 3 ? 3 : buffer.length;
        for (; i > 0; i--) {
          var c = buffer[buffer.length - i];
          if (i == 1 && c >> 5 == 6) {
            this.charLength = 2;
            break;
          }
          if (i <= 2 && c >> 4 == 14) {
            this.charLength = 3;
            break;
          }
          if (i <= 3 && c >> 3 == 30) {
            this.charLength = 4;
            break;
          }
        }
        this.charReceived = i;
      };
      StringDecoder.prototype.end = function(buffer) {
        var res = "";
        if (buffer && buffer.length)
          res = this.write(buffer);
        if (this.charReceived) {
          var cr = this.charReceived;
          var buf = this.charBuffer;
          var enc = this.encoding;
          res += buf.slice(0, cr).toString(enc);
        }
        return res;
      };
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js
  function prependListener2(emitter, event, fn2) {
    if (typeof emitter.prependListener === "function") {
      return emitter.prependListener(event, fn2);
    } else {
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn2);
      else if (Array.isArray(emitter._events[event]))
        emitter._events[event].unshift(fn2);
      else
        emitter._events[event] = [fn2, emitter._events[event]];
    }
  }
  function listenerCount2(emitter, type) {
    return emitter.listeners(type).length;
  }
  function ReadableState(options, stream) {
    options = options || {};
    this.objectMode = !!options.objectMode;
    if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
    var hwm = options.highWaterMark;
    var defaultHwm = this.objectMode ? 16 : 16 * 1024;
    this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
    this.highWaterMark = ~~this.highWaterMark;
    this.buffer = new buffer_list_default();
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false;
    this.sync = true;
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    this.defaultEncoding = options.defaultEncoding || "utf8";
    this.ranOut = false;
    this.awaitDrain = 0;
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
      this.decoder = new StringDecoder(options.encoding);
      this.encoding = options.encoding;
    }
  }
  function Readable(options) {
    if (!(this instanceof Readable)) return new Readable(options);
    this._readableState = new ReadableState(options, this);
    this.readable = true;
    if (options && typeof options.read === "function") this._read = options.read;
    events_default.call(this);
  }
  function readableAddChunk(stream, state, chunk, encoding, addToFront) {
    var er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit("error", er);
    } else if (chunk === null) {
      state.reading = false;
      onEofChunk(stream, state);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (state.ended && !addToFront) {
        var e = new Error("stream.push() after EOF");
        stream.emit("error", e);
      } else if (state.endEmitted && addToFront) {
        var _e2 = new Error("stream.unshift() after end event");
        stream.emit("error", _e2);
      } else {
        var skipAdd;
        if (state.decoder && !addToFront && !encoding) {
          chunk = state.decoder.write(chunk);
          skipAdd = !state.objectMode && chunk.length === 0;
        }
        if (!addToFront) state.reading = false;
        if (!skipAdd) {
          if (state.flowing && state.length === 0 && !state.sync) {
            stream.emit("data", chunk);
            stream.read(0);
          } else {
            state.length += state.objectMode ? 1 : chunk.length;
            if (addToFront) state.buffer.unshift(chunk);
            else state.buffer.push(chunk);
            if (state.needReadable) emitReadable(stream);
          }
        }
        maybeReadMore(stream, state);
      }
    } else if (!addToFront) {
      state.reading = false;
    }
    return needMoreData(state);
  }
  function needMoreData(state) {
    return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
  }
  function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) {
      n = MAX_HWM;
    } else {
      n--;
      n |= n >>> 1;
      n |= n >>> 2;
      n |= n >>> 4;
      n |= n >>> 8;
      n |= n >>> 16;
      n++;
    }
    return n;
  }
  function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended) return 0;
    if (state.objectMode) return 1;
    if (n !== n) {
      if (state.flowing && state.length) return state.buffer.head.data.length;
      else return state.length;
    }
    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length) return n;
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    }
    return state.length;
  }
  function chunkInvalid(state, chunk) {
    var er = null;
    if (!Buffer2.isBuffer(chunk) && typeof chunk !== "string" && chunk !== null && chunk !== void 0 && !state.objectMode) {
      er = new TypeError("Invalid non-string/buffer chunk");
    }
    return er;
  }
  function onEofChunk(stream, state) {
    if (state.ended) return;
    if (state.decoder) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) {
        state.buffer.push(chunk);
        state.length += state.objectMode ? 1 : chunk.length;
      }
    }
    state.ended = true;
    emitReadable(stream);
  }
  function emitReadable(stream) {
    var state = stream._readableState;
    state.needReadable = false;
    if (!state.emittedReadable) {
      debug("emitReadable", state.flowing);
      state.emittedReadable = true;
      if (state.sync) nextTick(emitReadable_, stream);
      else emitReadable_(stream);
    }
  }
  function emitReadable_(stream) {
    debug("emit readable");
    stream.emit("readable");
    flow(stream);
  }
  function maybeReadMore(stream, state) {
    if (!state.readingMore) {
      state.readingMore = true;
      nextTick(maybeReadMore_, stream, state);
    }
  }
  function maybeReadMore_(stream, state) {
    var len = state.length;
    while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
      debug("maybeReadMore read 0");
      stream.read(0);
      if (len === state.length)
        break;
      else len = state.length;
    }
    state.readingMore = false;
  }
  function pipeOnDrain(src) {
    return function() {
      var state = src._readableState;
      debug("pipeOnDrain", state.awaitDrain);
      if (state.awaitDrain) state.awaitDrain--;
      if (state.awaitDrain === 0 && src.listeners("data").length) {
        state.flowing = true;
        flow(src);
      }
    };
  }
  function nReadingNextTick(self2) {
    debug("readable nexttick read 0");
    self2.read(0);
  }
  function resume(stream, state) {
    if (!state.resumeScheduled) {
      state.resumeScheduled = true;
      nextTick(resume_, stream, state);
    }
  }
  function resume_(stream, state) {
    if (!state.reading) {
      debug("resume read 0");
      stream.read(0);
    }
    state.resumeScheduled = false;
    state.awaitDrain = 0;
    stream.emit("resume");
    flow(stream);
    if (state.flowing && !state.reading) stream.read(0);
  }
  function flow(stream) {
    var state = stream._readableState;
    debug("flow", state.flowing);
    while (state.flowing && stream.read() !== null) {
    }
  }
  function fromList(n, state) {
    if (state.length === 0) return null;
    var ret;
    if (state.objectMode) ret = state.buffer.shift();
    else if (!n || n >= state.length) {
      if (state.decoder) ret = state.buffer.join("");
      else if (state.buffer.length === 1) ret = state.buffer.head.data;
      else ret = state.buffer.concat(state.length);
      state.buffer.clear();
    } else {
      ret = fromListPartial(n, state.buffer, state.decoder);
    }
    return ret;
  }
  function fromListPartial(n, list, hasStrings) {
    var ret;
    if (n < list.head.data.length) {
      ret = list.head.data.slice(0, n);
      list.head.data = list.head.data.slice(n);
    } else if (n === list.head.data.length) {
      ret = list.shift();
    } else {
      ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
    }
    return ret;
  }
  function copyFromBufferString(n, list) {
    var p = list.head;
    var c = 1;
    var ret = p.data;
    n -= ret.length;
    while (p = p.next) {
      var str = p.data;
      var nb = n > str.length ? str.length : n;
      if (nb === str.length) ret += str;
      else ret += str.slice(0, n);
      n -= nb;
      if (n === 0) {
        if (nb === str.length) {
          ++c;
          if (p.next) list.head = p.next;
          else list.head = list.tail = null;
        } else {
          list.head = p;
          p.data = str.slice(nb);
        }
        break;
      }
      ++c;
    }
    list.length -= c;
    return ret;
  }
  function copyFromBuffer(n, list) {
    var ret = Buffer2.allocUnsafe(n);
    var p = list.head;
    var c = 1;
    p.data.copy(ret);
    n -= p.data.length;
    while (p = p.next) {
      var buf = p.data;
      var nb = n > buf.length ? buf.length : n;
      buf.copy(ret, ret.length - n, 0, nb);
      n -= nb;
      if (n === 0) {
        if (nb === buf.length) {
          ++c;
          if (p.next) list.head = p.next;
          else list.head = list.tail = null;
        } else {
          list.head = p;
          p.data = buf.slice(nb);
        }
        break;
      }
      ++c;
    }
    list.length -= c;
    return ret;
  }
  function endReadable(stream) {
    var state = stream._readableState;
    if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
    if (!state.endEmitted) {
      state.ended = true;
      nextTick(endReadableNT, state, stream);
    }
  }
  function endReadableNT(state, stream) {
    if (!state.endEmitted && state.length === 0) {
      state.endEmitted = true;
      stream.readable = false;
      stream.emit("end");
    }
  }
  function forEach(xs, f) {
    for (var i = 0, l = xs.length; i < l; i++) {
      f(xs[i], i);
    }
  }
  function indexOf2(xs, x) {
    for (var i = 0, l = xs.length; i < l; i++) {
      if (xs[i] === x) return i;
    }
    return -1;
  }
  var debug, MAX_HWM;
  var init_readable = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js"() {
      "use strict";
      init_polyfills();
      init_events();
      init_util();
      init_buffer_list();
      init_string_decoder();
      init_duplex();
      init_process();
      Readable.ReadableState = ReadableState;
      debug = debuglog("stream");
      inherits_default(Readable, events_default);
      Readable.prototype.push = function(chunk, encoding) {
        var state = this._readableState;
        if (!state.objectMode && typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer2.from(chunk, encoding);
            encoding = "";
          }
        }
        return readableAddChunk(this, state, chunk, encoding, false);
      };
      Readable.prototype.unshift = function(chunk) {
        var state = this._readableState;
        return readableAddChunk(this, state, chunk, "", true);
      };
      Readable.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      };
      Readable.prototype.setEncoding = function(enc) {
        this._readableState.decoder = new StringDecoder(enc);
        this._readableState.encoding = enc;
        return this;
      };
      MAX_HWM = 8388608;
      Readable.prototype.read = function(n) {
        debug("read", n);
        n = parseInt(n, 10);
        var state = this._readableState;
        var nOrig = n;
        if (n !== 0) state.emittedReadable = false;
        if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
          debug("read: emitReadable", state.length, state.ended);
          if (state.length === 0 && state.ended) endReadable(this);
          else emitReadable(this);
          return null;
        }
        n = howMuchToRead(n, state);
        if (n === 0 && state.ended) {
          if (state.length === 0) endReadable(this);
          return null;
        }
        var doRead = state.needReadable;
        debug("need readable", doRead);
        if (state.length === 0 || state.length - n < state.highWaterMark) {
          doRead = true;
          debug("length less than watermark", doRead);
        }
        if (state.ended || state.reading) {
          doRead = false;
          debug("reading or ended", doRead);
        } else if (doRead) {
          debug("do read");
          state.reading = true;
          state.sync = true;
          if (state.length === 0) state.needReadable = true;
          this._read(state.highWaterMark);
          state.sync = false;
          if (!state.reading) n = howMuchToRead(nOrig, state);
        }
        var ret;
        if (n > 0) ret = fromList(n, state);
        else ret = null;
        if (ret === null) {
          state.needReadable = true;
          n = 0;
        } else {
          state.length -= n;
        }
        if (state.length === 0) {
          if (!state.ended) state.needReadable = true;
          if (nOrig !== n && state.ended) endReadable(this);
        }
        if (ret !== null) this.emit("data", ret);
        return ret;
      };
      Readable.prototype._read = function(n) {
        this.emit("error", new Error("not implemented"));
      };
      Readable.prototype.pipe = function(dest, pipeOpts) {
        var src = this;
        var state = this._readableState;
        switch (state.pipesCount) {
          case 0:
            state.pipes = dest;
            break;
          case 1:
            state.pipes = [state.pipes, dest];
            break;
          default:
            state.pipes.push(dest);
            break;
        }
        state.pipesCount += 1;
        debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
        var doEnd = !pipeOpts || pipeOpts.end !== false;
        var endFn = doEnd ? onend2 : cleanup;
        if (state.endEmitted) nextTick(endFn);
        else src.once("end", endFn);
        dest.on("unpipe", onunpipe);
        function onunpipe(readable) {
          debug("onunpipe");
          if (readable === src) {
            cleanup();
          }
        }
        function onend2() {
          debug("onend");
          dest.end();
        }
        var ondrain = pipeOnDrain(src);
        dest.on("drain", ondrain);
        var cleanedUp = false;
        function cleanup() {
          debug("cleanup");
          dest.removeListener("close", onclose);
          dest.removeListener("finish", onfinish);
          dest.removeListener("drain", ondrain);
          dest.removeListener("error", onerror);
          dest.removeListener("unpipe", onunpipe);
          src.removeListener("end", onend2);
          src.removeListener("end", cleanup);
          src.removeListener("data", ondata);
          cleanedUp = true;
          if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
        }
        var increasedAwaitDrain = false;
        src.on("data", ondata);
        function ondata(chunk) {
          debug("ondata");
          increasedAwaitDrain = false;
          var ret = dest.write(chunk);
          if (false === ret && !increasedAwaitDrain) {
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf2(state.pipes, dest) !== -1) && !cleanedUp) {
              debug("false write response, pause", src._readableState.awaitDrain);
              src._readableState.awaitDrain++;
              increasedAwaitDrain = true;
            }
            src.pause();
          }
        }
        function onerror(er) {
          debug("onerror", er);
          unpipe();
          dest.removeListener("error", onerror);
          if (listenerCount2(dest, "error") === 0) dest.emit("error", er);
        }
        prependListener2(dest, "error", onerror);
        function onclose() {
          dest.removeListener("finish", onfinish);
          unpipe();
        }
        dest.once("close", onclose);
        function onfinish() {
          debug("onfinish");
          dest.removeListener("close", onclose);
          unpipe();
        }
        dest.once("finish", onfinish);
        function unpipe() {
          debug("unpipe");
          src.unpipe(dest);
        }
        dest.emit("pipe", src);
        if (!state.flowing) {
          debug("pipe resume");
          src.resume();
        }
        return dest;
      };
      Readable.prototype.unpipe = function(dest) {
        var state = this._readableState;
        if (state.pipesCount === 0) return this;
        if (state.pipesCount === 1) {
          if (dest && dest !== state.pipes) return this;
          if (!dest) dest = state.pipes;
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          if (dest) dest.emit("unpipe", this);
          return this;
        }
        if (!dest) {
          var dests = state.pipes;
          var len = state.pipesCount;
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          for (var _i = 0; _i < len; _i++) {
            dests[_i].emit("unpipe", this);
          }
          return this;
        }
        var i = indexOf2(state.pipes, dest);
        if (i === -1) return this;
        state.pipes.splice(i, 1);
        state.pipesCount -= 1;
        if (state.pipesCount === 1) state.pipes = state.pipes[0];
        dest.emit("unpipe", this);
        return this;
      };
      Readable.prototype.on = function(ev, fn2) {
        var res = events_default.prototype.on.call(this, ev, fn2);
        if (ev === "data") {
          if (this._readableState.flowing !== false) this.resume();
        } else if (ev === "readable") {
          var state = this._readableState;
          if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.emittedReadable = false;
            if (!state.reading) {
              nextTick(nReadingNextTick, this);
            } else if (state.length) {
              emitReadable(this, state);
            }
          }
        }
        return res;
      };
      Readable.prototype.addListener = Readable.prototype.on;
      Readable.prototype.resume = function() {
        var state = this._readableState;
        if (!state.flowing) {
          debug("resume");
          state.flowing = true;
          resume(this, state);
        }
        return this;
      };
      Readable.prototype.pause = function() {
        debug("call pause flowing=%j", this._readableState.flowing);
        if (false !== this._readableState.flowing) {
          debug("pause");
          this._readableState.flowing = false;
          this.emit("pause");
        }
        return this;
      };
      Readable.prototype.wrap = function(stream) {
        var state = this._readableState;
        var paused = false;
        var self2 = this;
        stream.on("end", function() {
          debug("wrapped end");
          if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) self2.push(chunk);
          }
          self2.push(null);
        });
        stream.on("data", function(chunk) {
          debug("wrapped data");
          if (state.decoder) chunk = state.decoder.write(chunk);
          if (state.objectMode && (chunk === null || chunk === void 0)) return;
          else if (!state.objectMode && (!chunk || !chunk.length)) return;
          var ret = self2.push(chunk);
          if (!ret) {
            paused = true;
            stream.pause();
          }
        });
        for (var i in stream) {
          if (this[i] === void 0 && typeof stream[i] === "function") {
            this[i] = /* @__PURE__ */ function(method2) {
              return function() {
                return stream[method2].apply(stream, arguments);
              };
            }(i);
          }
        }
        var events = ["error", "close", "destroy", "pause", "resume"];
        forEach(events, function(ev) {
          stream.on(ev, self2.emit.bind(self2, ev));
        });
        self2._read = function(n) {
          debug("wrapped _read", n);
          if (paused) {
            paused = false;
            stream.resume();
          }
        };
        return self2;
      };
      Readable._fromList = fromList;
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js
  function nop() {
  }
  function WriteReq(chunk, encoding, cb) {
    this.chunk = chunk;
    this.encoding = encoding;
    this.callback = cb;
    this.next = null;
  }
  function WritableState(options, stream) {
    Object.defineProperty(this, "buffer", {
      get: deprecate(function() {
        return this.getBuffer();
      }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")
    });
    options = options || {};
    this.objectMode = !!options.objectMode;
    if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
    var hwm = options.highWaterMark;
    var defaultHwm = this.objectMode ? 16 : 16 * 1024;
    this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
    this.highWaterMark = ~~this.highWaterMark;
    this.needDrain = false;
    this.ending = false;
    this.ended = false;
    this.finished = false;
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode;
    this.defaultEncoding = options.defaultEncoding || "utf8";
    this.length = 0;
    this.writing = false;
    this.corked = 0;
    this.sync = true;
    this.bufferProcessing = false;
    this.onwrite = function(er) {
      onwrite(stream, er);
    };
    this.writecb = null;
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null;
    this.pendingcb = 0;
    this.prefinished = false;
    this.errorEmitted = false;
    this.bufferedRequestCount = 0;
    this.corkedRequestsFree = new CorkedRequest(this);
  }
  function Writable(options) {
    if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);
    this._writableState = new WritableState(options, this);
    this.writable = true;
    if (options) {
      if (typeof options.write === "function") this._write = options.write;
      if (typeof options.writev === "function") this._writev = options.writev;
    }
    EventEmitter.call(this);
  }
  function writeAfterEnd(stream, cb) {
    var er = new Error("write after end");
    stream.emit("error", er);
    nextTick(cb, er);
  }
  function validChunk(stream, state, chunk, cb) {
    var valid = true;
    var er = false;
    if (chunk === null) {
      er = new TypeError("May not write null values to stream");
    } else if (!Buffer2.isBuffer(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
      er = new TypeError("Invalid non-string/buffer chunk");
    }
    if (er) {
      stream.emit("error", er);
      nextTick(cb, er);
      valid = false;
    }
    return valid;
  }
  function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
      chunk = Buffer2.from(chunk, encoding);
    }
    return chunk;
  }
  function writeOrBuffer(stream, state, chunk, encoding, cb) {
    chunk = decodeChunk(state, chunk, encoding);
    if (Buffer2.isBuffer(chunk)) encoding = "buffer";
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark;
    if (!ret) state.needDrain = true;
    if (state.writing || state.corked) {
      var last = state.lastBufferedRequest;
      state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
      if (last) {
        last.next = state.lastBufferedRequest;
      } else {
        state.bufferedRequest = state.lastBufferedRequest;
      }
      state.bufferedRequestCount += 1;
    } else {
      doWrite(stream, state, false, len, chunk, encoding, cb);
    }
    return ret;
  }
  function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (writev) stream._writev(chunk, state.onwrite);
    else stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
  }
  function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) nextTick(cb, er);
    else cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit("error", er);
  }
  function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
  }
  function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    onwriteStateUpdate(state);
    if (er) onwriteError(stream, state, sync, er, cb);
    else {
      var finished = needFinish(state);
      if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
        clearBuffer(stream, state);
      }
      if (sync) {
        nextTick(afterWrite, stream, state, finished, cb);
      } else {
        afterWrite(stream, state, finished, cb);
      }
    }
  }
  function afterWrite(stream, state, finished, cb) {
    if (!finished) onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
  }
  function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
      state.needDrain = false;
      stream.emit("drain");
    }
  }
  function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
      var l = state.bufferedRequestCount;
      var buffer = new Array(l);
      var holder = state.corkedRequestsFree;
      holder.entry = entry;
      var count = 0;
      while (entry) {
        buffer[count] = entry;
        entry = entry.next;
        count += 1;
      }
      doWrite(stream, state, true, state.length, buffer, "", holder.finish);
      state.pendingcb++;
      state.lastBufferedRequest = null;
      if (holder.next) {
        state.corkedRequestsFree = holder.next;
        holder.next = null;
      } else {
        state.corkedRequestsFree = new CorkedRequest(state);
      }
    } else {
      while (entry) {
        var chunk = entry.chunk;
        var encoding = entry.encoding;
        var cb = entry.callback;
        var len = state.objectMode ? 1 : chunk.length;
        doWrite(stream, state, false, len, chunk, encoding, cb);
        entry = entry.next;
        if (state.writing) {
          break;
        }
      }
      if (entry === null) state.lastBufferedRequest = null;
    }
    state.bufferedRequestCount = 0;
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
  }
  function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
  }
  function prefinish(stream, state) {
    if (!state.prefinished) {
      state.prefinished = true;
      stream.emit("prefinish");
    }
  }
  function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
      if (state.pendingcb === 0) {
        prefinish(stream, state);
        state.finished = true;
        stream.emit("finish");
      } else {
        prefinish(stream, state);
      }
    }
    return need;
  }
  function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
      if (state.finished) nextTick(cb);
      else stream.once("finish", cb);
    }
    state.ended = true;
    stream.writable = false;
  }
  function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function(err) {
      var entry = _this.entry;
      _this.entry = null;
      while (entry) {
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
      }
      if (state.corkedRequestsFree) {
        state.corkedRequestsFree.next = _this;
      } else {
        state.corkedRequestsFree = _this;
      }
    };
  }
  var init_writable = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js"() {
      init_polyfills();
      init_util();
      init_buffer();
      init_events();
      init_duplex();
      init_process();
      Writable.WritableState = WritableState;
      inherits_default(Writable, EventEmitter);
      WritableState.prototype.getBuffer = function writableStateGetBuffer() {
        var current = this.bufferedRequest;
        var out = [];
        while (current) {
          out.push(current);
          current = current.next;
        }
        return out;
      };
      Writable.prototype.pipe = function() {
        this.emit("error", new Error("Cannot pipe, not readable"));
      };
      Writable.prototype.write = function(chunk, encoding, cb) {
        var state = this._writableState;
        var ret = false;
        if (typeof encoding === "function") {
          cb = encoding;
          encoding = null;
        }
        if (Buffer2.isBuffer(chunk)) encoding = "buffer";
        else if (!encoding) encoding = state.defaultEncoding;
        if (typeof cb !== "function") cb = nop;
        if (state.ended) writeAfterEnd(this, cb);
        else if (validChunk(this, state, chunk, cb)) {
          state.pendingcb++;
          ret = writeOrBuffer(this, state, chunk, encoding, cb);
        }
        return ret;
      };
      Writable.prototype.cork = function() {
        var state = this._writableState;
        state.corked++;
      };
      Writable.prototype.uncork = function() {
        var state = this._writableState;
        if (state.corked) {
          state.corked--;
          if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
        }
      };
      Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
        if (typeof encoding === "string") encoding = encoding.toLowerCase();
        if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + encoding);
        this._writableState.defaultEncoding = encoding;
        return this;
      };
      Writable.prototype._write = function(chunk, encoding, cb) {
        cb(new Error("not implemented"));
      };
      Writable.prototype._writev = null;
      Writable.prototype.end = function(chunk, encoding, cb) {
        var state = this._writableState;
        if (typeof chunk === "function") {
          cb = chunk;
          chunk = null;
          encoding = null;
        } else if (typeof encoding === "function") {
          cb = encoding;
          encoding = null;
        }
        if (chunk !== null && chunk !== void 0) this.write(chunk, encoding);
        if (state.corked) {
          state.corked = 1;
          this.uncork();
        }
        if (!state.ending && !state.finished) endWritable(this, state, cb);
      };
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js
  function Duplex(options) {
    if (!(this instanceof Duplex)) return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    if (options && options.readable === false) this.readable = false;
    if (options && options.writable === false) this.writable = false;
    this.allowHalfOpen = true;
    if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
    this.once("end", onend);
  }
  function onend() {
    if (this.allowHalfOpen || this._writableState.ended) return;
    nextTick(onEndNT, this);
  }
  function onEndNT(self2) {
    self2.end();
  }
  var keys, method2, v4;
  var init_duplex = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js"() {
      init_polyfills();
      init_util();
      init_process();
      init_readable();
      init_writable();
      inherits_default(Duplex, Readable);
      keys = Object.keys(Writable.prototype);
      for (v4 = 0; v4 < keys.length; v4++) {
        method2 = keys[v4];
        if (!Duplex.prototype[method2]) Duplex.prototype[method2] = Writable.prototype[method2];
      }
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js
  function TransformState(stream) {
    this.afterTransform = function(er, data) {
      return afterTransform(stream, er, data);
    };
    this.needTransform = false;
    this.transforming = false;
    this.writecb = null;
    this.writechunk = null;
    this.writeencoding = null;
  }
  function afterTransform(stream, er, data) {
    var ts = stream._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (!cb) return stream.emit("error", new Error("no writecb in Transform class"));
    ts.writechunk = null;
    ts.writecb = null;
    if (data !== null && data !== void 0) stream.push(data);
    cb(er);
    var rs = stream._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) {
      stream._read(rs.highWaterMark);
    }
  }
  function Transform(options) {
    if (!(this instanceof Transform)) return new Transform(options);
    Duplex.call(this, options);
    this._transformState = new TransformState(this);
    var stream = this;
    this._readableState.needReadable = true;
    this._readableState.sync = false;
    if (options) {
      if (typeof options.transform === "function") this._transform = options.transform;
      if (typeof options.flush === "function") this._flush = options.flush;
    }
    this.once("prefinish", function() {
      if (typeof this._flush === "function") this._flush(function(er) {
        done(stream, er);
      });
      else done(stream);
    });
  }
  function done(stream, er) {
    if (er) return stream.emit("error", er);
    var ws = stream._writableState;
    var ts = stream._transformState;
    if (ws.length) throw new Error("Calling transform done when ws.length != 0");
    if (ts.transforming) throw new Error("Calling transform done when still transforming");
    return stream.push(null);
  }
  var init_transform = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js"() {
      init_polyfills();
      init_duplex();
      init_util();
      inherits_default(Transform, Duplex);
      Transform.prototype.push = function(chunk, encoding) {
        this._transformState.needTransform = false;
        return Duplex.prototype.push.call(this, chunk, encoding);
      };
      Transform.prototype._transform = function(chunk, encoding, cb) {
        throw new Error("Not implemented");
      };
      Transform.prototype._write = function(chunk, encoding, cb) {
        var ts = this._transformState;
        ts.writecb = cb;
        ts.writechunk = chunk;
        ts.writeencoding = encoding;
        if (!ts.transforming) {
          var rs = this._readableState;
          if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
        }
      };
      Transform.prototype._read = function(n) {
        var ts = this._transformState;
        if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
          ts.transforming = true;
          this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
        } else {
          ts.needTransform = true;
        }
      };
    }
  });

  // node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js
  function PassThrough(options) {
    if (!(this instanceof PassThrough)) return new PassThrough(options);
    Transform.call(this, options);
  }
  var init_passthrough = __esm({
    "node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js"() {
      init_polyfills();
      init_transform();
      init_util();
      inherits_default(PassThrough, Transform);
      PassThrough.prototype._transform = function(chunk, encoding, cb) {
        cb(null, chunk);
      };
    }
  });

  // node-modules-polyfills:stream
  var stream_exports = {};
  __export(stream_exports, {
    Duplex: () => Duplex,
    PassThrough: () => PassThrough,
    Readable: () => Readable,
    Stream: () => Stream,
    Transform: () => Transform,
    Writable: () => Writable,
    default: () => stream_default
  });
  function Stream() {
    events_default.call(this);
  }
  var stream_default;
  var init_stream = __esm({
    "node-modules-polyfills:stream"() {
      init_polyfills();
      init_events();
      init_util();
      init_duplex();
      init_readable();
      init_writable();
      init_transform();
      init_passthrough();
      inherits_default(Stream, events_default);
      Stream.Readable = Readable;
      Stream.Writable = Writable;
      Stream.Duplex = Duplex;
      Stream.Transform = Transform;
      Stream.PassThrough = PassThrough;
      Stream.Stream = Stream;
      stream_default = Stream;
      Stream.prototype.pipe = function(dest, options) {
        var source = this;
        function ondata(chunk) {
          if (dest.writable) {
            if (false === dest.write(chunk) && source.pause) {
              source.pause();
            }
          }
        }
        source.on("data", ondata);
        function ondrain() {
          if (source.readable && source.resume) {
            source.resume();
          }
        }
        dest.on("drain", ondrain);
        if (!dest._isStdio && (!options || options.end !== false)) {
          source.on("end", onend2);
          source.on("close", onclose);
        }
        var didOnEnd = false;
        function onend2() {
          if (didOnEnd) return;
          didOnEnd = true;
          dest.end();
        }
        function onclose() {
          if (didOnEnd) return;
          didOnEnd = true;
          if (typeof dest.destroy === "function") dest.destroy();
        }
        function onerror(er) {
          cleanup();
          if (events_default.listenerCount(this, "error") === 0) {
            throw er;
          }
        }
        source.on("error", onerror);
        dest.on("error", onerror);
        function cleanup() {
          source.removeListener("data", ondata);
          dest.removeListener("drain", ondrain);
          source.removeListener("end", onend2);
          source.removeListener("close", onclose);
          source.removeListener("error", onerror);
          dest.removeListener("error", onerror);
          source.removeListener("end", cleanup);
          source.removeListener("close", cleanup);
          dest.removeListener("close", cleanup);
        }
        source.on("end", cleanup);
        source.on("close", cleanup);
        dest.on("close", cleanup);
        dest.emit("pipe", source);
        return dest;
      };
    }
  });

  // node-modules-polyfills-commonjs:stream
  var require_stream = __commonJS({
    "node-modules-polyfills-commonjs:stream"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_stream(), __toCommonJS(stream_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node-modules-polyfills-commonjs:string_decoder
  var require_string_decoder2 = __commonJS({
    "node-modules-polyfills-commonjs:string_decoder"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_string_decoder(), __toCommonJS(string_decoder_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node_modules/cipher-base/index.js
  var require_cipher_base = __commonJS({
    "node_modules/cipher-base/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      var Transform2 = require_stream().Transform;
      var StringDecoder2 = require_string_decoder2().StringDecoder;
      var inherits2 = require_inherits_browser();
      function CipherBase(hashMode) {
        Transform2.call(this);
        this.hashMode = typeof hashMode === "string";
        if (this.hashMode) {
          this[hashMode] = this._finalOrDigest;
        } else {
          this["final"] = this._finalOrDigest;
        }
        if (this._final) {
          this.__final = this._final;
          this._final = null;
        }
        this._decoder = null;
        this._encoding = null;
      }
      inherits2(CipherBase, Transform2);
      var useUint8Array = typeof Uint8Array !== "undefined";
      var useArrayBuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined" && ArrayBuffer.isView && (Buffer4.prototype instanceof Uint8Array || Buffer4.TYPED_ARRAY_SUPPORT);
      function toBuffer(data, encoding) {
        if (data instanceof Buffer4) {
          return data;
        }
        if (typeof data === "string") {
          return Buffer4.from(data, encoding);
        }
        if (useArrayBuffer && ArrayBuffer.isView(data)) {
          if (data.byteLength === 0) {
            return Buffer4.alloc(0);
          }
          var res = Buffer4.from(data.buffer, data.byteOffset, data.byteLength);
          if (res.byteLength === data.byteLength) {
            return res;
          }
        }
        if (useUint8Array && data instanceof Uint8Array) {
          return Buffer4.from(data);
        }
        if (Buffer4.isBuffer(data) && data.constructor && typeof data.constructor.isBuffer === "function" && data.constructor.isBuffer(data)) {
          return Buffer4.from(data);
        }
        throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
      }
      CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
        var bufferData = toBuffer(data, inputEnc);
        var outData = this._update(bufferData);
        if (this.hashMode) {
          return this;
        }
        if (outputEnc) {
          outData = this._toString(outData, outputEnc);
        }
        return outData;
      };
      CipherBase.prototype.setAutoPadding = function() {
      };
      CipherBase.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      };
      CipherBase.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      };
      CipherBase.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      };
      CipherBase.prototype._transform = function(data, _, next) {
        var err;
        try {
          if (this.hashMode) {
            this._update(data);
          } else {
            this.push(this._update(data));
          }
        } catch (e) {
          err = e;
        } finally {
          next(err);
        }
      };
      CipherBase.prototype._flush = function(done2) {
        var err;
        try {
          this.push(this.__final());
        } catch (e) {
          err = e;
        }
        done2(err);
      };
      CipherBase.prototype._finalOrDigest = function(outputEnc) {
        var outData = this.__final() || Buffer4.alloc(0);
        if (outputEnc) {
          outData = this._toString(outData, outputEnc, true);
        }
        return outData;
      };
      CipherBase.prototype._toString = function(value, enc, fin) {
        if (!this._decoder) {
          this._decoder = new StringDecoder2(enc);
          this._encoding = enc;
        }
        if (this._encoding !== enc) {
          throw new Error("can\u2019t switch encodings");
        }
        var out = this._decoder.write(value);
        if (fin) {
          out += this._decoder.end();
        }
        return out;
      };
      module2.exports = CipherBase;
    }
  });

  // node_modules/create-hash/browser.js
  var require_browser2 = __commonJS({
    "node_modules/create-hash/browser.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var MD5 = require_md5();
      var RIPEMD160 = require_ripemd160();
      var sha = require_sha2();
      var Base = require_cipher_base();
      function Hash(hash) {
        Base.call(this, "digest");
        this._hash = hash;
      }
      inherits2(Hash, Base);
      Hash.prototype._update = function(data) {
        this._hash.update(data);
      };
      Hash.prototype._final = function() {
        return this._hash.digest();
      };
      module2.exports = function createHash(alg) {
        alg = alg.toLowerCase();
        if (alg === "md5") return new MD5();
        if (alg === "rmd160" || alg === "ripemd160") return new RIPEMD160();
        return new Hash(sha(alg));
      };
    }
  });

  // node_modules/create-hmac/legacy.js
  var require_legacy = __commonJS({
    "node_modules/create-hmac/legacy.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Buffer4 = require_safe_buffer().Buffer;
      var Base = require_cipher_base();
      var ZEROS = Buffer4.alloc(128);
      var blocksize = 64;
      function Hmac(alg, key) {
        Base.call(this, "digest");
        if (typeof key === "string") {
          key = Buffer4.from(key);
        }
        this._alg = alg;
        this._key = key;
        if (key.length > blocksize) {
          key = alg(key);
        } else if (key.length < blocksize) {
          key = Buffer4.concat([key, ZEROS], blocksize);
        }
        var ipad = this._ipad = Buffer4.allocUnsafe(blocksize);
        var opad = this._opad = Buffer4.allocUnsafe(blocksize);
        for (var i = 0; i < blocksize; i++) {
          ipad[i] = key[i] ^ 54;
          opad[i] = key[i] ^ 92;
        }
        this._hash = [ipad];
      }
      inherits2(Hmac, Base);
      Hmac.prototype._update = function(data) {
        this._hash.push(data);
      };
      Hmac.prototype._final = function() {
        var h = this._alg(Buffer4.concat(this._hash));
        return this._alg(Buffer4.concat([this._opad, h]));
      };
      module2.exports = Hmac;
    }
  });

  // node_modules/create-hash/md5.js
  var require_md52 = __commonJS({
    "node_modules/create-hash/md5.js"(exports2, module2) {
      init_polyfills();
      var MD5 = require_md5();
      module2.exports = function(buffer) {
        return new MD5().update(buffer).digest();
      };
    }
  });

  // node_modules/create-hmac/browser.js
  var require_browser3 = __commonJS({
    "node_modules/create-hmac/browser.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var inherits2 = require_inherits_browser();
      var Legacy = require_legacy();
      var Base = require_cipher_base();
      var Buffer4 = require_safe_buffer().Buffer;
      var md5 = require_md52();
      var RIPEMD160 = require_ripemd160();
      var sha = require_sha2();
      var ZEROS = Buffer4.alloc(128);
      function Hmac(alg, key) {
        Base.call(this, "digest");
        if (typeof key === "string") {
          key = Buffer4.from(key);
        }
        var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
        this._alg = alg;
        this._key = key;
        if (key.length > blocksize) {
          var hash = alg === "rmd160" ? new RIPEMD160() : sha(alg);
          key = hash.update(key).digest();
        } else if (key.length < blocksize) {
          key = Buffer4.concat([key, ZEROS], blocksize);
        }
        var ipad = this._ipad = Buffer4.allocUnsafe(blocksize);
        var opad = this._opad = Buffer4.allocUnsafe(blocksize);
        for (var i = 0; i < blocksize; i++) {
          ipad[i] = key[i] ^ 54;
          opad[i] = key[i] ^ 92;
        }
        this._hash = alg === "rmd160" ? new RIPEMD160() : sha(alg);
        this._hash.update(ipad);
      }
      inherits2(Hmac, Base);
      Hmac.prototype._update = function(data) {
        this._hash.update(data);
      };
      Hmac.prototype._final = function() {
        var h = this._hash.digest();
        var hash = this._alg === "rmd160" ? new RIPEMD160() : sha(this._alg);
        return hash.update(this._opad).update(h).digest();
      };
      module2.exports = function createHmac(alg, key) {
        alg = alg.toLowerCase();
        if (alg === "rmd160" || alg === "ripemd160") {
          return new Hmac("rmd160", key);
        }
        if (alg === "md5") {
          return new Legacy(md5, key);
        }
        return new Hmac(alg, key);
      };
    }
  });

  // node_modules/bip32/src/crypto.js
  var require_crypto = __commonJS({
    "node_modules/bip32/src/crypto.js"(exports2) {
      "use strict";
      init_polyfills();
      Object.defineProperty(exports2, "__esModule", { value: true });
      var createHash = require_browser2();
      var createHmac = require_browser3();
      function hash160(buffer) {
        const sha256Hash = createHash("sha256").update(buffer).digest();
        try {
          return createHash("rmd160").update(sha256Hash).digest();
        } catch (err) {
          return createHash("ripemd160").update(sha256Hash).digest();
        }
      }
      exports2.hash160 = hash160;
      function hmacSHA512(key, data) {
        return createHmac("sha512", key).update(data).digest();
      }
      exports2.hmacSHA512 = hmacSHA512;
    }
  });

  // node_modules/base-x/src/index.js
  var require_src = __commonJS({
    "node_modules/base-x/src/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var _Buffer = require_safe_buffer().Buffer;
      function base(ALPHABET) {
        if (ALPHABET.length >= 255) {
          throw new TypeError("Alphabet too long");
        }
        var BASE_MAP = new Uint8Array(256);
        for (var j2 = 0; j2 < BASE_MAP.length; j2++) {
          BASE_MAP[j2] = 255;
        }
        for (var i = 0; i < ALPHABET.length; i++) {
          var x = ALPHABET.charAt(i);
          var xc = x.charCodeAt(0);
          if (BASE_MAP[xc] !== 255) {
            throw new TypeError(x + " is ambiguous");
          }
          BASE_MAP[xc] = i;
        }
        var BASE = ALPHABET.length;
        var LEADER = ALPHABET.charAt(0);
        var FACTOR = Math.log(BASE) / Math.log(256);
        var iFACTOR = Math.log(256) / Math.log(BASE);
        function encode(source) {
          if (Array.isArray(source) || source instanceof Uint8Array) {
            source = _Buffer.from(source);
          }
          if (!_Buffer.isBuffer(source)) {
            throw new TypeError("Expected Buffer");
          }
          if (source.length === 0) {
            return "";
          }
          var zeroes = 0;
          var length = 0;
          var pbegin = 0;
          var pend = source.length;
          while (pbegin !== pend && source[pbegin] === 0) {
            pbegin++;
            zeroes++;
          }
          var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
          var b58 = new Uint8Array(size);
          while (pbegin !== pend) {
            var carry = source[pbegin];
            var i3 = 0;
            for (var it1 = size - 1; (carry !== 0 || i3 < length) && it1 !== -1; it1--, i3++) {
              carry += 256 * b58[it1] >>> 0;
              b58[it1] = carry % BASE >>> 0;
              carry = carry / BASE >>> 0;
            }
            if (carry !== 0) {
              throw new Error("Non-zero carry");
            }
            length = i3;
            pbegin++;
          }
          var it2 = size - length;
          while (it2 !== size && b58[it2] === 0) {
            it2++;
          }
          var str = LEADER.repeat(zeroes);
          for (; it2 < size; ++it2) {
            str += ALPHABET.charAt(b58[it2]);
          }
          return str;
        }
        function decodeUnsafe(source) {
          if (typeof source !== "string") {
            throw new TypeError("Expected String");
          }
          if (source.length === 0) {
            return _Buffer.alloc(0);
          }
          var psz = 0;
          var zeroes = 0;
          var length = 0;
          while (source[psz] === LEADER) {
            zeroes++;
            psz++;
          }
          var size = (source.length - psz) * FACTOR + 1 >>> 0;
          var b256 = new Uint8Array(size);
          while (psz < source.length) {
            var charCode = source.charCodeAt(psz);
            if (charCode > 255) {
              return;
            }
            var carry = BASE_MAP[charCode];
            if (carry === 255) {
              return;
            }
            var i3 = 0;
            for (var it3 = size - 1; (carry !== 0 || i3 < length) && it3 !== -1; it3--, i3++) {
              carry += BASE * b256[it3] >>> 0;
              b256[it3] = carry % 256 >>> 0;
              carry = carry / 256 >>> 0;
            }
            if (carry !== 0) {
              throw new Error("Non-zero carry");
            }
            length = i3;
            psz++;
          }
          var it4 = size - length;
          while (it4 !== size && b256[it4] === 0) {
            it4++;
          }
          var vch = _Buffer.allocUnsafe(zeroes + (size - it4));
          vch.fill(0, 0, zeroes);
          var j3 = zeroes;
          while (it4 !== size) {
            vch[j3++] = b256[it4++];
          }
          return vch;
        }
        function decode(string) {
          var buffer = decodeUnsafe(string);
          if (buffer) {
            return buffer;
          }
          throw new Error("Non-base" + BASE + " character");
        }
        return {
          encode,
          decodeUnsafe,
          decode
        };
      }
      module2.exports = base;
    }
  });

  // node_modules/bs58/index.js
  var require_bs58 = __commonJS({
    "node_modules/bs58/index.js"(exports2, module2) {
      init_polyfills();
      var basex = require_src();
      var ALPHABET = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
      module2.exports = basex(ALPHABET);
    }
  });

  // node_modules/bs58check/base.js
  var require_base = __commonJS({
    "node_modules/bs58check/base.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var base58 = require_bs58();
      var Buffer4 = require_safe_buffer().Buffer;
      module2.exports = function(checksumFn) {
        function encode(payload) {
          var checksum = checksumFn(payload);
          return base58.encode(Buffer4.concat([
            payload,
            checksum
          ], payload.length + 4));
        }
        function decodeRaw(buffer) {
          var payload = buffer.slice(0, -4);
          var checksum = buffer.slice(-4);
          var newChecksum = checksumFn(payload);
          if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3]) return;
          return payload;
        }
        function decodeUnsafe(string) {
          var buffer = base58.decodeUnsafe(string);
          if (!buffer) return;
          return decodeRaw(buffer);
        }
        function decode(string) {
          var buffer = base58.decode(string);
          var payload = decodeRaw(buffer, checksumFn);
          if (!payload) throw new Error("Invalid checksum");
          return payload;
        }
        return {
          encode,
          decode,
          decodeUnsafe
        };
      };
    }
  });

  // node_modules/bs58check/index.js
  var require_bs58check = __commonJS({
    "node_modules/bs58check/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var createHash = require_browser2();
      var bs58checkBase = require_base();
      function sha256x2(buffer) {
        var tmp = createHash("sha256").update(buffer).digest();
        return createHash("sha256").update(tmp).digest();
      }
      module2.exports = bs58checkBase(sha256x2);
    }
  });

  // node_modules/bn.js/lib/bn.js
  var require_bn = __commonJS({
    "node_modules/bn.js/lib/bn.js"(exports2, module2) {
      init_polyfills();
      (function(module3, exports3) {
        "use strict";
        function assert(val, msg) {
          if (!val) throw new Error(msg || "Assertion failed");
        }
        function inherits2(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
        function BN(number, base, endian) {
          if (BN.isBN(number)) {
            return number;
          }
          this.negative = 0;
          this.words = null;
          this.length = 0;
          this.red = null;
          if (number !== null) {
            if (base === "le" || base === "be") {
              endian = base;
              base = 10;
            }
            this._init(number || 0, base || 10, endian || "be");
          }
        }
        if (typeof module3 === "object") {
          module3.exports = BN;
        } else {
          exports3.BN = BN;
        }
        BN.BN = BN;
        BN.wordSize = 26;
        var Buffer4;
        try {
          if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
            Buffer4 = window.Buffer;
          } else {
            Buffer4 = require_buffer().Buffer;
          }
        } catch (e) {
        }
        BN.isBN = function isBN(num) {
          if (num instanceof BN) {
            return true;
          }
          return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
        };
        BN.max = function max(left, right) {
          if (left.cmp(right) > 0) return left;
          return right;
        };
        BN.min = function min(left, right) {
          if (left.cmp(right) < 0) return left;
          return right;
        };
        BN.prototype._init = function init2(number, base, endian) {
          if (typeof number === "number") {
            return this._initNumber(number, base, endian);
          }
          if (typeof number === "object") {
            return this._initArray(number, base, endian);
          }
          if (base === "hex") {
            base = 16;
          }
          assert(base === (base | 0) && base >= 2 && base <= 36);
          number = number.toString().replace(/\s+/g, "");
          var start = 0;
          if (number[0] === "-") {
            start++;
            this.negative = 1;
          }
          if (start < number.length) {
            if (base === 16) {
              this._parseHex(number, start, endian);
            } else {
              this._parseBase(number, base, start);
              if (endian === "le") {
                this._initArray(this.toArray(), base, endian);
              }
            }
          }
        };
        BN.prototype._initNumber = function _initNumber(number, base, endian) {
          if (number < 0) {
            this.negative = 1;
            number = -number;
          }
          if (number < 67108864) {
            this.words = [number & 67108863];
            this.length = 1;
          } else if (number < 4503599627370496) {
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863
            ];
            this.length = 2;
          } else {
            assert(number < 9007199254740992);
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863,
              1
            ];
            this.length = 3;
          }
          if (endian !== "le") return;
          this._initArray(this.toArray(), base, endian);
        };
        BN.prototype._initArray = function _initArray(number, base, endian) {
          assert(typeof number.length === "number");
          if (number.length <= 0) {
            this.words = [0];
            this.length = 1;
            return this;
          }
          this.length = Math.ceil(number.length / 3);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var j2, w;
          var off2 = 0;
          if (endian === "be") {
            for (i = number.length - 1, j2 = 0; i >= 0; i -= 3) {
              w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
              this.words[j2] |= w << off2 & 67108863;
              this.words[j2 + 1] = w >>> 26 - off2 & 67108863;
              off2 += 24;
              if (off2 >= 26) {
                off2 -= 26;
                j2++;
              }
            }
          } else if (endian === "le") {
            for (i = 0, j2 = 0; i < number.length; i += 3) {
              w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
              this.words[j2] |= w << off2 & 67108863;
              this.words[j2 + 1] = w >>> 26 - off2 & 67108863;
              off2 += 24;
              if (off2 >= 26) {
                off2 -= 26;
                j2++;
              }
            }
          }
          return this.strip();
        };
        function parseHex4Bits(string, index) {
          var c = string.charCodeAt(index);
          if (c >= 65 && c <= 70) {
            return c - 55;
          } else if (c >= 97 && c <= 102) {
            return c - 87;
          } else {
            return c - 48 & 15;
          }
        }
        function parseHexByte(string, lowerBound, index) {
          var r = parseHex4Bits(string, index);
          if (index - 1 >= lowerBound) {
            r |= parseHex4Bits(string, index - 1) << 4;
          }
          return r;
        }
        BN.prototype._parseHex = function _parseHex(number, start, endian) {
          this.length = Math.ceil((number.length - start) / 6);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var off2 = 0;
          var j2 = 0;
          var w;
          if (endian === "be") {
            for (i = number.length - 1; i >= start; i -= 2) {
              w = parseHexByte(number, start, i) << off2;
              this.words[j2] |= w & 67108863;
              if (off2 >= 18) {
                off2 -= 18;
                j2 += 1;
                this.words[j2] |= w >>> 26;
              } else {
                off2 += 8;
              }
            }
          } else {
            var parseLength = number.length - start;
            for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
              w = parseHexByte(number, start, i) << off2;
              this.words[j2] |= w & 67108863;
              if (off2 >= 18) {
                off2 -= 18;
                j2 += 1;
                this.words[j2] |= w >>> 26;
              } else {
                off2 += 8;
              }
            }
          }
          this.strip();
        };
        function parseBase(str, start, end, mul) {
          var r = 0;
          var len = Math.min(str.length, end);
          for (var i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            if (c >= 49) {
              r += c - 49 + 10;
            } else if (c >= 17) {
              r += c - 17 + 10;
            } else {
              r += c;
            }
          }
          return r;
        }
        BN.prototype._parseBase = function _parseBase(number, base, start) {
          this.words = [0];
          this.length = 1;
          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
            limbLen++;
          }
          limbLen--;
          limbPow = limbPow / base | 0;
          var total = number.length - start;
          var mod = total % limbLen;
          var end = Math.min(total, total - mod) + start;
          var word = 0;
          for (var i = start; i < end; i += limbLen) {
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for (i = 0; i < mod; i++) {
              pow *= base;
            }
            this.imuln(pow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          this.strip();
        };
        BN.prototype.copy = function copy2(dest) {
          dest.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            dest.words[i] = this.words[i];
          }
          dest.length = this.length;
          dest.negative = this.negative;
          dest.red = this.red;
        };
        BN.prototype.clone = function clone() {
          var r = new BN(null);
          this.copy(r);
          return r;
        };
        BN.prototype._expand = function _expand(size) {
          while (this.length < size) {
            this.words[this.length++] = 0;
          }
          return this;
        };
        BN.prototype.strip = function strip() {
          while (this.length > 1 && this.words[this.length - 1] === 0) {
            this.length--;
          }
          return this._normSign();
        };
        BN.prototype._normSign = function _normSign() {
          if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
          }
          return this;
        };
        BN.prototype.inspect = function inspect3() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var zeros = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ];
        var groupSizes = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ];
        var groupBases = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        BN.prototype.toString = function toString3(base, padding) {
          base = base || 10;
          padding = padding | 0 || 1;
          var out;
          if (base === 16 || base === "hex") {
            out = "";
            var off2 = 0;
            var carry = 0;
            for (var i = 0; i < this.length; i++) {
              var w = this.words[i];
              var word = ((w << off2 | carry) & 16777215).toString(16);
              carry = w >>> 24 - off2 & 16777215;
              off2 += 2;
              if (off2 >= 26) {
                off2 -= 26;
                i--;
              }
              if (carry !== 0 || i !== this.length - 1) {
                out = zeros[6 - word.length] + word + out;
              } else {
                out = word + out;
              }
            }
            if (carry !== 0) {
              out = carry.toString(16) + out;
            }
            while (out.length % padding !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          if (base === (base | 0) && base >= 2 && base <= 36) {
            var groupSize = groupSizes[base];
            var groupBase = groupBases[base];
            out = "";
            var c = this.clone();
            c.negative = 0;
            while (!c.isZero()) {
              var r = c.modn(groupBase).toString(base);
              c = c.idivn(groupBase);
              if (!c.isZero()) {
                out = zeros[groupSize - r.length] + r + out;
              } else {
                out = r + out;
              }
            }
            if (this.isZero()) {
              out = "0" + out;
            }
            while (out.length % padding !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          assert(false, "Base should be between 2 and 36");
        };
        BN.prototype.toNumber = function toNumber() {
          var ret = this.words[0];
          if (this.length === 2) {
            ret += this.words[1] * 67108864;
          } else if (this.length === 3 && this.words[2] === 1) {
            ret += 4503599627370496 + this.words[1] * 67108864;
          } else if (this.length > 2) {
            assert(false, "Number can only safely store up to 53 bits");
          }
          return this.negative !== 0 ? -ret : ret;
        };
        BN.prototype.toJSON = function toJSON2() {
          return this.toString(16);
        };
        BN.prototype.toBuffer = function toBuffer(endian, length) {
          assert(typeof Buffer4 !== "undefined");
          return this.toArrayLike(Buffer4, endian, length);
        };
        BN.prototype.toArray = function toArray(endian, length) {
          return this.toArrayLike(Array, endian, length);
        };
        BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
          var byteLength2 = this.byteLength();
          var reqLength = length || Math.max(1, byteLength2);
          assert(byteLength2 <= reqLength, "byte array longer than desired length");
          assert(reqLength > 0, "Requested array length <= 0");
          this.strip();
          var littleEndian = endian === "le";
          var res = new ArrayType(reqLength);
          var b, i;
          var q = this.clone();
          if (!littleEndian) {
            for (i = 0; i < reqLength - byteLength2; i++) {
              res[i] = 0;
            }
            for (i = 0; !q.isZero(); i++) {
              b = q.andln(255);
              q.iushrn(8);
              res[reqLength - i - 1] = b;
            }
          } else {
            for (i = 0; !q.isZero(); i++) {
              b = q.andln(255);
              q.iushrn(8);
              res[i] = b;
            }
            for (; i < reqLength; i++) {
              res[i] = 0;
            }
          }
          return res;
        };
        if (Math.clz32) {
          BN.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
          };
        } else {
          BN.prototype._countBits = function _countBits(w) {
            var t = w;
            var r = 0;
            if (t >= 4096) {
              r += 13;
              t >>>= 13;
            }
            if (t >= 64) {
              r += 7;
              t >>>= 7;
            }
            if (t >= 8) {
              r += 4;
              t >>>= 4;
            }
            if (t >= 2) {
              r += 2;
              t >>>= 2;
            }
            return r + t;
          };
        }
        BN.prototype._zeroBits = function _zeroBits(w) {
          if (w === 0) return 26;
          var t = w;
          var r = 0;
          if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
          }
          if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
          }
          if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
          }
          if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
          }
          if ((t & 1) === 0) {
            r++;
          }
          return r;
        };
        BN.prototype.bitLength = function bitLength() {
          var w = this.words[this.length - 1];
          var hi = this._countBits(w);
          return (this.length - 1) * 26 + hi;
        };
        function toBitArray(num) {
          var w = new Array(num.bitLength());
          for (var bit = 0; bit < w.length; bit++) {
            var off2 = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off2] & 1 << wbit) >>> wbit;
          }
          return w;
        }
        BN.prototype.zeroBits = function zeroBits() {
          if (this.isZero()) return 0;
          var r = 0;
          for (var i = 0; i < this.length; i++) {
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
          }
          return r;
        };
        BN.prototype.byteLength = function byteLength2() {
          return Math.ceil(this.bitLength() / 8);
        };
        BN.prototype.toTwos = function toTwos(width) {
          if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
          }
          return this.clone();
        };
        BN.prototype.fromTwos = function fromTwos(width) {
          if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
          }
          return this.clone();
        };
        BN.prototype.isNeg = function isNeg() {
          return this.negative !== 0;
        };
        BN.prototype.neg = function neg() {
          return this.clone().ineg();
        };
        BN.prototype.ineg = function ineg() {
          if (!this.isZero()) {
            this.negative ^= 1;
          }
          return this;
        };
        BN.prototype.iuor = function iuor(num) {
          while (this.length < num.length) {
            this.words[this.length++] = 0;
          }
          for (var i = 0; i < num.length; i++) {
            this.words[i] = this.words[i] | num.words[i];
          }
          return this.strip();
        };
        BN.prototype.ior = function ior(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuor(num);
        };
        BN.prototype.or = function or(num) {
          if (this.length > num.length) return this.clone().ior(num);
          return num.clone().ior(this);
        };
        BN.prototype.uor = function uor(num) {
          if (this.length > num.length) return this.clone().iuor(num);
          return num.clone().iuor(this);
        };
        BN.prototype.iuand = function iuand(num) {
          var b;
          if (this.length > num.length) {
            b = num;
          } else {
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = this.words[i] & num.words[i];
          }
          this.length = b.length;
          return this.strip();
        };
        BN.prototype.iand = function iand(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuand(num);
        };
        BN.prototype.and = function and(num) {
          if (this.length > num.length) return this.clone().iand(num);
          return num.clone().iand(this);
        };
        BN.prototype.uand = function uand(num) {
          if (this.length > num.length) return this.clone().iuand(num);
          return num.clone().iuand(this);
        };
        BN.prototype.iuxor = function iuxor(num) {
          var a;
          var b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = a.words[i] ^ b.words[i];
          }
          if (this !== a) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = a.length;
          return this.strip();
        };
        BN.prototype.ixor = function ixor(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuxor(num);
        };
        BN.prototype.xor = function xor(num) {
          if (this.length > num.length) return this.clone().ixor(num);
          return num.clone().ixor(this);
        };
        BN.prototype.uxor = function uxor(num) {
          if (this.length > num.length) return this.clone().iuxor(num);
          return num.clone().iuxor(this);
        };
        BN.prototype.inotn = function inotn(width) {
          assert(typeof width === "number" && width >= 0);
          var bytesNeeded = Math.ceil(width / 26) | 0;
          var bitsLeft = width % 26;
          this._expand(bytesNeeded);
          if (bitsLeft > 0) {
            bytesNeeded--;
          }
          for (var i = 0; i < bytesNeeded; i++) {
            this.words[i] = ~this.words[i] & 67108863;
          }
          if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
          }
          return this.strip();
        };
        BN.prototype.notn = function notn(width) {
          return this.clone().inotn(width);
        };
        BN.prototype.setn = function setn(bit, val) {
          assert(typeof bit === "number" && bit >= 0);
          var off2 = bit / 26 | 0;
          var wbit = bit % 26;
          this._expand(off2 + 1);
          if (val) {
            this.words[off2] = this.words[off2] | 1 << wbit;
          } else {
            this.words[off2] = this.words[off2] & ~(1 << wbit);
          }
          return this.strip();
        };
        BN.prototype.iadd = function iadd(num) {
          var r;
          if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
          } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
          }
          var a, b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
          }
          this.length = a.length;
          if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
          } else if (a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          return this;
        };
        BN.prototype.add = function add(num) {
          var res;
          if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
          } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
          }
          if (this.length > num.length) return this.clone().iadd(num);
          return num.clone().iadd(this);
        };
        BN.prototype.isub = function isub(num) {
          if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
          } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
          }
          var cmp = this.cmp(num);
          if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
          }
          var a, b;
          if (cmp > 0) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
          }
          if (carry === 0 && i < a.length && a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = Math.max(this.length, i);
          if (a !== this) {
            this.negative = 1;
          }
          return this.strip();
        };
        BN.prototype.sub = function sub(num) {
          return this.clone().isub(num);
        };
        function smallMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          var len = self2.length + num.length | 0;
          out.length = len;
          len = len - 1 | 0;
          var a = self2.words[0] | 0;
          var b = num.words[0] | 0;
          var r = a * b;
          var lo = r & 67108863;
          var carry = r / 67108864 | 0;
          out.words[0] = lo;
          for (var k4 = 1; k4 < len; k4++) {
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k4, num.length - 1);
            for (var j2 = Math.max(0, k4 - self2.length + 1); j2 <= maxJ; j2++) {
              var i = k4 - j2 | 0;
              a = self2.words[i] | 0;
              b = num.words[j2] | 0;
              r = a * b + rword;
              ncarry += r / 67108864 | 0;
              rword = r & 67108863;
            }
            out.words[k4] = rword | 0;
            carry = ncarry | 0;
          }
          if (carry !== 0) {
            out.words[k4] = carry | 0;
          } else {
            out.length--;
          }
          return out.strip();
        }
        var comb10MulTo = function comb10MulTo2(self2, num, out) {
          var a = self2.words;
          var b = num.words;
          var o = out.words;
          var c = 0;
          var lo;
          var mid;
          var hi;
          var a02 = a[0] | 0;
          var al0 = a02 & 8191;
          var ah0 = a02 >>> 13;
          var a12 = a[1] | 0;
          var al1 = a12 & 8191;
          var ah1 = a12 >>> 13;
          var a22 = a[2] | 0;
          var al2 = a22 & 8191;
          var ah2 = a22 >>> 13;
          var a32 = a[3] | 0;
          var al3 = a32 & 8191;
          var ah3 = a32 >>> 13;
          var a4 = a[4] | 0;
          var al4 = a4 & 8191;
          var ah4 = a4 >>> 13;
          var a5 = a[5] | 0;
          var al5 = a5 & 8191;
          var ah5 = a5 >>> 13;
          var a6 = a[6] | 0;
          var al6 = a6 & 8191;
          var ah6 = a6 >>> 13;
          var a7 = a[7] | 0;
          var al7 = a7 & 8191;
          var ah7 = a7 >>> 13;
          var a8 = a[8] | 0;
          var al8 = a8 & 8191;
          var ah8 = a8 >>> 13;
          var a9 = a[9] | 0;
          var al9 = a9 & 8191;
          var ah9 = a9 >>> 13;
          var b02 = b[0] | 0;
          var bl0 = b02 & 8191;
          var bh0 = b02 >>> 13;
          var b12 = b[1] | 0;
          var bl1 = b12 & 8191;
          var bh1 = b12 >>> 13;
          var b22 = b[2] | 0;
          var bl2 = b22 & 8191;
          var bh2 = b22 >>> 13;
          var b32 = b[3] | 0;
          var bl3 = b32 & 8191;
          var bh3 = b32 >>> 13;
          var b4 = b[4] | 0;
          var bl4 = b4 & 8191;
          var bh4 = b4 >>> 13;
          var b5 = b[5] | 0;
          var bl5 = b5 & 8191;
          var bh5 = b5 >>> 13;
          var b6 = b[6] | 0;
          var bl6 = b6 & 8191;
          var bh6 = b6 >>> 13;
          var b7 = b[7] | 0;
          var bl7 = b7 & 8191;
          var bh7 = b7 >>> 13;
          var b8 = b[8] | 0;
          var bl8 = b8 & 8191;
          var bh8 = b8 >>> 13;
          var b9 = b[9] | 0;
          var bl9 = b9 & 8191;
          var bh9 = b9 >>> 13;
          out.negative = self2.negative ^ num.negative;
          out.length = 19;
          lo = Math.imul(al0, bl0);
          mid = Math.imul(al0, bh0);
          mid = mid + Math.imul(ah0, bl0) | 0;
          hi = Math.imul(ah0, bh0);
          var w02 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w02 >>> 26) | 0;
          w02 &= 67108863;
          lo = Math.imul(al1, bl0);
          mid = Math.imul(al1, bh0);
          mid = mid + Math.imul(ah1, bl0) | 0;
          hi = Math.imul(ah1, bh0);
          lo = lo + Math.imul(al0, bl1) | 0;
          mid = mid + Math.imul(al0, bh1) | 0;
          mid = mid + Math.imul(ah0, bl1) | 0;
          hi = hi + Math.imul(ah0, bh1) | 0;
          var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
          w12 &= 67108863;
          lo = Math.imul(al2, bl0);
          mid = Math.imul(al2, bh0);
          mid = mid + Math.imul(ah2, bl0) | 0;
          hi = Math.imul(ah2, bh0);
          lo = lo + Math.imul(al1, bl1) | 0;
          mid = mid + Math.imul(al1, bh1) | 0;
          mid = mid + Math.imul(ah1, bl1) | 0;
          hi = hi + Math.imul(ah1, bh1) | 0;
          lo = lo + Math.imul(al0, bl2) | 0;
          mid = mid + Math.imul(al0, bh2) | 0;
          mid = mid + Math.imul(ah0, bl2) | 0;
          hi = hi + Math.imul(ah0, bh2) | 0;
          var w22 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w22 >>> 26) | 0;
          w22 &= 67108863;
          lo = Math.imul(al3, bl0);
          mid = Math.imul(al3, bh0);
          mid = mid + Math.imul(ah3, bl0) | 0;
          hi = Math.imul(ah3, bh0);
          lo = lo + Math.imul(al2, bl1) | 0;
          mid = mid + Math.imul(al2, bh1) | 0;
          mid = mid + Math.imul(ah2, bl1) | 0;
          hi = hi + Math.imul(ah2, bh1) | 0;
          lo = lo + Math.imul(al1, bl2) | 0;
          mid = mid + Math.imul(al1, bh2) | 0;
          mid = mid + Math.imul(ah1, bl2) | 0;
          hi = hi + Math.imul(ah1, bh2) | 0;
          lo = lo + Math.imul(al0, bl3) | 0;
          mid = mid + Math.imul(al0, bh3) | 0;
          mid = mid + Math.imul(ah0, bl3) | 0;
          hi = hi + Math.imul(ah0, bh3) | 0;
          var w32 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w32 >>> 26) | 0;
          w32 &= 67108863;
          lo = Math.imul(al4, bl0);
          mid = Math.imul(al4, bh0);
          mid = mid + Math.imul(ah4, bl0) | 0;
          hi = Math.imul(ah4, bh0);
          lo = lo + Math.imul(al3, bl1) | 0;
          mid = mid + Math.imul(al3, bh1) | 0;
          mid = mid + Math.imul(ah3, bl1) | 0;
          hi = hi + Math.imul(ah3, bh1) | 0;
          lo = lo + Math.imul(al2, bl2) | 0;
          mid = mid + Math.imul(al2, bh2) | 0;
          mid = mid + Math.imul(ah2, bl2) | 0;
          hi = hi + Math.imul(ah2, bh2) | 0;
          lo = lo + Math.imul(al1, bl3) | 0;
          mid = mid + Math.imul(al1, bh3) | 0;
          mid = mid + Math.imul(ah1, bl3) | 0;
          hi = hi + Math.imul(ah1, bh3) | 0;
          lo = lo + Math.imul(al0, bl4) | 0;
          mid = mid + Math.imul(al0, bh4) | 0;
          mid = mid + Math.imul(ah0, bl4) | 0;
          hi = hi + Math.imul(ah0, bh4) | 0;
          var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
          w4 &= 67108863;
          lo = Math.imul(al5, bl0);
          mid = Math.imul(al5, bh0);
          mid = mid + Math.imul(ah5, bl0) | 0;
          hi = Math.imul(ah5, bh0);
          lo = lo + Math.imul(al4, bl1) | 0;
          mid = mid + Math.imul(al4, bh1) | 0;
          mid = mid + Math.imul(ah4, bl1) | 0;
          hi = hi + Math.imul(ah4, bh1) | 0;
          lo = lo + Math.imul(al3, bl2) | 0;
          mid = mid + Math.imul(al3, bh2) | 0;
          mid = mid + Math.imul(ah3, bl2) | 0;
          hi = hi + Math.imul(ah3, bh2) | 0;
          lo = lo + Math.imul(al2, bl3) | 0;
          mid = mid + Math.imul(al2, bh3) | 0;
          mid = mid + Math.imul(ah2, bl3) | 0;
          hi = hi + Math.imul(ah2, bh3) | 0;
          lo = lo + Math.imul(al1, bl4) | 0;
          mid = mid + Math.imul(al1, bh4) | 0;
          mid = mid + Math.imul(ah1, bl4) | 0;
          hi = hi + Math.imul(ah1, bh4) | 0;
          lo = lo + Math.imul(al0, bl5) | 0;
          mid = mid + Math.imul(al0, bh5) | 0;
          mid = mid + Math.imul(ah0, bl5) | 0;
          hi = hi + Math.imul(ah0, bh5) | 0;
          var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
          w5 &= 67108863;
          lo = Math.imul(al6, bl0);
          mid = Math.imul(al6, bh0);
          mid = mid + Math.imul(ah6, bl0) | 0;
          hi = Math.imul(ah6, bh0);
          lo = lo + Math.imul(al5, bl1) | 0;
          mid = mid + Math.imul(al5, bh1) | 0;
          mid = mid + Math.imul(ah5, bl1) | 0;
          hi = hi + Math.imul(ah5, bh1) | 0;
          lo = lo + Math.imul(al4, bl2) | 0;
          mid = mid + Math.imul(al4, bh2) | 0;
          mid = mid + Math.imul(ah4, bl2) | 0;
          hi = hi + Math.imul(ah4, bh2) | 0;
          lo = lo + Math.imul(al3, bl3) | 0;
          mid = mid + Math.imul(al3, bh3) | 0;
          mid = mid + Math.imul(ah3, bl3) | 0;
          hi = hi + Math.imul(ah3, bh3) | 0;
          lo = lo + Math.imul(al2, bl4) | 0;
          mid = mid + Math.imul(al2, bh4) | 0;
          mid = mid + Math.imul(ah2, bl4) | 0;
          hi = hi + Math.imul(ah2, bh4) | 0;
          lo = lo + Math.imul(al1, bl5) | 0;
          mid = mid + Math.imul(al1, bh5) | 0;
          mid = mid + Math.imul(ah1, bl5) | 0;
          hi = hi + Math.imul(ah1, bh5) | 0;
          lo = lo + Math.imul(al0, bl6) | 0;
          mid = mid + Math.imul(al0, bh6) | 0;
          mid = mid + Math.imul(ah0, bl6) | 0;
          hi = hi + Math.imul(ah0, bh6) | 0;
          var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
          w6 &= 67108863;
          lo = Math.imul(al7, bl0);
          mid = Math.imul(al7, bh0);
          mid = mid + Math.imul(ah7, bl0) | 0;
          hi = Math.imul(ah7, bh0);
          lo = lo + Math.imul(al6, bl1) | 0;
          mid = mid + Math.imul(al6, bh1) | 0;
          mid = mid + Math.imul(ah6, bl1) | 0;
          hi = hi + Math.imul(ah6, bh1) | 0;
          lo = lo + Math.imul(al5, bl2) | 0;
          mid = mid + Math.imul(al5, bh2) | 0;
          mid = mid + Math.imul(ah5, bl2) | 0;
          hi = hi + Math.imul(ah5, bh2) | 0;
          lo = lo + Math.imul(al4, bl3) | 0;
          mid = mid + Math.imul(al4, bh3) | 0;
          mid = mid + Math.imul(ah4, bl3) | 0;
          hi = hi + Math.imul(ah4, bh3) | 0;
          lo = lo + Math.imul(al3, bl4) | 0;
          mid = mid + Math.imul(al3, bh4) | 0;
          mid = mid + Math.imul(ah3, bl4) | 0;
          hi = hi + Math.imul(ah3, bh4) | 0;
          lo = lo + Math.imul(al2, bl5) | 0;
          mid = mid + Math.imul(al2, bh5) | 0;
          mid = mid + Math.imul(ah2, bl5) | 0;
          hi = hi + Math.imul(ah2, bh5) | 0;
          lo = lo + Math.imul(al1, bl6) | 0;
          mid = mid + Math.imul(al1, bh6) | 0;
          mid = mid + Math.imul(ah1, bl6) | 0;
          hi = hi + Math.imul(ah1, bh6) | 0;
          lo = lo + Math.imul(al0, bl7) | 0;
          mid = mid + Math.imul(al0, bh7) | 0;
          mid = mid + Math.imul(ah0, bl7) | 0;
          hi = hi + Math.imul(ah0, bh7) | 0;
          var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
          w7 &= 67108863;
          lo = Math.imul(al8, bl0);
          mid = Math.imul(al8, bh0);
          mid = mid + Math.imul(ah8, bl0) | 0;
          hi = Math.imul(ah8, bh0);
          lo = lo + Math.imul(al7, bl1) | 0;
          mid = mid + Math.imul(al7, bh1) | 0;
          mid = mid + Math.imul(ah7, bl1) | 0;
          hi = hi + Math.imul(ah7, bh1) | 0;
          lo = lo + Math.imul(al6, bl2) | 0;
          mid = mid + Math.imul(al6, bh2) | 0;
          mid = mid + Math.imul(ah6, bl2) | 0;
          hi = hi + Math.imul(ah6, bh2) | 0;
          lo = lo + Math.imul(al5, bl3) | 0;
          mid = mid + Math.imul(al5, bh3) | 0;
          mid = mid + Math.imul(ah5, bl3) | 0;
          hi = hi + Math.imul(ah5, bh3) | 0;
          lo = lo + Math.imul(al4, bl4) | 0;
          mid = mid + Math.imul(al4, bh4) | 0;
          mid = mid + Math.imul(ah4, bl4) | 0;
          hi = hi + Math.imul(ah4, bh4) | 0;
          lo = lo + Math.imul(al3, bl5) | 0;
          mid = mid + Math.imul(al3, bh5) | 0;
          mid = mid + Math.imul(ah3, bl5) | 0;
          hi = hi + Math.imul(ah3, bh5) | 0;
          lo = lo + Math.imul(al2, bl6) | 0;
          mid = mid + Math.imul(al2, bh6) | 0;
          mid = mid + Math.imul(ah2, bl6) | 0;
          hi = hi + Math.imul(ah2, bh6) | 0;
          lo = lo + Math.imul(al1, bl7) | 0;
          mid = mid + Math.imul(al1, bh7) | 0;
          mid = mid + Math.imul(ah1, bl7) | 0;
          hi = hi + Math.imul(ah1, bh7) | 0;
          lo = lo + Math.imul(al0, bl8) | 0;
          mid = mid + Math.imul(al0, bh8) | 0;
          mid = mid + Math.imul(ah0, bl8) | 0;
          hi = hi + Math.imul(ah0, bh8) | 0;
          var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
          w8 &= 67108863;
          lo = Math.imul(al9, bl0);
          mid = Math.imul(al9, bh0);
          mid = mid + Math.imul(ah9, bl0) | 0;
          hi = Math.imul(ah9, bh0);
          lo = lo + Math.imul(al8, bl1) | 0;
          mid = mid + Math.imul(al8, bh1) | 0;
          mid = mid + Math.imul(ah8, bl1) | 0;
          hi = hi + Math.imul(ah8, bh1) | 0;
          lo = lo + Math.imul(al7, bl2) | 0;
          mid = mid + Math.imul(al7, bh2) | 0;
          mid = mid + Math.imul(ah7, bl2) | 0;
          hi = hi + Math.imul(ah7, bh2) | 0;
          lo = lo + Math.imul(al6, bl3) | 0;
          mid = mid + Math.imul(al6, bh3) | 0;
          mid = mid + Math.imul(ah6, bl3) | 0;
          hi = hi + Math.imul(ah6, bh3) | 0;
          lo = lo + Math.imul(al5, bl4) | 0;
          mid = mid + Math.imul(al5, bh4) | 0;
          mid = mid + Math.imul(ah5, bl4) | 0;
          hi = hi + Math.imul(ah5, bh4) | 0;
          lo = lo + Math.imul(al4, bl5) | 0;
          mid = mid + Math.imul(al4, bh5) | 0;
          mid = mid + Math.imul(ah4, bl5) | 0;
          hi = hi + Math.imul(ah4, bh5) | 0;
          lo = lo + Math.imul(al3, bl6) | 0;
          mid = mid + Math.imul(al3, bh6) | 0;
          mid = mid + Math.imul(ah3, bl6) | 0;
          hi = hi + Math.imul(ah3, bh6) | 0;
          lo = lo + Math.imul(al2, bl7) | 0;
          mid = mid + Math.imul(al2, bh7) | 0;
          mid = mid + Math.imul(ah2, bl7) | 0;
          hi = hi + Math.imul(ah2, bh7) | 0;
          lo = lo + Math.imul(al1, bl8) | 0;
          mid = mid + Math.imul(al1, bh8) | 0;
          mid = mid + Math.imul(ah1, bl8) | 0;
          hi = hi + Math.imul(ah1, bh8) | 0;
          lo = lo + Math.imul(al0, bl9) | 0;
          mid = mid + Math.imul(al0, bh9) | 0;
          mid = mid + Math.imul(ah0, bl9) | 0;
          hi = hi + Math.imul(ah0, bh9) | 0;
          var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
          w9 &= 67108863;
          lo = Math.imul(al9, bl1);
          mid = Math.imul(al9, bh1);
          mid = mid + Math.imul(ah9, bl1) | 0;
          hi = Math.imul(ah9, bh1);
          lo = lo + Math.imul(al8, bl2) | 0;
          mid = mid + Math.imul(al8, bh2) | 0;
          mid = mid + Math.imul(ah8, bl2) | 0;
          hi = hi + Math.imul(ah8, bh2) | 0;
          lo = lo + Math.imul(al7, bl3) | 0;
          mid = mid + Math.imul(al7, bh3) | 0;
          mid = mid + Math.imul(ah7, bl3) | 0;
          hi = hi + Math.imul(ah7, bh3) | 0;
          lo = lo + Math.imul(al6, bl4) | 0;
          mid = mid + Math.imul(al6, bh4) | 0;
          mid = mid + Math.imul(ah6, bl4) | 0;
          hi = hi + Math.imul(ah6, bh4) | 0;
          lo = lo + Math.imul(al5, bl5) | 0;
          mid = mid + Math.imul(al5, bh5) | 0;
          mid = mid + Math.imul(ah5, bl5) | 0;
          hi = hi + Math.imul(ah5, bh5) | 0;
          lo = lo + Math.imul(al4, bl6) | 0;
          mid = mid + Math.imul(al4, bh6) | 0;
          mid = mid + Math.imul(ah4, bl6) | 0;
          hi = hi + Math.imul(ah4, bh6) | 0;
          lo = lo + Math.imul(al3, bl7) | 0;
          mid = mid + Math.imul(al3, bh7) | 0;
          mid = mid + Math.imul(ah3, bl7) | 0;
          hi = hi + Math.imul(ah3, bh7) | 0;
          lo = lo + Math.imul(al2, bl8) | 0;
          mid = mid + Math.imul(al2, bh8) | 0;
          mid = mid + Math.imul(ah2, bl8) | 0;
          hi = hi + Math.imul(ah2, bh8) | 0;
          lo = lo + Math.imul(al1, bl9) | 0;
          mid = mid + Math.imul(al1, bh9) | 0;
          mid = mid + Math.imul(ah1, bl9) | 0;
          hi = hi + Math.imul(ah1, bh9) | 0;
          var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
          w10 &= 67108863;
          lo = Math.imul(al9, bl2);
          mid = Math.imul(al9, bh2);
          mid = mid + Math.imul(ah9, bl2) | 0;
          hi = Math.imul(ah9, bh2);
          lo = lo + Math.imul(al8, bl3) | 0;
          mid = mid + Math.imul(al8, bh3) | 0;
          mid = mid + Math.imul(ah8, bl3) | 0;
          hi = hi + Math.imul(ah8, bh3) | 0;
          lo = lo + Math.imul(al7, bl4) | 0;
          mid = mid + Math.imul(al7, bh4) | 0;
          mid = mid + Math.imul(ah7, bl4) | 0;
          hi = hi + Math.imul(ah7, bh4) | 0;
          lo = lo + Math.imul(al6, bl5) | 0;
          mid = mid + Math.imul(al6, bh5) | 0;
          mid = mid + Math.imul(ah6, bl5) | 0;
          hi = hi + Math.imul(ah6, bh5) | 0;
          lo = lo + Math.imul(al5, bl6) | 0;
          mid = mid + Math.imul(al5, bh6) | 0;
          mid = mid + Math.imul(ah5, bl6) | 0;
          hi = hi + Math.imul(ah5, bh6) | 0;
          lo = lo + Math.imul(al4, bl7) | 0;
          mid = mid + Math.imul(al4, bh7) | 0;
          mid = mid + Math.imul(ah4, bl7) | 0;
          hi = hi + Math.imul(ah4, bh7) | 0;
          lo = lo + Math.imul(al3, bl8) | 0;
          mid = mid + Math.imul(al3, bh8) | 0;
          mid = mid + Math.imul(ah3, bl8) | 0;
          hi = hi + Math.imul(ah3, bh8) | 0;
          lo = lo + Math.imul(al2, bl9) | 0;
          mid = mid + Math.imul(al2, bh9) | 0;
          mid = mid + Math.imul(ah2, bl9) | 0;
          hi = hi + Math.imul(ah2, bh9) | 0;
          var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
          w11 &= 67108863;
          lo = Math.imul(al9, bl3);
          mid = Math.imul(al9, bh3);
          mid = mid + Math.imul(ah9, bl3) | 0;
          hi = Math.imul(ah9, bh3);
          lo = lo + Math.imul(al8, bl4) | 0;
          mid = mid + Math.imul(al8, bh4) | 0;
          mid = mid + Math.imul(ah8, bl4) | 0;
          hi = hi + Math.imul(ah8, bh4) | 0;
          lo = lo + Math.imul(al7, bl5) | 0;
          mid = mid + Math.imul(al7, bh5) | 0;
          mid = mid + Math.imul(ah7, bl5) | 0;
          hi = hi + Math.imul(ah7, bh5) | 0;
          lo = lo + Math.imul(al6, bl6) | 0;
          mid = mid + Math.imul(al6, bh6) | 0;
          mid = mid + Math.imul(ah6, bl6) | 0;
          hi = hi + Math.imul(ah6, bh6) | 0;
          lo = lo + Math.imul(al5, bl7) | 0;
          mid = mid + Math.imul(al5, bh7) | 0;
          mid = mid + Math.imul(ah5, bl7) | 0;
          hi = hi + Math.imul(ah5, bh7) | 0;
          lo = lo + Math.imul(al4, bl8) | 0;
          mid = mid + Math.imul(al4, bh8) | 0;
          mid = mid + Math.imul(ah4, bl8) | 0;
          hi = hi + Math.imul(ah4, bh8) | 0;
          lo = lo + Math.imul(al3, bl9) | 0;
          mid = mid + Math.imul(al3, bh9) | 0;
          mid = mid + Math.imul(ah3, bl9) | 0;
          hi = hi + Math.imul(ah3, bh9) | 0;
          var w122 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w122 >>> 26) | 0;
          w122 &= 67108863;
          lo = Math.imul(al9, bl4);
          mid = Math.imul(al9, bh4);
          mid = mid + Math.imul(ah9, bl4) | 0;
          hi = Math.imul(ah9, bh4);
          lo = lo + Math.imul(al8, bl5) | 0;
          mid = mid + Math.imul(al8, bh5) | 0;
          mid = mid + Math.imul(ah8, bl5) | 0;
          hi = hi + Math.imul(ah8, bh5) | 0;
          lo = lo + Math.imul(al7, bl6) | 0;
          mid = mid + Math.imul(al7, bh6) | 0;
          mid = mid + Math.imul(ah7, bl6) | 0;
          hi = hi + Math.imul(ah7, bh6) | 0;
          lo = lo + Math.imul(al6, bl7) | 0;
          mid = mid + Math.imul(al6, bh7) | 0;
          mid = mid + Math.imul(ah6, bl7) | 0;
          hi = hi + Math.imul(ah6, bh7) | 0;
          lo = lo + Math.imul(al5, bl8) | 0;
          mid = mid + Math.imul(al5, bh8) | 0;
          mid = mid + Math.imul(ah5, bl8) | 0;
          hi = hi + Math.imul(ah5, bh8) | 0;
          lo = lo + Math.imul(al4, bl9) | 0;
          mid = mid + Math.imul(al4, bh9) | 0;
          mid = mid + Math.imul(ah4, bl9) | 0;
          hi = hi + Math.imul(ah4, bh9) | 0;
          var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
          w13 &= 67108863;
          lo = Math.imul(al9, bl5);
          mid = Math.imul(al9, bh5);
          mid = mid + Math.imul(ah9, bl5) | 0;
          hi = Math.imul(ah9, bh5);
          lo = lo + Math.imul(al8, bl6) | 0;
          mid = mid + Math.imul(al8, bh6) | 0;
          mid = mid + Math.imul(ah8, bl6) | 0;
          hi = hi + Math.imul(ah8, bh6) | 0;
          lo = lo + Math.imul(al7, bl7) | 0;
          mid = mid + Math.imul(al7, bh7) | 0;
          mid = mid + Math.imul(ah7, bl7) | 0;
          hi = hi + Math.imul(ah7, bh7) | 0;
          lo = lo + Math.imul(al6, bl8) | 0;
          mid = mid + Math.imul(al6, bh8) | 0;
          mid = mid + Math.imul(ah6, bl8) | 0;
          hi = hi + Math.imul(ah6, bh8) | 0;
          lo = lo + Math.imul(al5, bl9) | 0;
          mid = mid + Math.imul(al5, bh9) | 0;
          mid = mid + Math.imul(ah5, bl9) | 0;
          hi = hi + Math.imul(ah5, bh9) | 0;
          var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
          w14 &= 67108863;
          lo = Math.imul(al9, bl6);
          mid = Math.imul(al9, bh6);
          mid = mid + Math.imul(ah9, bl6) | 0;
          hi = Math.imul(ah9, bh6);
          lo = lo + Math.imul(al8, bl7) | 0;
          mid = mid + Math.imul(al8, bh7) | 0;
          mid = mid + Math.imul(ah8, bl7) | 0;
          hi = hi + Math.imul(ah8, bh7) | 0;
          lo = lo + Math.imul(al7, bl8) | 0;
          mid = mid + Math.imul(al7, bh8) | 0;
          mid = mid + Math.imul(ah7, bl8) | 0;
          hi = hi + Math.imul(ah7, bh8) | 0;
          lo = lo + Math.imul(al6, bl9) | 0;
          mid = mid + Math.imul(al6, bh9) | 0;
          mid = mid + Math.imul(ah6, bl9) | 0;
          hi = hi + Math.imul(ah6, bh9) | 0;
          var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
          w15 &= 67108863;
          lo = Math.imul(al9, bl7);
          mid = Math.imul(al9, bh7);
          mid = mid + Math.imul(ah9, bl7) | 0;
          hi = Math.imul(ah9, bh7);
          lo = lo + Math.imul(al8, bl8) | 0;
          mid = mid + Math.imul(al8, bh8) | 0;
          mid = mid + Math.imul(ah8, bl8) | 0;
          hi = hi + Math.imul(ah8, bh8) | 0;
          lo = lo + Math.imul(al7, bl9) | 0;
          mid = mid + Math.imul(al7, bh9) | 0;
          mid = mid + Math.imul(ah7, bl9) | 0;
          hi = hi + Math.imul(ah7, bh9) | 0;
          var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
          w16 &= 67108863;
          lo = Math.imul(al9, bl8);
          mid = Math.imul(al9, bh8);
          mid = mid + Math.imul(ah9, bl8) | 0;
          hi = Math.imul(ah9, bh8);
          lo = lo + Math.imul(al8, bl9) | 0;
          mid = mid + Math.imul(al8, bh9) | 0;
          mid = mid + Math.imul(ah8, bl9) | 0;
          hi = hi + Math.imul(ah8, bh9) | 0;
          var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
          w17 &= 67108863;
          lo = Math.imul(al9, bl9);
          mid = Math.imul(al9, bh9);
          mid = mid + Math.imul(ah9, bl9) | 0;
          hi = Math.imul(ah9, bh9);
          var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
          w18 &= 67108863;
          o[0] = w02;
          o[1] = w12;
          o[2] = w22;
          o[3] = w32;
          o[4] = w4;
          o[5] = w5;
          o[6] = w6;
          o[7] = w7;
          o[8] = w8;
          o[9] = w9;
          o[10] = w10;
          o[11] = w11;
          o[12] = w122;
          o[13] = w13;
          o[14] = w14;
          o[15] = w15;
          o[16] = w16;
          o[17] = w17;
          o[18] = w18;
          if (c !== 0) {
            o[19] = c;
            out.length++;
          }
          return out;
        };
        if (!Math.imul) {
          comb10MulTo = smallMulTo;
        }
        function bigMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          out.length = self2.length + num.length;
          var carry = 0;
          var hncarry = 0;
          for (var k4 = 0; k4 < out.length - 1; k4++) {
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k4, num.length - 1);
            for (var j2 = Math.max(0, k4 - self2.length + 1); j2 <= maxJ; j2++) {
              var i = k4 - j2;
              var a = self2.words[i] | 0;
              var b = num.words[j2] | 0;
              var r = a * b;
              var lo = r & 67108863;
              ncarry = ncarry + (r / 67108864 | 0) | 0;
              lo = lo + rword | 0;
              rword = lo & 67108863;
              ncarry = ncarry + (lo >>> 26) | 0;
              hncarry += ncarry >>> 26;
              ncarry &= 67108863;
            }
            out.words[k4] = rword;
            carry = ncarry;
            ncarry = hncarry;
          }
          if (carry !== 0) {
            out.words[k4] = carry;
          } else {
            out.length--;
          }
          return out.strip();
        }
        function jumboMulTo(self2, num, out) {
          var fftm = new FFTM();
          return fftm.mulp(self2, num, out);
        }
        BN.prototype.mulTo = function mulTo(num, out) {
          var res;
          var len = this.length + num.length;
          if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
          } else if (len < 63) {
            res = smallMulTo(this, num, out);
          } else if (len < 1024) {
            res = bigMulTo(this, num, out);
          } else {
            res = jumboMulTo(this, num, out);
          }
          return res;
        };
        function FFTM(x, y) {
          this.x = x;
          this.y = y;
        }
        FFTM.prototype.makeRBT = function makeRBT(N4) {
          var t = new Array(N4);
          var l = BN.prototype._countBits(N4) - 1;
          for (var i = 0; i < N4; i++) {
            t[i] = this.revBin(i, l, N4);
          }
          return t;
        };
        FFTM.prototype.revBin = function revBin(x, l, N4) {
          if (x === 0 || x === N4 - 1) return x;
          var rb = 0;
          for (var i = 0; i < l; i++) {
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
          }
          return rb;
        };
        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N4) {
          for (var i = 0; i < N4; i++) {
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
          }
        };
        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N4, rbt) {
          this.permute(rbt, rws, iws, rtws, itws, N4);
          for (var s = 1; s < N4; s <<= 1) {
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for (var p = 0; p < N4; p += l) {
              var rtwdf_ = rtwdf;
              var itwdf_ = itwdf;
              for (var j2 = 0; j2 < s; j2++) {
                var re = rtws[p + j2];
                var ie2 = itws[p + j2];
                var ro = rtws[p + j2 + s];
                var io = itws[p + j2 + s];
                var rx = rtwdf_ * ro - itwdf_ * io;
                io = rtwdf_ * io + itwdf_ * ro;
                ro = rx;
                rtws[p + j2] = re + ro;
                itws[p + j2] = ie2 + io;
                rtws[p + j2 + s] = re - ro;
                itws[p + j2 + s] = ie2 - io;
                if (j2 !== l) {
                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                  rtwdf_ = rx;
                }
              }
            }
          }
        };
        FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
          var N4 = Math.max(m, n) | 1;
          var odd = N4 & 1;
          var i = 0;
          for (N4 = N4 / 2 | 0; N4; N4 = N4 >>> 1) {
            i++;
          }
          return 1 << i + 1 + odd;
        };
        FFTM.prototype.conjugate = function conjugate(rws, iws, N4) {
          if (N4 <= 1) return;
          for (var i = 0; i < N4 / 2; i++) {
            var t = rws[i];
            rws[i] = rws[N4 - i - 1];
            rws[N4 - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N4 - i - 1];
            iws[N4 - i - 1] = -t;
          }
        };
        FFTM.prototype.normalize13b = function normalize13b(ws, N4) {
          var carry = 0;
          for (var i = 0; i < N4 / 2; i++) {
            var w = Math.round(ws[2 * i + 1] / N4) * 8192 + Math.round(ws[2 * i] / N4) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) {
              carry = 0;
            } else {
              carry = w / 67108864 | 0;
            }
          }
          return ws;
        };
        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N4) {
          var carry = 0;
          for (var i = 0; i < len; i++) {
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
          }
          for (i = 2 * len; i < N4; ++i) {
            rws[i] = 0;
          }
          assert(carry === 0);
          assert((carry & ~8191) === 0);
        };
        FFTM.prototype.stub = function stub(N4) {
          var ph = new Array(N4);
          for (var i = 0; i < N4; i++) {
            ph[i] = 0;
          }
          return ph;
        };
        FFTM.prototype.mulp = function mulp(x, y, out) {
          var N4 = 2 * this.guessLen13b(x.length, y.length);
          var rbt = this.makeRBT(N4);
          var _ = this.stub(N4);
          var rws = new Array(N4);
          var rwst = new Array(N4);
          var iwst = new Array(N4);
          var nrws = new Array(N4);
          var nrwst = new Array(N4);
          var niwst = new Array(N4);
          var rmws = out.words;
          rmws.length = N4;
          this.convert13b(x.words, x.length, rws, N4);
          this.convert13b(y.words, y.length, nrws, N4);
          this.transform(rws, _, rwst, iwst, N4, rbt);
          this.transform(nrws, _, nrwst, niwst, N4, rbt);
          for (var i = 0; i < N4; i++) {
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
          }
          this.conjugate(rwst, iwst, N4);
          this.transform(rwst, iwst, rmws, _, N4, rbt);
          this.conjugate(rmws, _, N4);
          this.normalize13b(rmws, N4);
          out.negative = x.negative ^ y.negative;
          out.length = x.length + y.length;
          return out.strip();
        };
        BN.prototype.mul = function mul(num) {
          var out = new BN(null);
          out.words = new Array(this.length + num.length);
          return this.mulTo(num, out);
        };
        BN.prototype.mulf = function mulf(num) {
          var out = new BN(null);
          out.words = new Array(this.length + num.length);
          return jumboMulTo(this, num, out);
        };
        BN.prototype.imul = function imul(num) {
          return this.clone().mulTo(num, this);
        };
        BN.prototype.imuln = function imuln(num) {
          assert(typeof num === "number");
          assert(num < 67108864);
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          this.length = num === 0 ? 1 : this.length;
          return this;
        };
        BN.prototype.muln = function muln(num) {
          return this.clone().imuln(num);
        };
        BN.prototype.sqr = function sqr() {
          return this.mul(this);
        };
        BN.prototype.isqr = function isqr() {
          return this.imul(this.clone());
        };
        BN.prototype.pow = function pow(num) {
          var w = toBitArray(num);
          if (w.length === 0) return new BN(1);
          var res = this;
          for (var i = 0; i < w.length; i++, res = res.sqr()) {
            if (w[i] !== 0) break;
          }
          if (++i < w.length) {
            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
              if (w[i] === 0) continue;
              res = res.mul(q);
            }
          }
          return res;
        };
        BN.prototype.iushln = function iushln(bits) {
          assert(typeof bits === "number" && bits >= 0);
          var r = bits % 26;
          var s = (bits - r) / 26;
          var carryMask = 67108863 >>> 26 - r << 26 - r;
          var i;
          if (r !== 0) {
            var carry = 0;
            for (i = 0; i < this.length; i++) {
              var newCarry = this.words[i] & carryMask;
              var c = (this.words[i] | 0) - newCarry << r;
              this.words[i] = c | carry;
              carry = newCarry >>> 26 - r;
            }
            if (carry) {
              this.words[i] = carry;
              this.length++;
            }
          }
          if (s !== 0) {
            for (i = this.length - 1; i >= 0; i--) {
              this.words[i + s] = this.words[i];
            }
            for (i = 0; i < s; i++) {
              this.words[i] = 0;
            }
            this.length += s;
          }
          return this.strip();
        };
        BN.prototype.ishln = function ishln(bits) {
          assert(this.negative === 0);
          return this.iushln(bits);
        };
        BN.prototype.iushrn = function iushrn(bits, hint, extended) {
          assert(typeof bits === "number" && bits >= 0);
          var h;
          if (hint) {
            h = (hint - hint % 26) / 26;
          } else {
            h = 0;
          }
          var r = bits % 26;
          var s = Math.min((bits - r) / 26, this.length);
          var mask = 67108863 ^ 67108863 >>> r << r;
          var maskedWords = extended;
          h -= s;
          h = Math.max(0, h);
          if (maskedWords) {
            for (var i = 0; i < s; i++) {
              maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
          }
          if (s === 0) {
          } else if (this.length > s) {
            this.length -= s;
            for (i = 0; i < this.length; i++) {
              this.words[i] = this.words[i + s];
            }
          } else {
            this.words[0] = 0;
            this.length = 1;
          }
          var carry = 0;
          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
          }
          if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
          }
          if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
          }
          return this.strip();
        };
        BN.prototype.ishrn = function ishrn(bits, hint, extended) {
          assert(this.negative === 0);
          return this.iushrn(bits, hint, extended);
        };
        BN.prototype.shln = function shln(bits) {
          return this.clone().ishln(bits);
        };
        BN.prototype.ushln = function ushln(bits) {
          return this.clone().iushln(bits);
        };
        BN.prototype.shrn = function shrn(bits) {
          return this.clone().ishrn(bits);
        };
        BN.prototype.ushrn = function ushrn(bits) {
          return this.clone().iushrn(bits);
        };
        BN.prototype.testn = function testn(bit) {
          assert(typeof bit === "number" && bit >= 0);
          var r = bit % 26;
          var s = (bit - r) / 26;
          var q = 1 << r;
          if (this.length <= s) return false;
          var w = this.words[s];
          return !!(w & q);
        };
        BN.prototype.imaskn = function imaskn(bits) {
          assert(typeof bits === "number" && bits >= 0);
          var r = bits % 26;
          var s = (bits - r) / 26;
          assert(this.negative === 0, "imaskn works only with positive numbers");
          if (this.length <= s) {
            return this;
          }
          if (r !== 0) {
            s++;
          }
          this.length = Math.min(s, this.length);
          if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
          }
          return this.strip();
        };
        BN.prototype.maskn = function maskn(bits) {
          return this.clone().imaskn(bits);
        };
        BN.prototype.iaddn = function iaddn(num) {
          assert(typeof num === "number");
          assert(num < 67108864);
          if (num < 0) return this.isubn(-num);
          if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
              this.words[0] = num - (this.words[0] | 0);
              this.negative = 0;
              return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
          }
          return this._iaddn(num);
        };
        BN.prototype._iaddn = function _iaddn(num) {
          this.words[0] += num;
          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
            this.words[i] -= 67108864;
            if (i === this.length - 1) {
              this.words[i + 1] = 1;
            } else {
              this.words[i + 1]++;
            }
          }
          this.length = Math.max(this.length, i + 1);
          return this;
        };
        BN.prototype.isubn = function isubn(num) {
          assert(typeof num === "number");
          assert(num < 67108864);
          if (num < 0) return this.iaddn(-num);
          if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
          }
          this.words[0] -= num;
          if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
          } else {
            for (var i = 0; i < this.length && this.words[i] < 0; i++) {
              this.words[i] += 67108864;
              this.words[i + 1] -= 1;
            }
          }
          return this.strip();
        };
        BN.prototype.addn = function addn(num) {
          return this.clone().iaddn(num);
        };
        BN.prototype.subn = function subn(num) {
          return this.clone().isubn(num);
        };
        BN.prototype.iabs = function iabs() {
          this.negative = 0;
          return this;
        };
        BN.prototype.abs = function abs() {
          return this.clone().iabs();
        };
        BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
          var len = num.length + shift;
          var i;
          this._expand(len);
          var w;
          var carry = 0;
          for (i = 0; i < num.length; i++) {
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
          }
          for (; i < this.length - shift; i++) {
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
          }
          if (carry === 0) return this.strip();
          assert(carry === -1);
          carry = 0;
          for (i = 0; i < this.length; i++) {
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
          }
          this.negative = 1;
          return this.strip();
        };
        BN.prototype._wordDiv = function _wordDiv(num, mode) {
          var shift = this.length - num.length;
          var a = this.clone();
          var b = num;
          var bhi = b.words[b.length - 1] | 0;
          var bhiBits = this._countBits(bhi);
          shift = 26 - bhiBits;
          if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
          }
          var m = a.length - b.length;
          var q;
          if (mode !== "mod") {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for (var i = 0; i < q.length; i++) {
              q.words[i] = 0;
            }
          }
          var diff = a.clone()._ishlnsubmul(b, 1, m);
          if (diff.negative === 0) {
            a = diff;
            if (q) {
              q.words[m] = 1;
            }
          }
          for (var j2 = m - 1; j2 >= 0; j2--) {
            var qj = (a.words[b.length + j2] | 0) * 67108864 + (a.words[b.length + j2 - 1] | 0);
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j2);
            while (a.negative !== 0) {
              qj--;
              a.negative = 0;
              a._ishlnsubmul(b, 1, j2);
              if (!a.isZero()) {
                a.negative ^= 1;
              }
            }
            if (q) {
              q.words[j2] = qj;
            }
          }
          if (q) {
            q.strip();
          }
          a.strip();
          if (mode !== "div" && shift !== 0) {
            a.iushrn(shift);
          }
          return {
            div: q || null,
            mod: a
          };
        };
        BN.prototype.divmod = function divmod(num, mode, positive) {
          assert(!num.isZero());
          if (this.isZero()) {
            return {
              div: new BN(0),
              mod: new BN(0)
            };
          }
          var div, mod, res;
          if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.iadd(num);
              }
            }
            return {
              div,
              mod
            };
          }
          if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            return {
              div,
              mod: res.mod
            };
          }
          if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.isub(num);
              }
            }
            return {
              div: res.div,
              mod
            };
          }
          if (num.length > this.length || this.cmp(num) < 0) {
            return {
              div: new BN(0),
              mod: this
            };
          }
          if (num.length === 1) {
            if (mode === "div") {
              return {
                div: this.divn(num.words[0]),
                mod: null
              };
            }
            if (mode === "mod") {
              return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
              };
            }
            return {
              div: this.divn(num.words[0]),
              mod: new BN(this.modn(num.words[0]))
            };
          }
          return this._wordDiv(num, mode);
        };
        BN.prototype.div = function div(num) {
          return this.divmod(num, "div", false).div;
        };
        BN.prototype.mod = function mod(num) {
          return this.divmod(num, "mod", false).mod;
        };
        BN.prototype.umod = function umod(num) {
          return this.divmod(num, "mod", true).mod;
        };
        BN.prototype.divRound = function divRound(num) {
          var dm = this.divmod(num);
          if (dm.mod.isZero()) return dm.div;
          var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
          var half = num.ushrn(1);
          var r22 = num.andln(1);
          var cmp = mod.cmp(half);
          if (cmp < 0 || r22 === 1 && cmp === 0) return dm.div;
          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
        };
        BN.prototype.modn = function modn(num) {
          assert(num <= 67108863);
          var p = (1 << 26) % num;
          var acc = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            acc = (p * acc + (this.words[i] | 0)) % num;
          }
          return acc;
        };
        BN.prototype.idivn = function idivn(num) {
          assert(num <= 67108863);
          var carry = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
          }
          return this.strip();
        };
        BN.prototype.divn = function divn(num) {
          return this.clone().idivn(num);
        };
        BN.prototype.egcd = function egcd(p) {
          assert(p.negative === 0);
          assert(!p.isZero());
          var x = this;
          var y = p.clone();
          if (x.negative !== 0) {
            x = x.umod(p);
          } else {
            x = x.clone();
          }
          var A4 = new BN(1);
          var B = new BN(0);
          var C4 = new BN(0);
          var D3 = new BN(1);
          var g4 = 0;
          while (x.isEven() && y.isEven()) {
            x.iushrn(1);
            y.iushrn(1);
            ++g4;
          }
          var yp = y.clone();
          var xp = x.clone();
          while (!x.isZero()) {
            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) ;
            if (i > 0) {
              x.iushrn(i);
              while (i-- > 0) {
                if (A4.isOdd() || B.isOdd()) {
                  A4.iadd(yp);
                  B.isub(xp);
                }
                A4.iushrn(1);
                B.iushrn(1);
              }
            }
            for (var j2 = 0, jm = 1; (y.words[0] & jm) === 0 && j2 < 26; ++j2, jm <<= 1) ;
            if (j2 > 0) {
              y.iushrn(j2);
              while (j2-- > 0) {
                if (C4.isOdd() || D3.isOdd()) {
                  C4.iadd(yp);
                  D3.isub(xp);
                }
                C4.iushrn(1);
                D3.iushrn(1);
              }
            }
            if (x.cmp(y) >= 0) {
              x.isub(y);
              A4.isub(C4);
              B.isub(D3);
            } else {
              y.isub(x);
              C4.isub(A4);
              D3.isub(B);
            }
          }
          return {
            a: C4,
            b: D3,
            gcd: y.iushln(g4)
          };
        };
        BN.prototype._invmp = function _invmp(p) {
          assert(p.negative === 0);
          assert(!p.isZero());
          var a = this;
          var b = p.clone();
          if (a.negative !== 0) {
            a = a.umod(p);
          } else {
            a = a.clone();
          }
          var x12 = new BN(1);
          var x22 = new BN(0);
          var delta = b.clone();
          while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) ;
            if (i > 0) {
              a.iushrn(i);
              while (i-- > 0) {
                if (x12.isOdd()) {
                  x12.iadd(delta);
                }
                x12.iushrn(1);
              }
            }
            for (var j2 = 0, jm = 1; (b.words[0] & jm) === 0 && j2 < 26; ++j2, jm <<= 1) ;
            if (j2 > 0) {
              b.iushrn(j2);
              while (j2-- > 0) {
                if (x22.isOdd()) {
                  x22.iadd(delta);
                }
                x22.iushrn(1);
              }
            }
            if (a.cmp(b) >= 0) {
              a.isub(b);
              x12.isub(x22);
            } else {
              b.isub(a);
              x22.isub(x12);
            }
          }
          var res;
          if (a.cmpn(1) === 0) {
            res = x12;
          } else {
            res = x22;
          }
          if (res.cmpn(0) < 0) {
            res.iadd(p);
          }
          return res;
        };
        BN.prototype.gcd = function gcd(num) {
          if (this.isZero()) return num.abs();
          if (num.isZero()) return this.abs();
          var a = this.clone();
          var b = num.clone();
          a.negative = 0;
          b.negative = 0;
          for (var shift = 0; a.isEven() && b.isEven(); shift++) {
            a.iushrn(1);
            b.iushrn(1);
          }
          do {
            while (a.isEven()) {
              a.iushrn(1);
            }
            while (b.isEven()) {
              b.iushrn(1);
            }
            var r = a.cmp(b);
            if (r < 0) {
              var t = a;
              a = b;
              b = t;
            } else if (r === 0 || b.cmpn(1) === 0) {
              break;
            }
            a.isub(b);
          } while (true);
          return b.iushln(shift);
        };
        BN.prototype.invm = function invm(num) {
          return this.egcd(num).a.umod(num);
        };
        BN.prototype.isEven = function isEven() {
          return (this.words[0] & 1) === 0;
        };
        BN.prototype.isOdd = function isOdd() {
          return (this.words[0] & 1) === 1;
        };
        BN.prototype.andln = function andln(num) {
          return this.words[0] & num;
        };
        BN.prototype.bincn = function bincn(bit) {
          assert(typeof bit === "number");
          var r = bit % 26;
          var s = (bit - r) / 26;
          var q = 1 << r;
          if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
          }
          var carry = q;
          for (var i = s; carry !== 0 && i < this.length; i++) {
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return this;
        };
        BN.prototype.isZero = function isZero() {
          return this.length === 1 && this.words[0] === 0;
        };
        BN.prototype.cmpn = function cmpn(num) {
          var negative = num < 0;
          if (this.negative !== 0 && !negative) return -1;
          if (this.negative === 0 && negative) return 1;
          this.strip();
          var res;
          if (this.length > 1) {
            res = 1;
          } else {
            if (negative) {
              num = -num;
            }
            assert(num <= 67108863, "Number is too big");
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
          }
          if (this.negative !== 0) return -res | 0;
          return res;
        };
        BN.prototype.cmp = function cmp(num) {
          if (this.negative !== 0 && num.negative === 0) return -1;
          if (this.negative === 0 && num.negative !== 0) return 1;
          var res = this.ucmp(num);
          if (this.negative !== 0) return -res | 0;
          return res;
        };
        BN.prototype.ucmp = function ucmp(num) {
          if (this.length > num.length) return 1;
          if (this.length < num.length) return -1;
          var res = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) {
              res = -1;
            } else if (a > b) {
              res = 1;
            }
            break;
          }
          return res;
        };
        BN.prototype.gtn = function gtn(num) {
          return this.cmpn(num) === 1;
        };
        BN.prototype.gt = function gt(num) {
          return this.cmp(num) === 1;
        };
        BN.prototype.gten = function gten(num) {
          return this.cmpn(num) >= 0;
        };
        BN.prototype.gte = function gte(num) {
          return this.cmp(num) >= 0;
        };
        BN.prototype.ltn = function ltn(num) {
          return this.cmpn(num) === -1;
        };
        BN.prototype.lt = function lt2(num) {
          return this.cmp(num) === -1;
        };
        BN.prototype.lten = function lten(num) {
          return this.cmpn(num) <= 0;
        };
        BN.prototype.lte = function lte(num) {
          return this.cmp(num) <= 0;
        };
        BN.prototype.eqn = function eqn(num) {
          return this.cmpn(num) === 0;
        };
        BN.prototype.eq = function eq(num) {
          return this.cmp(num) === 0;
        };
        BN.red = function red(num) {
          return new Red(num);
        };
        BN.prototype.toRed = function toRed(ctx) {
          assert(!this.red, "Already a number in reduction context");
          assert(this.negative === 0, "red works only with positives");
          return ctx.convertTo(this)._forceRed(ctx);
        };
        BN.prototype.fromRed = function fromRed() {
          assert(this.red, "fromRed works only with numbers in reduction context");
          return this.red.convertFrom(this);
        };
        BN.prototype._forceRed = function _forceRed(ctx) {
          this.red = ctx;
          return this;
        };
        BN.prototype.forceRed = function forceRed(ctx) {
          assert(!this.red, "Already a number in reduction context");
          return this._forceRed(ctx);
        };
        BN.prototype.redAdd = function redAdd(num) {
          assert(this.red, "redAdd works only with red numbers");
          return this.red.add(this, num);
        };
        BN.prototype.redIAdd = function redIAdd(num) {
          assert(this.red, "redIAdd works only with red numbers");
          return this.red.iadd(this, num);
        };
        BN.prototype.redSub = function redSub(num) {
          assert(this.red, "redSub works only with red numbers");
          return this.red.sub(this, num);
        };
        BN.prototype.redISub = function redISub(num) {
          assert(this.red, "redISub works only with red numbers");
          return this.red.isub(this, num);
        };
        BN.prototype.redShl = function redShl(num) {
          assert(this.red, "redShl works only with red numbers");
          return this.red.shl(this, num);
        };
        BN.prototype.redMul = function redMul(num) {
          assert(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.mul(this, num);
        };
        BN.prototype.redIMul = function redIMul(num) {
          assert(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.imul(this, num);
        };
        BN.prototype.redSqr = function redSqr() {
          assert(this.red, "redSqr works only with red numbers");
          this.red._verify1(this);
          return this.red.sqr(this);
        };
        BN.prototype.redISqr = function redISqr() {
          assert(this.red, "redISqr works only with red numbers");
          this.red._verify1(this);
          return this.red.isqr(this);
        };
        BN.prototype.redSqrt = function redSqrt() {
          assert(this.red, "redSqrt works only with red numbers");
          this.red._verify1(this);
          return this.red.sqrt(this);
        };
        BN.prototype.redInvm = function redInvm() {
          assert(this.red, "redInvm works only with red numbers");
          this.red._verify1(this);
          return this.red.invm(this);
        };
        BN.prototype.redNeg = function redNeg() {
          assert(this.red, "redNeg works only with red numbers");
          this.red._verify1(this);
          return this.red.neg(this);
        };
        BN.prototype.redPow = function redPow(num) {
          assert(this.red && !num.red, "redPow(normalNum)");
          this.red._verify1(this);
          return this.red.pow(this, num);
        };
        var primes = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function MPrime(name, p) {
          this.name = name;
          this.p = new BN(p, 16);
          this.n = this.p.bitLength();
          this.k = new BN(1).iushln(this.n).isub(this.p);
          this.tmp = this._tmp();
        }
        MPrime.prototype._tmp = function _tmp() {
          var tmp = new BN(null);
          tmp.words = new Array(Math.ceil(this.n / 13));
          return tmp;
        };
        MPrime.prototype.ireduce = function ireduce(num) {
          var r = num;
          var rlen;
          do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
          } while (rlen > this.n);
          var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
          if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
          } else if (cmp > 0) {
            r.isub(this.p);
          } else {
            if (r.strip !== void 0) {
              r.strip();
            } else {
              r._strip();
            }
          }
          return r;
        };
        MPrime.prototype.split = function split(input, out) {
          input.iushrn(this.n, 0, out);
        };
        MPrime.prototype.imulK = function imulK(num) {
          return num.imul(this.k);
        };
        function K256() {
          MPrime.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        inherits2(K256, MPrime);
        K256.prototype.split = function split(input, output) {
          var mask = 4194303;
          var outLen = Math.min(input.length, 9);
          for (var i = 0; i < outLen; i++) {
            output.words[i] = input.words[i];
          }
          output.length = outLen;
          if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
          }
          var prev = input.words[9];
          output.words[output.length++] = prev & mask;
          for (i = 10; i < input.length; i++) {
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
          }
          prev >>>= 22;
          input.words[i - 10] = prev;
          if (prev === 0 && input.length > 10) {
            input.length -= 10;
          } else {
            input.length -= 9;
          }
        };
        K256.prototype.imulK = function imulK(num) {
          num.words[num.length] = 0;
          num.words[num.length + 1] = 0;
          num.length += 2;
          var lo = 0;
          for (var i = 0; i < num.length; i++) {
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
          }
          if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
              num.length--;
            }
          }
          return num;
        };
        function P224() {
          MPrime.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        inherits2(P224, MPrime);
        function P192() {
          MPrime.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        inherits2(P192, MPrime);
        function P25519() {
          MPrime.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        inherits2(P25519, MPrime);
        P25519.prototype.imulK = function imulK(num) {
          var carry = 0;
          for (var i = 0; i < num.length; i++) {
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
          }
          if (carry !== 0) {
            num.words[num.length++] = carry;
          }
          return num;
        };
        BN._prime = function prime(name) {
          if (primes[name]) return primes[name];
          var prime2;
          if (name === "k256") {
            prime2 = new K256();
          } else if (name === "p224") {
            prime2 = new P224();
          } else if (name === "p192") {
            prime2 = new P192();
          } else if (name === "p25519") {
            prime2 = new P25519();
          } else {
            throw new Error("Unknown prime " + name);
          }
          primes[name] = prime2;
          return prime2;
        };
        function Red(m) {
          if (typeof m === "string") {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
          } else {
            assert(m.gtn(1), "modulus must be greater than 1");
            this.m = m;
            this.prime = null;
          }
        }
        Red.prototype._verify1 = function _verify1(a) {
          assert(a.negative === 0, "red works only with positives");
          assert(a.red, "red works only with red numbers");
        };
        Red.prototype._verify2 = function _verify2(a, b) {
          assert((a.negative | b.negative) === 0, "red works only with positives");
          assert(
            a.red && a.red === b.red,
            "red works only with red numbers"
          );
        };
        Red.prototype.imod = function imod(a) {
          if (this.prime) return this.prime.ireduce(a)._forceRed(this);
          return a.umod(this.m)._forceRed(this);
        };
        Red.prototype.neg = function neg(a) {
          if (a.isZero()) {
            return a.clone();
          }
          return this.m.sub(a)._forceRed(this);
        };
        Red.prototype.add = function add(a, b) {
          this._verify2(a, b);
          var res = a.add(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.iadd = function iadd(a, b) {
          this._verify2(a, b);
          var res = a.iadd(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res;
        };
        Red.prototype.sub = function sub(a, b) {
          this._verify2(a, b);
          var res = a.sub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.isub = function isub(a, b) {
          this._verify2(a, b);
          var res = a.isub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res;
        };
        Red.prototype.shl = function shl(a, num) {
          this._verify1(a);
          return this.imod(a.ushln(num));
        };
        Red.prototype.imul = function imul(a, b) {
          this._verify2(a, b);
          return this.imod(a.imul(b));
        };
        Red.prototype.mul = function mul(a, b) {
          this._verify2(a, b);
          return this.imod(a.mul(b));
        };
        Red.prototype.isqr = function isqr(a) {
          return this.imul(a, a.clone());
        };
        Red.prototype.sqr = function sqr(a) {
          return this.mul(a, a);
        };
        Red.prototype.sqrt = function sqrt(a) {
          if (a.isZero()) return a.clone();
          var mod3 = this.m.andln(3);
          assert(mod3 % 2 === 1);
          if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
          }
          var q = this.m.subn(1);
          var s = 0;
          while (!q.isZero() && q.andln(1) === 0) {
            s++;
            q.iushrn(1);
          }
          assert(!q.isZero());
          var one = new BN(1).toRed(this);
          var nOne = one.redNeg();
          var lpow = this.m.subn(1).iushrn(1);
          var z = this.m.bitLength();
          z = new BN(2 * z * z).toRed(this);
          while (this.pow(z, lpow).cmp(nOne) !== 0) {
            z.redIAdd(nOne);
          }
          var c = this.pow(z, q);
          var r = this.pow(a, q.addn(1).iushrn(1));
          var t = this.pow(a, q);
          var m = s;
          while (t.cmp(one) !== 0) {
            var tmp = t;
            for (var i = 0; tmp.cmp(one) !== 0; i++) {
              tmp = tmp.redSqr();
            }
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
          }
          return r;
        };
        Red.prototype.invm = function invm(a) {
          var inv = a._invmp(this.m);
          if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
          } else {
            return this.imod(inv);
          }
        };
        Red.prototype.pow = function pow(a, num) {
          if (num.isZero()) return new BN(1).toRed(this);
          if (num.cmpn(1) === 0) return a.clone();
          var windowSize = 4;
          var wnd = new Array(1 << windowSize);
          wnd[0] = new BN(1).toRed(this);
          wnd[1] = a;
          for (var i = 2; i < wnd.length; i++) {
            wnd[i] = this.mul(wnd[i - 1], a);
          }
          var res = wnd[0];
          var current = 0;
          var currentLen = 0;
          var start = num.bitLength() % 26;
          if (start === 0) {
            start = 26;
          }
          for (i = num.length - 1; i >= 0; i--) {
            var word = num.words[i];
            for (var j2 = start - 1; j2 >= 0; j2--) {
              var bit = word >> j2 & 1;
              if (res !== wnd[0]) {
                res = this.sqr(res);
              }
              if (bit === 0 && current === 0) {
                currentLen = 0;
                continue;
              }
              current <<= 1;
              current |= bit;
              currentLen++;
              if (currentLen !== windowSize && (i !== 0 || j2 !== 0)) continue;
              res = this.mul(res, wnd[current]);
              currentLen = 0;
              current = 0;
            }
            start = 26;
          }
          return res;
        };
        Red.prototype.convertTo = function convertTo(num) {
          var r = num.umod(this.m);
          return r === num ? r.clone() : r;
        };
        Red.prototype.convertFrom = function convertFrom(num) {
          var res = num.clone();
          res.red = null;
          return res;
        };
        BN.mont = function mont(num) {
          return new Mont(num);
        };
        function Mont(m) {
          Red.call(this, m);
          this.shift = this.m.bitLength();
          if (this.shift % 26 !== 0) {
            this.shift += 26 - this.shift % 26;
          }
          this.r = new BN(1).iushln(this.shift);
          this.r2 = this.imod(this.r.sqr());
          this.rinv = this.r._invmp(this.m);
          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
          this.minv = this.minv.umod(this.r);
          this.minv = this.r.sub(this.minv);
        }
        inherits2(Mont, Red);
        Mont.prototype.convertTo = function convertTo(num) {
          return this.imod(num.ushln(this.shift));
        };
        Mont.prototype.convertFrom = function convertFrom(num) {
          var r = this.imod(num.mul(this.rinv));
          r.red = null;
          return r;
        };
        Mont.prototype.imul = function imul(a, b) {
          if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
          }
          var t = a.imul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.mul = function mul(a, b) {
          if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
          var t = a.mul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.invm = function invm(a) {
          var res = this.imod(a._invmp(this.m).mul(this.r2));
          return res._forceRed(this);
        };
      })(typeof module2 === "undefined" || module2, exports2);
    }
  });

  // node_modules/elliptic/package.json
  var require_package = __commonJS({
    "node_modules/elliptic/package.json"(exports2, module2) {
      module2.exports = {
        name: "elliptic",
        version: "6.6.1",
        description: "EC cryptography",
        main: "lib/elliptic.js",
        files: [
          "lib"
        ],
        scripts: {
          lint: "eslint lib test",
          "lint:fix": "npm run lint -- --fix",
          unit: "istanbul test _mocha --reporter=spec test/index.js",
          test: "npm run lint && npm run unit",
          version: "grunt dist && git add dist/"
        },
        repository: {
          type: "git",
          url: "git@github.com:indutny/elliptic"
        },
        keywords: [
          "EC",
          "Elliptic",
          "curve",
          "Cryptography"
        ],
        author: "Fedor Indutny <fedor@indutny.com>",
        license: "MIT",
        bugs: {
          url: "https://github.com/indutny/elliptic/issues"
        },
        homepage: "https://github.com/indutny/elliptic",
        devDependencies: {
          brfs: "^2.0.2",
          coveralls: "^3.1.0",
          eslint: "^7.6.0",
          grunt: "^1.2.1",
          "grunt-browserify": "^5.3.0",
          "grunt-cli": "^1.3.2",
          "grunt-contrib-connect": "^3.0.0",
          "grunt-contrib-copy": "^1.0.0",
          "grunt-contrib-uglify": "^5.0.0",
          "grunt-mocha-istanbul": "^5.0.2",
          "grunt-saucelabs": "^9.0.1",
          istanbul: "^0.4.5",
          mocha: "^8.0.1"
        },
        dependencies: {
          "bn.js": "^4.11.9",
          brorand: "^1.1.0",
          "hash.js": "^1.0.0",
          "hmac-drbg": "^1.0.1",
          inherits: "^2.0.4",
          "minimalistic-assert": "^1.0.1",
          "minimalistic-crypto-utils": "^1.0.1"
        }
      };
    }
  });

  // node_modules/minimalistic-assert/index.js
  var require_minimalistic_assert = __commonJS({
    "node_modules/minimalistic-assert/index.js"(exports2, module2) {
      init_polyfills();
      module2.exports = assert;
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      assert.equal = function assertEqual(l, r, msg) {
        if (l != r)
          throw new Error(msg || "Assertion failed: " + l + " != " + r);
      };
    }
  });

  // node_modules/minimalistic-crypto-utils/lib/utils.js
  var require_utils = __commonJS({
    "node_modules/minimalistic-crypto-utils/lib/utils.js"(exports2) {
      "use strict";
      init_polyfills();
      var utils = exports2;
      function toArray(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg !== "string") {
          for (var i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
          return res;
        }
        if (enc === "hex") {
          msg = msg.replace(/[^a-z0-9]+/ig, "");
          if (msg.length % 2 !== 0)
            msg = "0" + msg;
          for (var i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        } else {
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            var hi = c >> 8;
            var lo = c & 255;
            if (hi)
              res.push(hi, lo);
            else
              res.push(lo);
          }
        }
        return res;
      }
      utils.toArray = toArray;
      function zero2(word) {
        if (word.length === 1)
          return "0" + word;
        else
          return word;
      }
      utils.zero2 = zero2;
      function toHex2(msg) {
        var res = "";
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      utils.toHex = toHex2;
      utils.encode = function encode(arr, enc) {
        if (enc === "hex")
          return toHex2(arr);
        else
          return arr;
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/utils.js
  var require_utils2 = __commonJS({
    "node_modules/elliptic/lib/elliptic/utils.js"(exports2) {
      "use strict";
      init_polyfills();
      var utils = exports2;
      var BN = require_bn();
      var minAssert = require_minimalistic_assert();
      var minUtils = require_utils();
      utils.assert = minAssert;
      utils.toArray = minUtils.toArray;
      utils.zero2 = minUtils.zero2;
      utils.toHex = minUtils.toHex;
      utils.encode = minUtils.encode;
      function getNAF(num, w, bits) {
        var naf = new Array(Math.max(num.bitLength(), bits) + 1);
        var i;
        for (i = 0; i < naf.length; i += 1) {
          naf[i] = 0;
        }
        var ws = 1 << w + 1;
        var k4 = num.clone();
        for (i = 0; i < naf.length; i++) {
          var z;
          var mod = k4.andln(ws - 1);
          if (k4.isOdd()) {
            if (mod > (ws >> 1) - 1)
              z = (ws >> 1) - mod;
            else
              z = mod;
            k4.isubn(z);
          } else {
            z = 0;
          }
          naf[i] = z;
          k4.iushrn(1);
        }
        return naf;
      }
      utils.getNAF = getNAF;
      function getJSF(k12, k22) {
        var jsf = [
          [],
          []
        ];
        k12 = k12.clone();
        k22 = k22.clone();
        var d12 = 0;
        var d22 = 0;
        var m8;
        while (k12.cmpn(-d12) > 0 || k22.cmpn(-d22) > 0) {
          var m14 = k12.andln(3) + d12 & 3;
          var m24 = k22.andln(3) + d22 & 3;
          if (m14 === 3)
            m14 = -1;
          if (m24 === 3)
            m24 = -1;
          var u12;
          if ((m14 & 1) === 0) {
            u12 = 0;
          } else {
            m8 = k12.andln(7) + d12 & 7;
            if ((m8 === 3 || m8 === 5) && m24 === 2)
              u12 = -m14;
            else
              u12 = m14;
          }
          jsf[0].push(u12);
          var u22;
          if ((m24 & 1) === 0) {
            u22 = 0;
          } else {
            m8 = k22.andln(7) + d22 & 7;
            if ((m8 === 3 || m8 === 5) && m14 === 2)
              u22 = -m24;
            else
              u22 = m24;
          }
          jsf[1].push(u22);
          if (2 * d12 === u12 + 1)
            d12 = 1 - d12;
          if (2 * d22 === u22 + 1)
            d22 = 1 - d22;
          k12.iushrn(1);
          k22.iushrn(1);
        }
        return jsf;
      }
      utils.getJSF = getJSF;
      function cachedProperty(obj, name, computer) {
        var key = "_" + name;
        obj.prototype[name] = function cachedProperty2() {
          return this[key] !== void 0 ? this[key] : this[key] = computer.call(this);
        };
      }
      utils.cachedProperty = cachedProperty;
      function parseBytes(bytes) {
        return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
      }
      utils.parseBytes = parseBytes;
      function intFromLE(bytes) {
        return new BN(bytes, "hex", "le");
      }
      utils.intFromLE = intFromLE;
    }
  });

  // node-modules-polyfills:crypto
  var crypto_exports = {};
  __export(crypto_exports, {
    default: () => crypto_default
  });
  var crypto_default;
  var init_crypto = __esm({
    "node-modules-polyfills:crypto"() {
      init_polyfills();
      crypto_default = {};
    }
  });

  // node-modules-polyfills-commonjs:crypto
  var require_crypto2 = __commonJS({
    "node-modules-polyfills-commonjs:crypto"(exports2, module2) {
      init_polyfills();
      var polyfill = (init_crypto(), __toCommonJS(crypto_exports));
      if (polyfill && polyfill.default) {
        module2.exports = polyfill.default;
        for (let k4 in polyfill) {
          module2.exports[k4] = polyfill[k4];
        }
      } else if (polyfill) {
        module2.exports = polyfill;
      }
    }
  });

  // node_modules/brorand/index.js
  var require_brorand = __commonJS({
    "node_modules/brorand/index.js"(exports2, module2) {
      init_polyfills();
      var r;
      module2.exports = function rand(len) {
        if (!r)
          r = new Rand(null);
        return r.generate(len);
      };
      function Rand(rand) {
        this.rand = rand;
      }
      module2.exports.Rand = Rand;
      Rand.prototype.generate = function generate(len) {
        return this._rand(len);
      };
      Rand.prototype._rand = function _rand(n) {
        if (this.rand.getBytes)
          return this.rand.getBytes(n);
        var res = new Uint8Array(n);
        for (var i = 0; i < res.length; i++)
          res[i] = this.rand.getByte();
        return res;
      };
      if (typeof self === "object") {
        if (self.crypto && self.crypto.getRandomValues) {
          Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            self.crypto.getRandomValues(arr);
            return arr;
          };
        } else if (self.msCrypto && self.msCrypto.getRandomValues) {
          Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            self.msCrypto.getRandomValues(arr);
            return arr;
          };
        } else if (typeof window === "object") {
          Rand.prototype._rand = function() {
            throw new Error("Not implemented yet");
          };
        }
      } else {
        try {
          crypto2 = require_crypto2();
          if (typeof crypto2.randomBytes !== "function")
            throw new Error("Not supported");
          Rand.prototype._rand = function _rand(n) {
            return crypto2.randomBytes(n);
          };
        } catch (e) {
        }
      }
      var crypto2;
    }
  });

  // node_modules/elliptic/lib/elliptic/curve/base.js
  var require_base2 = __commonJS({
    "node_modules/elliptic/lib/elliptic/curve/base.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var utils = require_utils2();
      var getNAF = utils.getNAF;
      var getJSF = utils.getJSF;
      var assert = utils.assert;
      function BaseCurve(type, conf) {
        this.type = type;
        this.p = new BN(conf.p, 16);
        this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
        this.zero = new BN(0).toRed(this.red);
        this.one = new BN(1).toRed(this.red);
        this.two = new BN(2).toRed(this.red);
        this.n = conf.n && new BN(conf.n, 16);
        this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
        this._wnafT1 = new Array(4);
        this._wnafT2 = new Array(4);
        this._wnafT3 = new Array(4);
        this._wnafT4 = new Array(4);
        this._bitLength = this.n ? this.n.bitLength() : 0;
        var adjustCount = this.n && this.p.div(this.n);
        if (!adjustCount || adjustCount.cmpn(100) > 0) {
          this.redN = null;
        } else {
          this._maxwellTrick = true;
          this.redN = this.n.toRed(this.red);
        }
      }
      module2.exports = BaseCurve;
      BaseCurve.prototype.point = function point() {
        throw new Error("Not implemented");
      };
      BaseCurve.prototype.validate = function validate() {
        throw new Error("Not implemented");
      };
      BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k4) {
        assert(p.precomputed);
        var doubles = p._getDoubles();
        var naf = getNAF(k4, 1, this._bitLength);
        var I4 = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
        I4 /= 3;
        var repr = [];
        var j2;
        var nafW;
        for (j2 = 0; j2 < naf.length; j2 += doubles.step) {
          nafW = 0;
          for (var l = j2 + doubles.step - 1; l >= j2; l--)
            nafW = (nafW << 1) + naf[l];
          repr.push(nafW);
        }
        var a = this.jpoint(null, null, null);
        var b = this.jpoint(null, null, null);
        for (var i = I4; i > 0; i--) {
          for (j2 = 0; j2 < repr.length; j2++) {
            nafW = repr[j2];
            if (nafW === i)
              b = b.mixedAdd(doubles.points[j2]);
            else if (nafW === -i)
              b = b.mixedAdd(doubles.points[j2].neg());
          }
          a = a.add(b);
        }
        return a.toP();
      };
      BaseCurve.prototype._wnafMul = function _wnafMul(p, k4) {
        var w = 4;
        var nafPoints = p._getNAFPoints(w);
        w = nafPoints.wnd;
        var wnd = nafPoints.points;
        var naf = getNAF(k4, w, this._bitLength);
        var acc = this.jpoint(null, null, null);
        for (var i = naf.length - 1; i >= 0; i--) {
          for (var l = 0; i >= 0 && naf[i] === 0; i--)
            l++;
          if (i >= 0)
            l++;
          acc = acc.dblp(l);
          if (i < 0)
            break;
          var z = naf[i];
          assert(z !== 0);
          if (p.type === "affine") {
            if (z > 0)
              acc = acc.mixedAdd(wnd[z - 1 >> 1]);
            else
              acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
          } else {
            if (z > 0)
              acc = acc.add(wnd[z - 1 >> 1]);
            else
              acc = acc.add(wnd[-z - 1 >> 1].neg());
          }
        }
        return p.type === "affine" ? acc.toP() : acc;
      };
      BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
        var wndWidth = this._wnafT1;
        var wnd = this._wnafT2;
        var naf = this._wnafT3;
        var max = 0;
        var i;
        var j2;
        var p;
        for (i = 0; i < len; i++) {
          p = points[i];
          var nafPoints = p._getNAFPoints(defW);
          wndWidth[i] = nafPoints.wnd;
          wnd[i] = nafPoints.points;
        }
        for (i = len - 1; i >= 1; i -= 2) {
          var a = i - 1;
          var b = i;
          if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
            naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
            naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
            max = Math.max(naf[a].length, max);
            max = Math.max(naf[b].length, max);
            continue;
          }
          var comb = [
            points[a],
            /* 1 */
            null,
            /* 3 */
            null,
            /* 5 */
            points[b]
            /* 7 */
          ];
          if (points[a].y.cmp(points[b].y) === 0) {
            comb[1] = points[a].add(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
          } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].add(points[b].neg());
          } else {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
          }
          var index = [
            -3,
            /* -1 -1 */
            -1,
            /* -1 0 */
            -5,
            /* -1 1 */
            -7,
            /* 0 -1 */
            0,
            /* 0 0 */
            7,
            /* 0 1 */
            5,
            /* 1 -1 */
            1,
            /* 1 0 */
            3
            /* 1 1 */
          ];
          var jsf = getJSF(coeffs[a], coeffs[b]);
          max = Math.max(jsf[0].length, max);
          naf[a] = new Array(max);
          naf[b] = new Array(max);
          for (j2 = 0; j2 < max; j2++) {
            var ja = jsf[0][j2] | 0;
            var jb = jsf[1][j2] | 0;
            naf[a][j2] = index[(ja + 1) * 3 + (jb + 1)];
            naf[b][j2] = 0;
            wnd[a] = comb;
          }
        }
        var acc = this.jpoint(null, null, null);
        var tmp = this._wnafT4;
        for (i = max; i >= 0; i--) {
          var k4 = 0;
          while (i >= 0) {
            var zero = true;
            for (j2 = 0; j2 < len; j2++) {
              tmp[j2] = naf[j2][i] | 0;
              if (tmp[j2] !== 0)
                zero = false;
            }
            if (!zero)
              break;
            k4++;
            i--;
          }
          if (i >= 0)
            k4++;
          acc = acc.dblp(k4);
          if (i < 0)
            break;
          for (j2 = 0; j2 < len; j2++) {
            var z = tmp[j2];
            p;
            if (z === 0)
              continue;
            else if (z > 0)
              p = wnd[j2][z - 1 >> 1];
            else if (z < 0)
              p = wnd[j2][-z - 1 >> 1].neg();
            if (p.type === "affine")
              acc = acc.mixedAdd(p);
            else
              acc = acc.add(p);
          }
        }
        for (i = 0; i < len; i++)
          wnd[i] = null;
        if (jacobianResult)
          return acc;
        else
          return acc.toP();
      };
      function BasePoint(curve, type) {
        this.curve = curve;
        this.type = type;
        this.precomputed = null;
      }
      BaseCurve.BasePoint = BasePoint;
      BasePoint.prototype.eq = function eq() {
        throw new Error("Not implemented");
      };
      BasePoint.prototype.validate = function validate() {
        return this.curve.validate(this);
      };
      BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
        bytes = utils.toArray(bytes, enc);
        var len = this.p.byteLength();
        if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
          if (bytes[0] === 6)
            assert(bytes[bytes.length - 1] % 2 === 0);
          else if (bytes[0] === 7)
            assert(bytes[bytes.length - 1] % 2 === 1);
          var res = this.point(
            bytes.slice(1, 1 + len),
            bytes.slice(1 + len, 1 + 2 * len)
          );
          return res;
        } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
          return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
        }
        throw new Error("Unknown point format");
      };
      BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
        return this.encode(enc, true);
      };
      BasePoint.prototype._encode = function _encode(compact) {
        var len = this.curve.p.byteLength();
        var x = this.getX().toArray("be", len);
        if (compact)
          return [this.getY().isEven() ? 2 : 3].concat(x);
        return [4].concat(x, this.getY().toArray("be", len));
      };
      BasePoint.prototype.encode = function encode(enc, compact) {
        return utils.encode(this._encode(compact), enc);
      };
      BasePoint.prototype.precompute = function precompute(power) {
        if (this.precomputed)
          return this;
        var precomputed = {
          doubles: null,
          naf: null,
          beta: null
        };
        precomputed.naf = this._getNAFPoints(8);
        precomputed.doubles = this._getDoubles(4, power);
        precomputed.beta = this._getBeta();
        this.precomputed = precomputed;
        return this;
      };
      BasePoint.prototype._hasDoubles = function _hasDoubles(k4) {
        if (!this.precomputed)
          return false;
        var doubles = this.precomputed.doubles;
        if (!doubles)
          return false;
        return doubles.points.length >= Math.ceil((k4.bitLength() + 1) / doubles.step);
      };
      BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        var doubles = [this];
        var acc = this;
        for (var i = 0; i < power; i += step) {
          for (var j2 = 0; j2 < step; j2++)
            acc = acc.dbl();
          doubles.push(acc);
        }
        return {
          step,
          points: doubles
        };
      };
      BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        var res = [this];
        var max = (1 << wnd) - 1;
        var dbl = max === 1 ? null : this.dbl();
        for (var i = 1; i < max; i++)
          res[i] = res[i - 1].add(dbl);
        return {
          wnd,
          points: res
        };
      };
      BasePoint.prototype._getBeta = function _getBeta() {
        return null;
      };
      BasePoint.prototype.dblp = function dblp(k4) {
        var r = this;
        for (var i = 0; i < k4; i++)
          r = r.dbl();
        return r;
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/curve/short.js
  var require_short = __commonJS({
    "node_modules/elliptic/lib/elliptic/curve/short.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils2();
      var BN = require_bn();
      var inherits2 = require_inherits_browser();
      var Base = require_base2();
      var assert = utils.assert;
      function ShortCurve(conf) {
        Base.call(this, "short", conf);
        this.a = new BN(conf.a, 16).toRed(this.red);
        this.b = new BN(conf.b, 16).toRed(this.red);
        this.tinv = this.two.redInvm();
        this.zeroA = this.a.fromRed().cmpn(0) === 0;
        this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
        this.endo = this._getEndomorphism(conf);
        this._endoWnafT1 = new Array(4);
        this._endoWnafT2 = new Array(4);
      }
      inherits2(ShortCurve, Base);
      module2.exports = ShortCurve;
      ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
        if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
          return;
        var beta;
        var lambda;
        if (conf.beta) {
          beta = new BN(conf.beta, 16).toRed(this.red);
        } else {
          var betas = this._getEndoRoots(this.p);
          beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
          beta = beta.toRed(this.red);
        }
        if (conf.lambda) {
          lambda = new BN(conf.lambda, 16);
        } else {
          var lambdas = this._getEndoRoots(this.n);
          if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
            lambda = lambdas[0];
          } else {
            lambda = lambdas[1];
            assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
          }
        }
        var basis;
        if (conf.basis) {
          basis = conf.basis.map(function(vec) {
            return {
              a: new BN(vec.a, 16),
              b: new BN(vec.b, 16)
            };
          });
        } else {
          basis = this._getEndoBasis(lambda);
        }
        return {
          beta,
          lambda,
          basis
        };
      };
      ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
        var red = num === this.p ? this.red : BN.mont(num);
        var tinv = new BN(2).toRed(red).redInvm();
        var ntinv = tinv.redNeg();
        var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
        var l12 = ntinv.redAdd(s).fromRed();
        var l22 = ntinv.redSub(s).fromRed();
        return [l12, l22];
      };
      ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
        var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
        var u = lambda;
        var v4 = this.n.clone();
        var x12 = new BN(1);
        var y12 = new BN(0);
        var x22 = new BN(0);
        var y22 = new BN(1);
        var a02;
        var b02;
        var a12;
        var b12;
        var a22;
        var b22;
        var prevR;
        var i = 0;
        var r;
        var x;
        while (u.cmpn(0) !== 0) {
          var q = v4.div(u);
          r = v4.sub(q.mul(u));
          x = x22.sub(q.mul(x12));
          var y = y22.sub(q.mul(y12));
          if (!a12 && r.cmp(aprxSqrt) < 0) {
            a02 = prevR.neg();
            b02 = x12;
            a12 = r.neg();
            b12 = x;
          } else if (a12 && ++i === 2) {
            break;
          }
          prevR = r;
          v4 = u;
          u = r;
          x22 = x12;
          x12 = x;
          y22 = y12;
          y12 = y;
        }
        a22 = r.neg();
        b22 = x;
        var len1 = a12.sqr().add(b12.sqr());
        var len2 = a22.sqr().add(b22.sqr());
        if (len2.cmp(len1) >= 0) {
          a22 = a02;
          b22 = b02;
        }
        if (a12.negative) {
          a12 = a12.neg();
          b12 = b12.neg();
        }
        if (a22.negative) {
          a22 = a22.neg();
          b22 = b22.neg();
        }
        return [
          { a: a12, b: b12 },
          { a: a22, b: b22 }
        ];
      };
      ShortCurve.prototype._endoSplit = function _endoSplit(k4) {
        var basis = this.endo.basis;
        var v12 = basis[0];
        var v22 = basis[1];
        var c12 = v22.b.mul(k4).divRound(this.n);
        var c22 = v12.b.neg().mul(k4).divRound(this.n);
        var p12 = c12.mul(v12.a);
        var p22 = c22.mul(v22.a);
        var q1 = c12.mul(v12.b);
        var q22 = c22.mul(v22.b);
        var k12 = k4.sub(p12).sub(p22);
        var k22 = q1.add(q22).neg();
        return { k1: k12, k2: k22 };
      };
      ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
        x = new BN(x, 16);
        if (!x.red)
          x = x.toRed(this.red);
        var y22 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
        var y = y22.redSqrt();
        if (y.redSqr().redSub(y22).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var isOdd = y.fromRed().isOdd();
        if (odd && !isOdd || !odd && isOdd)
          y = y.redNeg();
        return this.point(x, y);
      };
      ShortCurve.prototype.validate = function validate(point) {
        if (point.inf)
          return true;
        var x = point.x;
        var y = point.y;
        var ax = this.a.redMul(x);
        var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
        return y.redSqr().redISub(rhs).cmpn(0) === 0;
      };
      ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
        var npoints = this._endoWnafT1;
        var ncoeffs = this._endoWnafT2;
        for (var i = 0; i < points.length; i++) {
          var split = this._endoSplit(coeffs[i]);
          var p = points[i];
          var beta = p._getBeta();
          if (split.k1.negative) {
            split.k1.ineg();
            p = p.neg(true);
          }
          if (split.k2.negative) {
            split.k2.ineg();
            beta = beta.neg(true);
          }
          npoints[i * 2] = p;
          npoints[i * 2 + 1] = beta;
          ncoeffs[i * 2] = split.k1;
          ncoeffs[i * 2 + 1] = split.k2;
        }
        var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
        for (var j2 = 0; j2 < i * 2; j2++) {
          npoints[j2] = null;
          ncoeffs[j2] = null;
        }
        return res;
      };
      function Point(curve, x, y, isRed) {
        Base.BasePoint.call(this, curve, "affine");
        if (x === null && y === null) {
          this.x = null;
          this.y = null;
          this.inf = true;
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          if (isRed) {
            this.x.forceRed(this.curve.red);
            this.y.forceRed(this.curve.red);
          }
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.y.red)
            this.y = this.y.toRed(this.curve.red);
          this.inf = false;
        }
      }
      inherits2(Point, Base.BasePoint);
      ShortCurve.prototype.point = function point(x, y, isRed) {
        return new Point(this, x, y, isRed);
      };
      ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
        return Point.fromJSON(this, obj, red);
      };
      Point.prototype._getBeta = function _getBeta() {
        if (!this.curve.endo)
          return;
        var pre = this.precomputed;
        if (pre && pre.beta)
          return pre.beta;
        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (pre) {
          var curve = this.curve;
          var endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
          };
          pre.beta = beta;
          beta.precomputed = {
            beta: null,
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: pre.doubles.points.map(endoMul)
            }
          };
        }
        return beta;
      };
      Point.prototype.toJSON = function toJSON2() {
        if (!this.precomputed)
          return [this.x, this.y];
        return [this.x, this.y, this.precomputed && {
          doubles: this.precomputed.doubles && {
            step: this.precomputed.doubles.step,
            points: this.precomputed.doubles.points.slice(1)
          },
          naf: this.precomputed.naf && {
            wnd: this.precomputed.naf.wnd,
            points: this.precomputed.naf.points.slice(1)
          }
        }];
      };
      Point.fromJSON = function fromJSON(curve, obj, red) {
        if (typeof obj === "string")
          obj = JSON.parse(obj);
        var res = curve.point(obj[0], obj[1], red);
        if (!obj[2])
          return res;
        function obj2point(obj2) {
          return curve.point(obj2[0], obj2[1], red);
        }
        var pre = obj[2];
        res.precomputed = {
          beta: null,
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: [res].concat(pre.doubles.points.map(obj2point))
          },
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: [res].concat(pre.naf.points.map(obj2point))
          }
        };
        return res;
      };
      Point.prototype.inspect = function inspect3() {
        if (this.isInfinity())
          return "<EC Point Infinity>";
        return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.inf;
      };
      Point.prototype.add = function add(p) {
        if (this.inf)
          return p;
        if (p.inf)
          return this;
        if (this.eq(p))
          return this.dbl();
        if (this.neg().eq(p))
          return this.curve.point(null, null);
        if (this.x.cmp(p.x) === 0)
          return this.curve.point(null, null);
        var c = this.y.redSub(p.y);
        if (c.cmpn(0) !== 0)
          c = c.redMul(this.x.redSub(p.x).redInvm());
        var nx = c.redSqr().redISub(this.x).redISub(p.x);
        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
        return this.curve.point(nx, ny);
      };
      Point.prototype.dbl = function dbl() {
        if (this.inf)
          return this;
        var ys1 = this.y.redAdd(this.y);
        if (ys1.cmpn(0) === 0)
          return this.curve.point(null, null);
        var a = this.curve.a;
        var x22 = this.x.redSqr();
        var dyinv = ys1.redInvm();
        var c = x22.redAdd(x22).redIAdd(x22).redIAdd(a).redMul(dyinv);
        var nx = c.redSqr().redISub(this.x.redAdd(this.x));
        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
        return this.curve.point(nx, ny);
      };
      Point.prototype.getX = function getX() {
        return this.x.fromRed();
      };
      Point.prototype.getY = function getY() {
        return this.y.fromRed();
      };
      Point.prototype.mul = function mul(k4) {
        k4 = new BN(k4, 16);
        if (this.isInfinity())
          return this;
        else if (this._hasDoubles(k4))
          return this.curve._fixedNafMul(this, k4);
        else if (this.curve.endo)
          return this.curve._endoWnafMulAdd([this], [k4]);
        else
          return this.curve._wnafMul(this, k4);
      };
      Point.prototype.mulAdd = function mulAdd(k12, p22, k22) {
        var points = [this, p22];
        var coeffs = [k12, k22];
        if (this.curve.endo)
          return this.curve._endoWnafMulAdd(points, coeffs);
        else
          return this.curve._wnafMulAdd(1, points, coeffs, 2);
      };
      Point.prototype.jmulAdd = function jmulAdd(k12, p22, k22) {
        var points = [this, p22];
        var coeffs = [k12, k22];
        if (this.curve.endo)
          return this.curve._endoWnafMulAdd(points, coeffs, true);
        else
          return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
      };
      Point.prototype.eq = function eq(p) {
        return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
      };
      Point.prototype.neg = function neg(_precompute) {
        if (this.inf)
          return this;
        var res = this.curve.point(this.x, this.y.redNeg());
        if (_precompute && this.precomputed) {
          var pre = this.precomputed;
          var negate = function(p) {
            return p.neg();
          };
          res.precomputed = {
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: pre.naf.points.map(negate)
            },
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: pre.doubles.points.map(negate)
            }
          };
        }
        return res;
      };
      Point.prototype.toJ = function toJ() {
        if (this.inf)
          return this.curve.jpoint(null, null, null);
        var res = this.curve.jpoint(this.x, this.y, this.curve.one);
        return res;
      };
      function JPoint(curve, x, y, z) {
        Base.BasePoint.call(this, curve, "jacobian");
        if (x === null && y === null && z === null) {
          this.x = this.curve.one;
          this.y = this.curve.one;
          this.z = new BN(0);
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          this.z = new BN(z, 16);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
      }
      inherits2(JPoint, Base.BasePoint);
      ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
        return new JPoint(this, x, y, z);
      };
      JPoint.prototype.toP = function toP() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var zinv = this.z.redInvm();
        var zinv2 = zinv.redSqr();
        var ax = this.x.redMul(zinv2);
        var ay = this.y.redMul(zinv2).redMul(zinv);
        return this.curve.point(ax, ay);
      };
      JPoint.prototype.neg = function neg() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      };
      JPoint.prototype.add = function add(p) {
        if (this.isInfinity())
          return p;
        if (p.isInfinity())
          return this;
        var pz2 = p.z.redSqr();
        var z22 = this.z.redSqr();
        var u12 = this.x.redMul(pz2);
        var u22 = p.x.redMul(z22);
        var s12 = this.y.redMul(pz2.redMul(p.z));
        var s22 = p.y.redMul(z22.redMul(this.z));
        var h = u12.redSub(u22);
        var r = s12.redSub(s22);
        if (h.cmpn(0) === 0) {
          if (r.cmpn(0) !== 0)
            return this.curve.jpoint(null, null, null);
          else
            return this.dbl();
        }
        var h22 = h.redSqr();
        var h32 = h22.redMul(h);
        var v4 = u12.redMul(h22);
        var nx = r.redSqr().redIAdd(h32).redISub(v4).redISub(v4);
        var ny = r.redMul(v4.redISub(nx)).redISub(s12.redMul(h32));
        var nz = this.z.redMul(p.z).redMul(h);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.mixedAdd = function mixedAdd(p) {
        if (this.isInfinity())
          return p.toJ();
        if (p.isInfinity())
          return this;
        var z22 = this.z.redSqr();
        var u12 = this.x;
        var u22 = p.x.redMul(z22);
        var s12 = this.y;
        var s22 = p.y.redMul(z22).redMul(this.z);
        var h = u12.redSub(u22);
        var r = s12.redSub(s22);
        if (h.cmpn(0) === 0) {
          if (r.cmpn(0) !== 0)
            return this.curve.jpoint(null, null, null);
          else
            return this.dbl();
        }
        var h22 = h.redSqr();
        var h32 = h22.redMul(h);
        var v4 = u12.redMul(h22);
        var nx = r.redSqr().redIAdd(h32).redISub(v4).redISub(v4);
        var ny = r.redMul(v4.redISub(nx)).redISub(s12.redMul(h32));
        var nz = this.z.redMul(h);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.dblp = function dblp(pow) {
        if (pow === 0)
          return this;
        if (this.isInfinity())
          return this;
        if (!pow)
          return this.dbl();
        var i;
        if (this.curve.zeroA || this.curve.threeA) {
          var r = this;
          for (i = 0; i < pow; i++)
            r = r.dbl();
          return r;
        }
        var a = this.curve.a;
        var tinv = this.curve.tinv;
        var jx = this.x;
        var jy = this.y;
        var jz = this.z;
        var jz4 = jz.redSqr().redSqr();
        var jyd = jy.redAdd(jy);
        for (i = 0; i < pow; i++) {
          var jx2 = jx.redSqr();
          var jyd2 = jyd.redSqr();
          var jyd4 = jyd2.redSqr();
          var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
          var t12 = jx.redMul(jyd2);
          var nx = c.redSqr().redISub(t12.redAdd(t12));
          var t22 = t12.redISub(nx);
          var dny = c.redMul(t22);
          dny = dny.redIAdd(dny).redISub(jyd4);
          var nz = jyd.redMul(jz);
          if (i + 1 < pow)
            jz4 = jz4.redMul(jyd4);
          jx = nx;
          jz = nz;
          jyd = dny;
        }
        return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
      };
      JPoint.prototype.dbl = function dbl() {
        if (this.isInfinity())
          return this;
        if (this.curve.zeroA)
          return this._zeroDbl();
        else if (this.curve.threeA)
          return this._threeDbl();
        else
          return this._dbl();
      };
      JPoint.prototype._zeroDbl = function _zeroDbl() {
        var nx;
        var ny;
        var nz;
        if (this.zOne) {
          var xx = this.x.redSqr();
          var yy = this.y.redSqr();
          var yyyy = yy.redSqr();
          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
          s = s.redIAdd(s);
          var m = xx.redAdd(xx).redIAdd(xx);
          var t = m.redSqr().redISub(s).redISub(s);
          var yyyy8 = yyyy.redIAdd(yyyy);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          nx = t;
          ny = m.redMul(s.redISub(t)).redISub(yyyy8);
          nz = this.y.redAdd(this.y);
        } else {
          var a = this.x.redSqr();
          var b = this.y.redSqr();
          var c = b.redSqr();
          var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
          d = d.redIAdd(d);
          var e = a.redAdd(a).redIAdd(a);
          var f = e.redSqr();
          var c82 = c.redIAdd(c);
          c82 = c82.redIAdd(c82);
          c82 = c82.redIAdd(c82);
          nx = f.redISub(d).redISub(d);
          ny = e.redMul(d.redISub(nx)).redISub(c82);
          nz = this.y.redMul(this.z);
          nz = nz.redIAdd(nz);
        }
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype._threeDbl = function _threeDbl() {
        var nx;
        var ny;
        var nz;
        if (this.zOne) {
          var xx = this.x.redSqr();
          var yy = this.y.redSqr();
          var yyyy = yy.redSqr();
          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
          s = s.redIAdd(s);
          var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
          var t = m.redSqr().redISub(s).redISub(s);
          nx = t;
          var yyyy8 = yyyy.redIAdd(yyyy);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          ny = m.redMul(s.redISub(t)).redISub(yyyy8);
          nz = this.y.redAdd(this.y);
        } else {
          var delta = this.z.redSqr();
          var gamma = this.y.redSqr();
          var beta = this.x.redMul(gamma);
          var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
          alpha = alpha.redAdd(alpha).redIAdd(alpha);
          var beta4 = beta.redIAdd(beta);
          beta4 = beta4.redIAdd(beta4);
          var beta8 = beta4.redAdd(beta4);
          nx = alpha.redSqr().redISub(beta8);
          nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
          var ggamma8 = gamma.redSqr();
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
        }
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype._dbl = function _dbl() {
        var a = this.curve.a;
        var jx = this.x;
        var jy = this.y;
        var jz = this.z;
        var jz4 = jz.redSqr().redSqr();
        var jx2 = jx.redSqr();
        var jy2 = jy.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var jxd4 = jx.redAdd(jx);
        jxd4 = jxd4.redIAdd(jxd4);
        var t12 = jxd4.redMul(jy2);
        var nx = c.redSqr().redISub(t12.redAdd(t12));
        var t22 = t12.redISub(nx);
        var jyd8 = jy2.redSqr();
        jyd8 = jyd8.redIAdd(jyd8);
        jyd8 = jyd8.redIAdd(jyd8);
        jyd8 = jyd8.redIAdd(jyd8);
        var ny = c.redMul(t22).redISub(jyd8);
        var nz = jy.redAdd(jy).redMul(jz);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.trpl = function trpl() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var zz = this.z.redSqr();
        var yyyy = yy.redSqr();
        var m = xx.redAdd(xx).redIAdd(xx);
        var mm = m.redSqr();
        var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        e = e.redIAdd(e);
        e = e.redAdd(e).redIAdd(e);
        e = e.redISub(mm);
        var ee = e.redSqr();
        var t = yyyy.redIAdd(yyyy);
        t = t.redIAdd(t);
        t = t.redIAdd(t);
        t = t.redIAdd(t);
        var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
        var yyu4 = yy.redMul(u);
        yyu4 = yyu4.redIAdd(yyu4);
        yyu4 = yyu4.redIAdd(yyu4);
        var nx = this.x.redMul(ee).redISub(yyu4);
        nx = nx.redIAdd(nx);
        nx = nx.redIAdd(nx);
        var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
        ny = ny.redIAdd(ny);
        ny = ny.redIAdd(ny);
        ny = ny.redIAdd(ny);
        var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.mul = function mul(k4, kbase) {
        k4 = new BN(k4, kbase);
        return this.curve._wnafMul(this, k4);
      };
      JPoint.prototype.eq = function eq(p) {
        if (p.type === "affine")
          return this.eq(p.toJ());
        if (this === p)
          return true;
        var z22 = this.z.redSqr();
        var pz2 = p.z.redSqr();
        if (this.x.redMul(pz2).redISub(p.x.redMul(z22)).cmpn(0) !== 0)
          return false;
        var z3 = z22.redMul(this.z);
        var pz3 = pz2.redMul(p.z);
        return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
      };
      JPoint.prototype.eqXToP = function eqXToP(x) {
        var zs = this.z.redSqr();
        var rx = x.toRed(this.curve.red).redMul(zs);
        if (this.x.cmp(rx) === 0)
          return true;
        var xc = x.clone();
        var t = this.curve.redN.redMul(zs);
        for (; ; ) {
          xc.iadd(this.curve.n);
          if (xc.cmp(this.curve.p) >= 0)
            return false;
          rx.redIAdd(t);
          if (this.x.cmp(rx) === 0)
            return true;
        }
      };
      JPoint.prototype.inspect = function inspect3() {
        if (this.isInfinity())
          return "<EC JPoint Infinity>";
        return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      };
      JPoint.prototype.isInfinity = function isInfinity() {
        return this.z.cmpn(0) === 0;
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/curve/mont.js
  var require_mont = __commonJS({
    "node_modules/elliptic/lib/elliptic/curve/mont.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var inherits2 = require_inherits_browser();
      var Base = require_base2();
      var utils = require_utils2();
      function MontCurve(conf) {
        Base.call(this, "mont", conf);
        this.a = new BN(conf.a, 16).toRed(this.red);
        this.b = new BN(conf.b, 16).toRed(this.red);
        this.i4 = new BN(4).toRed(this.red).redInvm();
        this.two = new BN(2).toRed(this.red);
        this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      inherits2(MontCurve, Base);
      module2.exports = MontCurve;
      MontCurve.prototype.validate = function validate(point) {
        var x = point.normalize().x;
        var x22 = x.redSqr();
        var rhs = x22.redMul(x).redAdd(x22.redMul(this.a)).redAdd(x);
        var y = rhs.redSqrt();
        return y.redSqr().cmp(rhs) === 0;
      };
      function Point(curve, x, z) {
        Base.BasePoint.call(this, curve, "projective");
        if (x === null && z === null) {
          this.x = this.curve.one;
          this.z = this.curve.zero;
        } else {
          this.x = new BN(x, 16);
          this.z = new BN(z, 16);
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.z.red)
            this.z = this.z.toRed(this.curve.red);
        }
      }
      inherits2(Point, Base.BasePoint);
      MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
        return this.point(utils.toArray(bytes, enc), 1);
      };
      MontCurve.prototype.point = function point(x, z) {
        return new Point(this, x, z);
      };
      MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
        return Point.fromJSON(this, obj);
      };
      Point.prototype.precompute = function precompute() {
      };
      Point.prototype._encode = function _encode() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      };
      Point.fromJSON = function fromJSON(curve, obj) {
        return new Point(curve, obj[0], obj[1] || curve.one);
      };
      Point.prototype.inspect = function inspect3() {
        if (this.isInfinity())
          return "<EC Point Infinity>";
        return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.z.cmpn(0) === 0;
      };
      Point.prototype.dbl = function dbl() {
        var a = this.x.redAdd(this.z);
        var aa = a.redSqr();
        var b = this.x.redSub(this.z);
        var bb = b.redSqr();
        var c = aa.redSub(bb);
        var nx = aa.redMul(bb);
        var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
        return this.curve.point(nx, nz);
      };
      Point.prototype.add = function add() {
        throw new Error("Not supported on Montgomery curve");
      };
      Point.prototype.diffAdd = function diffAdd(p, diff) {
        var a = this.x.redAdd(this.z);
        var b = this.x.redSub(this.z);
        var c = p.x.redAdd(p.z);
        var d = p.x.redSub(p.z);
        var da = d.redMul(a);
        var cb = c.redMul(b);
        var nx = diff.z.redMul(da.redAdd(cb).redSqr());
        var nz = diff.x.redMul(da.redISub(cb).redSqr());
        return this.curve.point(nx, nz);
      };
      Point.prototype.mul = function mul(k4) {
        var t = k4.clone();
        var a = this;
        var b = this.curve.point(null, null);
        var c = this;
        for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
          bits.push(t.andln(1));
        for (var i = bits.length - 1; i >= 0; i--) {
          if (bits[i] === 0) {
            a = a.diffAdd(b, c);
            b = b.dbl();
          } else {
            b = a.diffAdd(b, c);
            a = a.dbl();
          }
        }
        return b;
      };
      Point.prototype.mulAdd = function mulAdd() {
        throw new Error("Not supported on Montgomery curve");
      };
      Point.prototype.jumlAdd = function jumlAdd() {
        throw new Error("Not supported on Montgomery curve");
      };
      Point.prototype.eq = function eq(other) {
        return this.getX().cmp(other.getX()) === 0;
      };
      Point.prototype.normalize = function normalize() {
        this.x = this.x.redMul(this.z.redInvm());
        this.z = this.curve.one;
        return this;
      };
      Point.prototype.getX = function getX() {
        this.normalize();
        return this.x.fromRed();
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/curve/edwards.js
  var require_edwards = __commonJS({
    "node_modules/elliptic/lib/elliptic/curve/edwards.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils2();
      var BN = require_bn();
      var inherits2 = require_inherits_browser();
      var Base = require_base2();
      var assert = utils.assert;
      function EdwardsCurve(conf) {
        this.twisted = (conf.a | 0) !== 1;
        this.mOneA = this.twisted && (conf.a | 0) === -1;
        this.extended = this.mOneA;
        Base.call(this, "edwards", conf);
        this.a = new BN(conf.a, 16).umod(this.red.m);
        this.a = this.a.toRed(this.red);
        this.c = new BN(conf.c, 16).toRed(this.red);
        this.c2 = this.c.redSqr();
        this.d = new BN(conf.d, 16).toRed(this.red);
        this.dd = this.d.redAdd(this.d);
        assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
        this.oneC = (conf.c | 0) === 1;
      }
      inherits2(EdwardsCurve, Base);
      module2.exports = EdwardsCurve;
      EdwardsCurve.prototype._mulA = function _mulA(num) {
        if (this.mOneA)
          return num.redNeg();
        else
          return this.a.redMul(num);
      };
      EdwardsCurve.prototype._mulC = function _mulC(num) {
        if (this.oneC)
          return num;
        else
          return this.c.redMul(num);
      };
      EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
        return this.point(x, y, z, t);
      };
      EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
        x = new BN(x, 16);
        if (!x.red)
          x = x.toRed(this.red);
        var x22 = x.redSqr();
        var rhs = this.c2.redSub(this.a.redMul(x22));
        var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x22));
        var y22 = rhs.redMul(lhs.redInvm());
        var y = y22.redSqrt();
        if (y.redSqr().redSub(y22).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var isOdd = y.fromRed().isOdd();
        if (odd && !isOdd || !odd && isOdd)
          y = y.redNeg();
        return this.point(x, y);
      };
      EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
        y = new BN(y, 16);
        if (!y.red)
          y = y.toRed(this.red);
        var y22 = y.redSqr();
        var lhs = y22.redSub(this.c2);
        var rhs = y22.redMul(this.d).redMul(this.c2).redSub(this.a);
        var x22 = lhs.redMul(rhs.redInvm());
        if (x22.cmp(this.zero) === 0) {
          if (odd)
            throw new Error("invalid point");
          else
            return this.point(this.zero, y);
        }
        var x = x22.redSqrt();
        if (x.redSqr().redSub(x22).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        if (x.fromRed().isOdd() !== odd)
          x = x.redNeg();
        return this.point(x, y);
      };
      EdwardsCurve.prototype.validate = function validate(point) {
        if (point.isInfinity())
          return true;
        point.normalize();
        var x22 = point.x.redSqr();
        var y22 = point.y.redSqr();
        var lhs = x22.redMul(this.a).redAdd(y22);
        var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x22).redMul(y22)));
        return lhs.cmp(rhs) === 0;
      };
      function Point(curve, x, y, z, t) {
        Base.BasePoint.call(this, curve, "projective");
        if (x === null && y === null && z === null) {
          this.x = this.curve.zero;
          this.y = this.curve.one;
          this.z = this.curve.one;
          this.t = this.curve.zero;
          this.zOne = true;
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          this.z = z ? new BN(z, 16) : this.curve.one;
          this.t = t && new BN(t, 16);
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.y.red)
            this.y = this.y.toRed(this.curve.red);
          if (!this.z.red)
            this.z = this.z.toRed(this.curve.red);
          if (this.t && !this.t.red)
            this.t = this.t.toRed(this.curve.red);
          this.zOne = this.z === this.curve.one;
          if (this.curve.extended && !this.t) {
            this.t = this.x.redMul(this.y);
            if (!this.zOne)
              this.t = this.t.redMul(this.z.redInvm());
          }
        }
      }
      inherits2(Point, Base.BasePoint);
      EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
        return Point.fromJSON(this, obj);
      };
      EdwardsCurve.prototype.point = function point(x, y, z, t) {
        return new Point(this, x, y, z, t);
      };
      Point.fromJSON = function fromJSON(curve, obj) {
        return new Point(curve, obj[0], obj[1], obj[2]);
      };
      Point.prototype.inspect = function inspect3() {
        if (this.isInfinity())
          return "<EC Point Infinity>";
        return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
      };
      Point.prototype._extDbl = function _extDbl() {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = this.z.redSqr();
        c = c.redIAdd(c);
        var d = this.curve._mulA(a);
        var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
        var g4 = d.redAdd(b);
        var f = g4.redSub(c);
        var h = d.redSub(b);
        var nx = e.redMul(f);
        var ny = g4.redMul(h);
        var nt2 = e.redMul(h);
        var nz = f.redMul(g4);
        return this.curve.point(nx, ny, nz, nt2);
      };
      Point.prototype._projDbl = function _projDbl() {
        var b = this.x.redAdd(this.y).redSqr();
        var c = this.x.redSqr();
        var d = this.y.redSqr();
        var nx;
        var ny;
        var nz;
        var e;
        var h;
        var j2;
        if (this.curve.twisted) {
          e = this.curve._mulA(c);
          var f = e.redAdd(d);
          if (this.zOne) {
            nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
            ny = f.redMul(e.redSub(d));
            nz = f.redSqr().redSub(f).redSub(f);
          } else {
            h = this.z.redSqr();
            j2 = f.redSub(h).redISub(h);
            nx = b.redSub(c).redISub(d).redMul(j2);
            ny = f.redMul(e.redSub(d));
            nz = f.redMul(j2);
          }
        } else {
          e = c.redAdd(d);
          h = this.curve._mulC(this.z).redSqr();
          j2 = e.redSub(h).redSub(h);
          nx = this.curve._mulC(b.redISub(e)).redMul(j2);
          ny = this.curve._mulC(e).redMul(c.redISub(d));
          nz = e.redMul(j2);
        }
        return this.curve.point(nx, ny, nz);
      };
      Point.prototype.dbl = function dbl() {
        if (this.isInfinity())
          return this;
        if (this.curve.extended)
          return this._extDbl();
        else
          return this._projDbl();
      };
      Point.prototype._extAdd = function _extAdd(p) {
        var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
        var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
        var c = this.t.redMul(this.curve.dd).redMul(p.t);
        var d = this.z.redMul(p.z.redAdd(p.z));
        var e = b.redSub(a);
        var f = d.redSub(c);
        var g4 = d.redAdd(c);
        var h = b.redAdd(a);
        var nx = e.redMul(f);
        var ny = g4.redMul(h);
        var nt2 = e.redMul(h);
        var nz = f.redMul(g4);
        return this.curve.point(nx, ny, nz, nt2);
      };
      Point.prototype._projAdd = function _projAdd(p) {
        var a = this.z.redMul(p.z);
        var b = a.redSqr();
        var c = this.x.redMul(p.x);
        var d = this.y.redMul(p.y);
        var e = this.curve.d.redMul(c).redMul(d);
        var f = b.redSub(e);
        var g4 = b.redAdd(e);
        var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
        var nx = a.redMul(f).redMul(tmp);
        var ny;
        var nz;
        if (this.curve.twisted) {
          ny = a.redMul(g4).redMul(d.redSub(this.curve._mulA(c)));
          nz = f.redMul(g4);
        } else {
          ny = a.redMul(g4).redMul(d.redSub(c));
          nz = this.curve._mulC(f).redMul(g4);
        }
        return this.curve.point(nx, ny, nz);
      };
      Point.prototype.add = function add(p) {
        if (this.isInfinity())
          return p;
        if (p.isInfinity())
          return this;
        if (this.curve.extended)
          return this._extAdd(p);
        else
          return this._projAdd(p);
      };
      Point.prototype.mul = function mul(k4) {
        if (this._hasDoubles(k4))
          return this.curve._fixedNafMul(this, k4);
        else
          return this.curve._wnafMul(this, k4);
      };
      Point.prototype.mulAdd = function mulAdd(k12, p, k22) {
        return this.curve._wnafMulAdd(1, [this, p], [k12, k22], 2, false);
      };
      Point.prototype.jmulAdd = function jmulAdd(k12, p, k22) {
        return this.curve._wnafMulAdd(1, [this, p], [k12, k22], 2, true);
      };
      Point.prototype.normalize = function normalize() {
        if (this.zOne)
          return this;
        var zi = this.z.redInvm();
        this.x = this.x.redMul(zi);
        this.y = this.y.redMul(zi);
        if (this.t)
          this.t = this.t.redMul(zi);
        this.z = this.curve.one;
        this.zOne = true;
        return this;
      };
      Point.prototype.neg = function neg() {
        return this.curve.point(
          this.x.redNeg(),
          this.y,
          this.z,
          this.t && this.t.redNeg()
        );
      };
      Point.prototype.getX = function getX() {
        this.normalize();
        return this.x.fromRed();
      };
      Point.prototype.getY = function getY() {
        this.normalize();
        return this.y.fromRed();
      };
      Point.prototype.eq = function eq(other) {
        return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
      };
      Point.prototype.eqXToP = function eqXToP(x) {
        var rx = x.toRed(this.curve.red).redMul(this.z);
        if (this.x.cmp(rx) === 0)
          return true;
        var xc = x.clone();
        var t = this.curve.redN.redMul(this.z);
        for (; ; ) {
          xc.iadd(this.curve.n);
          if (xc.cmp(this.curve.p) >= 0)
            return false;
          rx.redIAdd(t);
          if (this.x.cmp(rx) === 0)
            return true;
        }
      };
      Point.prototype.toP = Point.prototype.normalize;
      Point.prototype.mixedAdd = Point.prototype.add;
    }
  });

  // node_modules/elliptic/lib/elliptic/curve/index.js
  var require_curve = __commonJS({
    "node_modules/elliptic/lib/elliptic/curve/index.js"(exports2) {
      "use strict";
      init_polyfills();
      var curve = exports2;
      curve.base = require_base2();
      curve.short = require_short();
      curve.mont = require_mont();
      curve.edwards = require_edwards();
    }
  });

  // node_modules/hash.js/lib/hash/utils.js
  var require_utils3 = __commonJS({
    "node_modules/hash.js/lib/hash/utils.js"(exports2) {
      "use strict";
      init_polyfills();
      var assert = require_minimalistic_assert();
      var inherits2 = require_inherits_browser();
      exports2.inherits = inherits2;
      function isSurrogatePair(msg, i) {
        if ((msg.charCodeAt(i) & 64512) !== 55296) {
          return false;
        }
        if (i < 0 || i + 1 >= msg.length) {
          return false;
        }
        return (msg.charCodeAt(i + 1) & 64512) === 56320;
      }
      function toArray(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg === "string") {
          if (!enc) {
            var p = 0;
            for (var i = 0; i < msg.length; i++) {
              var c = msg.charCodeAt(i);
              if (c < 128) {
                res[p++] = c;
              } else if (c < 2048) {
                res[p++] = c >> 6 | 192;
                res[p++] = c & 63 | 128;
              } else if (isSurrogatePair(msg, i)) {
                c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
                res[p++] = c >> 18 | 240;
                res[p++] = c >> 12 & 63 | 128;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              } else {
                res[p++] = c >> 12 | 224;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              }
            }
          } else if (enc === "hex") {
            msg = msg.replace(/[^a-z0-9]+/ig, "");
            if (msg.length % 2 !== 0)
              msg = "0" + msg;
            for (i = 0; i < msg.length; i += 2)
              res.push(parseInt(msg[i] + msg[i + 1], 16));
          }
        } else {
          for (i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
        }
        return res;
      }
      exports2.toArray = toArray;
      function toHex2(msg) {
        var res = "";
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      exports2.toHex = toHex2;
      function htonl(w) {
        var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
        return res >>> 0;
      }
      exports2.htonl = htonl;
      function toHex32(msg, endian) {
        var res = "";
        for (var i = 0; i < msg.length; i++) {
          var w = msg[i];
          if (endian === "little")
            w = htonl(w);
          res += zero8(w.toString(16));
        }
        return res;
      }
      exports2.toHex32 = toHex32;
      function zero2(word) {
        if (word.length === 1)
          return "0" + word;
        else
          return word;
      }
      exports2.zero2 = zero2;
      function zero8(word) {
        if (word.length === 7)
          return "0" + word;
        else if (word.length === 6)
          return "00" + word;
        else if (word.length === 5)
          return "000" + word;
        else if (word.length === 4)
          return "0000" + word;
        else if (word.length === 3)
          return "00000" + word;
        else if (word.length === 2)
          return "000000" + word;
        else if (word.length === 1)
          return "0000000" + word;
        else
          return word;
      }
      exports2.zero8 = zero8;
      function join32(msg, start, end, endian) {
        var len = end - start;
        assert(len % 4 === 0);
        var res = new Array(len / 4);
        for (var i = 0, k4 = start; i < res.length; i++, k4 += 4) {
          var w;
          if (endian === "big")
            w = msg[k4] << 24 | msg[k4 + 1] << 16 | msg[k4 + 2] << 8 | msg[k4 + 3];
          else
            w = msg[k4 + 3] << 24 | msg[k4 + 2] << 16 | msg[k4 + 1] << 8 | msg[k4];
          res[i] = w >>> 0;
        }
        return res;
      }
      exports2.join32 = join32;
      function split32(msg, endian) {
        var res = new Array(msg.length * 4);
        for (var i = 0, k4 = 0; i < msg.length; i++, k4 += 4) {
          var m = msg[i];
          if (endian === "big") {
            res[k4] = m >>> 24;
            res[k4 + 1] = m >>> 16 & 255;
            res[k4 + 2] = m >>> 8 & 255;
            res[k4 + 3] = m & 255;
          } else {
            res[k4 + 3] = m >>> 24;
            res[k4 + 2] = m >>> 16 & 255;
            res[k4 + 1] = m >>> 8 & 255;
            res[k4] = m & 255;
          }
        }
        return res;
      }
      exports2.split32 = split32;
      function rotr32(w, b) {
        return w >>> b | w << 32 - b;
      }
      exports2.rotr32 = rotr32;
      function rotl32(w, b) {
        return w << b | w >>> 32 - b;
      }
      exports2.rotl32 = rotl32;
      function sum32(a, b) {
        return a + b >>> 0;
      }
      exports2.sum32 = sum32;
      function sum32_3(a, b, c) {
        return a + b + c >>> 0;
      }
      exports2.sum32_3 = sum32_3;
      function sum32_4(a, b, c, d) {
        return a + b + c + d >>> 0;
      }
      exports2.sum32_4 = sum32_4;
      function sum32_5(a, b, c, d, e) {
        return a + b + c + d + e >>> 0;
      }
      exports2.sum32_5 = sum32_5;
      function sum64(buf, pos, ah, al) {
        var bh = buf[pos];
        var bl = buf[pos + 1];
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        buf[pos] = hi >>> 0;
        buf[pos + 1] = lo;
      }
      exports2.sum64 = sum64;
      function sum64_hi(ah, al, bh, bl) {
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        return hi >>> 0;
      }
      exports2.sum64_hi = sum64_hi;
      function sum64_lo(ah, al, bh, bl) {
        var lo = al + bl;
        return lo >>> 0;
      }
      exports2.sum64_lo = sum64_lo;
      function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        var hi = ah + bh + ch + dh + carry;
        return hi >>> 0;
      }
      exports2.sum64_4_hi = sum64_4_hi;
      function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
        var lo = al + bl + cl + dl;
        return lo >>> 0;
      }
      exports2.sum64_4_lo = sum64_4_lo;
      function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        lo = lo + el >>> 0;
        carry += lo < el ? 1 : 0;
        var hi = ah + bh + ch + dh + eh + carry;
        return hi >>> 0;
      }
      exports2.sum64_5_hi = sum64_5_hi;
      function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var lo = al + bl + cl + dl + el;
        return lo >>> 0;
      }
      exports2.sum64_5_lo = sum64_5_lo;
      function rotr64_hi(ah, al, num) {
        var r = al << 32 - num | ah >>> num;
        return r >>> 0;
      }
      exports2.rotr64_hi = rotr64_hi;
      function rotr64_lo(ah, al, num) {
        var r = ah << 32 - num | al >>> num;
        return r >>> 0;
      }
      exports2.rotr64_lo = rotr64_lo;
      function shr64_hi(ah, al, num) {
        return ah >>> num;
      }
      exports2.shr64_hi = shr64_hi;
      function shr64_lo(ah, al, num) {
        var r = ah << 32 - num | al >>> num;
        return r >>> 0;
      }
      exports2.shr64_lo = shr64_lo;
    }
  });

  // node_modules/hash.js/lib/hash/common.js
  var require_common = __commonJS({
    "node_modules/hash.js/lib/hash/common.js"(exports2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var assert = require_minimalistic_assert();
      function BlockHash() {
        this.pending = null;
        this.pendingTotal = 0;
        this.blockSize = this.constructor.blockSize;
        this.outSize = this.constructor.outSize;
        this.hmacStrength = this.constructor.hmacStrength;
        this.padLength = this.constructor.padLength / 8;
        this.endian = "big";
        this._delta8 = this.blockSize / 8;
        this._delta32 = this.blockSize / 32;
      }
      exports2.BlockHash = BlockHash;
      BlockHash.prototype.update = function update(msg, enc) {
        msg = utils.toArray(msg, enc);
        if (!this.pending)
          this.pending = msg;
        else
          this.pending = this.pending.concat(msg);
        this.pendingTotal += msg.length;
        if (this.pending.length >= this._delta8) {
          msg = this.pending;
          var r = msg.length % this._delta8;
          this.pending = msg.slice(msg.length - r, msg.length);
          if (this.pending.length === 0)
            this.pending = null;
          msg = utils.join32(msg, 0, msg.length - r, this.endian);
          for (var i = 0; i < msg.length; i += this._delta32)
            this._update(msg, i, i + this._delta32);
        }
        return this;
      };
      BlockHash.prototype.digest = function digest(enc) {
        this.update(this._pad());
        assert(this.pending === null);
        return this._digest(enc);
      };
      BlockHash.prototype._pad = function pad2() {
        var len = this.pendingTotal;
        var bytes = this._delta8;
        var k4 = bytes - (len + this.padLength) % bytes;
        var res = new Array(k4 + this.padLength);
        res[0] = 128;
        for (var i = 1; i < k4; i++)
          res[i] = 0;
        len <<= 3;
        if (this.endian === "big") {
          for (var t = 8; t < this.padLength; t++)
            res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = len >>> 24 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len & 255;
        } else {
          res[i++] = len & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 24 & 255;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          for (t = 8; t < this.padLength; t++)
            res[i++] = 0;
        }
        return res;
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/common.js
  var require_common2 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/common.js"(exports2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var rotr32 = utils.rotr32;
      function ft_1(s, x, y, z) {
        if (s === 0)
          return ch32(x, y, z);
        if (s === 1 || s === 3)
          return p32(x, y, z);
        if (s === 2)
          return maj32(x, y, z);
      }
      exports2.ft_1 = ft_1;
      function ch32(x, y, z) {
        return x & y ^ ~x & z;
      }
      exports2.ch32 = ch32;
      function maj32(x, y, z) {
        return x & y ^ x & z ^ y & z;
      }
      exports2.maj32 = maj32;
      function p32(x, y, z) {
        return x ^ y ^ z;
      }
      exports2.p32 = p32;
      function s0_256(x) {
        return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
      }
      exports2.s0_256 = s0_256;
      function s1_256(x) {
        return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
      }
      exports2.s1_256 = s1_256;
      function g0_256(x) {
        return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
      }
      exports2.g0_256 = g0_256;
      function g1_256(x) {
        return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
      }
      exports2.g1_256 = g1_256;
    }
  });

  // node_modules/hash.js/lib/hash/sha/1.js
  var require__ = __commonJS({
    "node_modules/hash.js/lib/hash/sha/1.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var common = require_common();
      var shaCommon = require_common2();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_5 = utils.sum32_5;
      var ft_1 = shaCommon.ft_1;
      var BlockHash = common.BlockHash;
      var sha1_K = [
        1518500249,
        1859775393,
        2400959708,
        3395469782
      ];
      function SHA1() {
        if (!(this instanceof SHA1))
          return new SHA1();
        BlockHash.call(this);
        this.h = [
          1732584193,
          4023233417,
          2562383102,
          271733878,
          3285377520
        ];
        this.W = new Array(80);
      }
      utils.inherits(SHA1, BlockHash);
      module2.exports = SHA1;
      SHA1.blockSize = 512;
      SHA1.outSize = 160;
      SHA1.hmacStrength = 80;
      SHA1.padLength = 64;
      SHA1.prototype._update = function _update(msg, start) {
        var W2 = this.W;
        for (var i = 0; i < 16; i++)
          W2[i] = msg[start + i];
        for (; i < W2.length; i++)
          W2[i] = rotl32(W2[i - 3] ^ W2[i - 8] ^ W2[i - 14] ^ W2[i - 16], 1);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        for (i = 0; i < W2.length; i++) {
          var s = ~~(i / 20);
          var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W2[i], sha1_K[s]);
          e = d;
          d = c;
          c = rotl32(b, 30);
          b = a;
          a = t;
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
      };
      SHA1.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/256.js
  var require__2 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/256.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var common = require_common();
      var shaCommon = require_common2();
      var assert = require_minimalistic_assert();
      var sum32 = utils.sum32;
      var sum32_4 = utils.sum32_4;
      var sum32_5 = utils.sum32_5;
      var ch32 = shaCommon.ch32;
      var maj32 = shaCommon.maj32;
      var s0_256 = shaCommon.s0_256;
      var s1_256 = shaCommon.s1_256;
      var g0_256 = shaCommon.g0_256;
      var g1_256 = shaCommon.g1_256;
      var BlockHash = common.BlockHash;
      var sha256_K = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
      function SHA256() {
        if (!(this instanceof SHA256))
          return new SHA256();
        BlockHash.call(this);
        this.h = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ];
        this.k = sha256_K;
        this.W = new Array(64);
      }
      utils.inherits(SHA256, BlockHash);
      module2.exports = SHA256;
      SHA256.blockSize = 512;
      SHA256.outSize = 256;
      SHA256.hmacStrength = 192;
      SHA256.padLength = 64;
      SHA256.prototype._update = function _update(msg, start) {
        var W2 = this.W;
        for (var i = 0; i < 16; i++)
          W2[i] = msg[start + i];
        for (; i < W2.length; i++)
          W2[i] = sum32_4(g1_256(W2[i - 2]), W2[i - 7], g0_256(W2[i - 15]), W2[i - 16]);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        var f = this.h[5];
        var g4 = this.h[6];
        var h = this.h[7];
        assert(this.k.length === W2.length);
        for (i = 0; i < W2.length; i++) {
          var T1 = sum32_5(h, s1_256(e), ch32(e, f, g4), this.k[i], W2[i]);
          var T22 = sum32(s0_256(a), maj32(a, b, c));
          h = g4;
          g4 = f;
          f = e;
          e = sum32(d, T1);
          d = c;
          c = b;
          b = a;
          a = sum32(T1, T22);
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
        this.h[5] = sum32(this.h[5], f);
        this.h[6] = sum32(this.h[6], g4);
        this.h[7] = sum32(this.h[7], h);
      };
      SHA256.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/224.js
  var require__3 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/224.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var SHA256 = require__2();
      function SHA224() {
        if (!(this instanceof SHA224))
          return new SHA224();
        SHA256.call(this);
        this.h = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ];
      }
      utils.inherits(SHA224, SHA256);
      module2.exports = SHA224;
      SHA224.blockSize = 512;
      SHA224.outSize = 224;
      SHA224.hmacStrength = 192;
      SHA224.padLength = 64;
      SHA224.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 7), "big");
        else
          return utils.split32(this.h.slice(0, 7), "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/512.js
  var require__4 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/512.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var common = require_common();
      var assert = require_minimalistic_assert();
      var rotr64_hi = utils.rotr64_hi;
      var rotr64_lo = utils.rotr64_lo;
      var shr64_hi = utils.shr64_hi;
      var shr64_lo = utils.shr64_lo;
      var sum64 = utils.sum64;
      var sum64_hi = utils.sum64_hi;
      var sum64_lo = utils.sum64_lo;
      var sum64_4_hi = utils.sum64_4_hi;
      var sum64_4_lo = utils.sum64_4_lo;
      var sum64_5_hi = utils.sum64_5_hi;
      var sum64_5_lo = utils.sum64_5_lo;
      var BlockHash = common.BlockHash;
      var sha512_K = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      function SHA512() {
        if (!(this instanceof SHA512))
          return new SHA512();
        BlockHash.call(this);
        this.h = [
          1779033703,
          4089235720,
          3144134277,
          2227873595,
          1013904242,
          4271175723,
          2773480762,
          1595750129,
          1359893119,
          2917565137,
          2600822924,
          725511199,
          528734635,
          4215389547,
          1541459225,
          327033209
        ];
        this.k = sha512_K;
        this.W = new Array(160);
      }
      utils.inherits(SHA512, BlockHash);
      module2.exports = SHA512;
      SHA512.blockSize = 1024;
      SHA512.outSize = 512;
      SHA512.hmacStrength = 192;
      SHA512.padLength = 128;
      SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
        var W2 = this.W;
        for (var i = 0; i < 32; i++)
          W2[i] = msg[start + i];
        for (; i < W2.length; i += 2) {
          var c0_hi = g1_512_hi(W2[i - 4], W2[i - 3]);
          var c0_lo = g1_512_lo(W2[i - 4], W2[i - 3]);
          var c1_hi = W2[i - 14];
          var c1_lo = W2[i - 13];
          var c2_hi = g0_512_hi(W2[i - 30], W2[i - 29]);
          var c2_lo = g0_512_lo(W2[i - 30], W2[i - 29]);
          var c3_hi = W2[i - 32];
          var c3_lo = W2[i - 31];
          W2[i] = sum64_4_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
          W2[i + 1] = sum64_4_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
        }
      };
      SHA512.prototype._update = function _update(msg, start) {
        this._prepareBlock(msg, start);
        var W2 = this.W;
        var ah = this.h[0];
        var al = this.h[1];
        var bh = this.h[2];
        var bl = this.h[3];
        var ch = this.h[4];
        var cl = this.h[5];
        var dh = this.h[6];
        var dl = this.h[7];
        var eh = this.h[8];
        var el = this.h[9];
        var fh = this.h[10];
        var fl = this.h[11];
        var gh = this.h[12];
        var gl = this.h[13];
        var hh = this.h[14];
        var hl = this.h[15];
        assert(this.k.length === W2.length);
        for (var i = 0; i < W2.length; i += 2) {
          var c0_hi = hh;
          var c0_lo = hl;
          var c1_hi = s1_512_hi(eh, el);
          var c1_lo = s1_512_lo(eh, el);
          var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
          var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
          var c3_hi = this.k[i];
          var c3_lo = this.k[i + 1];
          var c4_hi = W2[i];
          var c4_lo = W2[i + 1];
          var T1_hi = sum64_5_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          var T1_lo = sum64_5_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          c0_hi = s0_512_hi(ah, al);
          c0_lo = s0_512_lo(ah, al);
          c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
          c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
          var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
          var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          eh = sum64_hi(dh, dl, T1_hi, T1_lo);
          el = sum64_lo(dl, dl, T1_hi, T1_lo);
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
          al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
        }
        sum64(this.h, 0, ah, al);
        sum64(this.h, 2, bh, bl);
        sum64(this.h, 4, ch, cl);
        sum64(this.h, 6, dh, dl);
        sum64(this.h, 8, eh, el);
        sum64(this.h, 10, fh, fl);
        sum64(this.h, 12, gh, gl);
        sum64(this.h, 14, hh, hl);
      };
      SHA512.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
      function ch64_hi(xh, xl, yh, yl, zh) {
        var r = xh & yh ^ ~xh & zh;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function ch64_lo(xh, xl, yh, yl, zh, zl) {
        var r = xl & yl ^ ~xl & zl;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function maj64_hi(xh, xl, yh, yl, zh) {
        var r = xh & yh ^ xh & zh ^ yh & zh;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function maj64_lo(xh, xl, yh, yl, zh, zl) {
        var r = xl & yl ^ xl & zl ^ yl & zl;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function s0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 28);
        var c1_hi = rotr64_hi(xl, xh, 2);
        var c2_hi = rotr64_hi(xl, xh, 7);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function s0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 28);
        var c1_lo = rotr64_lo(xl, xh, 2);
        var c2_lo = rotr64_lo(xl, xh, 7);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function s1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 14);
        var c1_hi = rotr64_hi(xh, xl, 18);
        var c2_hi = rotr64_hi(xl, xh, 9);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function s1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 14);
        var c1_lo = rotr64_lo(xh, xl, 18);
        var c2_lo = rotr64_lo(xl, xh, 9);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function g0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 1);
        var c1_hi = rotr64_hi(xh, xl, 8);
        var c2_hi = shr64_hi(xh, xl, 7);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function g0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 1);
        var c1_lo = rotr64_lo(xh, xl, 8);
        var c2_lo = shr64_lo(xh, xl, 7);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function g1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 19);
        var c1_hi = rotr64_hi(xl, xh, 29);
        var c2_hi = shr64_hi(xh, xl, 6);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 4294967296;
        return r;
      }
      function g1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 19);
        var c1_lo = rotr64_lo(xl, xh, 29);
        var c2_lo = shr64_lo(xh, xl, 6);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 4294967296;
        return r;
      }
    }
  });

  // node_modules/hash.js/lib/hash/sha/384.js
  var require__5 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/384.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var SHA512 = require__4();
      function SHA384() {
        if (!(this instanceof SHA384))
          return new SHA384();
        SHA512.call(this);
        this.h = [
          3418070365,
          3238371032,
          1654270250,
          914150663,
          2438529370,
          812702999,
          355462360,
          4144912697,
          1731405415,
          4290775857,
          2394180231,
          1750603025,
          3675008525,
          1694076839,
          1203062813,
          3204075428
        ];
      }
      utils.inherits(SHA384, SHA512);
      module2.exports = SHA384;
      SHA384.blockSize = 1024;
      SHA384.outSize = 384;
      SHA384.hmacStrength = 192;
      SHA384.padLength = 128;
      SHA384.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 12), "big");
        else
          return utils.split32(this.h.slice(0, 12), "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha.js
  var require_sha3 = __commonJS({
    "node_modules/hash.js/lib/hash/sha.js"(exports2) {
      "use strict";
      init_polyfills();
      exports2.sha1 = require__();
      exports2.sha224 = require__3();
      exports2.sha256 = require__2();
      exports2.sha384 = require__5();
      exports2.sha512 = require__4();
    }
  });

  // node_modules/hash.js/lib/hash/ripemd.js
  var require_ripemd = __commonJS({
    "node_modules/hash.js/lib/hash/ripemd.js"(exports2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var common = require_common();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_3 = utils.sum32_3;
      var sum32_4 = utils.sum32_4;
      var BlockHash = common.BlockHash;
      function RIPEMD160() {
        if (!(this instanceof RIPEMD160))
          return new RIPEMD160();
        BlockHash.call(this);
        this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
        this.endian = "little";
      }
      utils.inherits(RIPEMD160, BlockHash);
      exports2.ripemd160 = RIPEMD160;
      RIPEMD160.blockSize = 512;
      RIPEMD160.outSize = 160;
      RIPEMD160.hmacStrength = 192;
      RIPEMD160.padLength = 64;
      RIPEMD160.prototype._update = function update(msg, start) {
        var A4 = this.h[0];
        var B = this.h[1];
        var C4 = this.h[2];
        var D3 = this.h[3];
        var E = this.h[4];
        var Ah = A4;
        var Bh = B;
        var Ch = C4;
        var Dh = D3;
        var Eh = E;
        for (var j2 = 0; j2 < 80; j2++) {
          var T4 = sum32(
            rotl32(
              sum32_4(A4, f(j2, B, C4, D3), msg[r[j2] + start], K4(j2)),
              s[j2]
            ),
            E
          );
          A4 = E;
          E = D3;
          D3 = rotl32(C4, 10);
          C4 = B;
          B = T4;
          T4 = sum32(
            rotl32(
              sum32_4(Ah, f(79 - j2, Bh, Ch, Dh), msg[rh[j2] + start], Kh(j2)),
              sh[j2]
            ),
            Eh
          );
          Ah = Eh;
          Eh = Dh;
          Dh = rotl32(Ch, 10);
          Ch = Bh;
          Bh = T4;
        }
        T4 = sum32_3(this.h[1], C4, Dh);
        this.h[1] = sum32_3(this.h[2], D3, Eh);
        this.h[2] = sum32_3(this.h[3], E, Ah);
        this.h[3] = sum32_3(this.h[4], A4, Bh);
        this.h[4] = sum32_3(this.h[0], B, Ch);
        this.h[0] = T4;
      };
      RIPEMD160.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "little");
        else
          return utils.split32(this.h, "little");
      };
      function f(j2, x, y, z) {
        if (j2 <= 15)
          return x ^ y ^ z;
        else if (j2 <= 31)
          return x & y | ~x & z;
        else if (j2 <= 47)
          return (x | ~y) ^ z;
        else if (j2 <= 63)
          return x & z | y & ~z;
        else
          return x ^ (y | ~z);
      }
      function K4(j2) {
        if (j2 <= 15)
          return 0;
        else if (j2 <= 31)
          return 1518500249;
        else if (j2 <= 47)
          return 1859775393;
        else if (j2 <= 63)
          return 2400959708;
        else
          return 2840853838;
      }
      function Kh(j2) {
        if (j2 <= 15)
          return 1352829926;
        else if (j2 <= 31)
          return 1548603684;
        else if (j2 <= 47)
          return 1836072691;
        else if (j2 <= 63)
          return 2053994217;
        else
          return 0;
      }
      var r = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ];
      var rh = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ];
      var s = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ];
      var sh = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
    }
  });

  // node_modules/hash.js/lib/hash/hmac.js
  var require_hmac = __commonJS({
    "node_modules/hash.js/lib/hash/hmac.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils3();
      var assert = require_minimalistic_assert();
      function Hmac(hash, key, enc) {
        if (!(this instanceof Hmac))
          return new Hmac(hash, key, enc);
        this.Hash = hash;
        this.blockSize = hash.blockSize / 8;
        this.outSize = hash.outSize / 8;
        this.inner = null;
        this.outer = null;
        this._init(utils.toArray(key, enc));
      }
      module2.exports = Hmac;
      Hmac.prototype._init = function init2(key) {
        if (key.length > this.blockSize)
          key = new this.Hash().update(key).digest();
        assert(key.length <= this.blockSize);
        for (var i = key.length; i < this.blockSize; i++)
          key.push(0);
        for (i = 0; i < key.length; i++)
          key[i] ^= 54;
        this.inner = new this.Hash().update(key);
        for (i = 0; i < key.length; i++)
          key[i] ^= 106;
        this.outer = new this.Hash().update(key);
      };
      Hmac.prototype.update = function update(msg, enc) {
        this.inner.update(msg, enc);
        return this;
      };
      Hmac.prototype.digest = function digest(enc) {
        this.outer.update(this.inner.digest());
        return this.outer.digest(enc);
      };
    }
  });

  // node_modules/hash.js/lib/hash.js
  var require_hash2 = __commonJS({
    "node_modules/hash.js/lib/hash.js"(exports2) {
      init_polyfills();
      var hash = exports2;
      hash.utils = require_utils3();
      hash.common = require_common();
      hash.sha = require_sha3();
      hash.ripemd = require_ripemd();
      hash.hmac = require_hmac();
      hash.sha1 = hash.sha.sha1;
      hash.sha256 = hash.sha.sha256;
      hash.sha224 = hash.sha.sha224;
      hash.sha384 = hash.sha.sha384;
      hash.sha512 = hash.sha.sha512;
      hash.ripemd160 = hash.ripemd.ripemd160;
    }
  });

  // node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js
  var require_secp256k1 = __commonJS({
    "node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js"(exports2, module2) {
      init_polyfills();
      module2.exports = {
        doubles: {
          step: 4,
          points: [
            [
              "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
              "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
            ],
            [
              "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
              "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
            ],
            [
              "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
              "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
            ],
            [
              "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
              "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
            ],
            [
              "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
              "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
            ],
            [
              "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
              "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
            ],
            [
              "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
              "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
            ],
            [
              "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
              "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
            ],
            [
              "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
              "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
            ],
            [
              "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
              "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
            ],
            [
              "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
              "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
            ],
            [
              "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
              "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
            ],
            [
              "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
              "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
            ],
            [
              "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
              "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
            ],
            [
              "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
              "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
            ],
            [
              "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
              "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
            ],
            [
              "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
              "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
            ],
            [
              "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
              "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
            ],
            [
              "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
              "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
            ],
            [
              "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
              "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
            ],
            [
              "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
              "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
            ],
            [
              "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
              "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
            ],
            [
              "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
              "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
            ],
            [
              "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
              "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
            ],
            [
              "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
              "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
            ],
            [
              "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
              "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
            ],
            [
              "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
              "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
            ],
            [
              "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
              "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
            ],
            [
              "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
              "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
            ],
            [
              "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
              "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
            ],
            [
              "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
              "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
            ],
            [
              "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
              "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
            ],
            [
              "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
              "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
            ],
            [
              "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
              "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
            ],
            [
              "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
              "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
            ],
            [
              "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
              "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
            ],
            [
              "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
              "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
            ],
            [
              "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
              "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
            ],
            [
              "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
              "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
            ],
            [
              "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
              "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
            ],
            [
              "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
              "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
            ],
            [
              "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
              "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
            ],
            [
              "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
              "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
            ],
            [
              "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
              "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
            ],
            [
              "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
              "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
            ],
            [
              "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
              "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
            ],
            [
              "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
              "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
            ],
            [
              "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
              "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
            ],
            [
              "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
              "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
            ],
            [
              "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
              "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
            ],
            [
              "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
              "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
            ],
            [
              "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
              "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
            ],
            [
              "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
              "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
            ],
            [
              "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
              "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
            ],
            [
              "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
              "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
            ],
            [
              "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
              "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
            ],
            [
              "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
              "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
            ],
            [
              "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
              "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
            ],
            [
              "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
              "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
            ],
            [
              "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
              "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
            ],
            [
              "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
              "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
            ],
            [
              "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
              "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
            ],
            [
              "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
              "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
            ],
            [
              "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
              "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
            ],
            [
              "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
              "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
            ]
          ]
        },
        naf: {
          wnd: 7,
          points: [
            [
              "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
              "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
            ],
            [
              "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
              "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
            ],
            [
              "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
              "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
            ],
            [
              "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
              "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
            ],
            [
              "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
              "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
            ],
            [
              "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
              "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
            ],
            [
              "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
              "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
            ],
            [
              "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
              "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
            ],
            [
              "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
              "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
            ],
            [
              "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
              "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
            ],
            [
              "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
              "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
            ],
            [
              "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
              "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
            ],
            [
              "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
              "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
            ],
            [
              "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
              "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
            ],
            [
              "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
              "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
            ],
            [
              "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
              "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
            ],
            [
              "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
              "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
            ],
            [
              "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
              "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
            ],
            [
              "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
              "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
            ],
            [
              "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
              "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
            ],
            [
              "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
              "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
            ],
            [
              "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
              "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
            ],
            [
              "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
              "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
            ],
            [
              "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
              "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
            ],
            [
              "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
              "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
            ],
            [
              "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
              "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
            ],
            [
              "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
              "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
            ],
            [
              "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
              "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
            ],
            [
              "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
              "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
            ],
            [
              "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
              "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
            ],
            [
              "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
              "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
            ],
            [
              "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
              "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
            ],
            [
              "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
              "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
            ],
            [
              "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
              "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
            ],
            [
              "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
              "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
            ],
            [
              "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
              "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
            ],
            [
              "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
              "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
            ],
            [
              "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
              "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
            ],
            [
              "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
              "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
            ],
            [
              "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
              "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
            ],
            [
              "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
              "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
            ],
            [
              "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
              "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
            ],
            [
              "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
              "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
            ],
            [
              "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
              "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
            ],
            [
              "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
              "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
            ],
            [
              "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
              "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
            ],
            [
              "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
              "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
            ],
            [
              "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
              "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
            ],
            [
              "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
              "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
            ],
            [
              "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
              "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
            ],
            [
              "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
              "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
            ],
            [
              "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
              "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
            ],
            [
              "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
              "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
            ],
            [
              "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
              "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
            ],
            [
              "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
              "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
            ],
            [
              "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
              "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
            ],
            [
              "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
              "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
            ],
            [
              "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
              "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
            ],
            [
              "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
              "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
            ],
            [
              "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
              "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
            ],
            [
              "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
              "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
            ],
            [
              "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
              "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
            ],
            [
              "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
              "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
            ],
            [
              "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
              "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
            ],
            [
              "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
              "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
            ],
            [
              "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
              "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
            ],
            [
              "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
              "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
            ],
            [
              "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
              "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
            ],
            [
              "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
              "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
            ],
            [
              "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
              "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
            ],
            [
              "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
              "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
            ],
            [
              "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
              "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
            ],
            [
              "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
              "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
            ],
            [
              "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
              "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
            ],
            [
              "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
              "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
            ],
            [
              "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
              "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
            ],
            [
              "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
              "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
            ],
            [
              "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
              "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
            ],
            [
              "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
              "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
            ],
            [
              "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
              "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
            ],
            [
              "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
              "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
            ],
            [
              "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
              "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
            ],
            [
              "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
              "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
            ],
            [
              "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
              "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
            ],
            [
              "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
              "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
            ],
            [
              "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
              "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
            ],
            [
              "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
              "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
            ],
            [
              "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
              "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
            ],
            [
              "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
              "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
            ],
            [
              "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
              "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
            ],
            [
              "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
              "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
            ],
            [
              "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
              "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
            ],
            [
              "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
              "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
            ],
            [
              "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
              "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
            ],
            [
              "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
              "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
            ],
            [
              "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
              "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
            ],
            [
              "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
              "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
            ],
            [
              "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
              "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
            ],
            [
              "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
              "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
            ],
            [
              "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
              "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
            ],
            [
              "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
              "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
            ],
            [
              "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
              "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
            ],
            [
              "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
              "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
            ],
            [
              "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
              "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
            ],
            [
              "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
              "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
            ],
            [
              "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
              "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
            ],
            [
              "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
              "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
            ],
            [
              "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
              "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
            ],
            [
              "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
              "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
            ],
            [
              "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
              "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
            ],
            [
              "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
              "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
            ],
            [
              "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
              "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
            ],
            [
              "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
              "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
            ],
            [
              "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
              "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
            ],
            [
              "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
              "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
            ],
            [
              "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
              "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
            ],
            [
              "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
              "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
            ],
            [
              "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
              "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
            ],
            [
              "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
              "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
            ],
            [
              "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
              "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
            ],
            [
              "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
              "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
            ],
            [
              "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
              "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
            ],
            [
              "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
              "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
            ],
            [
              "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
              "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
            ],
            [
              "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
              "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
            ],
            [
              "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
              "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
            ],
            [
              "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
              "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
            ]
          ]
        }
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/curves.js
  var require_curves = __commonJS({
    "node_modules/elliptic/lib/elliptic/curves.js"(exports2) {
      "use strict";
      init_polyfills();
      var curves = exports2;
      var hash = require_hash2();
      var curve = require_curve();
      var utils = require_utils2();
      var assert = utils.assert;
      function PresetCurve(options) {
        if (options.type === "short")
          this.curve = new curve.short(options);
        else if (options.type === "edwards")
          this.curve = new curve.edwards(options);
        else
          this.curve = new curve.mont(options);
        this.g = this.curve.g;
        this.n = this.curve.n;
        this.hash = options.hash;
        assert(this.g.validate(), "Invalid curve");
        assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      curves.PresetCurve = PresetCurve;
      function defineCurve(name, options) {
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          get: function() {
            var curve2 = new PresetCurve(options);
            Object.defineProperty(curves, name, {
              configurable: true,
              enumerable: true,
              value: curve2
            });
            return curve2;
          }
        });
      }
      defineCurve("p192", {
        type: "short",
        prime: "p192",
        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
        hash: hash.sha256,
        gRed: false,
        g: [
          "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
          "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
        ]
      });
      defineCurve("p224", {
        type: "short",
        prime: "p224",
        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
        hash: hash.sha256,
        gRed: false,
        g: [
          "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
          "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
        ]
      });
      defineCurve("p256", {
        type: "short",
        prime: null,
        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
        hash: hash.sha256,
        gRed: false,
        g: [
          "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
          "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
        ]
      });
      defineCurve("p384", {
        type: "short",
        prime: null,
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
        hash: hash.sha384,
        gRed: false,
        g: [
          "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
          "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
        ]
      });
      defineCurve("p521", {
        type: "short",
        prime: null,
        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
        hash: hash.sha512,
        gRed: false,
        g: [
          "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
          "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
        ]
      });
      defineCurve("curve25519", {
        type: "mont",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "76d06",
        b: "1",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: hash.sha256,
        gRed: false,
        g: [
          "9"
        ]
      });
      defineCurve("ed25519", {
        type: "edwards",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "-1",
        c: "1",
        // -121665 * (121666^(-1)) (mod P)
        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: hash.sha256,
        gRed: false,
        g: [
          "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
          // 4/5
          "6666666666666666666666666666666666666666666666666666666666666658"
        ]
      });
      var pre;
      try {
        pre = require_secp256k1();
      } catch (e) {
        pre = void 0;
      }
      defineCurve("secp256k1", {
        type: "short",
        prime: "k256",
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: hash.sha256,
        // Precomputed endomorphism
        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [
          {
            a: "3086d221a7d46bcde86c90e49284eb15",
            b: "-e4437ed6010e88286f547fa90abfe4c3"
          },
          {
            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
            b: "3086d221a7d46bcde86c90e49284eb15"
          }
        ],
        gRed: false,
        g: [
          "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
          "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
          pre
        ]
      });
    }
  });

  // node_modules/hmac-drbg/lib/hmac-drbg.js
  var require_hmac_drbg = __commonJS({
    "node_modules/hmac-drbg/lib/hmac-drbg.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var hash = require_hash2();
      var utils = require_utils();
      var assert = require_minimalistic_assert();
      function HmacDRBG(options) {
        if (!(this instanceof HmacDRBG))
          return new HmacDRBG(options);
        this.hash = options.hash;
        this.predResist = !!options.predResist;
        this.outLen = this.hash.outSize;
        this.minEntropy = options.minEntropy || this.hash.hmacStrength;
        this._reseed = null;
        this.reseedInterval = null;
        this.K = null;
        this.V = null;
        var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex");
        var nonce = utils.toArray(options.nonce, options.nonceEnc || "hex");
        var pers = utils.toArray(options.pers, options.persEnc || "hex");
        assert(
          entropy.length >= this.minEntropy / 8,
          "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
        );
        this._init(entropy, nonce, pers);
      }
      module2.exports = HmacDRBG;
      HmacDRBG.prototype._init = function init2(entropy, nonce, pers) {
        var seed = entropy.concat(nonce).concat(pers);
        this.K = new Array(this.outLen / 8);
        this.V = new Array(this.outLen / 8);
        for (var i = 0; i < this.V.length; i++) {
          this.K[i] = 0;
          this.V[i] = 1;
        }
        this._update(seed);
        this._reseed = 1;
        this.reseedInterval = 281474976710656;
      };
      HmacDRBG.prototype._hmac = function hmac() {
        return new hash.hmac(this.hash, this.K);
      };
      HmacDRBG.prototype._update = function update(seed) {
        var kmac = this._hmac().update(this.V).update([0]);
        if (seed)
          kmac = kmac.update(seed);
        this.K = kmac.digest();
        this.V = this._hmac().update(this.V).digest();
        if (!seed)
          return;
        this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
        this.V = this._hmac().update(this.V).digest();
      };
      HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
        if (typeof entropyEnc !== "string") {
          addEnc = add;
          add = entropyEnc;
          entropyEnc = null;
        }
        entropy = utils.toArray(entropy, entropyEnc);
        add = utils.toArray(add, addEnc);
        assert(
          entropy.length >= this.minEntropy / 8,
          "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
        );
        this._update(entropy.concat(add || []));
        this._reseed = 1;
      };
      HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        if (typeof enc !== "string") {
          addEnc = add;
          add = enc;
          enc = null;
        }
        if (add) {
          add = utils.toArray(add, addEnc || "hex");
          this._update(add);
        }
        var temp = [];
        while (temp.length < len) {
          this.V = this._hmac().update(this.V).digest();
          temp = temp.concat(this.V);
        }
        var res = temp.slice(0, len);
        this._update(add);
        this._reseed++;
        return utils.encode(res, enc);
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/ec/key.js
  var require_key = __commonJS({
    "node_modules/elliptic/lib/elliptic/ec/key.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var utils = require_utils2();
      var assert = utils.assert;
      function KeyPair(ec, options) {
        this.ec = ec;
        this.priv = null;
        this.pub = null;
        if (options.priv)
          this._importPrivate(options.priv, options.privEnc);
        if (options.pub)
          this._importPublic(options.pub, options.pubEnc);
      }
      module2.exports = KeyPair;
      KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
        if (pub instanceof KeyPair)
          return pub;
        return new KeyPair(ec, {
          pub,
          pubEnc: enc
        });
      };
      KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
        if (priv instanceof KeyPair)
          return priv;
        return new KeyPair(ec, {
          priv,
          privEnc: enc
        });
      };
      KeyPair.prototype.validate = function validate() {
        var pub = this.getPublic();
        if (pub.isInfinity())
          return { result: false, reason: "Invalid public key" };
        if (!pub.validate())
          return { result: false, reason: "Public key is not a point" };
        if (!pub.mul(this.ec.curve.n).isInfinity())
          return { result: false, reason: "Public key * N != O" };
        return { result: true, reason: null };
      };
      KeyPair.prototype.getPublic = function getPublic(compact, enc) {
        if (typeof compact === "string") {
          enc = compact;
          compact = null;
        }
        if (!this.pub)
          this.pub = this.ec.g.mul(this.priv);
        if (!enc)
          return this.pub;
        return this.pub.encode(enc, compact);
      };
      KeyPair.prototype.getPrivate = function getPrivate(enc) {
        if (enc === "hex")
          return this.priv.toString(16, 2);
        else
          return this.priv;
      };
      KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
        this.priv = new BN(key, enc || 16);
        this.priv = this.priv.umod(this.ec.curve.n);
      };
      KeyPair.prototype._importPublic = function _importPublic(key, enc) {
        if (key.x || key.y) {
          if (this.ec.curve.type === "mont") {
            assert(key.x, "Need x coordinate");
          } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
            assert(key.x && key.y, "Need both x and y coordinate");
          }
          this.pub = this.ec.curve.point(key.x, key.y);
          return;
        }
        this.pub = this.ec.curve.decodePoint(key, enc);
      };
      KeyPair.prototype.derive = function derive(pub) {
        if (!pub.validate()) {
          assert(pub.validate(), "public point not validated");
        }
        return pub.mul(this.priv).getX();
      };
      KeyPair.prototype.sign = function sign2(msg, enc, options) {
        return this.ec.sign(msg, this, enc, options);
      };
      KeyPair.prototype.verify = function verify(msg, signature, options) {
        return this.ec.verify(msg, signature, this, void 0, options);
      };
      KeyPair.prototype.inspect = function inspect3() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/ec/signature.js
  var require_signature = __commonJS({
    "node_modules/elliptic/lib/elliptic/ec/signature.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var utils = require_utils2();
      var assert = utils.assert;
      function Signature(options, enc) {
        if (options instanceof Signature)
          return options;
        if (this._importDER(options, enc))
          return;
        assert(options.r && options.s, "Signature without r or s");
        this.r = new BN(options.r, 16);
        this.s = new BN(options.s, 16);
        if (options.recoveryParam === void 0)
          this.recoveryParam = null;
        else
          this.recoveryParam = options.recoveryParam;
      }
      module2.exports = Signature;
      function Position() {
        this.place = 0;
      }
      function getLength(buf, p) {
        var initial = buf[p.place++];
        if (!(initial & 128)) {
          return initial;
        }
        var octetLen = initial & 15;
        if (octetLen === 0 || octetLen > 4) {
          return false;
        }
        if (buf[p.place] === 0) {
          return false;
        }
        var val = 0;
        for (var i = 0, off2 = p.place; i < octetLen; i++, off2++) {
          val <<= 8;
          val |= buf[off2];
          val >>>= 0;
        }
        if (val <= 127) {
          return false;
        }
        p.place = off2;
        return val;
      }
      function rmPadding(buf) {
        var i = 0;
        var len = buf.length - 1;
        while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
          i++;
        }
        if (i === 0) {
          return buf;
        }
        return buf.slice(i);
      }
      Signature.prototype._importDER = function _importDER(data, enc) {
        data = utils.toArray(data, enc);
        var p = new Position();
        if (data[p.place++] !== 48) {
          return false;
        }
        var len = getLength(data, p);
        if (len === false) {
          return false;
        }
        if (len + p.place !== data.length) {
          return false;
        }
        if (data[p.place++] !== 2) {
          return false;
        }
        var rlen = getLength(data, p);
        if (rlen === false) {
          return false;
        }
        if ((data[p.place] & 128) !== 0) {
          return false;
        }
        var r = data.slice(p.place, rlen + p.place);
        p.place += rlen;
        if (data[p.place++] !== 2) {
          return false;
        }
        var slen = getLength(data, p);
        if (slen === false) {
          return false;
        }
        if (data.length !== slen + p.place) {
          return false;
        }
        if ((data[p.place] & 128) !== 0) {
          return false;
        }
        var s = data.slice(p.place, slen + p.place);
        if (r[0] === 0) {
          if (r[1] & 128) {
            r = r.slice(1);
          } else {
            return false;
          }
        }
        if (s[0] === 0) {
          if (s[1] & 128) {
            s = s.slice(1);
          } else {
            return false;
          }
        }
        this.r = new BN(r);
        this.s = new BN(s);
        this.recoveryParam = null;
        return true;
      };
      function constructLength(arr, len) {
        if (len < 128) {
          arr.push(len);
          return;
        }
        var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
        arr.push(octets | 128);
        while (--octets) {
          arr.push(len >>> (octets << 3) & 255);
        }
        arr.push(len);
      }
      Signature.prototype.toDER = function toDER(enc) {
        var r = this.r.toArray();
        var s = this.s.toArray();
        if (r[0] & 128)
          r = [0].concat(r);
        if (s[0] & 128)
          s = [0].concat(s);
        r = rmPadding(r);
        s = rmPadding(s);
        while (!s[0] && !(s[1] & 128)) {
          s = s.slice(1);
        }
        var arr = [2];
        constructLength(arr, r.length);
        arr = arr.concat(r);
        arr.push(2);
        constructLength(arr, s.length);
        var backHalf = arr.concat(s);
        var res = [48];
        constructLength(res, backHalf.length);
        res = res.concat(backHalf);
        return utils.encode(res, enc);
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/ec/index.js
  var require_ec = __commonJS({
    "node_modules/elliptic/lib/elliptic/ec/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var HmacDRBG = require_hmac_drbg();
      var utils = require_utils2();
      var curves = require_curves();
      var rand = require_brorand();
      var assert = utils.assert;
      var KeyPair = require_key();
      var Signature = require_signature();
      function EC(options) {
        if (!(this instanceof EC))
          return new EC(options);
        if (typeof options === "string") {
          assert(
            Object.prototype.hasOwnProperty.call(curves, options),
            "Unknown curve " + options
          );
          options = curves[options];
        }
        if (options instanceof curves.PresetCurve)
          options = { curve: options };
        this.curve = options.curve.curve;
        this.n = this.curve.n;
        this.nh = this.n.ushrn(1);
        this.g = this.curve.g;
        this.g = options.curve.g;
        this.g.precompute(options.curve.n.bitLength() + 1);
        this.hash = options.hash || options.curve.hash;
      }
      module2.exports = EC;
      EC.prototype.keyPair = function keyPair(options) {
        return new KeyPair(this, options);
      };
      EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
        return KeyPair.fromPrivate(this, priv, enc);
      };
      EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
        return KeyPair.fromPublic(this, pub, enc);
      };
      EC.prototype.genKeyPair = function genKeyPair(options) {
        if (!options)
          options = {};
        var drbg = new HmacDRBG({
          hash: this.hash,
          pers: options.pers,
          persEnc: options.persEnc || "utf8",
          entropy: options.entropy || rand(this.hash.hmacStrength),
          entropyEnc: options.entropy && options.entropyEnc || "utf8",
          nonce: this.n.toArray()
        });
        var bytes = this.n.byteLength();
        var ns2 = this.n.sub(new BN(2));
        for (; ; ) {
          var priv = new BN(drbg.generate(bytes));
          if (priv.cmp(ns2) > 0)
            continue;
          priv.iaddn(1);
          return this.keyFromPrivate(priv);
        }
      };
      EC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {
        var byteLength2;
        if (BN.isBN(msg) || typeof msg === "number") {
          msg = new BN(msg, 16);
          byteLength2 = msg.byteLength();
        } else if (typeof msg === "object") {
          byteLength2 = msg.length;
          msg = new BN(msg, 16);
        } else {
          var str = msg.toString();
          byteLength2 = str.length + 1 >>> 1;
          msg = new BN(str, 16);
        }
        if (typeof bitLength !== "number") {
          bitLength = byteLength2 * 8;
        }
        var delta = bitLength - this.n.bitLength();
        if (delta > 0)
          msg = msg.ushrn(delta);
        if (!truncOnly && msg.cmp(this.n) >= 0)
          return msg.sub(this.n);
        else
          return msg;
      };
      EC.prototype.sign = function sign2(msg, key, enc, options) {
        if (typeof enc === "object") {
          options = enc;
          enc = null;
        }
        if (!options)
          options = {};
        if (typeof msg !== "string" && typeof msg !== "number" && !BN.isBN(msg)) {
          assert(
            typeof msg === "object" && msg && typeof msg.length === "number",
            "Expected message to be an array-like, a hex string, or a BN instance"
          );
          assert(msg.length >>> 0 === msg.length);
          for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);
        }
        key = this.keyFromPrivate(key, enc);
        msg = this._truncateToN(msg, false, options.msgBitLength);
        assert(!msg.isNeg(), "Can not sign a negative message");
        var bytes = this.n.byteLength();
        var bkey = key.getPrivate().toArray("be", bytes);
        var nonce = msg.toArray("be", bytes);
        assert(new BN(nonce).eq(msg), "Can not sign message");
        var drbg = new HmacDRBG({
          hash: this.hash,
          entropy: bkey,
          nonce,
          pers: options.pers,
          persEnc: options.persEnc || "utf8"
        });
        var ns1 = this.n.sub(new BN(1));
        for (var iter = 0; ; iter++) {
          var k4 = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
          k4 = this._truncateToN(k4, true);
          if (k4.cmpn(1) <= 0 || k4.cmp(ns1) >= 0)
            continue;
          var kp = this.g.mul(k4);
          if (kp.isInfinity())
            continue;
          var kpX = kp.getX();
          var r = kpX.umod(this.n);
          if (r.cmpn(0) === 0)
            continue;
          var s = k4.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
          s = s.umod(this.n);
          if (s.cmpn(0) === 0)
            continue;
          var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
          if (options.canonical && s.cmp(this.nh) > 0) {
            s = this.n.sub(s);
            recoveryParam ^= 1;
          }
          return new Signature({ r, s, recoveryParam });
        }
      };
      EC.prototype.verify = function verify(msg, signature, key, enc, options) {
        if (!options)
          options = {};
        msg = this._truncateToN(msg, false, options.msgBitLength);
        key = this.keyFromPublic(key, enc);
        signature = new Signature(signature, "hex");
        var r = signature.r;
        var s = signature.s;
        if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
          return false;
        if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
          return false;
        var sinv = s.invm(this.n);
        var u12 = sinv.mul(msg).umod(this.n);
        var u22 = sinv.mul(r).umod(this.n);
        var p;
        if (!this.curve._maxwellTrick) {
          p = this.g.mulAdd(u12, key.getPublic(), u22);
          if (p.isInfinity())
            return false;
          return p.getX().umod(this.n).cmp(r) === 0;
        }
        p = this.g.jmulAdd(u12, key.getPublic(), u22);
        if (p.isInfinity())
          return false;
        return p.eqXToP(r);
      };
      EC.prototype.recoverPubKey = function(msg, signature, j2, enc) {
        assert((3 & j2) === j2, "The recovery param is more than two bits");
        signature = new Signature(signature, enc);
        var n = this.n;
        var e = new BN(msg);
        var r = signature.r;
        var s = signature.s;
        var isYOdd = j2 & 1;
        var isSecondKey = j2 >> 1;
        if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
          throw new Error("Unable to find sencond key candinate");
        if (isSecondKey)
          r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
        else
          r = this.curve.pointFromX(r, isYOdd);
        var rInv = signature.r.invm(n);
        var s12 = n.sub(e).mul(rInv).umod(n);
        var s22 = s.mul(rInv).umod(n);
        return this.g.mulAdd(s12, r, s22);
      };
      EC.prototype.getKeyRecoveryParam = function(e, signature, Q2, enc) {
        signature = new Signature(signature, enc);
        if (signature.recoveryParam !== null)
          return signature.recoveryParam;
        for (var i = 0; i < 4; i++) {
          var Qprime;
          try {
            Qprime = this.recoverPubKey(e, signature, i);
          } catch (e3) {
            continue;
          }
          if (Qprime.eq(Q2))
            return i;
        }
        throw new Error("Unable to find valid recovery factor");
      };
    }
  });

  // node_modules/elliptic/lib/elliptic/eddsa/key.js
  var require_key2 = __commonJS({
    "node_modules/elliptic/lib/elliptic/eddsa/key.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var utils = require_utils2();
      var assert = utils.assert;
      var parseBytes = utils.parseBytes;
      var cachedProperty = utils.cachedProperty;
      function KeyPair(eddsa, params) {
        this.eddsa = eddsa;
        this._secret = parseBytes(params.secret);
        if (eddsa.isPoint(params.pub))
          this._pub = params.pub;
        else
          this._pubBytes = parseBytes(params.pub);
      }
      KeyPair.fromPublic = function fromPublic(eddsa, pub) {
        if (pub instanceof KeyPair)
          return pub;
        return new KeyPair(eddsa, { pub });
      };
      KeyPair.fromSecret = function fromSecret(eddsa, secret) {
        if (secret instanceof KeyPair)
          return secret;
        return new KeyPair(eddsa, { secret });
      };
      KeyPair.prototype.secret = function secret() {
        return this._secret;
      };
      cachedProperty(KeyPair, "pubBytes", function pubBytes() {
        return this.eddsa.encodePoint(this.pub());
      });
      cachedProperty(KeyPair, "pub", function pub() {
        if (this._pubBytes)
          return this.eddsa.decodePoint(this._pubBytes);
        return this.eddsa.g.mul(this.priv());
      });
      cachedProperty(KeyPair, "privBytes", function privBytes() {
        var eddsa = this.eddsa;
        var hash = this.hash();
        var lastIx = eddsa.encodingLength - 1;
        var a = hash.slice(0, eddsa.encodingLength);
        a[0] &= 248;
        a[lastIx] &= 127;
        a[lastIx] |= 64;
        return a;
      });
      cachedProperty(KeyPair, "priv", function priv() {
        return this.eddsa.decodeInt(this.privBytes());
      });
      cachedProperty(KeyPair, "hash", function hash() {
        return this.eddsa.hash().update(this.secret()).digest();
      });
      cachedProperty(KeyPair, "messagePrefix", function messagePrefix() {
        return this.hash().slice(this.eddsa.encodingLength);
      });
      KeyPair.prototype.sign = function sign2(message) {
        assert(this._secret, "KeyPair can only verify");
        return this.eddsa.sign(message, this);
      };
      KeyPair.prototype.verify = function verify(message, sig) {
        return this.eddsa.verify(message, sig, this);
      };
      KeyPair.prototype.getSecret = function getSecret(enc) {
        assert(this._secret, "KeyPair is public only");
        return utils.encode(this.secret(), enc);
      };
      KeyPair.prototype.getPublic = function getPublic(enc) {
        return utils.encode(this.pubBytes(), enc);
      };
      module2.exports = KeyPair;
    }
  });

  // node_modules/elliptic/lib/elliptic/eddsa/signature.js
  var require_signature2 = __commonJS({
    "node_modules/elliptic/lib/elliptic/eddsa/signature.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var BN = require_bn();
      var utils = require_utils2();
      var assert = utils.assert;
      var cachedProperty = utils.cachedProperty;
      var parseBytes = utils.parseBytes;
      function Signature(eddsa, sig) {
        this.eddsa = eddsa;
        if (typeof sig !== "object")
          sig = parseBytes(sig);
        if (Array.isArray(sig)) {
          assert(sig.length === eddsa.encodingLength * 2, "Signature has invalid size");
          sig = {
            R: sig.slice(0, eddsa.encodingLength),
            S: sig.slice(eddsa.encodingLength)
          };
        }
        assert(sig.R && sig.S, "Signature without R or S");
        if (eddsa.isPoint(sig.R))
          this._R = sig.R;
        if (sig.S instanceof BN)
          this._S = sig.S;
        this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
        this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
      }
      cachedProperty(Signature, "S", function S() {
        return this.eddsa.decodeInt(this.Sencoded());
      });
      cachedProperty(Signature, "R", function R4() {
        return this.eddsa.decodePoint(this.Rencoded());
      });
      cachedProperty(Signature, "Rencoded", function Rencoded() {
        return this.eddsa.encodePoint(this.R());
      });
      cachedProperty(Signature, "Sencoded", function Sencoded() {
        return this.eddsa.encodeInt(this.S());
      });
      Signature.prototype.toBytes = function toBytes() {
        return this.Rencoded().concat(this.Sencoded());
      };
      Signature.prototype.toHex = function toHex2() {
        return utils.encode(this.toBytes(), "hex").toUpperCase();
      };
      module2.exports = Signature;
    }
  });

  // node_modules/elliptic/lib/elliptic/eddsa/index.js
  var require_eddsa = __commonJS({
    "node_modules/elliptic/lib/elliptic/eddsa/index.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var hash = require_hash2();
      var curves = require_curves();
      var utils = require_utils2();
      var assert = utils.assert;
      var parseBytes = utils.parseBytes;
      var KeyPair = require_key2();
      var Signature = require_signature2();
      function EDDSA(curve) {
        assert(curve === "ed25519", "only tested with ed25519 so far");
        if (!(this instanceof EDDSA))
          return new EDDSA(curve);
        curve = curves[curve].curve;
        this.curve = curve;
        this.g = curve.g;
        this.g.precompute(curve.n.bitLength() + 1);
        this.pointClass = curve.point().constructor;
        this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
        this.hash = hash.sha512;
      }
      module2.exports = EDDSA;
      EDDSA.prototype.sign = function sign2(message, secret) {
        message = parseBytes(message);
        var key = this.keyFromSecret(secret);
        var r = this.hashInt(key.messagePrefix(), message);
        var R4 = this.g.mul(r);
        var Rencoded = this.encodePoint(R4);
        var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
        var S = r.add(s_).umod(this.curve.n);
        return this.makeSignature({ R: R4, S, Rencoded });
      };
      EDDSA.prototype.verify = function verify(message, sig, pub) {
        message = parseBytes(message);
        sig = this.makeSignature(sig);
        if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {
          return false;
        }
        var key = this.keyFromPublic(pub);
        var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
        var SG = this.g.mul(sig.S());
        var RplusAh = sig.R().add(key.pub().mul(h));
        return RplusAh.eq(SG);
      };
      EDDSA.prototype.hashInt = function hashInt() {
        var hash2 = this.hash();
        for (var i = 0; i < arguments.length; i++)
          hash2.update(arguments[i]);
        return utils.intFromLE(hash2.digest()).umod(this.curve.n);
      };
      EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
        return KeyPair.fromPublic(this, pub);
      };
      EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
        return KeyPair.fromSecret(this, secret);
      };
      EDDSA.prototype.makeSignature = function makeSignature(sig) {
        if (sig instanceof Signature)
          return sig;
        return new Signature(this, sig);
      };
      EDDSA.prototype.encodePoint = function encodePoint(point) {
        var enc = point.getY().toArray("le", this.encodingLength);
        enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;
        return enc;
      };
      EDDSA.prototype.decodePoint = function decodePoint(bytes) {
        bytes = utils.parseBytes(bytes);
        var lastIx = bytes.length - 1;
        var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~128);
        var xIsOdd = (bytes[lastIx] & 128) !== 0;
        var y = utils.intFromLE(normed);
        return this.curve.pointFromY(y, xIsOdd);
      };
      EDDSA.prototype.encodeInt = function encodeInt(num) {
        return num.toArray("le", this.encodingLength);
      };
      EDDSA.prototype.decodeInt = function decodeInt(bytes) {
        return utils.intFromLE(bytes);
      };
      EDDSA.prototype.isPoint = function isPoint(val) {
        return val instanceof this.pointClass;
      };
    }
  });

  // node_modules/elliptic/lib/elliptic.js
  var require_elliptic = __commonJS({
    "node_modules/elliptic/lib/elliptic.js"(exports2) {
      "use strict";
      init_polyfills();
      var elliptic = exports2;
      elliptic.version = require_package().version;
      elliptic.utils = require_utils2();
      elliptic.rand = require_brorand();
      elliptic.curve = require_curve();
      elliptic.curves = require_curves();
      elliptic.ec = require_ec();
      elliptic.eddsa = require_eddsa();
    }
  });

  // node_modules/tiny-secp256k1/rfc6979.js
  var require_rfc6979 = __commonJS({
    "node_modules/tiny-secp256k1/rfc6979.js"(exports2, module2) {
      init_polyfills();
      var createHmac = require_browser3();
      var ONE1 = Buffer2.alloc(1, 1);
      var ZERO1 = Buffer2.alloc(1, 0);
      function deterministicGenerateK(hash, x, checkSig, isPrivate, extraEntropy) {
        let k4 = Buffer2.alloc(32, 0);
        let v4 = Buffer2.alloc(32, 1);
        k4 = createHmac("sha256", k4).update(v4).update(ZERO1).update(x).update(hash).update(extraEntropy || "").digest();
        v4 = createHmac("sha256", k4).update(v4).digest();
        k4 = createHmac("sha256", k4).update(v4).update(ONE1).update(x).update(hash).update(extraEntropy || "").digest();
        v4 = createHmac("sha256", k4).update(v4).digest();
        v4 = createHmac("sha256", k4).update(v4).digest();
        let T4 = v4;
        while (!isPrivate(T4) || !checkSig(T4)) {
          k4 = createHmac("sha256", k4).update(v4).update(ZERO1).digest();
          v4 = createHmac("sha256", k4).update(v4).digest();
          v4 = createHmac("sha256", k4).update(v4).digest();
          T4 = v4;
        }
        return T4;
      }
      module2.exports = deterministicGenerateK;
    }
  });

  // node_modules/tiny-secp256k1/js.js
  var require_js = __commonJS({
    "node_modules/tiny-secp256k1/js.js"(exports2, module2) {
      init_polyfills();
      var BN = require_bn();
      var EC = require_elliptic().ec;
      var secp256k1 = new EC("secp256k1");
      var deterministicGenerateK = require_rfc6979();
      var ZERO32 = Buffer2.alloc(32, 0);
      var EC_GROUP_ORDER = Buffer2.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", "hex");
      var EC_P = Buffer2.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f", "hex");
      var n = secp256k1.curve.n;
      var nDiv2 = n.shrn(1);
      var G3 = secp256k1.curve.g;
      var THROW_BAD_PRIVATE = "Expected Private";
      var THROW_BAD_POINT = "Expected Point";
      var THROW_BAD_TWEAK = "Expected Tweak";
      var THROW_BAD_HASH = "Expected Hash";
      var THROW_BAD_SIGNATURE = "Expected Signature";
      var THROW_BAD_EXTRA_DATA = "Expected Extra Data (32 bytes)";
      function isScalar(x) {
        return x instanceof Uint8Array && x.length === 32;
      }
      function isOrderScalar(x) {
        if (!isScalar(x)) return false;
        return EC_GROUP_ORDER.compare(x) > 0;
      }
      function isPoint(p) {
        if (!(p instanceof Uint8Array)) return false;
        if (p.length < 33) return false;
        const t = p[0];
        const x = p.subarray(1, 33);
        if (ZERO32.compare(x) === 0) return false;
        if (EC_P.compare(x) <= 0) return false;
        if ((t === 2 || t === 3) && p.length === 33) {
          try {
            decodeFrom(p);
          } catch (e) {
            return false;
          }
          return true;
        }
        const y = p.subarray(33);
        if (ZERO32.compare(y) === 0) return false;
        if (EC_P.compare(y) <= 0) return false;
        if (t === 4 && p.length === 65) return true;
        return false;
      }
      function __isPointCompressed(p) {
        return p[0] !== 4;
      }
      function isPointCompressed(p) {
        if (!isPoint(p)) return false;
        return __isPointCompressed(p);
      }
      function isPrivate(x) {
        if (!isScalar(x)) return false;
        return ZERO32.compare(x) < 0 && // > 0
        EC_GROUP_ORDER.compare(x) > 0;
      }
      function isSignature(value) {
        const r = value.subarray(0, 32);
        const s = value.subarray(32, 64);
        return value instanceof Uint8Array && value.length === 64 && EC_GROUP_ORDER.compare(r) > 0 && EC_GROUP_ORDER.compare(s) > 0;
      }
      function assumeCompression(value, pubkey) {
        if (value === void 0 && pubkey !== void 0) return __isPointCompressed(pubkey);
        if (value === void 0) return true;
        return value;
      }
      function fromBuffer(d) {
        return new BN(d);
      }
      function toBuffer(d) {
        return d.toArrayLike(Buffer2, "be", 32);
      }
      function decodeFrom(P4) {
        return secp256k1.curve.decodePoint(P4);
      }
      function getEncoded(P4, compressed) {
        return Buffer2.from(P4._encode(compressed));
      }
      function pointAdd(pA, pB, __compressed) {
        if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT);
        if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT);
        const a = decodeFrom(pA);
        const b = decodeFrom(pB);
        const pp = a.add(b);
        if (pp.isInfinity()) return null;
        const compressed = assumeCompression(__compressed, pA);
        return getEncoded(pp, compressed);
      }
      function pointAddScalar(p, tweak, __compressed) {
        if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);
        if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);
        const compressed = assumeCompression(__compressed, p);
        const pp = decodeFrom(p);
        if (ZERO32.compare(tweak) === 0) return getEncoded(pp, compressed);
        const tt2 = fromBuffer(tweak);
        const qq = G3.mul(tt2);
        const uu = pp.add(qq);
        if (uu.isInfinity()) return null;
        return getEncoded(uu, compressed);
      }
      function pointCompress(p, __compressed) {
        if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);
        const pp = decodeFrom(p);
        if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT);
        const compressed = assumeCompression(__compressed, p);
        return getEncoded(pp, compressed);
      }
      function pointFromScalar(d, __compressed) {
        if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);
        const dd = fromBuffer(d);
        const pp = G3.mul(dd);
        if (pp.isInfinity()) return null;
        const compressed = assumeCompression(__compressed);
        return getEncoded(pp, compressed);
      }
      function pointMultiply(p, tweak, __compressed) {
        if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);
        if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);
        const compressed = assumeCompression(__compressed, p);
        const pp = decodeFrom(p);
        const tt2 = fromBuffer(tweak);
        const qq = pp.mul(tt2);
        if (qq.isInfinity()) return null;
        return getEncoded(qq, compressed);
      }
      function privateAdd(d, tweak) {
        if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);
        if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);
        const dd = fromBuffer(d);
        const tt2 = fromBuffer(tweak);
        const dt2 = toBuffer(dd.add(tt2).umod(n));
        if (!isPrivate(dt2)) return null;
        return dt2;
      }
      function privateSub(d, tweak) {
        if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);
        if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);
        const dd = fromBuffer(d);
        const tt2 = fromBuffer(tweak);
        const dt2 = toBuffer(dd.sub(tt2).umod(n));
        if (!isPrivate(dt2)) return null;
        return dt2;
      }
      function sign2(hash, x) {
        return __sign(hash, x);
      }
      function signWithEntropy(hash, x, addData) {
        return __sign(hash, x, addData);
      }
      function __sign(hash, x, addData) {
        if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH);
        if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE);
        if (addData !== void 0 && !isScalar(addData)) throw new TypeError(THROW_BAD_EXTRA_DATA);
        const d = fromBuffer(x);
        const e = fromBuffer(hash);
        let r, s;
        const checkSig = function(k4) {
          const kI = fromBuffer(k4);
          const Q2 = G3.mul(kI);
          if (Q2.isInfinity()) return false;
          r = Q2.x.umod(n);
          if (r.isZero() === 0) return false;
          s = kI.invm(n).mul(e.add(d.mul(r))).umod(n);
          if (s.isZero() === 0) return false;
          return true;
        };
        deterministicGenerateK(hash, x, checkSig, isPrivate, addData);
        if (s.cmp(nDiv2) > 0) {
          s = n.sub(s);
        }
        const buffer = Buffer2.allocUnsafe(64);
        toBuffer(r).copy(buffer, 0);
        toBuffer(s).copy(buffer, 32);
        return buffer;
      }
      function verify(hash, q, signature, strict) {
        if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH);
        if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT);
        if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE);
        const Q2 = decodeFrom(q);
        const r = fromBuffer(signature.subarray(0, 32));
        const s = fromBuffer(signature.subarray(32, 64));
        if (strict && s.cmp(nDiv2) > 0) {
          return false;
        }
        if (r.gtn(0) <= 0) return false;
        if (s.gtn(0) <= 0) return false;
        const e = fromBuffer(hash);
        const sInv = s.invm(n);
        const u12 = e.mul(sInv).umod(n);
        const u22 = r.mul(sInv).umod(n);
        const R4 = G3.mulAdd(u12, Q2, u22);
        if (R4.isInfinity()) return false;
        const xR = R4.x;
        const v4 = xR.umod(n);
        return v4.eq(r);
      }
      module2.exports = {
        isPoint,
        isPointCompressed,
        isPrivate,
        pointAdd,
        pointAddScalar,
        pointCompress,
        pointFromScalar,
        pointMultiply,
        privateAdd,
        privateSub,
        sign: sign2,
        signWithEntropy,
        verify
      };
    }
  });

  // node_modules/typeforce/native.js
  var require_native = __commonJS({
    "node_modules/typeforce/native.js"(exports2, module2) {
      init_polyfills();
      var types = {
        Array: function(value) {
          return value !== null && value !== void 0 && value.constructor === Array;
        },
        Boolean: function(value) {
          return typeof value === "boolean";
        },
        Function: function(value) {
          return typeof value === "function";
        },
        Nil: function(value) {
          return value === void 0 || value === null;
        },
        Number: function(value) {
          return typeof value === "number";
        },
        Object: function(value) {
          return typeof value === "object";
        },
        String: function(value) {
          return typeof value === "string";
        },
        "": function() {
          return true;
        }
      };
      types.Null = types.Nil;
      for (typeName in types) {
        types[typeName].toJSON = function(t) {
          return t;
        }.bind(null, typeName);
      }
      var typeName;
      module2.exports = types;
    }
  });

  // node_modules/typeforce/errors.js
  var require_errors = __commonJS({
    "node_modules/typeforce/errors.js"(exports2, module2) {
      init_polyfills();
      var native = require_native();
      function getTypeName(fn2) {
        return fn2.name || fn2.toString().match(/function (.*?)\s*\(/)[1];
      }
      function getValueTypeName(value) {
        return native.Nil(value) ? "" : getTypeName(value.constructor);
      }
      function getValue(value) {
        if (native.Function(value)) return "";
        if (native.String(value)) return JSON.stringify(value);
        if (value && native.Object(value)) return "";
        return value;
      }
      function captureStackTrace(e, t) {
        if (Error.captureStackTrace) {
          Error.captureStackTrace(e, t);
        }
      }
      function tfJSON(type) {
        if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type);
        if (native.Array(type)) return "Array";
        if (type && native.Object(type)) return "Object";
        return type !== void 0 ? type : "";
      }
      function tfErrorString(type, value, valueTypeName) {
        var valueJson = getValue(value);
        return "Expected " + tfJSON(type) + ", got" + (valueTypeName !== "" ? " " + valueTypeName : "") + (valueJson !== "" ? " " + valueJson : "");
      }
      function TfTypeError(type, value, valueTypeName) {
        valueTypeName = valueTypeName || getValueTypeName(value);
        this.message = tfErrorString(type, value, valueTypeName);
        captureStackTrace(this, TfTypeError);
        this.__type = type;
        this.__value = value;
        this.__valueTypeName = valueTypeName;
      }
      TfTypeError.prototype = Object.create(Error.prototype);
      TfTypeError.prototype.constructor = TfTypeError;
      function tfPropertyErrorString(type, label, name, value, valueTypeName) {
        var description = '" of type ';
        if (label === "key") description = '" with key type ';
        return tfErrorString('property "' + tfJSON(name) + description + tfJSON(type), value, valueTypeName);
      }
      function TfPropertyTypeError(type, property, label, value, valueTypeName) {
        if (type) {
          valueTypeName = valueTypeName || getValueTypeName(value);
          this.message = tfPropertyErrorString(type, label, property, value, valueTypeName);
        } else {
          this.message = 'Unexpected property "' + property + '"';
        }
        captureStackTrace(this, TfTypeError);
        this.__label = label;
        this.__property = property;
        this.__type = type;
        this.__value = value;
        this.__valueTypeName = valueTypeName;
      }
      TfPropertyTypeError.prototype = Object.create(Error.prototype);
      TfPropertyTypeError.prototype.constructor = TfTypeError;
      function tfCustomError(expected, actual) {
        return new TfTypeError(expected, {}, actual);
      }
      function tfSubError(e, property, label) {
        if (e instanceof TfPropertyTypeError) {
          property = property + "." + e.__property;
          e = new TfPropertyTypeError(
            e.__type,
            property,
            e.__label,
            e.__value,
            e.__valueTypeName
          );
        } else if (e instanceof TfTypeError) {
          e = new TfPropertyTypeError(
            e.__type,
            property,
            label,
            e.__value,
            e.__valueTypeName
          );
        }
        captureStackTrace(e);
        return e;
      }
      module2.exports = {
        TfTypeError,
        TfPropertyTypeError,
        tfCustomError,
        tfSubError,
        tfJSON,
        getValueTypeName
      };
    }
  });

  // node_modules/typeforce/extra.js
  var require_extra = __commonJS({
    "node_modules/typeforce/extra.js"(exports2, module2) {
      init_polyfills();
      var NATIVE = require_native();
      var ERRORS = require_errors();
      function _Buffer(value) {
        return Buffer2.isBuffer(value);
      }
      function Hex(value) {
        return typeof value === "string" && /^([0-9a-f]{2})+$/i.test(value);
      }
      function _LengthN(type, length) {
        var name = type.toJSON();
        function Length(value) {
          if (!type(value)) return false;
          if (value.length === length) return true;
          throw ERRORS.tfCustomError(name + "(Length: " + length + ")", name + "(Length: " + value.length + ")");
        }
        Length.toJSON = function() {
          return name;
        };
        return Length;
      }
      var _ArrayN = _LengthN.bind(null, NATIVE.Array);
      var _BufferN = _LengthN.bind(null, _Buffer);
      var _HexN = _LengthN.bind(null, Hex);
      var _StringN = _LengthN.bind(null, NATIVE.String);
      function Range(a, b, f) {
        f = f || NATIVE.Number;
        function _range(value, strict) {
          return f(value, strict) && value > a && value < b;
        }
        _range.toJSON = function() {
          return `${f.toJSON()} between [${a}, ${b}]`;
        };
        return _range;
      }
      var INT53_MAX = Math.pow(2, 53) - 1;
      function Finite(value) {
        return typeof value === "number" && isFinite(value);
      }
      function Int8(value) {
        return value << 24 >> 24 === value;
      }
      function Int16(value) {
        return value << 16 >> 16 === value;
      }
      function Int32(value) {
        return (value | 0) === value;
      }
      function Int53(value) {
        return typeof value === "number" && value >= -INT53_MAX && value <= INT53_MAX && Math.floor(value) === value;
      }
      function UInt8(value) {
        return (value & 255) === value;
      }
      function UInt16(value) {
        return (value & 65535) === value;
      }
      function UInt32(value) {
        return value >>> 0 === value;
      }
      function UInt53(value) {
        return typeof value === "number" && value >= 0 && value <= INT53_MAX && Math.floor(value) === value;
      }
      var types = {
        ArrayN: _ArrayN,
        Buffer: _Buffer,
        BufferN: _BufferN,
        Finite,
        Hex,
        HexN: _HexN,
        Int8,
        Int16,
        Int32,
        Int53,
        Range,
        StringN: _StringN,
        UInt8,
        UInt16,
        UInt32,
        UInt53
      };
      for (typeName in types) {
        types[typeName].toJSON = function(t) {
          return t;
        }.bind(null, typeName);
      }
      var typeName;
      module2.exports = types;
    }
  });

  // node_modules/typeforce/index.js
  var require_typeforce = __commonJS({
    "node_modules/typeforce/index.js"(exports2, module2) {
      init_polyfills();
      var ERRORS = require_errors();
      var NATIVE = require_native();
      var tfJSON = ERRORS.tfJSON;
      var TfTypeError = ERRORS.TfTypeError;
      var TfPropertyTypeError = ERRORS.TfPropertyTypeError;
      var tfSubError = ERRORS.tfSubError;
      var getValueTypeName = ERRORS.getValueTypeName;
      var TYPES = {
        arrayOf: function arrayOf(type, options) {
          type = compile(type);
          options = options || {};
          function _arrayOf(array, strict) {
            if (!NATIVE.Array(array)) return false;
            if (NATIVE.Nil(array)) return false;
            if (options.minLength !== void 0 && array.length < options.minLength) return false;
            if (options.maxLength !== void 0 && array.length > options.maxLength) return false;
            if (options.length !== void 0 && array.length !== options.length) return false;
            return array.every(function(value, i) {
              try {
                return typeforce(type, value, strict);
              } catch (e) {
                throw tfSubError(e, i);
              }
            });
          }
          _arrayOf.toJSON = function() {
            var str = "[" + tfJSON(type) + "]";
            if (options.length !== void 0) {
              str += "{" + options.length + "}";
            } else if (options.minLength !== void 0 || options.maxLength !== void 0) {
              str += "{" + (options.minLength === void 0 ? 0 : options.minLength) + "," + (options.maxLength === void 0 ? Infinity : options.maxLength) + "}";
            }
            return str;
          };
          return _arrayOf;
        },
        maybe: function maybe(type) {
          type = compile(type);
          function _maybe(value, strict) {
            return NATIVE.Nil(value) || type(value, strict, maybe);
          }
          _maybe.toJSON = function() {
            return "?" + tfJSON(type);
          };
          return _maybe;
        },
        map: function map(propertyType, propertyKeyType) {
          propertyType = compile(propertyType);
          if (propertyKeyType) propertyKeyType = compile(propertyKeyType);
          function _map(value, strict) {
            if (!NATIVE.Object(value)) return false;
            if (NATIVE.Nil(value)) return false;
            for (var propertyName in value) {
              try {
                if (propertyKeyType) {
                  typeforce(propertyKeyType, propertyName, strict);
                }
              } catch (e) {
                throw tfSubError(e, propertyName, "key");
              }
              try {
                var propertyValue = value[propertyName];
                typeforce(propertyType, propertyValue, strict);
              } catch (e) {
                throw tfSubError(e, propertyName);
              }
            }
            return true;
          }
          if (propertyKeyType) {
            _map.toJSON = function() {
              return "{" + tfJSON(propertyKeyType) + ": " + tfJSON(propertyType) + "}";
            };
          } else {
            _map.toJSON = function() {
              return "{" + tfJSON(propertyType) + "}";
            };
          }
          return _map;
        },
        object: function object(uncompiled) {
          var type = {};
          for (var typePropertyName in uncompiled) {
            type[typePropertyName] = compile(uncompiled[typePropertyName]);
          }
          function _object(value, strict) {
            if (!NATIVE.Object(value)) return false;
            if (NATIVE.Nil(value)) return false;
            var propertyName;
            try {
              for (propertyName in type) {
                var propertyType = type[propertyName];
                var propertyValue = value[propertyName];
                typeforce(propertyType, propertyValue, strict);
              }
            } catch (e) {
              throw tfSubError(e, propertyName);
            }
            if (strict) {
              for (propertyName in value) {
                if (type[propertyName]) continue;
                throw new TfPropertyTypeError(void 0, propertyName);
              }
            }
            return true;
          }
          _object.toJSON = function() {
            return tfJSON(type);
          };
          return _object;
        },
        anyOf: function anyOf() {
          var types = [].slice.call(arguments).map(compile);
          function _anyOf(value, strict) {
            return types.some(function(type) {
              try {
                return typeforce(type, value, strict);
              } catch (e) {
                return false;
              }
            });
          }
          _anyOf.toJSON = function() {
            return types.map(tfJSON).join("|");
          };
          return _anyOf;
        },
        allOf: function allOf() {
          var types = [].slice.call(arguments).map(compile);
          function _allOf(value, strict) {
            return types.every(function(type) {
              try {
                return typeforce(type, value, strict);
              } catch (e) {
                return false;
              }
            });
          }
          _allOf.toJSON = function() {
            return types.map(tfJSON).join(" & ");
          };
          return _allOf;
        },
        quacksLike: function quacksLike(type) {
          function _quacksLike(value) {
            return type === getValueTypeName(value);
          }
          _quacksLike.toJSON = function() {
            return type;
          };
          return _quacksLike;
        },
        tuple: function tuple() {
          var types = [].slice.call(arguments).map(compile);
          function _tuple(values, strict) {
            if (NATIVE.Nil(values)) return false;
            if (NATIVE.Nil(values.length)) return false;
            if (strict && values.length !== types.length) return false;
            return types.every(function(type, i) {
              try {
                return typeforce(type, values[i], strict);
              } catch (e) {
                throw tfSubError(e, i);
              }
            });
          }
          _tuple.toJSON = function() {
            return "(" + types.map(tfJSON).join(", ") + ")";
          };
          return _tuple;
        },
        value: function value(expected) {
          function _value(actual) {
            return actual === expected;
          }
          _value.toJSON = function() {
            return expected;
          };
          return _value;
        }
      };
      TYPES.oneOf = TYPES.anyOf;
      function compile(type) {
        if (NATIVE.String(type)) {
          if (type[0] === "?") return TYPES.maybe(type.slice(1));
          return NATIVE[type] || TYPES.quacksLike(type);
        } else if (type && NATIVE.Object(type)) {
          if (NATIVE.Array(type)) {
            if (type.length !== 1) throw new TypeError("Expected compile() parameter of type Array of length 1");
            return TYPES.arrayOf(type[0]);
          }
          return TYPES.object(type);
        } else if (NATIVE.Function(type)) {
          return type;
        }
        return TYPES.value(type);
      }
      function typeforce(type, value, strict, surrogate) {
        if (NATIVE.Function(type)) {
          if (type(value, strict)) return true;
          throw new TfTypeError(surrogate || type, value);
        }
        return typeforce(compile(type), value, strict);
      }
      for (typeName in NATIVE) {
        typeforce[typeName] = NATIVE[typeName];
      }
      var typeName;
      for (typeName in TYPES) {
        typeforce[typeName] = TYPES[typeName];
      }
      var EXTRA2 = require_extra();
      for (typeName in EXTRA2) {
        typeforce[typeName] = EXTRA2[typeName];
      }
      typeforce.compile = compile;
      typeforce.TfTypeError = TfTypeError;
      typeforce.TfPropertyTypeError = TfPropertyTypeError;
      module2.exports = typeforce;
    }
  });

  // node_modules/wif/index.js
  var require_wif = __commonJS({
    "node_modules/wif/index.js"(exports2, module2) {
      init_polyfills();
      var bs58check2 = require_bs58check();
      function decodeRaw(buffer, version2) {
        if (version2 !== void 0 && buffer[0] !== version2) throw new Error("Invalid network version");
        if (buffer.length === 33) {
          return {
            version: buffer[0],
            privateKey: buffer.slice(1, 33),
            compressed: false
          };
        }
        if (buffer.length !== 34) throw new Error("Invalid WIF length");
        if (buffer[33] !== 1) throw new Error("Invalid compression flag");
        return {
          version: buffer[0],
          privateKey: buffer.slice(1, 33),
          compressed: true
        };
      }
      function encodeRaw(version2, privateKey, compressed) {
        var result = new Buffer2(compressed ? 34 : 33);
        result.writeUInt8(version2, 0);
        privateKey.copy(result, 1);
        if (compressed) {
          result[33] = 1;
        }
        return result;
      }
      function decode(string, version2) {
        return decodeRaw(bs58check2.decode(string), version2);
      }
      function encode(version2, privateKey, compressed) {
        if (typeof version2 === "number") return bs58check2.encode(encodeRaw(version2, privateKey, compressed));
        return bs58check2.encode(
          encodeRaw(
            version2.version,
            version2.privateKey,
            version2.compressed
          )
        );
      }
      module2.exports = {
        decode,
        decodeRaw,
        encode,
        encodeRaw
      };
    }
  });

  // node_modules/bip32/src/bip32.js
  var require_bip32 = __commonJS({
    "node_modules/bip32/src/bip32.js"(exports2) {
      "use strict";
      init_polyfills();
      Object.defineProperty(exports2, "__esModule", { value: true });
      var crypto2 = require_crypto();
      var bs58check2 = require_bs58check();
      var ecc = require_js();
      var typeforce = require_typeforce();
      var wif = require_wif();
      var UINT256_TYPE = typeforce.BufferN(32);
      var NETWORK_TYPE = typeforce.compile({
        wif: typeforce.UInt8,
        bip32: {
          public: typeforce.UInt32,
          private: typeforce.UInt32
        }
      });
      var BITCOIN = {
        messagePrefix: "Bitcoin Signed Message:\n",
        bech32: "bc",
        bip32: {
          public: 76067358,
          private: 76066276
        },
        pubKeyHash: 0,
        scriptHash: 5,
        wif: 128
      };
      var HIGHEST_BIT = 2147483648;
      var UINT31_MAX = Math.pow(2, 31) - 1;
      function BIP32Path(value) {
        return typeforce.String(value) && value.match(/^(m\/)?(\d+'?\/)*\d+'?$/) !== null;
      }
      function UInt31(value) {
        return typeforce.UInt32(value) && value <= UINT31_MAX;
      }
      var BIP32 = class {
        constructor(__D, __Q, chainCode, network, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0) {
          this.__D = __D;
          this.__Q = __Q;
          this.chainCode = chainCode;
          this.network = network;
          this.__DEPTH = __DEPTH;
          this.__INDEX = __INDEX;
          this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;
          typeforce(NETWORK_TYPE, network);
          this.lowR = false;
        }
        get depth() {
          return this.__DEPTH;
        }
        get index() {
          return this.__INDEX;
        }
        get parentFingerprint() {
          return this.__PARENT_FINGERPRINT;
        }
        get publicKey() {
          if (this.__Q === void 0)
            this.__Q = ecc.pointFromScalar(this.__D, true);
          return this.__Q;
        }
        get privateKey() {
          return this.__D;
        }
        get identifier() {
          return crypto2.hash160(this.publicKey);
        }
        get fingerprint() {
          return this.identifier.slice(0, 4);
        }
        get compressed() {
          return true;
        }
        // Private === not neutered
        // Public === neutered
        isNeutered() {
          return this.__D === void 0;
        }
        neutered() {
          return fromPublicKeyLocal(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);
        }
        toBase58() {
          const network = this.network;
          const version2 = !this.isNeutered() ? network.bip32.private : network.bip32.public;
          const buffer = Buffer2.allocUnsafe(78);
          buffer.writeUInt32BE(version2, 0);
          buffer.writeUInt8(this.depth, 4);
          buffer.writeUInt32BE(this.parentFingerprint, 5);
          buffer.writeUInt32BE(this.index, 9);
          this.chainCode.copy(buffer, 13);
          if (!this.isNeutered()) {
            buffer.writeUInt8(0, 45);
            this.privateKey.copy(buffer, 46);
          } else {
            this.publicKey.copy(buffer, 45);
          }
          return bs58check2.encode(buffer);
        }
        toWIF() {
          if (!this.privateKey)
            throw new TypeError("Missing private key");
          return wif.encode(this.network.wif, this.privateKey, true);
        }
        // https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions
        derive(index) {
          typeforce(typeforce.UInt32, index);
          const isHardened = index >= HIGHEST_BIT;
          const data = Buffer2.allocUnsafe(37);
          if (isHardened) {
            if (this.isNeutered())
              throw new TypeError("Missing private key for hardened child key");
            data[0] = 0;
            this.privateKey.copy(data, 1);
            data.writeUInt32BE(index, 33);
          } else {
            this.publicKey.copy(data, 0);
            data.writeUInt32BE(index, 33);
          }
          const I4 = crypto2.hmacSHA512(this.chainCode, data);
          const IL = I4.slice(0, 32);
          const IR = I4.slice(32);
          if (!ecc.isPrivate(IL))
            return this.derive(index + 1);
          let hd;
          if (!this.isNeutered()) {
            const ki = ecc.privateAdd(this.privateKey, IL);
            if (ki == null)
              return this.derive(index + 1);
            hd = fromPrivateKeyLocal(ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));
          } else {
            const Ki = ecc.pointAddScalar(this.publicKey, IL, true);
            if (Ki === null)
              return this.derive(index + 1);
            hd = fromPublicKeyLocal(Ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));
          }
          return hd;
        }
        deriveHardened(index) {
          typeforce(UInt31, index);
          return this.derive(index + HIGHEST_BIT);
        }
        derivePath(path) {
          typeforce(BIP32Path, path);
          let splitPath = path.split("/");
          if (splitPath[0] === "m") {
            if (this.parentFingerprint)
              throw new TypeError("Expected master, got child");
            splitPath = splitPath.slice(1);
          }
          return splitPath.reduce((prevHd, indexStr) => {
            let index;
            if (indexStr.slice(-1) === `'`) {
              index = parseInt(indexStr.slice(0, -1), 10);
              return prevHd.deriveHardened(index);
            } else {
              index = parseInt(indexStr, 10);
              return prevHd.derive(index);
            }
          }, this);
        }
        sign(hash, lowR) {
          if (!this.privateKey)
            throw new Error("Missing private key");
          if (lowR === void 0)
            lowR = this.lowR;
          if (lowR === false) {
            return ecc.sign(hash, this.privateKey);
          } else {
            let sig = ecc.sign(hash, this.privateKey);
            const extraData = Buffer2.alloc(32, 0);
            let counter = 0;
            while (sig[0] > 127) {
              counter++;
              extraData.writeUIntLE(counter, 0, 6);
              sig = ecc.signWithEntropy(hash, this.privateKey, extraData);
            }
            return sig;
          }
        }
        verify(hash, signature) {
          return ecc.verify(hash, this.publicKey, signature);
        }
      };
      function fromBase58(inString, network) {
        const buffer = bs58check2.decode(inString);
        if (buffer.length !== 78)
          throw new TypeError("Invalid buffer length");
        network = network || BITCOIN;
        const version2 = buffer.readUInt32BE(0);
        if (version2 !== network.bip32.private && version2 !== network.bip32.public)
          throw new TypeError("Invalid network version");
        const depth = buffer[4];
        const parentFingerprint = buffer.readUInt32BE(5);
        if (depth === 0) {
          if (parentFingerprint !== 0)
            throw new TypeError("Invalid parent fingerprint");
        }
        const index = buffer.readUInt32BE(9);
        if (depth === 0 && index !== 0)
          throw new TypeError("Invalid index");
        const chainCode = buffer.slice(13, 45);
        let hd;
        if (version2 === network.bip32.private) {
          if (buffer.readUInt8(45) !== 0)
            throw new TypeError("Invalid private key");
          const k4 = buffer.slice(46, 78);
          hd = fromPrivateKeyLocal(k4, chainCode, network, depth, index, parentFingerprint);
        } else {
          const X4 = buffer.slice(45, 78);
          hd = fromPublicKeyLocal(X4, chainCode, network, depth, index, parentFingerprint);
        }
        return hd;
      }
      exports2.fromBase58 = fromBase58;
      function fromPrivateKey(privateKey, chainCode, network) {
        return fromPrivateKeyLocal(privateKey, chainCode, network);
      }
      exports2.fromPrivateKey = fromPrivateKey;
      function fromPrivateKeyLocal(privateKey, chainCode, network, depth, index, parentFingerprint) {
        typeforce({
          privateKey: UINT256_TYPE,
          chainCode: UINT256_TYPE
        }, { privateKey, chainCode });
        network = network || BITCOIN;
        if (!ecc.isPrivate(privateKey))
          throw new TypeError("Private key not in range [1, n)");
        return new BIP32(privateKey, void 0, chainCode, network, depth, index, parentFingerprint);
      }
      function fromPublicKey(publicKey, chainCode, network) {
        return fromPublicKeyLocal(publicKey, chainCode, network);
      }
      exports2.fromPublicKey = fromPublicKey;
      function fromPublicKeyLocal(publicKey, chainCode, network, depth, index, parentFingerprint) {
        typeforce({
          publicKey: typeforce.BufferN(33),
          chainCode: UINT256_TYPE
        }, { publicKey, chainCode });
        network = network || BITCOIN;
        if (!ecc.isPoint(publicKey))
          throw new TypeError("Point is not on the curve");
        return new BIP32(void 0, publicKey, chainCode, network, depth, index, parentFingerprint);
      }
      function fromSeed2(seed, network) {
        typeforce(typeforce.Buffer, seed);
        if (seed.length < 16)
          throw new TypeError("Seed should be at least 128 bits");
        if (seed.length > 64)
          throw new TypeError("Seed should be at most 512 bits");
        network = network || BITCOIN;
        const I4 = crypto2.hmacSHA512(Buffer2.from("Bitcoin seed", "utf8"), seed);
        const IL = I4.slice(0, 32);
        const IR = I4.slice(32);
        return fromPrivateKey(IL, IR, network);
      }
      exports2.fromSeed = fromSeed2;
    }
  });

  // node_modules/bip32/src/index.js
  var require_src2 = __commonJS({
    "node_modules/bip32/src/index.js"(exports2) {
      "use strict";
      init_polyfills();
      Object.defineProperty(exports2, "__esModule", { value: true });
      var bip32_1 = require_bip32();
      exports2.fromSeed = bip32_1.fromSeed;
      exports2.fromBase58 = bip32_1.fromBase58;
      exports2.fromPublicKey = bip32_1.fromPublicKey;
      exports2.fromPrivateKey = bip32_1.fromPrivateKey;
    }
  });

  // node_modules/pbkdf2/lib/precondition.js
  var require_precondition = __commonJS({
    "node_modules/pbkdf2/lib/precondition.js"(exports2, module2) {
      init_polyfills();
      var MAX_ALLOC = Math.pow(2, 30) - 1;
      module2.exports = function(iterations, keylen) {
        if (typeof iterations !== "number") {
          throw new TypeError("Iterations not a number");
        }
        if (iterations < 0) {
          throw new TypeError("Bad iterations");
        }
        if (typeof keylen !== "number") {
          throw new TypeError("Key length not a number");
        }
        if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
          throw new TypeError("Bad key length");
        }
      };
    }
  });

  // node_modules/pbkdf2/lib/default-encoding.js
  var require_default_encoding = __commonJS({
    "node_modules/pbkdf2/lib/default-encoding.js"(exports2, module2) {
      init_polyfills();
      var defaultEncoding;
      if (globalThis.process && globalThis.process.browser) {
        defaultEncoding = "utf-8";
      } else if (globalThis.process && globalThis.process.version) {
        pVersionMajor = parseInt(process.version.split(".")[0].slice(1), 10);
        defaultEncoding = pVersionMajor >= 6 ? "utf-8" : "binary";
      } else {
        defaultEncoding = "utf-8";
      }
      var pVersionMajor;
      module2.exports = defaultEncoding;
    }
  });

  // node_modules/pbkdf2/lib/to-buffer.js
  var require_to_buffer = __commonJS({
    "node_modules/pbkdf2/lib/to-buffer.js"(exports2, module2) {
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      module2.exports = function(thing, encoding, name) {
        if (Buffer4.isBuffer(thing)) {
          return thing;
        } else if (typeof thing === "string") {
          return Buffer4.from(thing, encoding);
        } else if (ArrayBuffer.isView(thing)) {
          return Buffer4.from(thing.buffer);
        } else {
          throw new TypeError(name + " must be a string, a Buffer, a typed array or a DataView");
        }
      };
    }
  });

  // node_modules/pbkdf2/lib/sync-browser.js
  var require_sync_browser = __commonJS({
    "node_modules/pbkdf2/lib/sync-browser.js"(exports2, module2) {
      init_polyfills();
      var md5 = require_md52();
      var RIPEMD160 = require_ripemd160();
      var sha = require_sha2();
      var Buffer4 = require_safe_buffer().Buffer;
      var checkParameters = require_precondition();
      var defaultEncoding = require_default_encoding();
      var toBuffer = require_to_buffer();
      var ZEROS = Buffer4.alloc(128);
      var sizes = {
        md5: 16,
        sha1: 20,
        sha224: 28,
        sha256: 32,
        sha384: 48,
        sha512: 64,
        rmd160: 20,
        ripemd160: 20
      };
      function Hmac(alg, key, saltLen) {
        var hash = getDigest(alg);
        var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
        if (key.length > blocksize) {
          key = hash(key);
        } else if (key.length < blocksize) {
          key = Buffer4.concat([key, ZEROS], blocksize);
        }
        var ipad = Buffer4.allocUnsafe(blocksize + sizes[alg]);
        var opad = Buffer4.allocUnsafe(blocksize + sizes[alg]);
        for (var i = 0; i < blocksize; i++) {
          ipad[i] = key[i] ^ 54;
          opad[i] = key[i] ^ 92;
        }
        var ipad1 = Buffer4.allocUnsafe(blocksize + saltLen + 4);
        ipad.copy(ipad1, 0, 0, blocksize);
        this.ipad1 = ipad1;
        this.ipad2 = ipad;
        this.opad = opad;
        this.alg = alg;
        this.blocksize = blocksize;
        this.hash = hash;
        this.size = sizes[alg];
      }
      Hmac.prototype.run = function(data, ipad) {
        data.copy(ipad, this.blocksize);
        var h = this.hash(ipad);
        h.copy(this.opad, this.blocksize);
        return this.hash(this.opad);
      };
      function getDigest(alg) {
        function shaFunc(data) {
          return sha(alg).update(data).digest();
        }
        function rmd160Func(data) {
          return new RIPEMD160().update(data).digest();
        }
        if (alg === "rmd160" || alg === "ripemd160") return rmd160Func;
        if (alg === "md5") return md5;
        return shaFunc;
      }
      function pbkdf2(password, salt, iterations, keylen, digest) {
        checkParameters(iterations, keylen);
        password = toBuffer(password, defaultEncoding, "Password");
        salt = toBuffer(salt, defaultEncoding, "Salt");
        digest = digest || "sha1";
        var hmac = new Hmac(digest, password, salt.length);
        var DK = Buffer4.allocUnsafe(keylen);
        var block1 = Buffer4.allocUnsafe(salt.length + 4);
        salt.copy(block1, 0, 0, salt.length);
        var destPos = 0;
        var hLen = sizes[digest];
        var l = Math.ceil(keylen / hLen);
        for (var i = 1; i <= l; i++) {
          block1.writeUInt32BE(i, salt.length);
          var T4 = hmac.run(block1, hmac.ipad1);
          var U4 = T4;
          for (var j2 = 1; j2 < iterations; j2++) {
            U4 = hmac.run(U4, hmac.ipad2);
            for (var k4 = 0; k4 < hLen; k4++) T4[k4] ^= U4[k4];
          }
          T4.copy(DK, destPos);
          destPos += hLen;
        }
        return DK;
      }
      module2.exports = pbkdf2;
    }
  });

  // node_modules/pbkdf2/lib/async.js
  var require_async = __commonJS({
    "node_modules/pbkdf2/lib/async.js"(exports2, module2) {
      init_polyfills();
      var Buffer4 = require_safe_buffer().Buffer;
      var checkParameters = require_precondition();
      var defaultEncoding = require_default_encoding();
      var sync = require_sync_browser();
      var toBuffer = require_to_buffer();
      var ZERO_BUF;
      var subtle2 = globalThis.crypto && globalThis.crypto.subtle;
      var toBrowser = {
        sha: "SHA-1",
        "sha-1": "SHA-1",
        sha1: "SHA-1",
        sha256: "SHA-256",
        "sha-256": "SHA-256",
        sha384: "SHA-384",
        "sha-384": "SHA-384",
        "sha-512": "SHA-512",
        sha512: "SHA-512"
      };
      var checks = [];
      function checkNative(algo) {
        if (globalThis.process && !globalThis.process.browser) {
          return Promise.resolve(false);
        }
        if (!subtle2 || !subtle2.importKey || !subtle2.deriveBits) {
          return Promise.resolve(false);
        }
        if (checks[algo] !== void 0) {
          return checks[algo];
        }
        ZERO_BUF = ZERO_BUF || Buffer4.alloc(8);
        var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
          return true;
        }).catch(function() {
          return false;
        });
        checks[algo] = prom;
        return prom;
      }
      var nextTick2;
      function getNextTick() {
        if (nextTick2) {
          return nextTick2;
        }
        if (globalThis.process && globalThis.process.nextTick) {
          nextTick2 = globalThis.process.nextTick;
        } else if (globalThis.queueMicrotask) {
          nextTick2 = globalThis.queueMicrotask;
        } else if (globalThis.setImmediate) {
          nextTick2 = globalThis.setImmediate;
        } else {
          nextTick2 = globalThis.setTimeout;
        }
        return nextTick2;
      }
      function browserPbkdf2(password, salt, iterations, length, algo) {
        return subtle2.importKey(
          "raw",
          password,
          { name: "PBKDF2" },
          false,
          ["deriveBits"]
        ).then(function(key) {
          return subtle2.deriveBits({
            name: "PBKDF2",
            salt,
            iterations,
            hash: {
              name: algo
            }
          }, key, length << 3);
        }).then(function(res) {
          return Buffer4.from(res);
        });
      }
      function resolvePromise(promise, callback) {
        promise.then(function(out) {
          getNextTick()(function() {
            callback(null, out);
          });
        }, function(e) {
          getNextTick()(function() {
            callback(e);
          });
        });
      }
      module2.exports = function(password, salt, iterations, keylen, digest, callback) {
        if (typeof digest === "function") {
          callback = digest;
          digest = void 0;
        }
        digest = digest || "sha1";
        var algo = toBrowser[digest.toLowerCase()];
        if (!algo || typeof globalThis.Promise !== "function") {
          getNextTick()(function() {
            var out;
            try {
              out = sync(password, salt, iterations, keylen, digest);
            } catch (e) {
              return callback(e);
            }
            callback(null, out);
          });
          return;
        }
        checkParameters(iterations, keylen);
        password = toBuffer(password, defaultEncoding, "Password");
        salt = toBuffer(salt, defaultEncoding, "Salt");
        if (typeof callback !== "function") throw new Error("No callback provided to pbkdf2");
        resolvePromise(checkNative(algo).then(function(resp) {
          if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);
          return sync(password, salt, iterations, keylen, digest);
        }), callback);
      };
    }
  });

  // node_modules/pbkdf2/browser.js
  var require_browser4 = __commonJS({
    "node_modules/pbkdf2/browser.js"(exports2) {
      init_polyfills();
      exports2.pbkdf2 = require_async();
      exports2.pbkdf2Sync = require_sync_browser();
    }
  });

  // node_modules/randombytes/browser.js
  var require_browser5 = __commonJS({
    "node_modules/randombytes/browser.js"(exports2, module2) {
      "use strict";
      init_polyfills();
      var MAX_BYTES = 65536;
      var MAX_UINT32 = 4294967295;
      function oldBrowser() {
        throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
      }
      var Buffer4 = require_safe_buffer().Buffer;
      var crypto2 = globalThis.crypto || globalThis.msCrypto;
      if (crypto2 && crypto2.getRandomValues) {
        module2.exports = randomBytes;
      } else {
        module2.exports = oldBrowser;
      }
      function randomBytes(size, cb) {
        if (size > MAX_UINT32) throw new RangeError("requested too many random bytes");
        var bytes = Buffer4.allocUnsafe(size);
        if (size > 0) {
          if (size > MAX_BYTES) {
            for (var generated = 0; generated < size; generated += MAX_BYTES) {
              crypto2.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));
            }
          } else {
            crypto2.getRandomValues(bytes);
          }
        }
        if (typeof cb === "function") {
          return process.nextTick(function() {
            cb(null, bytes);
          });
        }
        return bytes;
      }
    }
  });

  // node_modules/bip39/src/wordlists/chinese_simplified.json
  var require_chinese_simplified = __commonJS({
    "node_modules/bip39/src/wordlists/chinese_simplified.json"(exports2, module2) {
      module2.exports = [
        "\u7684",
        "\u4E00",
        "\u662F",
        "\u5728",
        "\u4E0D",
        "\u4E86",
        "\u6709",
        "\u548C",
        "\u4EBA",
        "\u8FD9",
        "\u4E2D",
        "\u5927",
        "\u4E3A",
        "\u4E0A",
        "\u4E2A",
        "\u56FD",
        "\u6211",
        "\u4EE5",
        "\u8981",
        "\u4ED6",
        "\u65F6",
        "\u6765",
        "\u7528",
        "\u4EEC",
        "\u751F",
        "\u5230",
        "\u4F5C",
        "\u5730",
        "\u4E8E",
        "\u51FA",
        "\u5C31",
        "\u5206",
        "\u5BF9",
        "\u6210",
        "\u4F1A",
        "\u53EF",
        "\u4E3B",
        "\u53D1",
        "\u5E74",
        "\u52A8",
        "\u540C",
        "\u5DE5",
        "\u4E5F",
        "\u80FD",
        "\u4E0B",
        "\u8FC7",
        "\u5B50",
        "\u8BF4",
        "\u4EA7",
        "\u79CD",
        "\u9762",
        "\u800C",
        "\u65B9",
        "\u540E",
        "\u591A",
        "\u5B9A",
        "\u884C",
        "\u5B66",
        "\u6CD5",
        "\u6240",
        "\u6C11",
        "\u5F97",
        "\u7ECF",
        "\u5341",
        "\u4E09",
        "\u4E4B",
        "\u8FDB",
        "\u7740",
        "\u7B49",
        "\u90E8",
        "\u5EA6",
        "\u5BB6",
        "\u7535",
        "\u529B",
        "\u91CC",
        "\u5982",
        "\u6C34",
        "\u5316",
        "\u9AD8",
        "\u81EA",
        "\u4E8C",
        "\u7406",
        "\u8D77",
        "\u5C0F",
        "\u7269",
        "\u73B0",
        "\u5B9E",
        "\u52A0",
        "\u91CF",
        "\u90FD",
        "\u4E24",
        "\u4F53",
        "\u5236",
        "\u673A",
        "\u5F53",
        "\u4F7F",
        "\u70B9",
        "\u4ECE",
        "\u4E1A",
        "\u672C",
        "\u53BB",
        "\u628A",
        "\u6027",
        "\u597D",
        "\u5E94",
        "\u5F00",
        "\u5B83",
        "\u5408",
        "\u8FD8",
        "\u56E0",
        "\u7531",
        "\u5176",
        "\u4E9B",
        "\u7136",
        "\u524D",
        "\u5916",
        "\u5929",
        "\u653F",
        "\u56DB",
        "\u65E5",
        "\u90A3",
        "\u793E",
        "\u4E49",
        "\u4E8B",
        "\u5E73",
        "\u5F62",
        "\u76F8",
        "\u5168",
        "\u8868",
        "\u95F4",
        "\u6837",
        "\u4E0E",
        "\u5173",
        "\u5404",
        "\u91CD",
        "\u65B0",
        "\u7EBF",
        "\u5185",
        "\u6570",
        "\u6B63",
        "\u5FC3",
        "\u53CD",
        "\u4F60",
        "\u660E",
        "\u770B",
        "\u539F",
        "\u53C8",
        "\u4E48",
        "\u5229",
        "\u6BD4",
        "\u6216",
        "\u4F46",
        "\u8D28",
        "\u6C14",
        "\u7B2C",
        "\u5411",
        "\u9053",
        "\u547D",
        "\u6B64",
        "\u53D8",
        "\u6761",
        "\u53EA",
        "\u6CA1",
        "\u7ED3",
        "\u89E3",
        "\u95EE",
        "\u610F",
        "\u5EFA",
        "\u6708",
        "\u516C",
        "\u65E0",
        "\u7CFB",
        "\u519B",
        "\u5F88",
        "\u60C5",
        "\u8005",
        "\u6700",
        "\u7ACB",
        "\u4EE3",
        "\u60F3",
        "\u5DF2",
        "\u901A",
        "\u5E76",
        "\u63D0",
        "\u76F4",
        "\u9898",
        "\u515A",
        "\u7A0B",
        "\u5C55",
        "\u4E94",
        "\u679C",
        "\u6599",
        "\u8C61",
        "\u5458",
        "\u9769",
        "\u4F4D",
        "\u5165",
        "\u5E38",
        "\u6587",
        "\u603B",
        "\u6B21",
        "\u54C1",
        "\u5F0F",
        "\u6D3B",
        "\u8BBE",
        "\u53CA",
        "\u7BA1",
        "\u7279",
        "\u4EF6",
        "\u957F",
        "\u6C42",
        "\u8001",
        "\u5934",
        "\u57FA",
        "\u8D44",
        "\u8FB9",
        "\u6D41",
        "\u8DEF",
        "\u7EA7",
        "\u5C11",
        "\u56FE",
        "\u5C71",
        "\u7EDF",
        "\u63A5",
        "\u77E5",
        "\u8F83",
        "\u5C06",
        "\u7EC4",
        "\u89C1",
        "\u8BA1",
        "\u522B",
        "\u5979",
        "\u624B",
        "\u89D2",
        "\u671F",
        "\u6839",
        "\u8BBA",
        "\u8FD0",
        "\u519C",
        "\u6307",
        "\u51E0",
        "\u4E5D",
        "\u533A",
        "\u5F3A",
        "\u653E",
        "\u51B3",
        "\u897F",
        "\u88AB",
        "\u5E72",
        "\u505A",
        "\u5FC5",
        "\u6218",
        "\u5148",
        "\u56DE",
        "\u5219",
        "\u4EFB",
        "\u53D6",
        "\u636E",
        "\u5904",
        "\u961F",
        "\u5357",
        "\u7ED9",
        "\u8272",
        "\u5149",
        "\u95E8",
        "\u5373",
        "\u4FDD",
        "\u6CBB",
        "\u5317",
        "\u9020",
        "\u767E",
        "\u89C4",
        "\u70ED",
        "\u9886",
        "\u4E03",
        "\u6D77",
        "\u53E3",
        "\u4E1C",
        "\u5BFC",
        "\u5668",
        "\u538B",
        "\u5FD7",
        "\u4E16",
        "\u91D1",
        "\u589E",
        "\u4E89",
        "\u6D4E",
        "\u9636",
        "\u6CB9",
        "\u601D",
        "\u672F",
        "\u6781",
        "\u4EA4",
        "\u53D7",
        "\u8054",
        "\u4EC0",
        "\u8BA4",
        "\u516D",
        "\u5171",
        "\u6743",
        "\u6536",
        "\u8BC1",
        "\u6539",
        "\u6E05",
        "\u7F8E",
        "\u518D",
        "\u91C7",
        "\u8F6C",
        "\u66F4",
        "\u5355",
        "\u98CE",
        "\u5207",
        "\u6253",
        "\u767D",
        "\u6559",
        "\u901F",
        "\u82B1",
        "\u5E26",
        "\u5B89",
        "\u573A",
        "\u8EAB",
        "\u8F66",
        "\u4F8B",
        "\u771F",
        "\u52A1",
        "\u5177",
        "\u4E07",
        "\u6BCF",
        "\u76EE",
        "\u81F3",
        "\u8FBE",
        "\u8D70",
        "\u79EF",
        "\u793A",
        "\u8BAE",
        "\u58F0",
        "\u62A5",
        "\u6597",
        "\u5B8C",
        "\u7C7B",
        "\u516B",
        "\u79BB",
        "\u534E",
        "\u540D",
        "\u786E",
        "\u624D",
        "\u79D1",
        "\u5F20",
        "\u4FE1",
        "\u9A6C",
        "\u8282",
        "\u8BDD",
        "\u7C73",
        "\u6574",
        "\u7A7A",
        "\u5143",
        "\u51B5",
        "\u4ECA",
        "\u96C6",
        "\u6E29",
        "\u4F20",
        "\u571F",
        "\u8BB8",
        "\u6B65",
        "\u7FA4",
        "\u5E7F",
        "\u77F3",
        "\u8BB0",
        "\u9700",
        "\u6BB5",
        "\u7814",
        "\u754C",
        "\u62C9",
        "\u6797",
        "\u5F8B",
        "\u53EB",
        "\u4E14",
        "\u7A76",
        "\u89C2",
        "\u8D8A",
        "\u7EC7",
        "\u88C5",
        "\u5F71",
        "\u7B97",
        "\u4F4E",
        "\u6301",
        "\u97F3",
        "\u4F17",
        "\u4E66",
        "\u5E03",
        "\u590D",
        "\u5BB9",
        "\u513F",
        "\u987B",
        "\u9645",
        "\u5546",
        "\u975E",
        "\u9A8C",
        "\u8FDE",
        "\u65AD",
        "\u6DF1",
        "\u96BE",
        "\u8FD1",
        "\u77FF",
        "\u5343",
        "\u5468",
        "\u59D4",
        "\u7D20",
        "\u6280",
        "\u5907",
        "\u534A",
        "\u529E",
        "\u9752",
        "\u7701",
        "\u5217",
        "\u4E60",
        "\u54CD",
        "\u7EA6",
        "\u652F",
        "\u822C",
        "\u53F2",
        "\u611F",
        "\u52B3",
        "\u4FBF",
        "\u56E2",
        "\u5F80",
        "\u9178",
        "\u5386",
        "\u5E02",
        "\u514B",
        "\u4F55",
        "\u9664",
        "\u6D88",
        "\u6784",
        "\u5E9C",
        "\u79F0",
        "\u592A",
        "\u51C6",
        "\u7CBE",
        "\u503C",
        "\u53F7",
        "\u7387",
        "\u65CF",
        "\u7EF4",
        "\u5212",
        "\u9009",
        "\u6807",
        "\u5199",
        "\u5B58",
        "\u5019",
        "\u6BDB",
        "\u4EB2",
        "\u5FEB",
        "\u6548",
        "\u65AF",
        "\u9662",
        "\u67E5",
        "\u6C5F",
        "\u578B",
        "\u773C",
        "\u738B",
        "\u6309",
        "\u683C",
        "\u517B",
        "\u6613",
        "\u7F6E",
        "\u6D3E",
        "\u5C42",
        "\u7247",
        "\u59CB",
        "\u5374",
        "\u4E13",
        "\u72B6",
        "\u80B2",
        "\u5382",
        "\u4EAC",
        "\u8BC6",
        "\u9002",
        "\u5C5E",
        "\u5706",
        "\u5305",
        "\u706B",
        "\u4F4F",
        "\u8C03",
        "\u6EE1",
        "\u53BF",
        "\u5C40",
        "\u7167",
        "\u53C2",
        "\u7EA2",
        "\u7EC6",
        "\u5F15",
        "\u542C",
        "\u8BE5",
        "\u94C1",
        "\u4EF7",
        "\u4E25",
        "\u9996",
        "\u5E95",
        "\u6DB2",
        "\u5B98",
        "\u5FB7",
        "\u968F",
        "\u75C5",
        "\u82CF",
        "\u5931",
        "\u5C14",
        "\u6B7B",
        "\u8BB2",
        "\u914D",
        "\u5973",
        "\u9EC4",
        "\u63A8",
        "\u663E",
        "\u8C08",
        "\u7F6A",
        "\u795E",
        "\u827A",
        "\u5462",
        "\u5E2D",
        "\u542B",
        "\u4F01",
        "\u671B",
        "\u5BC6",
        "\u6279",
        "\u8425",
        "\u9879",
        "\u9632",
        "\u4E3E",
        "\u7403",
        "\u82F1",
        "\u6C27",
        "\u52BF",
        "\u544A",
        "\u674E",
        "\u53F0",
        "\u843D",
        "\u6728",
        "\u5E2E",
        "\u8F6E",
        "\u7834",
        "\u4E9A",
        "\u5E08",
        "\u56F4",
        "\u6CE8",
        "\u8FDC",
        "\u5B57",
        "\u6750",
        "\u6392",
        "\u4F9B",
        "\u6CB3",
        "\u6001",
        "\u5C01",
        "\u53E6",
        "\u65BD",
        "\u51CF",
        "\u6811",
        "\u6EB6",
        "\u600E",
        "\u6B62",
        "\u6848",
        "\u8A00",
        "\u58EB",
        "\u5747",
        "\u6B66",
        "\u56FA",
        "\u53F6",
        "\u9C7C",
        "\u6CE2",
        "\u89C6",
        "\u4EC5",
        "\u8D39",
        "\u7D27",
        "\u7231",
        "\u5DE6",
        "\u7AE0",
        "\u65E9",
        "\u671D",
        "\u5BB3",
        "\u7EED",
        "\u8F7B",
        "\u670D",
        "\u8BD5",
        "\u98DF",
        "\u5145",
        "\u5175",
        "\u6E90",
        "\u5224",
        "\u62A4",
        "\u53F8",
        "\u8DB3",
        "\u67D0",
        "\u7EC3",
        "\u5DEE",
        "\u81F4",
        "\u677F",
        "\u7530",
        "\u964D",
        "\u9ED1",
        "\u72AF",
        "\u8D1F",
        "\u51FB",
        "\u8303",
        "\u7EE7",
        "\u5174",
        "\u4F3C",
        "\u4F59",
        "\u575A",
        "\u66F2",
        "\u8F93",
        "\u4FEE",
        "\u6545",
        "\u57CE",
        "\u592B",
        "\u591F",
        "\u9001",
        "\u7B14",
        "\u8239",
        "\u5360",
        "\u53F3",
        "\u8D22",
        "\u5403",
        "\u5BCC",
        "\u6625",
        "\u804C",
        "\u89C9",
        "\u6C49",
        "\u753B",
        "\u529F",
        "\u5DF4",
        "\u8DDF",
        "\u867D",
        "\u6742",
        "\u98DE",
        "\u68C0",
        "\u5438",
        "\u52A9",
        "\u5347",
        "\u9633",
        "\u4E92",
        "\u521D",
        "\u521B",
        "\u6297",
        "\u8003",
        "\u6295",
        "\u574F",
        "\u7B56",
        "\u53E4",
        "\u5F84",
        "\u6362",
        "\u672A",
        "\u8DD1",
        "\u7559",
        "\u94A2",
        "\u66FE",
        "\u7AEF",
        "\u8D23",
        "\u7AD9",
        "\u7B80",
        "\u8FF0",
        "\u94B1",
        "\u526F",
        "\u5C3D",
        "\u5E1D",
        "\u5C04",
        "\u8349",
        "\u51B2",
        "\u627F",
        "\u72EC",
        "\u4EE4",
        "\u9650",
        "\u963F",
        "\u5BA3",
        "\u73AF",
        "\u53CC",
        "\u8BF7",
        "\u8D85",
        "\u5FAE",
        "\u8BA9",
        "\u63A7",
        "\u5DDE",
        "\u826F",
        "\u8F74",
        "\u627E",
        "\u5426",
        "\u7EAA",
        "\u76CA",
        "\u4F9D",
        "\u4F18",
        "\u9876",
        "\u7840",
        "\u8F7D",
        "\u5012",
        "\u623F",
        "\u7A81",
        "\u5750",
        "\u7C89",
        "\u654C",
        "\u7565",
        "\u5BA2",
        "\u8881",
        "\u51B7",
        "\u80DC",
        "\u7EDD",
        "\u6790",
        "\u5757",
        "\u5242",
        "\u6D4B",
        "\u4E1D",
        "\u534F",
        "\u8BC9",
        "\u5FF5",
        "\u9648",
        "\u4ECD",
        "\u7F57",
        "\u76D0",
        "\u53CB",
        "\u6D0B",
        "\u9519",
        "\u82E6",
        "\u591C",
        "\u5211",
        "\u79FB",
        "\u9891",
        "\u9010",
        "\u9760",
        "\u6DF7",
        "\u6BCD",
        "\u77ED",
        "\u76AE",
        "\u7EC8",
        "\u805A",
        "\u6C7D",
        "\u6751",
        "\u4E91",
        "\u54EA",
        "\u65E2",
        "\u8DDD",
        "\u536B",
        "\u505C",
        "\u70C8",
        "\u592E",
        "\u5BDF",
        "\u70E7",
        "\u8FC5",
        "\u5883",
        "\u82E5",
        "\u5370",
        "\u6D32",
        "\u523B",
        "\u62EC",
        "\u6FC0",
        "\u5B54",
        "\u641E",
        "\u751A",
        "\u5BA4",
        "\u5F85",
        "\u6838",
        "\u6821",
        "\u6563",
        "\u4FB5",
        "\u5427",
        "\u7532",
        "\u6E38",
        "\u4E45",
        "\u83DC",
        "\u5473",
        "\u65E7",
        "\u6A21",
        "\u6E56",
        "\u8D27",
        "\u635F",
        "\u9884",
        "\u963B",
        "\u6BEB",
        "\u666E",
        "\u7A33",
        "\u4E59",
        "\u5988",
        "\u690D",
        "\u606F",
        "\u6269",
        "\u94F6",
        "\u8BED",
        "\u6325",
        "\u9152",
        "\u5B88",
        "\u62FF",
        "\u5E8F",
        "\u7EB8",
        "\u533B",
        "\u7F3A",
        "\u96E8",
        "\u5417",
        "\u9488",
        "\u5218",
        "\u554A",
        "\u6025",
        "\u5531",
        "\u8BEF",
        "\u8BAD",
        "\u613F",
        "\u5BA1",
        "\u9644",
        "\u83B7",
        "\u8336",
        "\u9C9C",
        "\u7CAE",
        "\u65A4",
        "\u5B69",
        "\u8131",
        "\u786B",
        "\u80A5",
        "\u5584",
        "\u9F99",
        "\u6F14",
        "\u7236",
        "\u6E10",
        "\u8840",
        "\u6B22",
        "\u68B0",
        "\u638C",
        "\u6B4C",
        "\u6C99",
        "\u521A",
        "\u653B",
        "\u8C13",
        "\u76FE",
        "\u8BA8",
        "\u665A",
        "\u7C92",
        "\u4E71",
        "\u71C3",
        "\u77DB",
        "\u4E4E",
        "\u6740",
        "\u836F",
        "\u5B81",
        "\u9C81",
        "\u8D35",
        "\u949F",
        "\u7164",
        "\u8BFB",
        "\u73ED",
        "\u4F2F",
        "\u9999",
        "\u4ECB",
        "\u8FEB",
        "\u53E5",
        "\u4E30",
        "\u57F9",
        "\u63E1",
        "\u5170",
        "\u62C5",
        "\u5F26",
        "\u86CB",
        "\u6C89",
        "\u5047",
        "\u7A7F",
        "\u6267",
        "\u7B54",
        "\u4E50",
        "\u8C01",
        "\u987A",
        "\u70DF",
        "\u7F29",
        "\u5F81",
        "\u8138",
        "\u559C",
        "\u677E",
        "\u811A",
        "\u56F0",
        "\u5F02",
        "\u514D",
        "\u80CC",
        "\u661F",
        "\u798F",
        "\u4E70",
        "\u67D3",
        "\u4E95",
        "\u6982",
        "\u6162",
        "\u6015",
        "\u78C1",
        "\u500D",
        "\u7956",
        "\u7687",
        "\u4FC3",
        "\u9759",
        "\u8865",
        "\u8BC4",
        "\u7FFB",
        "\u8089",
        "\u8DF5",
        "\u5C3C",
        "\u8863",
        "\u5BBD",
        "\u626C",
        "\u68C9",
        "\u5E0C",
        "\u4F24",
        "\u64CD",
        "\u5782",
        "\u79CB",
        "\u5B9C",
        "\u6C22",
        "\u5957",
        "\u7763",
        "\u632F",
        "\u67B6",
        "\u4EAE",
        "\u672B",
        "\u5BAA",
        "\u5E86",
        "\u7F16",
        "\u725B",
        "\u89E6",
        "\u6620",
        "\u96F7",
        "\u9500",
        "\u8BD7",
        "\u5EA7",
        "\u5C45",
        "\u6293",
        "\u88C2",
        "\u80DE",
        "\u547C",
        "\u5A18",
        "\u666F",
        "\u5A01",
        "\u7EFF",
        "\u6676",
        "\u539A",
        "\u76DF",
        "\u8861",
        "\u9E21",
        "\u5B59",
        "\u5EF6",
        "\u5371",
        "\u80F6",
        "\u5C4B",
        "\u4E61",
        "\u4E34",
        "\u9646",
        "\u987E",
        "\u6389",
        "\u5440",
        "\u706F",
        "\u5C81",
        "\u63AA",
        "\u675F",
        "\u8010",
        "\u5267",
        "\u7389",
        "\u8D75",
        "\u8DF3",
        "\u54E5",
        "\u5B63",
        "\u8BFE",
        "\u51EF",
        "\u80E1",
        "\u989D",
        "\u6B3E",
        "\u7ECD",
        "\u5377",
        "\u9F50",
        "\u4F1F",
        "\u84B8",
        "\u6B96",
        "\u6C38",
        "\u5B97",
        "\u82D7",
        "\u5DDD",
        "\u7089",
        "\u5CA9",
        "\u5F31",
        "\u96F6",
        "\u6768",
        "\u594F",
        "\u6CBF",
        "\u9732",
        "\u6746",
        "\u63A2",
        "\u6ED1",
        "\u9547",
        "\u996D",
        "\u6D53",
        "\u822A",
        "\u6000",
        "\u8D76",
        "\u5E93",
        "\u593A",
        "\u4F0A",
        "\u7075",
        "\u7A0E",
        "\u9014",
        "\u706D",
        "\u8D5B",
        "\u5F52",
        "\u53EC",
        "\u9F13",
        "\u64AD",
        "\u76D8",
        "\u88C1",
        "\u9669",
        "\u5EB7",
        "\u552F",
        "\u5F55",
        "\u83CC",
        "\u7EAF",
        "\u501F",
        "\u7CD6",
        "\u76D6",
        "\u6A2A",
        "\u7B26",
        "\u79C1",
        "\u52AA",
        "\u5802",
        "\u57DF",
        "\u67AA",
        "\u6DA6",
        "\u5E45",
        "\u54C8",
        "\u7ADF",
        "\u719F",
        "\u866B",
        "\u6CFD",
        "\u8111",
        "\u58E4",
        "\u78B3",
        "\u6B27",
        "\u904D",
        "\u4FA7",
        "\u5BE8",
        "\u6562",
        "\u5F7B",
        "\u8651",
        "\u659C",
        "\u8584",
        "\u5EAD",
        "\u7EB3",
        "\u5F39",
        "\u9972",
        "\u4F38",
        "\u6298",
        "\u9EA6",
        "\u6E7F",
        "\u6697",
        "\u8377",
        "\u74E6",
        "\u585E",
        "\u5E8A",
        "\u7B51",
        "\u6076",
        "\u6237",
        "\u8BBF",
        "\u5854",
        "\u5947",
        "\u900F",
        "\u6881",
        "\u5200",
        "\u65CB",
        "\u8FF9",
        "\u5361",
        "\u6C2F",
        "\u9047",
        "\u4EFD",
        "\u6BD2",
        "\u6CE5",
        "\u9000",
        "\u6D17",
        "\u6446",
        "\u7070",
        "\u5F69",
        "\u5356",
        "\u8017",
        "\u590F",
        "\u62E9",
        "\u5FD9",
        "\u94DC",
        "\u732E",
        "\u786C",
        "\u4E88",
        "\u7E41",
        "\u5708",
        "\u96EA",
        "\u51FD",
        "\u4EA6",
        "\u62BD",
        "\u7BC7",
        "\u9635",
        "\u9634",
        "\u4E01",
        "\u5C3A",
        "\u8FFD",
        "\u5806",
        "\u96C4",
        "\u8FCE",
        "\u6CDB",
        "\u7238",
        "\u697C",
        "\u907F",
        "\u8C0B",
        "\u5428",
        "\u91CE",
        "\u732A",
        "\u65D7",
        "\u7D2F",
        "\u504F",
        "\u5178",
        "\u9986",
        "\u7D22",
        "\u79E6",
        "\u8102",
        "\u6F6E",
        "\u7237",
        "\u8C46",
        "\u5FFD",
        "\u6258",
        "\u60CA",
        "\u5851",
        "\u9057",
        "\u6108",
        "\u6731",
        "\u66FF",
        "\u7EA4",
        "\u7C97",
        "\u503E",
        "\u5C1A",
        "\u75DB",
        "\u695A",
        "\u8C22",
        "\u594B",
        "\u8D2D",
        "\u78E8",
        "\u541B",
        "\u6C60",
        "\u65C1",
        "\u788E",
        "\u9AA8",
        "\u76D1",
        "\u6355",
        "\u5F1F",
        "\u66B4",
        "\u5272",
        "\u8D2F",
        "\u6B8A",
        "\u91CA",
        "\u8BCD",
        "\u4EA1",
        "\u58C1",
        "\u987F",
        "\u5B9D",
        "\u5348",
        "\u5C18",
        "\u95FB",
        "\u63ED",
        "\u70AE",
        "\u6B8B",
        "\u51AC",
        "\u6865",
        "\u5987",
        "\u8B66",
        "\u7EFC",
        "\u62DB",
        "\u5434",
        "\u4ED8",
        "\u6D6E",
        "\u906D",
        "\u5F90",
        "\u60A8",
        "\u6447",
        "\u8C37",
        "\u8D5E",
        "\u7BB1",
        "\u9694",
        "\u8BA2",
        "\u7537",
        "\u5439",
        "\u56ED",
        "\u7EB7",
        "\u5510",
        "\u8D25",
        "\u5B8B",
        "\u73BB",
        "\u5DE8",
        "\u8015",
        "\u5766",
        "\u8363",
        "\u95ED",
        "\u6E7E",
        "\u952E",
        "\u51E1",
        "\u9A7B",
        "\u9505",
        "\u6551",
        "\u6069",
        "\u5265",
        "\u51DD",
        "\u78B1",
        "\u9F7F",
        "\u622A",
        "\u70BC",
        "\u9EBB",
        "\u7EBA",
        "\u7981",
        "\u5E9F",
        "\u76DB",
        "\u7248",
        "\u7F13",
        "\u51C0",
        "\u775B",
        "\u660C",
        "\u5A5A",
        "\u6D89",
        "\u7B52",
        "\u5634",
        "\u63D2",
        "\u5CB8",
        "\u6717",
        "\u5E84",
        "\u8857",
        "\u85CF",
        "\u59D1",
        "\u8D38",
        "\u8150",
        "\u5974",
        "\u5566",
        "\u60EF",
        "\u4E58",
        "\u4F19",
        "\u6062",
        "\u5300",
        "\u7EB1",
        "\u624E",
        "\u8FA9",
        "\u8033",
        "\u5F6A",
        "\u81E3",
        "\u4EBF",
        "\u7483",
        "\u62B5",
        "\u8109",
        "\u79C0",
        "\u8428",
        "\u4FC4",
        "\u7F51",
        "\u821E",
        "\u5E97",
        "\u55B7",
        "\u7EB5",
        "\u5BF8",
        "\u6C57",
        "\u6302",
        "\u6D2A",
        "\u8D3A",
        "\u95EA",
        "\u67EC",
        "\u7206",
        "\u70EF",
        "\u6D25",
        "\u7A3B",
        "\u5899",
        "\u8F6F",
        "\u52C7",
        "\u50CF",
        "\u6EDA",
        "\u5398",
        "\u8499",
        "\u82B3",
        "\u80AF",
        "\u5761",
        "\u67F1",
        "\u8361",
        "\u817F",
        "\u4EEA",
        "\u65C5",
        "\u5C3E",
        "\u8F67",
        "\u51B0",
        "\u8D21",
        "\u767B",
        "\u9ECE",
        "\u524A",
        "\u94BB",
        "\u52D2",
        "\u9003",
        "\u969C",
        "\u6C28",
        "\u90ED",
        "\u5CF0",
        "\u5E01",
        "\u6E2F",
        "\u4F0F",
        "\u8F68",
        "\u4EA9",
        "\u6BD5",
        "\u64E6",
        "\u83AB",
        "\u523A",
        "\u6D6A",
        "\u79D8",
        "\u63F4",
        "\u682A",
        "\u5065",
        "\u552E",
        "\u80A1",
        "\u5C9B",
        "\u7518",
        "\u6CE1",
        "\u7761",
        "\u7AE5",
        "\u94F8",
        "\u6C64",
        "\u9600",
        "\u4F11",
        "\u6C47",
        "\u820D",
        "\u7267",
        "\u7ED5",
        "\u70B8",
        "\u54F2",
        "\u78F7",
        "\u7EE9",
        "\u670B",
        "\u6DE1",
        "\u5C16",
        "\u542F",
        "\u9677",
        "\u67F4",
        "\u5448",
        "\u5F92",
        "\u989C",
        "\u6CEA",
        "\u7A0D",
        "\u5FD8",
        "\u6CF5",
        "\u84DD",
        "\u62D6",
        "\u6D1E",
        "\u6388",
        "\u955C",
        "\u8F9B",
        "\u58EE",
        "\u950B",
        "\u8D2B",
        "\u865A",
        "\u5F2F",
        "\u6469",
        "\u6CF0",
        "\u5E7C",
        "\u5EF7",
        "\u5C0A",
        "\u7A97",
        "\u7EB2",
        "\u5F04",
        "\u96B6",
        "\u7591",
        "\u6C0F",
        "\u5BAB",
        "\u59D0",
        "\u9707",
        "\u745E",
        "\u602A",
        "\u5C24",
        "\u7434",
        "\u5FAA",
        "\u63CF",
        "\u819C",
        "\u8FDD",
        "\u5939",
        "\u8170",
        "\u7F18",
        "\u73E0",
        "\u7A77",
        "\u68EE",
        "\u679D",
        "\u7AF9",
        "\u6C9F",
        "\u50AC",
        "\u7EF3",
        "\u5FC6",
        "\u90A6",
        "\u5269",
        "\u5E78",
        "\u6D46",
        "\u680F",
        "\u62E5",
        "\u7259",
        "\u8D2E",
        "\u793C",
        "\u6EE4",
        "\u94A0",
        "\u7EB9",
        "\u7F62",
        "\u62CD",
        "\u54B1",
        "\u558A",
        "\u8896",
        "\u57C3",
        "\u52E4",
        "\u7F5A",
        "\u7126",
        "\u6F5C",
        "\u4F0D",
        "\u58A8",
        "\u6B32",
        "\u7F1D",
        "\u59D3",
        "\u520A",
        "\u9971",
        "\u4EFF",
        "\u5956",
        "\u94DD",
        "\u9B3C",
        "\u4E3D",
        "\u8DE8",
        "\u9ED8",
        "\u6316",
        "\u94FE",
        "\u626B",
        "\u559D",
        "\u888B",
        "\u70AD",
        "\u6C61",
        "\u5E55",
        "\u8BF8",
        "\u5F27",
        "\u52B1",
        "\u6885",
        "\u5976",
        "\u6D01",
        "\u707E",
        "\u821F",
        "\u9274",
        "\u82EF",
        "\u8BBC",
        "\u62B1",
        "\u6BC1",
        "\u61C2",
        "\u5BD2",
        "\u667A",
        "\u57D4",
        "\u5BC4",
        "\u5C4A",
        "\u8DC3",
        "\u6E21",
        "\u6311",
        "\u4E39",
        "\u8270",
        "\u8D1D",
        "\u78B0",
        "\u62D4",
        "\u7239",
        "\u6234",
        "\u7801",
        "\u68A6",
        "\u82BD",
        "\u7194",
        "\u8D64",
        "\u6E14",
        "\u54ED",
        "\u656C",
        "\u9897",
        "\u5954",
        "\u94C5",
        "\u4EF2",
        "\u864E",
        "\u7A00",
        "\u59B9",
        "\u4E4F",
        "\u73CD",
        "\u7533",
        "\u684C",
        "\u9075",
        "\u5141",
        "\u9686",
        "\u87BA",
        "\u4ED3",
        "\u9B4F",
        "\u9510",
        "\u6653",
        "\u6C2E",
        "\u517C",
        "\u9690",
        "\u788D",
        "\u8D6B",
        "\u62E8",
        "\u5FE0",
        "\u8083",
        "\u7F38",
        "\u7275",
        "\u62A2",
        "\u535A",
        "\u5DE7",
        "\u58F3",
        "\u5144",
        "\u675C",
        "\u8BAF",
        "\u8BDA",
        "\u78A7",
        "\u7965",
        "\u67EF",
        "\u9875",
        "\u5DE1",
        "\u77E9",
        "\u60B2",
        "\u704C",
        "\u9F84",
        "\u4F26",
        "\u7968",
        "\u5BFB",
        "\u6842",
        "\u94FA",
        "\u5723",
        "\u6050",
        "\u6070",
        "\u90D1",
        "\u8DA3",
        "\u62AC",
        "\u8352",
        "\u817E",
        "\u8D34",
        "\u67D4",
        "\u6EF4",
        "\u731B",
        "\u9614",
        "\u8F86",
        "\u59BB",
        "\u586B",
        "\u64A4",
        "\u50A8",
        "\u7B7E",
        "\u95F9",
        "\u6270",
        "\u7D2B",
        "\u7802",
        "\u9012",
        "\u620F",
        "\u540A",
        "\u9676",
        "\u4F10",
        "\u5582",
        "\u7597",
        "\u74F6",
        "\u5A46",
        "\u629A",
        "\u81C2",
        "\u6478",
        "\u5FCD",
        "\u867E",
        "\u8721",
        "\u90BB",
        "\u80F8",
        "\u5DE9",
        "\u6324",
        "\u5076",
        "\u5F03",
        "\u69FD",
        "\u52B2",
        "\u4E73",
        "\u9093",
        "\u5409",
        "\u4EC1",
        "\u70C2",
        "\u7816",
        "\u79DF",
        "\u4E4C",
        "\u8230",
        "\u4F34",
        "\u74DC",
        "\u6D45",
        "\u4E19",
        "\u6682",
        "\u71E5",
        "\u6A61",
        "\u67F3",
        "\u8FF7",
        "\u6696",
        "\u724C",
        "\u79E7",
        "\u80C6",
        "\u8BE6",
        "\u7C27",
        "\u8E0F",
        "\u74F7",
        "\u8C31",
        "\u5446",
        "\u5BBE",
        "\u7CCA",
        "\u6D1B",
        "\u8F89",
        "\u6124",
        "\u7ADE",
        "\u9699",
        "\u6012",
        "\u7C98",
        "\u4E43",
        "\u7EEA",
        "\u80A9",
        "\u7C4D",
        "\u654F",
        "\u6D82",
        "\u7199",
        "\u7686",
        "\u4FA6",
        "\u60AC",
        "\u6398",
        "\u4EAB",
        "\u7EA0",
        "\u9192",
        "\u72C2",
        "\u9501",
        "\u6DC0",
        "\u6068",
        "\u7272",
        "\u9738",
        "\u722C",
        "\u8D4F",
        "\u9006",
        "\u73A9",
        "\u9675",
        "\u795D",
        "\u79D2",
        "\u6D59",
        "\u8C8C",
        "\u5F79",
        "\u5F7C",
        "\u6089",
        "\u9E2D",
        "\u8D8B",
        "\u51E4",
        "\u6668",
        "\u755C",
        "\u8F88",
        "\u79E9",
        "\u5375",
        "\u7F72",
        "\u68AF",
        "\u708E",
        "\u6EE9",
        "\u68CB",
        "\u9A71",
        "\u7B5B",
        "\u5CE1",
        "\u5192",
        "\u5565",
        "\u5BFF",
        "\u8BD1",
        "\u6D78",
        "\u6CC9",
        "\u5E3D",
        "\u8FDF",
        "\u7845",
        "\u7586",
        "\u8D37",
        "\u6F0F",
        "\u7A3F",
        "\u51A0",
        "\u5AE9",
        "\u80C1",
        "\u82AF",
        "\u7262",
        "\u53DB",
        "\u8680",
        "\u5965",
        "\u9E23",
        "\u5CAD",
        "\u7F8A",
        "\u51ED",
        "\u4E32",
        "\u5858",
        "\u7ED8",
        "\u9175",
        "\u878D",
        "\u76C6",
        "\u9521",
        "\u5E99",
        "\u7B79",
        "\u51BB",
        "\u8F85",
        "\u6444",
        "\u88AD",
        "\u7B4B",
        "\u62D2",
        "\u50DA",
        "\u65F1",
        "\u94BE",
        "\u9E1F",
        "\u6F06",
        "\u6C88",
        "\u7709",
        "\u758F",
        "\u6DFB",
        "\u68D2",
        "\u7A57",
        "\u785D",
        "\u97E9",
        "\u903C",
        "\u626D",
        "\u4FA8",
        "\u51C9",
        "\u633A",
        "\u7897",
        "\u683D",
        "\u7092",
        "\u676F",
        "\u60A3",
        "\u998F",
        "\u529D",
        "\u8C6A",
        "\u8FBD",
        "\u52C3",
        "\u9E3F",
        "\u65E6",
        "\u540F",
        "\u62DC",
        "\u72D7",
        "\u57CB",
        "\u8F8A",
        "\u63A9",
        "\u996E",
        "\u642C",
        "\u9A82",
        "\u8F9E",
        "\u52FE",
        "\u6263",
        "\u4F30",
        "\u848B",
        "\u7ED2",
        "\u96FE",
        "\u4E08",
        "\u6735",
        "\u59C6",
        "\u62DF",
        "\u5B87",
        "\u8F91",
        "\u9655",
        "\u96D5",
        "\u507F",
        "\u84C4",
        "\u5D07",
        "\u526A",
        "\u5021",
        "\u5385",
        "\u54AC",
        "\u9A76",
        "\u85AF",
        "\u5237",
        "\u65A5",
        "\u756A",
        "\u8D4B",
        "\u5949",
        "\u4F5B",
        "\u6D47",
        "\u6F2B",
        "\u66FC",
        "\u6247",
        "\u9499",
        "\u6843",
        "\u6276",
        "\u4ED4",
        "\u8FD4",
        "\u4FD7",
        "\u4E8F",
        "\u8154",
        "\u978B",
        "\u68F1",
        "\u8986",
        "\u6846",
        "\u6084",
        "\u53D4",
        "\u649E",
        "\u9A97",
        "\u52D8",
        "\u65FA",
        "\u6CB8",
        "\u5B64",
        "\u5410",
        "\u5B5F",
        "\u6E20",
        "\u5C48",
        "\u75BE",
        "\u5999",
        "\u60DC",
        "\u4EF0",
        "\u72E0",
        "\u80C0",
        "\u8C10",
        "\u629B",
        "\u9709",
        "\u6851",
        "\u5C97",
        "\u561B",
        "\u8870",
        "\u76D7",
        "\u6E17",
        "\u810F",
        "\u8D56",
        "\u6D8C",
        "\u751C",
        "\u66F9",
        "\u9605",
        "\u808C",
        "\u54E9",
        "\u5389",
        "\u70C3",
        "\u7EAC",
        "\u6BC5",
        "\u6628",
        "\u4F2A",
        "\u75C7",
        "\u716E",
        "\u53F9",
        "\u9489",
        "\u642D",
        "\u830E",
        "\u7B3C",
        "\u9177",
        "\u5077",
        "\u5F13",
        "\u9525",
        "\u6052",
        "\u6770",
        "\u5751",
        "\u9F3B",
        "\u7FFC",
        "\u7EB6",
        "\u53D9",
        "\u72F1",
        "\u902E",
        "\u7F50",
        "\u7EDC",
        "\u68DA",
        "\u6291",
        "\u81A8",
        "\u852C",
        "\u5BFA",
        "\u9AA4",
        "\u7A46",
        "\u51B6",
        "\u67AF",
        "\u518C",
        "\u5C38",
        "\u51F8",
        "\u7EC5",
        "\u576F",
        "\u727A",
        "\u7130",
        "\u8F70",
        "\u6B23",
        "\u664B",
        "\u7626",
        "\u5FA1",
        "\u952D",
        "\u9526",
        "\u4E27",
        "\u65EC",
        "\u953B",
        "\u5784",
        "\u641C",
        "\u6251",
        "\u9080",
        "\u4EAD",
        "\u916F",
        "\u8FC8",
        "\u8212",
        "\u8106",
        "\u9176",
        "\u95F2",
        "\u5FE7",
        "\u915A",
        "\u987D",
        "\u7FBD",
        "\u6DA8",
        "\u5378",
        "\u4ED7",
        "\u966A",
        "\u8F9F",
        "\u60E9",
        "\u676D",
        "\u59DA",
        "\u809A",
        "\u6349",
        "\u98D8",
        "\u6F02",
        "\u6606",
        "\u6B3A",
        "\u543E",
        "\u90CE",
        "\u70F7",
        "\u6C41",
        "\u5475",
        "\u9970",
        "\u8427",
        "\u96C5",
        "\u90AE",
        "\u8FC1",
        "\u71D5",
        "\u6492",
        "\u59FB",
        "\u8D74",
        "\u5BB4",
        "\u70E6",
        "\u503A",
        "\u5E10",
        "\u6591",
        "\u94C3",
        "\u65E8",
        "\u9187",
        "\u8463",
        "\u997C",
        "\u96CF",
        "\u59FF",
        "\u62CC",
        "\u5085",
        "\u8179",
        "\u59A5",
        "\u63C9",
        "\u8D24",
        "\u62C6",
        "\u6B6A",
        "\u8461",
        "\u80FA",
        "\u4E22",
        "\u6D69",
        "\u5FBD",
        "\u6602",
        "\u57AB",
        "\u6321",
        "\u89C8",
        "\u8D2A",
        "\u6170",
        "\u7F34",
        "\u6C6A",
        "\u614C",
        "\u51AF",
        "\u8BFA",
        "\u59DC",
        "\u8C0A",
        "\u51F6",
        "\u52A3",
        "\u8BEC",
        "\u8000",
        "\u660F",
        "\u8EBA",
        "\u76C8",
        "\u9A91",
        "\u4E54",
        "\u6EAA",
        "\u4E1B",
        "\u5362",
        "\u62B9",
        "\u95F7",
        "\u54A8",
        "\u522E",
        "\u9A7E",
        "\u7F06",
        "\u609F",
        "\u6458",
        "\u94D2",
        "\u63B7",
        "\u9887",
        "\u5E7B",
        "\u67C4",
        "\u60E0",
        "\u60E8",
        "\u4F73",
        "\u4EC7",
        "\u814A",
        "\u7A9D",
        "\u6DA4",
        "\u5251",
        "\u77A7",
        "\u5821",
        "\u6CFC",
        "\u8471",
        "\u7F69",
        "\u970D",
        "\u635E",
        "\u80CE",
        "\u82CD",
        "\u6EE8",
        "\u4FE9",
        "\u6345",
        "\u6E58",
        "\u780D",
        "\u971E",
        "\u90B5",
        "\u8404",
        "\u75AF",
        "\u6DEE",
        "\u9042",
        "\u718A",
        "\u7CAA",
        "\u70D8",
        "\u5BBF",
        "\u6863",
        "\u6208",
        "\u9A73",
        "\u5AC2",
        "\u88D5",
        "\u5F99",
        "\u7BAD",
        "\u6350",
        "\u80A0",
        "\u6491",
        "\u6652",
        "\u8FA8",
        "\u6BBF",
        "\u83B2",
        "\u644A",
        "\u6405",
        "\u9171",
        "\u5C4F",
        "\u75AB",
        "\u54C0",
        "\u8521",
        "\u5835",
        "\u6CAB",
        "\u76B1",
        "\u7545",
        "\u53E0",
        "\u9601",
        "\u83B1",
        "\u6572",
        "\u8F96",
        "\u94A9",
        "\u75D5",
        "\u575D",
        "\u5DF7",
        "\u997F",
        "\u7978",
        "\u4E18",
        "\u7384",
        "\u6E9C",
        "\u66F0",
        "\u903B",
        "\u5F6D",
        "\u5C1D",
        "\u537F",
        "\u59A8",
        "\u8247",
        "\u541E",
        "\u97E6",
        "\u6028",
        "\u77EE",
        "\u6B47"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/chinese_traditional.json
  var require_chinese_traditional = __commonJS({
    "node_modules/bip39/src/wordlists/chinese_traditional.json"(exports2, module2) {
      module2.exports = [
        "\u7684",
        "\u4E00",
        "\u662F",
        "\u5728",
        "\u4E0D",
        "\u4E86",
        "\u6709",
        "\u548C",
        "\u4EBA",
        "\u9019",
        "\u4E2D",
        "\u5927",
        "\u70BA",
        "\u4E0A",
        "\u500B",
        "\u570B",
        "\u6211",
        "\u4EE5",
        "\u8981",
        "\u4ED6",
        "\u6642",
        "\u4F86",
        "\u7528",
        "\u5011",
        "\u751F",
        "\u5230",
        "\u4F5C",
        "\u5730",
        "\u65BC",
        "\u51FA",
        "\u5C31",
        "\u5206",
        "\u5C0D",
        "\u6210",
        "\u6703",
        "\u53EF",
        "\u4E3B",
        "\u767C",
        "\u5E74",
        "\u52D5",
        "\u540C",
        "\u5DE5",
        "\u4E5F",
        "\u80FD",
        "\u4E0B",
        "\u904E",
        "\u5B50",
        "\u8AAA",
        "\u7522",
        "\u7A2E",
        "\u9762",
        "\u800C",
        "\u65B9",
        "\u5F8C",
        "\u591A",
        "\u5B9A",
        "\u884C",
        "\u5B78",
        "\u6CD5",
        "\u6240",
        "\u6C11",
        "\u5F97",
        "\u7D93",
        "\u5341",
        "\u4E09",
        "\u4E4B",
        "\u9032",
        "\u8457",
        "\u7B49",
        "\u90E8",
        "\u5EA6",
        "\u5BB6",
        "\u96FB",
        "\u529B",
        "\u88E1",
        "\u5982",
        "\u6C34",
        "\u5316",
        "\u9AD8",
        "\u81EA",
        "\u4E8C",
        "\u7406",
        "\u8D77",
        "\u5C0F",
        "\u7269",
        "\u73FE",
        "\u5BE6",
        "\u52A0",
        "\u91CF",
        "\u90FD",
        "\u5169",
        "\u9AD4",
        "\u5236",
        "\u6A5F",
        "\u7576",
        "\u4F7F",
        "\u9EDE",
        "\u5F9E",
        "\u696D",
        "\u672C",
        "\u53BB",
        "\u628A",
        "\u6027",
        "\u597D",
        "\u61C9",
        "\u958B",
        "\u5B83",
        "\u5408",
        "\u9084",
        "\u56E0",
        "\u7531",
        "\u5176",
        "\u4E9B",
        "\u7136",
        "\u524D",
        "\u5916",
        "\u5929",
        "\u653F",
        "\u56DB",
        "\u65E5",
        "\u90A3",
        "\u793E",
        "\u7FA9",
        "\u4E8B",
        "\u5E73",
        "\u5F62",
        "\u76F8",
        "\u5168",
        "\u8868",
        "\u9593",
        "\u6A23",
        "\u8207",
        "\u95DC",
        "\u5404",
        "\u91CD",
        "\u65B0",
        "\u7DDA",
        "\u5167",
        "\u6578",
        "\u6B63",
        "\u5FC3",
        "\u53CD",
        "\u4F60",
        "\u660E",
        "\u770B",
        "\u539F",
        "\u53C8",
        "\u9EBC",
        "\u5229",
        "\u6BD4",
        "\u6216",
        "\u4F46",
        "\u8CEA",
        "\u6C23",
        "\u7B2C",
        "\u5411",
        "\u9053",
        "\u547D",
        "\u6B64",
        "\u8B8A",
        "\u689D",
        "\u53EA",
        "\u6C92",
        "\u7D50",
        "\u89E3",
        "\u554F",
        "\u610F",
        "\u5EFA",
        "\u6708",
        "\u516C",
        "\u7121",
        "\u7CFB",
        "\u8ECD",
        "\u5F88",
        "\u60C5",
        "\u8005",
        "\u6700",
        "\u7ACB",
        "\u4EE3",
        "\u60F3",
        "\u5DF2",
        "\u901A",
        "\u4E26",
        "\u63D0",
        "\u76F4",
        "\u984C",
        "\u9EE8",
        "\u7A0B",
        "\u5C55",
        "\u4E94",
        "\u679C",
        "\u6599",
        "\u8C61",
        "\u54E1",
        "\u9769",
        "\u4F4D",
        "\u5165",
        "\u5E38",
        "\u6587",
        "\u7E3D",
        "\u6B21",
        "\u54C1",
        "\u5F0F",
        "\u6D3B",
        "\u8A2D",
        "\u53CA",
        "\u7BA1",
        "\u7279",
        "\u4EF6",
        "\u9577",
        "\u6C42",
        "\u8001",
        "\u982D",
        "\u57FA",
        "\u8CC7",
        "\u908A",
        "\u6D41",
        "\u8DEF",
        "\u7D1A",
        "\u5C11",
        "\u5716",
        "\u5C71",
        "\u7D71",
        "\u63A5",
        "\u77E5",
        "\u8F03",
        "\u5C07",
        "\u7D44",
        "\u898B",
        "\u8A08",
        "\u5225",
        "\u5979",
        "\u624B",
        "\u89D2",
        "\u671F",
        "\u6839",
        "\u8AD6",
        "\u904B",
        "\u8FB2",
        "\u6307",
        "\u5E7E",
        "\u4E5D",
        "\u5340",
        "\u5F37",
        "\u653E",
        "\u6C7A",
        "\u897F",
        "\u88AB",
        "\u5E79",
        "\u505A",
        "\u5FC5",
        "\u6230",
        "\u5148",
        "\u56DE",
        "\u5247",
        "\u4EFB",
        "\u53D6",
        "\u64DA",
        "\u8655",
        "\u968A",
        "\u5357",
        "\u7D66",
        "\u8272",
        "\u5149",
        "\u9580",
        "\u5373",
        "\u4FDD",
        "\u6CBB",
        "\u5317",
        "\u9020",
        "\u767E",
        "\u898F",
        "\u71B1",
        "\u9818",
        "\u4E03",
        "\u6D77",
        "\u53E3",
        "\u6771",
        "\u5C0E",
        "\u5668",
        "\u58D3",
        "\u5FD7",
        "\u4E16",
        "\u91D1",
        "\u589E",
        "\u722D",
        "\u6FDF",
        "\u968E",
        "\u6CB9",
        "\u601D",
        "\u8853",
        "\u6975",
        "\u4EA4",
        "\u53D7",
        "\u806F",
        "\u4EC0",
        "\u8A8D",
        "\u516D",
        "\u5171",
        "\u6B0A",
        "\u6536",
        "\u8B49",
        "\u6539",
        "\u6E05",
        "\u7F8E",
        "\u518D",
        "\u63A1",
        "\u8F49",
        "\u66F4",
        "\u55AE",
        "\u98A8",
        "\u5207",
        "\u6253",
        "\u767D",
        "\u6559",
        "\u901F",
        "\u82B1",
        "\u5E36",
        "\u5B89",
        "\u5834",
        "\u8EAB",
        "\u8ECA",
        "\u4F8B",
        "\u771F",
        "\u52D9",
        "\u5177",
        "\u842C",
        "\u6BCF",
        "\u76EE",
        "\u81F3",
        "\u9054",
        "\u8D70",
        "\u7A4D",
        "\u793A",
        "\u8B70",
        "\u8072",
        "\u5831",
        "\u9B25",
        "\u5B8C",
        "\u985E",
        "\u516B",
        "\u96E2",
        "\u83EF",
        "\u540D",
        "\u78BA",
        "\u624D",
        "\u79D1",
        "\u5F35",
        "\u4FE1",
        "\u99AC",
        "\u7BC0",
        "\u8A71",
        "\u7C73",
        "\u6574",
        "\u7A7A",
        "\u5143",
        "\u6CC1",
        "\u4ECA",
        "\u96C6",
        "\u6EAB",
        "\u50B3",
        "\u571F",
        "\u8A31",
        "\u6B65",
        "\u7FA4",
        "\u5EE3",
        "\u77F3",
        "\u8A18",
        "\u9700",
        "\u6BB5",
        "\u7814",
        "\u754C",
        "\u62C9",
        "\u6797",
        "\u5F8B",
        "\u53EB",
        "\u4E14",
        "\u7A76",
        "\u89C0",
        "\u8D8A",
        "\u7E54",
        "\u88DD",
        "\u5F71",
        "\u7B97",
        "\u4F4E",
        "\u6301",
        "\u97F3",
        "\u773E",
        "\u66F8",
        "\u5E03",
        "\u590D",
        "\u5BB9",
        "\u5152",
        "\u9808",
        "\u969B",
        "\u5546",
        "\u975E",
        "\u9A57",
        "\u9023",
        "\u65B7",
        "\u6DF1",
        "\u96E3",
        "\u8FD1",
        "\u7926",
        "\u5343",
        "\u9031",
        "\u59D4",
        "\u7D20",
        "\u6280",
        "\u5099",
        "\u534A",
        "\u8FA6",
        "\u9752",
        "\u7701",
        "\u5217",
        "\u7FD2",
        "\u97FF",
        "\u7D04",
        "\u652F",
        "\u822C",
        "\u53F2",
        "\u611F",
        "\u52DE",
        "\u4FBF",
        "\u5718",
        "\u5F80",
        "\u9178",
        "\u6B77",
        "\u5E02",
        "\u514B",
        "\u4F55",
        "\u9664",
        "\u6D88",
        "\u69CB",
        "\u5E9C",
        "\u7A31",
        "\u592A",
        "\u6E96",
        "\u7CBE",
        "\u503C",
        "\u865F",
        "\u7387",
        "\u65CF",
        "\u7DAD",
        "\u5283",
        "\u9078",
        "\u6A19",
        "\u5BEB",
        "\u5B58",
        "\u5019",
        "\u6BDB",
        "\u89AA",
        "\u5FEB",
        "\u6548",
        "\u65AF",
        "\u9662",
        "\u67E5",
        "\u6C5F",
        "\u578B",
        "\u773C",
        "\u738B",
        "\u6309",
        "\u683C",
        "\u990A",
        "\u6613",
        "\u7F6E",
        "\u6D3E",
        "\u5C64",
        "\u7247",
        "\u59CB",
        "\u537B",
        "\u5C08",
        "\u72C0",
        "\u80B2",
        "\u5EE0",
        "\u4EAC",
        "\u8B58",
        "\u9069",
        "\u5C6C",
        "\u5713",
        "\u5305",
        "\u706B",
        "\u4F4F",
        "\u8ABF",
        "\u6EFF",
        "\u7E23",
        "\u5C40",
        "\u7167",
        "\u53C3",
        "\u7D05",
        "\u7D30",
        "\u5F15",
        "\u807D",
        "\u8A72",
        "\u9435",
        "\u50F9",
        "\u56B4",
        "\u9996",
        "\u5E95",
        "\u6DB2",
        "\u5B98",
        "\u5FB7",
        "\u96A8",
        "\u75C5",
        "\u8607",
        "\u5931",
        "\u723E",
        "\u6B7B",
        "\u8B1B",
        "\u914D",
        "\u5973",
        "\u9EC3",
        "\u63A8",
        "\u986F",
        "\u8AC7",
        "\u7F6A",
        "\u795E",
        "\u85DD",
        "\u5462",
        "\u5E2D",
        "\u542B",
        "\u4F01",
        "\u671B",
        "\u5BC6",
        "\u6279",
        "\u71DF",
        "\u9805",
        "\u9632",
        "\u8209",
        "\u7403",
        "\u82F1",
        "\u6C27",
        "\u52E2",
        "\u544A",
        "\u674E",
        "\u53F0",
        "\u843D",
        "\u6728",
        "\u5E6B",
        "\u8F2A",
        "\u7834",
        "\u4E9E",
        "\u5E2B",
        "\u570D",
        "\u6CE8",
        "\u9060",
        "\u5B57",
        "\u6750",
        "\u6392",
        "\u4F9B",
        "\u6CB3",
        "\u614B",
        "\u5C01",
        "\u53E6",
        "\u65BD",
        "\u6E1B",
        "\u6A39",
        "\u6EB6",
        "\u600E",
        "\u6B62",
        "\u6848",
        "\u8A00",
        "\u58EB",
        "\u5747",
        "\u6B66",
        "\u56FA",
        "\u8449",
        "\u9B5A",
        "\u6CE2",
        "\u8996",
        "\u50C5",
        "\u8CBB",
        "\u7DCA",
        "\u611B",
        "\u5DE6",
        "\u7AE0",
        "\u65E9",
        "\u671D",
        "\u5BB3",
        "\u7E8C",
        "\u8F15",
        "\u670D",
        "\u8A66",
        "\u98DF",
        "\u5145",
        "\u5175",
        "\u6E90",
        "\u5224",
        "\u8B77",
        "\u53F8",
        "\u8DB3",
        "\u67D0",
        "\u7DF4",
        "\u5DEE",
        "\u81F4",
        "\u677F",
        "\u7530",
        "\u964D",
        "\u9ED1",
        "\u72AF",
        "\u8CA0",
        "\u64CA",
        "\u8303",
        "\u7E7C",
        "\u8208",
        "\u4F3C",
        "\u9918",
        "\u5805",
        "\u66F2",
        "\u8F38",
        "\u4FEE",
        "\u6545",
        "\u57CE",
        "\u592B",
        "\u5920",
        "\u9001",
        "\u7B46",
        "\u8239",
        "\u4F54",
        "\u53F3",
        "\u8CA1",
        "\u5403",
        "\u5BCC",
        "\u6625",
        "\u8077",
        "\u89BA",
        "\u6F22",
        "\u756B",
        "\u529F",
        "\u5DF4",
        "\u8DDF",
        "\u96D6",
        "\u96DC",
        "\u98DB",
        "\u6AA2",
        "\u5438",
        "\u52A9",
        "\u6607",
        "\u967D",
        "\u4E92",
        "\u521D",
        "\u5275",
        "\u6297",
        "\u8003",
        "\u6295",
        "\u58DE",
        "\u7B56",
        "\u53E4",
        "\u5F91",
        "\u63DB",
        "\u672A",
        "\u8DD1",
        "\u7559",
        "\u92FC",
        "\u66FE",
        "\u7AEF",
        "\u8CAC",
        "\u7AD9",
        "\u7C21",
        "\u8FF0",
        "\u9322",
        "\u526F",
        "\u76E1",
        "\u5E1D",
        "\u5C04",
        "\u8349",
        "\u885D",
        "\u627F",
        "\u7368",
        "\u4EE4",
        "\u9650",
        "\u963F",
        "\u5BA3",
        "\u74B0",
        "\u96D9",
        "\u8ACB",
        "\u8D85",
        "\u5FAE",
        "\u8B93",
        "\u63A7",
        "\u5DDE",
        "\u826F",
        "\u8EF8",
        "\u627E",
        "\u5426",
        "\u7D00",
        "\u76CA",
        "\u4F9D",
        "\u512A",
        "\u9802",
        "\u790E",
        "\u8F09",
        "\u5012",
        "\u623F",
        "\u7A81",
        "\u5750",
        "\u7C89",
        "\u6575",
        "\u7565",
        "\u5BA2",
        "\u8881",
        "\u51B7",
        "\u52DD",
        "\u7D55",
        "\u6790",
        "\u584A",
        "\u5291",
        "\u6E2C",
        "\u7D72",
        "\u5354",
        "\u8A34",
        "\u5FF5",
        "\u9673",
        "\u4ECD",
        "\u7F85",
        "\u9E7D",
        "\u53CB",
        "\u6D0B",
        "\u932F",
        "\u82E6",
        "\u591C",
        "\u5211",
        "\u79FB",
        "\u983B",
        "\u9010",
        "\u9760",
        "\u6DF7",
        "\u6BCD",
        "\u77ED",
        "\u76AE",
        "\u7D42",
        "\u805A",
        "\u6C7D",
        "\u6751",
        "\u96F2",
        "\u54EA",
        "\u65E2",
        "\u8DDD",
        "\u885B",
        "\u505C",
        "\u70C8",
        "\u592E",
        "\u5BDF",
        "\u71D2",
        "\u8FC5",
        "\u5883",
        "\u82E5",
        "\u5370",
        "\u6D32",
        "\u523B",
        "\u62EC",
        "\u6FC0",
        "\u5B54",
        "\u641E",
        "\u751A",
        "\u5BA4",
        "\u5F85",
        "\u6838",
        "\u6821",
        "\u6563",
        "\u4FB5",
        "\u5427",
        "\u7532",
        "\u904A",
        "\u4E45",
        "\u83DC",
        "\u5473",
        "\u820A",
        "\u6A21",
        "\u6E56",
        "\u8CA8",
        "\u640D",
        "\u9810",
        "\u963B",
        "\u6BEB",
        "\u666E",
        "\u7A69",
        "\u4E59",
        "\u5ABD",
        "\u690D",
        "\u606F",
        "\u64F4",
        "\u9280",
        "\u8A9E",
        "\u63EE",
        "\u9152",
        "\u5B88",
        "\u62FF",
        "\u5E8F",
        "\u7D19",
        "\u91AB",
        "\u7F3A",
        "\u96E8",
        "\u55CE",
        "\u91DD",
        "\u5289",
        "\u554A",
        "\u6025",
        "\u5531",
        "\u8AA4",
        "\u8A13",
        "\u9858",
        "\u5BE9",
        "\u9644",
        "\u7372",
        "\u8336",
        "\u9BAE",
        "\u7CE7",
        "\u65A4",
        "\u5B69",
        "\u812B",
        "\u786B",
        "\u80A5",
        "\u5584",
        "\u9F8D",
        "\u6F14",
        "\u7236",
        "\u6F38",
        "\u8840",
        "\u6B61",
        "\u68B0",
        "\u638C",
        "\u6B4C",
        "\u6C99",
        "\u525B",
        "\u653B",
        "\u8B02",
        "\u76FE",
        "\u8A0E",
        "\u665A",
        "\u7C92",
        "\u4E82",
        "\u71C3",
        "\u77DB",
        "\u4E4E",
        "\u6BBA",
        "\u85E5",
        "\u5BE7",
        "\u9B6F",
        "\u8CB4",
        "\u9418",
        "\u7164",
        "\u8B80",
        "\u73ED",
        "\u4F2F",
        "\u9999",
        "\u4ECB",
        "\u8FEB",
        "\u53E5",
        "\u8C50",
        "\u57F9",
        "\u63E1",
        "\u862D",
        "\u64D4",
        "\u5F26",
        "\u86CB",
        "\u6C89",
        "\u5047",
        "\u7A7F",
        "\u57F7",
        "\u7B54",
        "\u6A02",
        "\u8AB0",
        "\u9806",
        "\u7159",
        "\u7E2E",
        "\u5FB5",
        "\u81C9",
        "\u559C",
        "\u677E",
        "\u8173",
        "\u56F0",
        "\u7570",
        "\u514D",
        "\u80CC",
        "\u661F",
        "\u798F",
        "\u8CB7",
        "\u67D3",
        "\u4E95",
        "\u6982",
        "\u6162",
        "\u6015",
        "\u78C1",
        "\u500D",
        "\u7956",
        "\u7687",
        "\u4FC3",
        "\u975C",
        "\u88DC",
        "\u8A55",
        "\u7FFB",
        "\u8089",
        "\u8E10",
        "\u5C3C",
        "\u8863",
        "\u5BEC",
        "\u63DA",
        "\u68C9",
        "\u5E0C",
        "\u50B7",
        "\u64CD",
        "\u5782",
        "\u79CB",
        "\u5B9C",
        "\u6C2B",
        "\u5957",
        "\u7763",
        "\u632F",
        "\u67B6",
        "\u4EAE",
        "\u672B",
        "\u61B2",
        "\u6176",
        "\u7DE8",
        "\u725B",
        "\u89F8",
        "\u6620",
        "\u96F7",
        "\u92B7",
        "\u8A69",
        "\u5EA7",
        "\u5C45",
        "\u6293",
        "\u88C2",
        "\u80DE",
        "\u547C",
        "\u5A18",
        "\u666F",
        "\u5A01",
        "\u7DA0",
        "\u6676",
        "\u539A",
        "\u76DF",
        "\u8861",
        "\u96DE",
        "\u5B6B",
        "\u5EF6",
        "\u5371",
        "\u81A0",
        "\u5C4B",
        "\u9109",
        "\u81E8",
        "\u9678",
        "\u9867",
        "\u6389",
        "\u5440",
        "\u71C8",
        "\u6B72",
        "\u63AA",
        "\u675F",
        "\u8010",
        "\u5287",
        "\u7389",
        "\u8D99",
        "\u8DF3",
        "\u54E5",
        "\u5B63",
        "\u8AB2",
        "\u51F1",
        "\u80E1",
        "\u984D",
        "\u6B3E",
        "\u7D39",
        "\u5377",
        "\u9F4A",
        "\u5049",
        "\u84B8",
        "\u6B96",
        "\u6C38",
        "\u5B97",
        "\u82D7",
        "\u5DDD",
        "\u7210",
        "\u5CA9",
        "\u5F31",
        "\u96F6",
        "\u694A",
        "\u594F",
        "\u6CBF",
        "\u9732",
        "\u687F",
        "\u63A2",
        "\u6ED1",
        "\u93AE",
        "\u98EF",
        "\u6FC3",
        "\u822A",
        "\u61F7",
        "\u8D95",
        "\u5EAB",
        "\u596A",
        "\u4F0A",
        "\u9748",
        "\u7A05",
        "\u9014",
        "\u6EC5",
        "\u8CFD",
        "\u6B78",
        "\u53EC",
        "\u9F13",
        "\u64AD",
        "\u76E4",
        "\u88C1",
        "\u96AA",
        "\u5EB7",
        "\u552F",
        "\u9304",
        "\u83CC",
        "\u7D14",
        "\u501F",
        "\u7CD6",
        "\u84CB",
        "\u6A6B",
        "\u7B26",
        "\u79C1",
        "\u52AA",
        "\u5802",
        "\u57DF",
        "\u69CD",
        "\u6F64",
        "\u5E45",
        "\u54C8",
        "\u7ADF",
        "\u719F",
        "\u87F2",
        "\u6FA4",
        "\u8166",
        "\u58E4",
        "\u78B3",
        "\u6B50",
        "\u904D",
        "\u5074",
        "\u5BE8",
        "\u6562",
        "\u5FB9",
        "\u616E",
        "\u659C",
        "\u8584",
        "\u5EAD",
        "\u7D0D",
        "\u5F48",
        "\u98FC",
        "\u4F38",
        "\u6298",
        "\u9EA5",
        "\u6FD5",
        "\u6697",
        "\u8377",
        "\u74E6",
        "\u585E",
        "\u5E8A",
        "\u7BC9",
        "\u60E1",
        "\u6236",
        "\u8A2A",
        "\u5854",
        "\u5947",
        "\u900F",
        "\u6881",
        "\u5200",
        "\u65CB",
        "\u8DE1",
        "\u5361",
        "\u6C2F",
        "\u9047",
        "\u4EFD",
        "\u6BD2",
        "\u6CE5",
        "\u9000",
        "\u6D17",
        "\u64FA",
        "\u7070",
        "\u5F69",
        "\u8CE3",
        "\u8017",
        "\u590F",
        "\u64C7",
        "\u5FD9",
        "\u9285",
        "\u737B",
        "\u786C",
        "\u4E88",
        "\u7E41",
        "\u5708",
        "\u96EA",
        "\u51FD",
        "\u4EA6",
        "\u62BD",
        "\u7BC7",
        "\u9663",
        "\u9670",
        "\u4E01",
        "\u5C3A",
        "\u8FFD",
        "\u5806",
        "\u96C4",
        "\u8FCE",
        "\u6CDB",
        "\u7238",
        "\u6A13",
        "\u907F",
        "\u8B00",
        "\u5678",
        "\u91CE",
        "\u8C6C",
        "\u65D7",
        "\u7D2F",
        "\u504F",
        "\u5178",
        "\u9928",
        "\u7D22",
        "\u79E6",
        "\u8102",
        "\u6F6E",
        "\u723A",
        "\u8C46",
        "\u5FFD",
        "\u6258",
        "\u9A5A",
        "\u5851",
        "\u907A",
        "\u6108",
        "\u6731",
        "\u66FF",
        "\u7E96",
        "\u7C97",
        "\u50BE",
        "\u5C1A",
        "\u75DB",
        "\u695A",
        "\u8B1D",
        "\u596E",
        "\u8CFC",
        "\u78E8",
        "\u541B",
        "\u6C60",
        "\u65C1",
        "\u788E",
        "\u9AA8",
        "\u76E3",
        "\u6355",
        "\u5F1F",
        "\u66B4",
        "\u5272",
        "\u8CAB",
        "\u6B8A",
        "\u91CB",
        "\u8A5E",
        "\u4EA1",
        "\u58C1",
        "\u9813",
        "\u5BF6",
        "\u5348",
        "\u5875",
        "\u805E",
        "\u63ED",
        "\u70AE",
        "\u6B98",
        "\u51AC",
        "\u6A4B",
        "\u5A66",
        "\u8B66",
        "\u7D9C",
        "\u62DB",
        "\u5433",
        "\u4ED8",
        "\u6D6E",
        "\u906D",
        "\u5F90",
        "\u60A8",
        "\u6416",
        "\u8C37",
        "\u8D0A",
        "\u7BB1",
        "\u9694",
        "\u8A02",
        "\u7537",
        "\u5439",
        "\u5712",
        "\u7D1B",
        "\u5510",
        "\u6557",
        "\u5B8B",
        "\u73BB",
        "\u5DE8",
        "\u8015",
        "\u5766",
        "\u69AE",
        "\u9589",
        "\u7063",
        "\u9375",
        "\u51E1",
        "\u99D0",
        "\u934B",
        "\u6551",
        "\u6069",
        "\u525D",
        "\u51DD",
        "\u9E7C",
        "\u9F52",
        "\u622A",
        "\u7149",
        "\u9EBB",
        "\u7D21",
        "\u7981",
        "\u5EE2",
        "\u76DB",
        "\u7248",
        "\u7DE9",
        "\u6DE8",
        "\u775B",
        "\u660C",
        "\u5A5A",
        "\u6D89",
        "\u7B52",
        "\u5634",
        "\u63D2",
        "\u5CB8",
        "\u6717",
        "\u838A",
        "\u8857",
        "\u85CF",
        "\u59D1",
        "\u8CBF",
        "\u8150",
        "\u5974",
        "\u5566",
        "\u6163",
        "\u4E58",
        "\u5925",
        "\u6062",
        "\u52FB",
        "\u7D17",
        "\u624E",
        "\u8FAF",
        "\u8033",
        "\u5F6A",
        "\u81E3",
        "\u5104",
        "\u7483",
        "\u62B5",
        "\u8108",
        "\u79C0",
        "\u85A9",
        "\u4FC4",
        "\u7DB2",
        "\u821E",
        "\u5E97",
        "\u5674",
        "\u7E31",
        "\u5BF8",
        "\u6C57",
        "\u639B",
        "\u6D2A",
        "\u8CC0",
        "\u9583",
        "\u67EC",
        "\u7206",
        "\u70EF",
        "\u6D25",
        "\u7A3B",
        "\u7246",
        "\u8EDF",
        "\u52C7",
        "\u50CF",
        "\u6EFE",
        "\u5398",
        "\u8499",
        "\u82B3",
        "\u80AF",
        "\u5761",
        "\u67F1",
        "\u76EA",
        "\u817F",
        "\u5100",
        "\u65C5",
        "\u5C3E",
        "\u8ECB",
        "\u51B0",
        "\u8CA2",
        "\u767B",
        "\u9ECE",
        "\u524A",
        "\u947D",
        "\u52D2",
        "\u9003",
        "\u969C",
        "\u6C28",
        "\u90ED",
        "\u5CF0",
        "\u5E63",
        "\u6E2F",
        "\u4F0F",
        "\u8ECC",
        "\u755D",
        "\u7562",
        "\u64E6",
        "\u83AB",
        "\u523A",
        "\u6D6A",
        "\u79D8",
        "\u63F4",
        "\u682A",
        "\u5065",
        "\u552E",
        "\u80A1",
        "\u5CF6",
        "\u7518",
        "\u6CE1",
        "\u7761",
        "\u7AE5",
        "\u9444",
        "\u6E6F",
        "\u95A5",
        "\u4F11",
        "\u532F",
        "\u820D",
        "\u7267",
        "\u7E5E",
        "\u70B8",
        "\u54F2",
        "\u78F7",
        "\u7E3E",
        "\u670B",
        "\u6DE1",
        "\u5C16",
        "\u555F",
        "\u9677",
        "\u67F4",
        "\u5448",
        "\u5F92",
        "\u984F",
        "\u6DDA",
        "\u7A0D",
        "\u5FD8",
        "\u6CF5",
        "\u85CD",
        "\u62D6",
        "\u6D1E",
        "\u6388",
        "\u93E1",
        "\u8F9B",
        "\u58EF",
        "\u92D2",
        "\u8CA7",
        "\u865B",
        "\u5F4E",
        "\u6469",
        "\u6CF0",
        "\u5E7C",
        "\u5EF7",
        "\u5C0A",
        "\u7A97",
        "\u7DB1",
        "\u5F04",
        "\u96B8",
        "\u7591",
        "\u6C0F",
        "\u5BAE",
        "\u59D0",
        "\u9707",
        "\u745E",
        "\u602A",
        "\u5C24",
        "\u7434",
        "\u5FAA",
        "\u63CF",
        "\u819C",
        "\u9055",
        "\u593E",
        "\u8170",
        "\u7DE3",
        "\u73E0",
        "\u7AAE",
        "\u68EE",
        "\u679D",
        "\u7AF9",
        "\u6E9D",
        "\u50AC",
        "\u7E69",
        "\u61B6",
        "\u90A6",
        "\u5269",
        "\u5E78",
        "\u6F3F",
        "\u6B04",
        "\u64C1",
        "\u7259",
        "\u8CAF",
        "\u79AE",
        "\u6FFE",
        "\u9209",
        "\u7D0B",
        "\u7F77",
        "\u62CD",
        "\u54B1",
        "\u558A",
        "\u8896",
        "\u57C3",
        "\u52E4",
        "\u7F70",
        "\u7126",
        "\u6F5B",
        "\u4F0D",
        "\u58A8",
        "\u6B32",
        "\u7E2B",
        "\u59D3",
        "\u520A",
        "\u98FD",
        "\u4EFF",
        "\u734E",
        "\u92C1",
        "\u9B3C",
        "\u9E97",
        "\u8DE8",
        "\u9ED8",
        "\u6316",
        "\u93C8",
        "\u6383",
        "\u559D",
        "\u888B",
        "\u70AD",
        "\u6C61",
        "\u5E55",
        "\u8AF8",
        "\u5F27",
        "\u52F5",
        "\u6885",
        "\u5976",
        "\u6F54",
        "\u707D",
        "\u821F",
        "\u9451",
        "\u82EF",
        "\u8A1F",
        "\u62B1",
        "\u6BC0",
        "\u61C2",
        "\u5BD2",
        "\u667A",
        "\u57D4",
        "\u5BC4",
        "\u5C46",
        "\u8E8D",
        "\u6E21",
        "\u6311",
        "\u4E39",
        "\u8271",
        "\u8C9D",
        "\u78B0",
        "\u62D4",
        "\u7239",
        "\u6234",
        "\u78BC",
        "\u5922",
        "\u82BD",
        "\u7194",
        "\u8D64",
        "\u6F01",
        "\u54ED",
        "\u656C",
        "\u9846",
        "\u5954",
        "\u925B",
        "\u4EF2",
        "\u864E",
        "\u7A00",
        "\u59B9",
        "\u4E4F",
        "\u73CD",
        "\u7533",
        "\u684C",
        "\u9075",
        "\u5141",
        "\u9686",
        "\u87BA",
        "\u5009",
        "\u9B4F",
        "\u92B3",
        "\u66C9",
        "\u6C2E",
        "\u517C",
        "\u96B1",
        "\u7919",
        "\u8D6B",
        "\u64A5",
        "\u5FE0",
        "\u8085",
        "\u7F38",
        "\u727D",
        "\u6436",
        "\u535A",
        "\u5DE7",
        "\u6BBC",
        "\u5144",
        "\u675C",
        "\u8A0A",
        "\u8AA0",
        "\u78A7",
        "\u7965",
        "\u67EF",
        "\u9801",
        "\u5DE1",
        "\u77E9",
        "\u60B2",
        "\u704C",
        "\u9F61",
        "\u502B",
        "\u7968",
        "\u5C0B",
        "\u6842",
        "\u92EA",
        "\u8056",
        "\u6050",
        "\u6070",
        "\u912D",
        "\u8DA3",
        "\u62AC",
        "\u8352",
        "\u9A30",
        "\u8CBC",
        "\u67D4",
        "\u6EF4",
        "\u731B",
        "\u95CA",
        "\u8F1B",
        "\u59BB",
        "\u586B",
        "\u64A4",
        "\u5132",
        "\u7C3D",
        "\u9B27",
        "\u64FE",
        "\u7D2B",
        "\u7802",
        "\u905E",
        "\u6232",
        "\u540A",
        "\u9676",
        "\u4F10",
        "\u9935",
        "\u7642",
        "\u74F6",
        "\u5A46",
        "\u64AB",
        "\u81C2",
        "\u6478",
        "\u5FCD",
        "\u8766",
        "\u881F",
        "\u9130",
        "\u80F8",
        "\u978F",
        "\u64E0",
        "\u5076",
        "\u68C4",
        "\u69FD",
        "\u52C1",
        "\u4E73",
        "\u9127",
        "\u5409",
        "\u4EC1",
        "\u721B",
        "\u78DA",
        "\u79DF",
        "\u70CF",
        "\u8266",
        "\u4F34",
        "\u74DC",
        "\u6DFA",
        "\u4E19",
        "\u66AB",
        "\u71E5",
        "\u6A61",
        "\u67F3",
        "\u8FF7",
        "\u6696",
        "\u724C",
        "\u79E7",
        "\u81BD",
        "\u8A73",
        "\u7C27",
        "\u8E0F",
        "\u74F7",
        "\u8B5C",
        "\u5446",
        "\u8CD3",
        "\u7CCA",
        "\u6D1B",
        "\u8F1D",
        "\u61A4",
        "\u7AF6",
        "\u9699",
        "\u6012",
        "\u7C98",
        "\u4E43",
        "\u7DD2",
        "\u80A9",
        "\u7C4D",
        "\u654F",
        "\u5857",
        "\u7199",
        "\u7686",
        "\u5075",
        "\u61F8",
        "\u6398",
        "\u4EAB",
        "\u7CFE",
        "\u9192",
        "\u72C2",
        "\u9396",
        "\u6DC0",
        "\u6068",
        "\u7272",
        "\u9738",
        "\u722C",
        "\u8CDE",
        "\u9006",
        "\u73A9",
        "\u9675",
        "\u795D",
        "\u79D2",
        "\u6D59",
        "\u8C8C",
        "\u5F79",
        "\u5F7C",
        "\u6089",
        "\u9D28",
        "\u8DA8",
        "\u9CF3",
        "\u6668",
        "\u755C",
        "\u8F29",
        "\u79E9",
        "\u5375",
        "\u7F72",
        "\u68AF",
        "\u708E",
        "\u7058",
        "\u68CB",
        "\u9A45",
        "\u7BE9",
        "\u5CFD",
        "\u5192",
        "\u5565",
        "\u58FD",
        "\u8B6F",
        "\u6D78",
        "\u6CC9",
        "\u5E3D",
        "\u9072",
        "\u77FD",
        "\u7586",
        "\u8CB8",
        "\u6F0F",
        "\u7A3F",
        "\u51A0",
        "\u5AE9",
        "\u8105",
        "\u82AF",
        "\u7262",
        "\u53DB",
        "\u8755",
        "\u5967",
        "\u9CF4",
        "\u5DBA",
        "\u7F8A",
        "\u6191",
        "\u4E32",
        "\u5858",
        "\u7E6A",
        "\u9175",
        "\u878D",
        "\u76C6",
        "\u932B",
        "\u5EDF",
        "\u7C4C",
        "\u51CD",
        "\u8F14",
        "\u651D",
        "\u8972",
        "\u7B4B",
        "\u62D2",
        "\u50DA",
        "\u65F1",
        "\u9240",
        "\u9CE5",
        "\u6F06",
        "\u6C88",
        "\u7709",
        "\u758F",
        "\u6DFB",
        "\u68D2",
        "\u7A57",
        "\u785D",
        "\u97D3",
        "\u903C",
        "\u626D",
        "\u50D1",
        "\u6DBC",
        "\u633A",
        "\u7897",
        "\u683D",
        "\u7092",
        "\u676F",
        "\u60A3",
        "\u993E",
        "\u52F8",
        "\u8C6A",
        "\u907C",
        "\u52C3",
        "\u9D3B",
        "\u65E6",
        "\u540F",
        "\u62DC",
        "\u72D7",
        "\u57CB",
        "\u8F25",
        "\u63A9",
        "\u98F2",
        "\u642C",
        "\u7F75",
        "\u8FAD",
        "\u52FE",
        "\u6263",
        "\u4F30",
        "\u8523",
        "\u7D68",
        "\u9727",
        "\u4E08",
        "\u6735",
        "\u59C6",
        "\u64EC",
        "\u5B87",
        "\u8F2F",
        "\u965D",
        "\u96D5",
        "\u511F",
        "\u84C4",
        "\u5D07",
        "\u526A",
        "\u5021",
        "\u5EF3",
        "\u54AC",
        "\u99DB",
        "\u85AF",
        "\u5237",
        "\u65A5",
        "\u756A",
        "\u8CE6",
        "\u5949",
        "\u4F5B",
        "\u6F86",
        "\u6F2B",
        "\u66FC",
        "\u6247",
        "\u9223",
        "\u6843",
        "\u6276",
        "\u4ED4",
        "\u8FD4",
        "\u4FD7",
        "\u8667",
        "\u8154",
        "\u978B",
        "\u68F1",
        "\u8986",
        "\u6846",
        "\u6084",
        "\u53D4",
        "\u649E",
        "\u9A19",
        "\u52D8",
        "\u65FA",
        "\u6CB8",
        "\u5B64",
        "\u5410",
        "\u5B5F",
        "\u6E20",
        "\u5C48",
        "\u75BE",
        "\u5999",
        "\u60DC",
        "\u4EF0",
        "\u72E0",
        "\u8139",
        "\u8AE7",
        "\u62CB",
        "\u9EF4",
        "\u6851",
        "\u5D17",
        "\u561B",
        "\u8870",
        "\u76DC",
        "\u6EF2",
        "\u81DF",
        "\u8CF4",
        "\u6E67",
        "\u751C",
        "\u66F9",
        "\u95B1",
        "\u808C",
        "\u54E9",
        "\u53B2",
        "\u70F4",
        "\u7DEF",
        "\u6BC5",
        "\u6628",
        "\u507D",
        "\u75C7",
        "\u716E",
        "\u5606",
        "\u91D8",
        "\u642D",
        "\u8396",
        "\u7C60",
        "\u9177",
        "\u5077",
        "\u5F13",
        "\u9310",
        "\u6046",
        "\u5091",
        "\u5751",
        "\u9F3B",
        "\u7FFC",
        "\u7DB8",
        "\u6558",
        "\u7344",
        "\u902E",
        "\u7F50",
        "\u7D61",
        "\u68DA",
        "\u6291",
        "\u81A8",
        "\u852C",
        "\u5BFA",
        "\u9A5F",
        "\u7A46",
        "\u51B6",
        "\u67AF",
        "\u518A",
        "\u5C4D",
        "\u51F8",
        "\u7D33",
        "\u576F",
        "\u72A7",
        "\u7130",
        "\u8F5F",
        "\u6B23",
        "\u6649",
        "\u7626",
        "\u79A6",
        "\u9320",
        "\u9326",
        "\u55AA",
        "\u65EC",
        "\u935B",
        "\u58DF",
        "\u641C",
        "\u64B2",
        "\u9080",
        "\u4EAD",
        "\u916F",
        "\u9081",
        "\u8212",
        "\u8106",
        "\u9176",
        "\u9592",
        "\u6182",
        "\u915A",
        "\u9811",
        "\u7FBD",
        "\u6F32",
        "\u5378",
        "\u4ED7",
        "\u966A",
        "\u95E2",
        "\u61F2",
        "\u676D",
        "\u59DA",
        "\u809A",
        "\u6349",
        "\u98C4",
        "\u6F02",
        "\u6606",
        "\u6B3A",
        "\u543E",
        "\u90CE",
        "\u70F7",
        "\u6C41",
        "\u5475",
        "\u98FE",
        "\u856D",
        "\u96C5",
        "\u90F5",
        "\u9077",
        "\u71D5",
        "\u6492",
        "\u59FB",
        "\u8D74",
        "\u5BB4",
        "\u7169",
        "\u50B5",
        "\u5E33",
        "\u6591",
        "\u9234",
        "\u65E8",
        "\u9187",
        "\u8463",
        "\u9905",
        "\u96DB",
        "\u59FF",
        "\u62CC",
        "\u5085",
        "\u8179",
        "\u59A5",
        "\u63C9",
        "\u8CE2",
        "\u62C6",
        "\u6B6A",
        "\u8461",
        "\u80FA",
        "\u4E1F",
        "\u6D69",
        "\u5FBD",
        "\u6602",
        "\u588A",
        "\u64CB",
        "\u89BD",
        "\u8CAA",
        "\u6170",
        "\u7E73",
        "\u6C6A",
        "\u614C",
        "\u99AE",
        "\u8AFE",
        "\u59DC",
        "\u8ABC",
        "\u5147",
        "\u52A3",
        "\u8AA3",
        "\u8000",
        "\u660F",
        "\u8EBA",
        "\u76C8",
        "\u9A0E",
        "\u55AC",
        "\u6EAA",
        "\u53E2",
        "\u76E7",
        "\u62B9",
        "\u60B6",
        "\u8AEE",
        "\u522E",
        "\u99D5",
        "\u7E9C",
        "\u609F",
        "\u6458",
        "\u927A",
        "\u64F2",
        "\u9817",
        "\u5E7B",
        "\u67C4",
        "\u60E0",
        "\u6158",
        "\u4F73",
        "\u4EC7",
        "\u81D8",
        "\u7AA9",
        "\u6ECC",
        "\u528D",
        "\u77A7",
        "\u5821",
        "\u6F51",
        "\u8525",
        "\u7F69",
        "\u970D",
        "\u6488",
        "\u80CE",
        "\u84BC",
        "\u6FF1",
        "\u5006",
        "\u6345",
        "\u6E58",
        "\u780D",
        "\u971E",
        "\u90B5",
        "\u8404",
        "\u760B",
        "\u6DEE",
        "\u9042",
        "\u718A",
        "\u7CDE",
        "\u70D8",
        "\u5BBF",
        "\u6A94",
        "\u6208",
        "\u99C1",
        "\u5AC2",
        "\u88D5",
        "\u5F99",
        "\u7BAD",
        "\u6350",
        "\u8178",
        "\u6490",
        "\u66EC",
        "\u8FA8",
        "\u6BBF",
        "\u84EE",
        "\u6524",
        "\u652A",
        "\u91AC",
        "\u5C4F",
        "\u75AB",
        "\u54C0",
        "\u8521",
        "\u5835",
        "\u6CAB",
        "\u76BA",
        "\u66A2",
        "\u758A",
        "\u95A3",
        "\u840A",
        "\u6572",
        "\u8F44",
        "\u9264",
        "\u75D5",
        "\u58E9",
        "\u5DF7",
        "\u9913",
        "\u798D",
        "\u4E18",
        "\u7384",
        "\u6E9C",
        "\u66F0",
        "\u908F",
        "\u5F6D",
        "\u5617",
        "\u537F",
        "\u59A8",
        "\u8247",
        "\u541E",
        "\u97CB",
        "\u6028",
        "\u77EE",
        "\u6B47"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/korean.json
  var require_korean = __commonJS({
    "node_modules/bip39/src/wordlists/korean.json"(exports2, module2) {
      module2.exports = [
        "\u1100\u1161\u1100\u1167\u11A8",
        "\u1100\u1161\u1101\u1173\u11B7",
        "\u1100\u1161\u1102\u1161\u11AB",
        "\u1100\u1161\u1102\u1173\u11BC",
        "\u1100\u1161\u1103\u1173\u11A8",
        "\u1100\u1161\u1105\u1173\u110E\u1175\u11B7",
        "\u1100\u1161\u1106\u116E\u11B7",
        "\u1100\u1161\u1107\u1161\u11BC",
        "\u1100\u1161\u1109\u1161\u11BC",
        "\u1100\u1161\u1109\u1173\u11B7",
        "\u1100\u1161\u110B\u116E\u11AB\u1103\u1166",
        "\u1100\u1161\u110B\u1173\u11AF",
        "\u1100\u1161\u110B\u1175\u1103\u1173",
        "\u1100\u1161\u110B\u1175\u11B8",
        "\u1100\u1161\u110C\u1161\u11BC",
        "\u1100\u1161\u110C\u1165\u11BC",
        "\u1100\u1161\u110C\u1169\u11A8",
        "\u1100\u1161\u110C\u116E\u11A8",
        "\u1100\u1161\u11A8\u110B\u1169",
        "\u1100\u1161\u11A8\u110C\u1161",
        "\u1100\u1161\u11AB\u1100\u1167\u11A8",
        "\u1100\u1161\u11AB\u1107\u116E",
        "\u1100\u1161\u11AB\u1109\u1165\u11B8",
        "\u1100\u1161\u11AB\u110C\u1161\u11BC",
        "\u1100\u1161\u11AB\u110C\u1165\u11B8",
        "\u1100\u1161\u11AB\u1111\u1161\u11AB",
        "\u1100\u1161\u11AF\u1103\u1173\u11BC",
        "\u1100\u1161\u11AF\u1107\u1175",
        "\u1100\u1161\u11AF\u1109\u1162\u11A8",
        "\u1100\u1161\u11AF\u110C\u1173\u11BC",
        "\u1100\u1161\u11B7\u1100\u1161\u11A8",
        "\u1100\u1161\u11B7\u1100\u1175",
        "\u1100\u1161\u11B7\u1109\u1169",
        "\u1100\u1161\u11B7\u1109\u116E\u1109\u1165\u11BC",
        "\u1100\u1161\u11B7\u110C\u1161",
        "\u1100\u1161\u11B7\u110C\u1165\u11BC",
        "\u1100\u1161\u11B8\u110C\u1161\u1100\u1175",
        "\u1100\u1161\u11BC\u1102\u1161\u11B7",
        "\u1100\u1161\u11BC\u1103\u1161\u11BC",
        "\u1100\u1161\u11BC\u1103\u1169",
        "\u1100\u1161\u11BC\u1105\u1167\u11A8\u1112\u1175",
        "\u1100\u1161\u11BC\u1107\u1167\u11AB",
        "\u1100\u1161\u11BC\u1107\u116E\u11A8",
        "\u1100\u1161\u11BC\u1109\u1161",
        "\u1100\u1161\u11BC\u1109\u116E\u1105\u1163\u11BC",
        "\u1100\u1161\u11BC\u110B\u1161\u110C\u1175",
        "\u1100\u1161\u11BC\u110B\u116F\u11AB\u1103\u1169",
        "\u1100\u1161\u11BC\u110B\u1174",
        "\u1100\u1161\u11BC\u110C\u1166",
        "\u1100\u1161\u11BC\u110C\u1169",
        "\u1100\u1161\u11C0\u110B\u1175",
        "\u1100\u1162\u1100\u116E\u1105\u1175",
        "\u1100\u1162\u1102\u1161\u1105\u1175",
        "\u1100\u1162\u1107\u1161\u11BC",
        "\u1100\u1162\u1107\u1167\u11AF",
        "\u1100\u1162\u1109\u1165\u11AB",
        "\u1100\u1162\u1109\u1165\u11BC",
        "\u1100\u1162\u110B\u1175\u11AB",
        "\u1100\u1162\u11A8\u1100\u116A\u11AB\u110C\u1165\u11A8",
        "\u1100\u1165\u1109\u1175\u11AF",
        "\u1100\u1165\u110B\u1162\u11A8",
        "\u1100\u1165\u110B\u116E\u11AF",
        "\u1100\u1165\u110C\u1175\u11BA",
        "\u1100\u1165\u1111\u116E\u11B7",
        "\u1100\u1165\u11A8\u110C\u1165\u11BC",
        "\u1100\u1165\u11AB\u1100\u1161\u11BC",
        "\u1100\u1165\u11AB\u1106\u116E\u11AF",
        "\u1100\u1165\u11AB\u1109\u1165\u11AF",
        "\u1100\u1165\u11AB\u110C\u1169",
        "\u1100\u1165\u11AB\u110E\u116E\u11A8",
        "\u1100\u1165\u11AF\u110B\u1173\u11B7",
        "\u1100\u1165\u11B7\u1109\u1161",
        "\u1100\u1165\u11B7\u1110\u1169",
        "\u1100\u1166\u1109\u1175\u1111\u1161\u11AB",
        "\u1100\u1166\u110B\u1175\u11B7",
        "\u1100\u1167\u110B\u116E\u11AF",
        "\u1100\u1167\u11AB\u1112\u1162",
        "\u1100\u1167\u11AF\u1100\u116A",
        "\u1100\u1167\u11AF\u1100\u116E\u11A8",
        "\u1100\u1167\u11AF\u1105\u1169\u11AB",
        "\u1100\u1167\u11AF\u1109\u1165\u11A8",
        "\u1100\u1167\u11AF\u1109\u1173\u11BC",
        "\u1100\u1167\u11AF\u1109\u1175\u11B7",
        "\u1100\u1167\u11AF\u110C\u1165\u11BC",
        "\u1100\u1167\u11AF\u1112\u1169\u11AB",
        "\u1100\u1167\u11BC\u1100\u1168",
        "\u1100\u1167\u11BC\u1100\u1169",
        "\u1100\u1167\u11BC\u1100\u1175",
        "\u1100\u1167\u11BC\u1105\u1167\u11A8",
        "\u1100\u1167\u11BC\u1107\u1169\u11A8\u1100\u116E\u11BC",
        "\u1100\u1167\u11BC\u1107\u1175",
        "\u1100\u1167\u11BC\u1109\u1161\u11BC\u1103\u1169",
        "\u1100\u1167\u11BC\u110B\u1167\u11BC",
        "\u1100\u1167\u11BC\u110B\u116E",
        "\u1100\u1167\u11BC\u110C\u1162\u11BC",
        "\u1100\u1167\u11BC\u110C\u1166",
        "\u1100\u1167\u11BC\u110C\u116E",
        "\u1100\u1167\u11BC\u110E\u1161\u11AF",
        "\u1100\u1167\u11BC\u110E\u1175",
        "\u1100\u1167\u11BC\u1112\u1163\u11BC",
        "\u1100\u1167\u11BC\u1112\u1165\u11B7",
        "\u1100\u1168\u1100\u1169\u11A8",
        "\u1100\u1168\u1103\u1161\u11AB",
        "\u1100\u1168\u1105\u1161\u11AB",
        "\u1100\u1168\u1109\u1161\u11AB",
        "\u1100\u1168\u1109\u1169\u11A8",
        "\u1100\u1168\u110B\u1163\u11A8",
        "\u1100\u1168\u110C\u1165\u11AF",
        "\u1100\u1168\u110E\u1173\u11BC",
        "\u1100\u1168\u1112\u116C\u11A8",
        "\u1100\u1169\u1100\u1162\u11A8",
        "\u1100\u1169\u1100\u116E\u1105\u1167",
        "\u1100\u1169\u1100\u116E\u11BC",
        "\u1100\u1169\u1100\u1173\u11B8",
        "\u1100\u1169\u1103\u1173\u11BC\u1112\u1161\u11A8\u1109\u1162\u11BC",
        "\u1100\u1169\u1106\u116E\u1109\u1175\u11AB",
        "\u1100\u1169\u1106\u1175\u11AB",
        "\u1100\u1169\u110B\u1163\u11BC\u110B\u1175",
        "\u1100\u1169\u110C\u1161\u11BC",
        "\u1100\u1169\u110C\u1165\u11AB",
        "\u1100\u1169\u110C\u1175\u11B8",
        "\u1100\u1169\u110E\u116E\u11BA\u1100\u1161\u1105\u116E",
        "\u1100\u1169\u1110\u1169\u11BC",
        "\u1100\u1169\u1112\u1163\u11BC",
        "\u1100\u1169\u11A8\u1109\u1175\u11A8",
        "\u1100\u1169\u11AF\u1106\u1169\u11A8",
        "\u1100\u1169\u11AF\u110D\u1161\u1100\u1175",
        "\u1100\u1169\u11AF\u1111\u1173",
        "\u1100\u1169\u11BC\u1100\u1161\u11AB",
        "\u1100\u1169\u11BC\u1100\u1162",
        "\u1100\u1169\u11BC\u1100\u1167\u11A8",
        "\u1100\u1169\u11BC\u1100\u116E\u11AB",
        "\u1100\u1169\u11BC\u1100\u1173\u11B8",
        "\u1100\u1169\u11BC\u1100\u1175",
        "\u1100\u1169\u11BC\u1103\u1169\u11BC",
        "\u1100\u1169\u11BC\u1106\u116E\u110B\u116F\u11AB",
        "\u1100\u1169\u11BC\u1107\u116E",
        "\u1100\u1169\u11BC\u1109\u1161",
        "\u1100\u1169\u11BC\u1109\u1175\u11A8",
        "\u1100\u1169\u11BC\u110B\u1165\u11B8",
        "\u1100\u1169\u11BC\u110B\u1167\u11AB",
        "\u1100\u1169\u11BC\u110B\u116F\u11AB",
        "\u1100\u1169\u11BC\u110C\u1161\u11BC",
        "\u1100\u1169\u11BC\u110D\u1161",
        "\u1100\u1169\u11BC\u110E\u1162\u11A8",
        "\u1100\u1169\u11BC\u1110\u1169\u11BC",
        "\u1100\u1169\u11BC\u1111\u1169",
        "\u1100\u1169\u11BC\u1112\u1161\u11BC",
        "\u1100\u1169\u11BC\u1112\u1172\u110B\u1175\u11AF",
        "\u1100\u116A\u1106\u1169\u11A8",
        "\u1100\u116A\u110B\u1175\u11AF",
        "\u1100\u116A\u110C\u1161\u11BC",
        "\u1100\u116A\u110C\u1165\u11BC",
        "\u1100\u116A\u1112\u1161\u11A8",
        "\u1100\u116A\u11AB\u1100\u1162\u11A8",
        "\u1100\u116A\u11AB\u1100\u1168",
        "\u1100\u116A\u11AB\u1100\u116A\u11BC",
        "\u1100\u116A\u11AB\u1102\u1167\u11B7",
        "\u1100\u116A\u11AB\u1105\u1161\u11B7",
        "\u1100\u116A\u11AB\u1105\u1167\u11AB",
        "\u1100\u116A\u11AB\u1105\u1175",
        "\u1100\u116A\u11AB\u1109\u1173\u11B8",
        "\u1100\u116A\u11AB\u1109\u1175\u11B7",
        "\u1100\u116A\u11AB\u110C\u1165\u11B7",
        "\u1100\u116A\u11AB\u110E\u1161\u11AF",
        "\u1100\u116A\u11BC\u1100\u1167\u11BC",
        "\u1100\u116A\u11BC\u1100\u1169",
        "\u1100\u116A\u11BC\u110C\u1161\u11BC",
        "\u1100\u116A\u11BC\u110C\u116E",
        "\u1100\u116C\u1105\u1169\u110B\u116E\u11B7",
        "\u1100\u116C\u11BC\u110C\u1161\u11BC\u1112\u1175",
        "\u1100\u116D\u1100\u116A\u1109\u1165",
        "\u1100\u116D\u1106\u116E\u11AB",
        "\u1100\u116D\u1107\u1169\u11A8",
        "\u1100\u116D\u1109\u1175\u11AF",
        "\u1100\u116D\u110B\u1163\u11BC",
        "\u1100\u116D\u110B\u1172\u11A8",
        "\u1100\u116D\u110C\u1161\u11BC",
        "\u1100\u116D\u110C\u1175\u11A8",
        "\u1100\u116D\u1110\u1169\u11BC",
        "\u1100\u116D\u1112\u116A\u11AB",
        "\u1100\u116D\u1112\u116E\u11AB",
        "\u1100\u116E\u1100\u1167\u11BC",
        "\u1100\u116E\u1105\u1173\u11B7",
        "\u1100\u116E\u1106\u1165\u11BC",
        "\u1100\u116E\u1107\u1167\u11AF",
        "\u1100\u116E\u1107\u116E\u11AB",
        "\u1100\u116E\u1109\u1165\u11A8",
        "\u1100\u116E\u1109\u1165\u11BC",
        "\u1100\u116E\u1109\u1169\u11A8",
        "\u1100\u116E\u110B\u1167\u11A8",
        "\u1100\u116E\u110B\u1175\u11B8",
        "\u1100\u116E\u110E\u1165\u11BC",
        "\u1100\u116E\u110E\u1166\u110C\u1165\u11A8",
        "\u1100\u116E\u11A8\u1100\u1161",
        "\u1100\u116E\u11A8\u1100\u1175",
        "\u1100\u116E\u11A8\u1102\u1162",
        "\u1100\u116E\u11A8\u1105\u1175\u11B8",
        "\u1100\u116E\u11A8\u1106\u116E\u11AF",
        "\u1100\u116E\u11A8\u1106\u1175\u11AB",
        "\u1100\u116E\u11A8\u1109\u116E",
        "\u1100\u116E\u11A8\u110B\u1165",
        "\u1100\u116E\u11A8\u110B\u116A\u11BC",
        "\u1100\u116E\u11A8\u110C\u1165\u11A8",
        "\u1100\u116E\u11A8\u110C\u1166",
        "\u1100\u116E\u11A8\u1112\u116C",
        "\u1100\u116E\u11AB\u1103\u1162",
        "\u1100\u116E\u11AB\u1109\u1161",
        "\u1100\u116E\u11AB\u110B\u1175\u11AB",
        "\u1100\u116E\u11BC\u1100\u1173\u11A8\u110C\u1165\u11A8",
        "\u1100\u116F\u11AB\u1105\u1175",
        "\u1100\u116F\u11AB\u110B\u1171",
        "\u1100\u116F\u11AB\u1110\u116E",
        "\u1100\u1171\u1100\u116E\u11A8",
        "\u1100\u1171\u1109\u1175\u11AB",
        "\u1100\u1172\u110C\u1165\u11BC",
        "\u1100\u1172\u110E\u1175\u11A8",
        "\u1100\u1172\u11AB\u1112\u1167\u11BC",
        "\u1100\u1173\u1102\u1161\u11AF",
        "\u1100\u1173\u1102\u1163\u11BC",
        "\u1100\u1173\u1102\u1173\u11AF",
        "\u1100\u1173\u1105\u1165\u1102\u1161",
        "\u1100\u1173\u1105\u116E\u11B8",
        "\u1100\u1173\u1105\u1173\u11BA",
        "\u1100\u1173\u1105\u1175\u11B7",
        "\u1100\u1173\u110C\u1166\u1109\u1165\u110B\u1163",
        "\u1100\u1173\u1110\u1169\u1105\u1169\u11A8",
        "\u1100\u1173\u11A8\u1107\u1169\u11A8",
        "\u1100\u1173\u11A8\u1112\u1175",
        "\u1100\u1173\u11AB\u1100\u1165",
        "\u1100\u1173\u11AB\u1100\u116D",
        "\u1100\u1173\u11AB\u1105\u1162",
        "\u1100\u1173\u11AB\u1105\u1169",
        "\u1100\u1173\u11AB\u1106\u116E",
        "\u1100\u1173\u11AB\u1107\u1169\u11AB",
        "\u1100\u1173\u11AB\u110B\u116F\u11AB",
        "\u1100\u1173\u11AB\u110B\u1172\u11A8",
        "\u1100\u1173\u11AB\u110E\u1165",
        "\u1100\u1173\u11AF\u110A\u1175",
        "\u1100\u1173\u11AF\u110C\u1161",
        "\u1100\u1173\u11B7\u1100\u1161\u11BC\u1109\u1161\u11AB",
        "\u1100\u1173\u11B7\u1100\u1169",
        "\u1100\u1173\u11B7\u1102\u1167\u11AB",
        "\u1100\u1173\u11B7\u1106\u1166\u1103\u1161\u11AF",
        "\u1100\u1173\u11B7\u110B\u1162\u11A8",
        "\u1100\u1173\u11B7\u110B\u1167\u11AB",
        "\u1100\u1173\u11B7\u110B\u116D\u110B\u1175\u11AF",
        "\u1100\u1173\u11B7\u110C\u1175",
        "\u1100\u1173\u11BC\u110C\u1165\u11BC\u110C\u1165\u11A8",
        "\u1100\u1175\u1100\u1161\u11AB",
        "\u1100\u1175\u1100\u116A\u11AB",
        "\u1100\u1175\u1102\u1167\u11B7",
        "\u1100\u1175\u1102\u1173\u11BC",
        "\u1100\u1175\u1103\u1169\u11A8\u1100\u116D",
        "\u1100\u1175\u1103\u116E\u11BC",
        "\u1100\u1175\u1105\u1169\u11A8",
        "\u1100\u1175\u1105\u1173\u11B7",
        "\u1100\u1175\u1107\u1165\u11B8",
        "\u1100\u1175\u1107\u1169\u11AB",
        "\u1100\u1175\u1107\u116E\u11AB",
        "\u1100\u1175\u1108\u1173\u11B7",
        "\u1100\u1175\u1109\u116E\u11A8\u1109\u1161",
        "\u1100\u1175\u1109\u116E\u11AF",
        "\u1100\u1175\u110B\u1165\u11A8",
        "\u1100\u1175\u110B\u1165\u11B8",
        "\u1100\u1175\u110B\u1169\u11AB",
        "\u1100\u1175\u110B\u116E\u11AB",
        "\u1100\u1175\u110B\u116F\u11AB",
        "\u1100\u1175\u110C\u1165\u11A8",
        "\u1100\u1175\u110C\u116E\u11AB",
        "\u1100\u1175\u110E\u1175\u11B7",
        "\u1100\u1175\u1112\u1169\u11AB",
        "\u1100\u1175\u1112\u116C\u11A8",
        "\u1100\u1175\u11AB\u1100\u1173\u11B8",
        "\u1100\u1175\u11AB\u110C\u1161\u11BC",
        "\u1100\u1175\u11AF\u110B\u1175",
        "\u1100\u1175\u11B7\u1107\u1161\u11B8",
        "\u1100\u1175\u11B7\u110E\u1175",
        "\u1100\u1175\u11B7\u1111\u1169\u1100\u1169\u11BC\u1112\u1161\u11BC",
        "\u1101\u1161\u11A8\u1103\u116E\u1100\u1175",
        "\u1101\u1161\u11B7\u1108\u1161\u11A8",
        "\u1101\u1162\u1103\u1161\u11AF\u110B\u1173\u11B7",
        "\u1101\u1162\u1109\u1169\u1100\u1173\u11B7",
        "\u1101\u1165\u11B8\u110C\u1175\u11AF",
        "\u1101\u1169\u11A8\u1103\u1162\u1100\u1175",
        "\u1101\u1169\u11BE\u110B\u1175\u11C1",
        "\u1102\u1161\u1103\u1173\u11AF\u110B\u1175",
        "\u1102\u1161\u1105\u1161\u11AB\u1112\u1175",
        "\u1102\u1161\u1106\u1165\u110C\u1175",
        "\u1102\u1161\u1106\u116E\u11AF",
        "\u1102\u1161\u110E\u1175\u11B7\u1107\u1161\u11AB",
        "\u1102\u1161\u1112\u1173\u11AF",
        "\u1102\u1161\u11A8\u110B\u1167\u11B8",
        "\u1102\u1161\u11AB\u1107\u1161\u11BC",
        "\u1102\u1161\u11AF\u1100\u1162",
        "\u1102\u1161\u11AF\u110A\u1175",
        "\u1102\u1161\u11AF\u110D\u1161",
        "\u1102\u1161\u11B7\u1102\u1167",
        "\u1102\u1161\u11B7\u1103\u1162\u1106\u116E\u11AB",
        "\u1102\u1161\u11B7\u1106\u1162",
        "\u1102\u1161\u11B7\u1109\u1161\u11AB",
        "\u1102\u1161\u11B7\u110C\u1161",
        "\u1102\u1161\u11B7\u1111\u1167\u11AB",
        "\u1102\u1161\u11B7\u1112\u1161\u11A8\u1109\u1162\u11BC",
        "\u1102\u1161\u11BC\u1107\u1175",
        "\u1102\u1161\u11C0\u1106\u1161\u11AF",
        "\u1102\u1162\u1102\u1167\u11AB",
        "\u1102\u1162\u110B\u116D\u11BC",
        "\u1102\u1162\u110B\u1175\u11AF",
        "\u1102\u1162\u11B7\u1107\u1175",
        "\u1102\u1162\u11B7\u1109\u1162",
        "\u1102\u1162\u11BA\u1106\u116E\u11AF",
        "\u1102\u1162\u11BC\u1103\u1169\u11BC",
        "\u1102\u1162\u11BC\u1106\u1167\u11AB",
        "\u1102\u1162\u11BC\u1107\u1161\u11BC",
        "\u1102\u1162\u11BC\u110C\u1161\u11BC\u1100\u1169",
        "\u1102\u1166\u11A8\u1110\u1161\u110B\u1175",
        "\u1102\u1166\u11BA\u110D\u1162",
        "\u1102\u1169\u1103\u1169\u11BC",
        "\u1102\u1169\u1105\u1161\u11AB\u1109\u1162\u11A8",
        "\u1102\u1169\u1105\u1167\u11A8",
        "\u1102\u1169\u110B\u1175\u11AB",
        "\u1102\u1169\u11A8\u110B\u1173\u11B7",
        "\u1102\u1169\u11A8\u110E\u1161",
        "\u1102\u1169\u11A8\u1112\u116A",
        "\u1102\u1169\u11AB\u1105\u1175",
        "\u1102\u1169\u11AB\u1106\u116E\u11AB",
        "\u1102\u1169\u11AB\u110C\u1162\u11BC",
        "\u1102\u1169\u11AF\u110B\u1175",
        "\u1102\u1169\u11BC\u1100\u116E",
        "\u1102\u1169\u11BC\u1103\u1161\u11B7",
        "\u1102\u1169\u11BC\u1106\u1175\u11AB",
        "\u1102\u1169\u11BC\u1107\u116E",
        "\u1102\u1169\u11BC\u110B\u1165\u11B8",
        "\u1102\u1169\u11BC\u110C\u1161\u11BC",
        "\u1102\u1169\u11BC\u110E\u1169\u11AB",
        "\u1102\u1169\u11C1\u110B\u1175",
        "\u1102\u116E\u11AB\u1103\u1169\u11BC\u110C\u1161",
        "\u1102\u116E\u11AB\u1106\u116E\u11AF",
        "\u1102\u116E\u11AB\u110A\u1165\u11B8",
        "\u1102\u1172\u110B\u116D\u11A8",
        "\u1102\u1173\u1101\u1175\u11B7",
        "\u1102\u1173\u11A8\u1103\u1162",
        "\u1102\u1173\u11BC\u1103\u1169\u11BC\u110C\u1165\u11A8",
        "\u1102\u1173\u11BC\u1105\u1167\u11A8",
        "\u1103\u1161\u1107\u1161\u11BC",
        "\u1103\u1161\u110B\u1163\u11BC\u1109\u1165\u11BC",
        "\u1103\u1161\u110B\u1173\u11B7",
        "\u1103\u1161\u110B\u1175\u110B\u1165\u1110\u1173",
        "\u1103\u1161\u1112\u1162\u11BC",
        "\u1103\u1161\u11AB\u1100\u1168",
        "\u1103\u1161\u11AB\u1100\u1169\u11AF",
        "\u1103\u1161\u11AB\u1103\u1169\u11A8",
        "\u1103\u1161\u11AB\u1106\u1161\u11BA",
        "\u1103\u1161\u11AB\u1109\u116E\u11AB",
        "\u1103\u1161\u11AB\u110B\u1165",
        "\u1103\u1161\u11AB\u110B\u1171",
        "\u1103\u1161\u11AB\u110C\u1165\u11B7",
        "\u1103\u1161\u11AB\u110E\u1166",
        "\u1103\u1161\u11AB\u110E\u116E",
        "\u1103\u1161\u11AB\u1111\u1167\u11AB",
        "\u1103\u1161\u11AB\u1111\u116E\u11BC",
        "\u1103\u1161\u11AF\u1100\u1163\u11AF",
        "\u1103\u1161\u11AF\u1105\u1165",
        "\u1103\u1161\u11AF\u1105\u1167\u11A8",
        "\u1103\u1161\u11AF\u1105\u1175",
        "\u1103\u1161\u11B0\u1100\u1169\u1100\u1175",
        "\u1103\u1161\u11B7\u1103\u1161\u11BC",
        "\u1103\u1161\u11B7\u1107\u1162",
        "\u1103\u1161\u11B7\u110B\u116D",
        "\u1103\u1161\u11B7\u110B\u1175\u11B7",
        "\u1103\u1161\u11B8\u1107\u1167\u11AB",
        "\u1103\u1161\u11B8\u110C\u1161\u11BC",
        "\u1103\u1161\u11BC\u1100\u1173\u11AB",
        "\u1103\u1161\u11BC\u1107\u116E\u11AB\u1100\u1161\u11AB",
        "\u1103\u1161\u11BC\u110B\u1167\u11AB\u1112\u1175",
        "\u1103\u1161\u11BC\u110C\u1161\u11BC",
        "\u1103\u1162\u1100\u1172\u1106\u1169",
        "\u1103\u1162\u1102\u1161\u11BD",
        "\u1103\u1162\u1103\u1161\u11AB\u1112\u1175",
        "\u1103\u1162\u1103\u1161\u11B8",
        "\u1103\u1162\u1103\u1169\u1109\u1175",
        "\u1103\u1162\u1105\u1163\u11A8",
        "\u1103\u1162\u1105\u1163\u11BC",
        "\u1103\u1162\u1105\u1172\u11A8",
        "\u1103\u1162\u1106\u116E\u11AB",
        "\u1103\u1162\u1107\u116E\u1107\u116E\u11AB",
        "\u1103\u1162\u1109\u1175\u11AB",
        "\u1103\u1162\u110B\u1173\u11BC",
        "\u1103\u1162\u110C\u1161\u11BC",
        "\u1103\u1162\u110C\u1165\u11AB",
        "\u1103\u1162\u110C\u1165\u11B8",
        "\u1103\u1162\u110C\u116E\u11BC",
        "\u1103\u1162\u110E\u1162\u11A8",
        "\u1103\u1162\u110E\u116E\u11AF",
        "\u1103\u1162\u110E\u116E\u11BC",
        "\u1103\u1162\u1110\u1169\u11BC\u1105\u1167\u11BC",
        "\u1103\u1162\u1112\u1161\u11A8",
        "\u1103\u1162\u1112\u1161\u11AB\u1106\u1175\u11AB\u1100\u116E\u11A8",
        "\u1103\u1162\u1112\u1161\u11B8\u1109\u1175\u11AF",
        "\u1103\u1162\u1112\u1167\u11BC",
        "\u1103\u1165\u11BC\u110B\u1165\u1105\u1175",
        "\u1103\u1166\u110B\u1175\u1110\u1173",
        "\u1103\u1169\u1103\u1162\u110E\u1166",
        "\u1103\u1169\u1103\u1165\u11A8",
        "\u1103\u1169\u1103\u116E\u11A8",
        "\u1103\u1169\u1106\u1161\u11BC",
        "\u1103\u1169\u1109\u1165\u1100\u116A\u11AB",
        "\u1103\u1169\u1109\u1175\u11B7",
        "\u1103\u1169\u110B\u116E\u11B7",
        "\u1103\u1169\u110B\u1175\u11B8",
        "\u1103\u1169\u110C\u1161\u1100\u1175",
        "\u1103\u1169\u110C\u1165\u1112\u1175",
        "\u1103\u1169\u110C\u1165\u11AB",
        "\u1103\u1169\u110C\u116E\u11BC",
        "\u1103\u1169\u110E\u1161\u11A8",
        "\u1103\u1169\u11A8\u1100\u1161\u11B7",
        "\u1103\u1169\u11A8\u1105\u1175\u11B8",
        "\u1103\u1169\u11A8\u1109\u1165",
        "\u1103\u1169\u11A8\u110B\u1175\u11AF",
        "\u1103\u1169\u11A8\u110E\u1161\u11BC\u110C\u1165\u11A8",
        "\u1103\u1169\u11BC\u1112\u116A\u110E\u1162\u11A8",
        "\u1103\u1171\u11BA\u1106\u1169\u1109\u1173\u11B8",
        "\u1103\u1171\u11BA\u1109\u1161\u11AB",
        "\u1104\u1161\u11AF\u110B\u1161\u110B\u1175",
        "\u1106\u1161\u1102\u116E\u1105\u1161",
        "\u1106\u1161\u1102\u1173\u11AF",
        "\u1106\u1161\u1103\u1161\u11BC",
        "\u1106\u1161\u1105\u1161\u1110\u1169\u11AB",
        "\u1106\u1161\u1105\u1167\u11AB",
        "\u1106\u1161\u1106\u116E\u1105\u1175",
        "\u1106\u1161\u1109\u1161\u110C\u1175",
        "\u1106\u1161\u110B\u1163\u11A8",
        "\u1106\u1161\u110B\u116D\u1102\u1166\u110C\u1173",
        "\u1106\u1161\u110B\u1173\u11AF",
        "\u1106\u1161\u110B\u1173\u11B7",
        "\u1106\u1161\u110B\u1175\u110F\u1173",
        "\u1106\u1161\u110C\u116E\u11BC",
        "\u1106\u1161\u110C\u1175\u1106\u1161\u11A8",
        "\u1106\u1161\u110E\u1161\u11AB\u1100\u1161\u110C\u1175",
        "\u1106\u1161\u110E\u1161\u11AF",
        "\u1106\u1161\u1112\u1173\u11AB",
        "\u1106\u1161\u11A8\u1100\u1165\u11AF\u1105\u1175",
        "\u1106\u1161\u11A8\u1102\u1162",
        "\u1106\u1161\u11A8\u1109\u1161\u11BC",
        "\u1106\u1161\u11AB\u1102\u1161\u11B7",
        "\u1106\u1161\u11AB\u1103\u116E",
        "\u1106\u1161\u11AB\u1109\u1166",
        "\u1106\u1161\u11AB\u110B\u1163\u11A8",
        "\u1106\u1161\u11AB\u110B\u1175\u11AF",
        "\u1106\u1161\u11AB\u110C\u1165\u11B7",
        "\u1106\u1161\u11AB\u110C\u1169\u11A8",
        "\u1106\u1161\u11AB\u1112\u116A",
        "\u1106\u1161\u11AD\u110B\u1175",
        "\u1106\u1161\u11AF\u1100\u1175",
        "\u1106\u1161\u11AF\u110A\u1173\u11B7",
        "\u1106\u1161\u11AF\u1110\u116E",
        "\u1106\u1161\u11B7\u1103\u1162\u1105\u1169",
        "\u1106\u1161\u11BC\u110B\u116F\u11AB\u1100\u1167\u11BC",
        "\u1106\u1162\u1102\u1167\u11AB",
        "\u1106\u1162\u1103\u1161\u11AF",
        "\u1106\u1162\u1105\u1167\u11A8",
        "\u1106\u1162\u1107\u1165\u11AB",
        "\u1106\u1162\u1109\u1173\u110F\u1165\u11B7",
        "\u1106\u1162\u110B\u1175\u11AF",
        "\u1106\u1162\u110C\u1161\u11BC",
        "\u1106\u1162\u11A8\u110C\u116E",
        "\u1106\u1165\u11A8\u110B\u1175",
        "\u1106\u1165\u11AB\u110C\u1165",
        "\u1106\u1165\u11AB\u110C\u1175",
        "\u1106\u1165\u11AF\u1105\u1175",
        "\u1106\u1166\u110B\u1175\u11AF",
        "\u1106\u1167\u1102\u1173\u1105\u1175",
        "\u1106\u1167\u110E\u1175\u11AF",
        "\u1106\u1167\u11AB\u1103\u1161\u11B7",
        "\u1106\u1167\u11AF\u110E\u1175",
        "\u1106\u1167\u11BC\u1103\u1161\u11AB",
        "\u1106\u1167\u11BC\u1105\u1167\u11BC",
        "\u1106\u1167\u11BC\u110B\u1168",
        "\u1106\u1167\u11BC\u110B\u1174",
        "\u1106\u1167\u11BC\u110C\u1165\u11AF",
        "\u1106\u1167\u11BC\u110E\u1175\u11BC",
        "\u1106\u1167\u11BC\u1112\u1161\u11B7",
        "\u1106\u1169\u1100\u1173\u11B7",
        "\u1106\u1169\u1102\u1175\u1110\u1165",
        "\u1106\u1169\u1103\u1166\u11AF",
        "\u1106\u1169\u1103\u1173\u11AB",
        "\u1106\u1169\u1107\u1165\u11B7",
        "\u1106\u1169\u1109\u1173\u11B8",
        "\u1106\u1169\u110B\u1163\u11BC",
        "\u1106\u1169\u110B\u1175\u11B7",
        "\u1106\u1169\u110C\u1169\u1105\u1175",
        "\u1106\u1169\u110C\u1175\u11B8",
        "\u1106\u1169\u1110\u116E\u11BC\u110B\u1175",
        "\u1106\u1169\u11A8\u1100\u1165\u11AF\u110B\u1175",
        "\u1106\u1169\u11A8\u1105\u1169\u11A8",
        "\u1106\u1169\u11A8\u1109\u1161",
        "\u1106\u1169\u11A8\u1109\u1169\u1105\u1175",
        "\u1106\u1169\u11A8\u1109\u116E\u11B7",
        "\u1106\u1169\u11A8\u110C\u1165\u11A8",
        "\u1106\u1169\u11A8\u1111\u116D",
        "\u1106\u1169\u11AF\u1105\u1162",
        "\u1106\u1169\u11B7\u1106\u1162",
        "\u1106\u1169\u11B7\u1106\u116E\u1100\u1166",
        "\u1106\u1169\u11B7\u1109\u1161\u11AF",
        "\u1106\u1169\u11B7\u1109\u1169\u11A8",
        "\u1106\u1169\u11B7\u110C\u1175\u11BA",
        "\u1106\u1169\u11B7\u1110\u1169\u11BC",
        "\u1106\u1169\u11B8\u1109\u1175",
        "\u1106\u116E\u1100\u116A\u11AB\u1109\u1175\u11B7",
        "\u1106\u116E\u1100\u116E\u11BC\u1112\u116A",
        "\u1106\u116E\u1103\u1165\u110B\u1171",
        "\u1106\u116E\u1103\u1165\u11B7",
        "\u1106\u116E\u1105\u1173\u11C1",
        "\u1106\u116E\u1109\u1173\u11AB",
        "\u1106\u116E\u110B\u1165\u11BA",
        "\u1106\u116E\u110B\u1167\u11A8",
        "\u1106\u116E\u110B\u116D\u11BC",
        "\u1106\u116E\u110C\u1169\u1100\u1165\u11AB",
        "\u1106\u116E\u110C\u1175\u1100\u1162",
        "\u1106\u116E\u110E\u1165\u11A8",
        "\u1106\u116E\u11AB\u1100\u116E",
        "\u1106\u116E\u11AB\u1103\u1173\u11A8",
        "\u1106\u116E\u11AB\u1107\u1165\u11B8",
        "\u1106\u116E\u11AB\u1109\u1165",
        "\u1106\u116E\u11AB\u110C\u1166",
        "\u1106\u116E\u11AB\u1112\u1161\u11A8",
        "\u1106\u116E\u11AB\u1112\u116A",
        "\u1106\u116E\u11AF\u1100\u1161",
        "\u1106\u116E\u11AF\u1100\u1165\u11AB",
        "\u1106\u116E\u11AF\u1100\u1167\u11AF",
        "\u1106\u116E\u11AF\u1100\u1169\u1100\u1175",
        "\u1106\u116E\u11AF\u1105\u1169\u11AB",
        "\u1106\u116E\u11AF\u1105\u1175\u1112\u1161\u11A8",
        "\u1106\u116E\u11AF\u110B\u1173\u11B7",
        "\u1106\u116E\u11AF\u110C\u1175\u11AF",
        "\u1106\u116E\u11AF\u110E\u1166",
        "\u1106\u1175\u1100\u116E\u11A8",
        "\u1106\u1175\u1103\u1175\u110B\u1165",
        "\u1106\u1175\u1109\u1161\u110B\u1175\u11AF",
        "\u1106\u1175\u1109\u116E\u11AF",
        "\u1106\u1175\u110B\u1167\u11A8",
        "\u1106\u1175\u110B\u116D\u11BC\u1109\u1175\u11AF",
        "\u1106\u1175\u110B\u116E\u11B7",
        "\u1106\u1175\u110B\u1175\u11AB",
        "\u1106\u1175\u1110\u1175\u11BC",
        "\u1106\u1175\u1112\u1169\u11AB",
        "\u1106\u1175\u11AB\u1100\u1161\u11AB",
        "\u1106\u1175\u11AB\u110C\u1169\u11A8",
        "\u1106\u1175\u11AB\u110C\u116E",
        "\u1106\u1175\u11AE\u110B\u1173\u11B7",
        "\u1106\u1175\u11AF\u1100\u1161\u1105\u116E",
        "\u1106\u1175\u11AF\u1105\u1175\u1106\u1175\u1110\u1165",
        "\u1106\u1175\u11C0\u1107\u1161\u1103\u1161\u11A8",
        "\u1107\u1161\u1100\u1161\u110C\u1175",
        "\u1107\u1161\u1100\u116E\u1102\u1175",
        "\u1107\u1161\u1102\u1161\u1102\u1161",
        "\u1107\u1161\u1102\u1173\u11AF",
        "\u1107\u1161\u1103\u1161\u11A8",
        "\u1107\u1161\u1103\u1161\u11BA\u1100\u1161",
        "\u1107\u1161\u1105\u1161\u11B7",
        "\u1107\u1161\u110B\u1175\u1105\u1165\u1109\u1173",
        "\u1107\u1161\u1110\u1161\u11BC",
        "\u1107\u1161\u11A8\u1106\u116E\u11AF\u1100\u116A\u11AB",
        "\u1107\u1161\u11A8\u1109\u1161",
        "\u1107\u1161\u11A8\u1109\u116E",
        "\u1107\u1161\u11AB\u1103\u1162",
        "\u1107\u1161\u11AB\u1103\u1173\u1109\u1175",
        "\u1107\u1161\u11AB\u1106\u1161\u11AF",
        "\u1107\u1161\u11AB\u1107\u1161\u11AF",
        "\u1107\u1161\u11AB\u1109\u1165\u11BC",
        "\u1107\u1161\u11AB\u110B\u1173\u11BC",
        "\u1107\u1161\u11AB\u110C\u1161\u11BC",
        "\u1107\u1161\u11AB\u110C\u116E\u11A8",
        "\u1107\u1161\u11AB\u110C\u1175",
        "\u1107\u1161\u11AB\u110E\u1161\u11AB",
        "\u1107\u1161\u11AE\u110E\u1175\u11B7",
        "\u1107\u1161\u11AF\u1100\u1161\u1105\u1161\u11A8",
        "\u1107\u1161\u11AF\u1100\u1165\u11AF\u110B\u1173\u11B7",
        "\u1107\u1161\u11AF\u1100\u1167\u11AB",
        "\u1107\u1161\u11AF\u1103\u1161\u11AF",
        "\u1107\u1161\u11AF\u1105\u1166",
        "\u1107\u1161\u11AF\u1106\u1169\u11A8",
        "\u1107\u1161\u11AF\u1107\u1161\u1103\u1161\u11A8",
        "\u1107\u1161\u11AF\u1109\u1162\u11BC",
        "\u1107\u1161\u11AF\u110B\u1173\u11B7",
        "\u1107\u1161\u11AF\u110C\u1161\u1100\u116E\u11A8",
        "\u1107\u1161\u11AF\u110C\u1165\u11AB",
        "\u1107\u1161\u11AF\u1110\u1169\u11B8",
        "\u1107\u1161\u11AF\u1111\u116D",
        "\u1107\u1161\u11B7\u1112\u1161\u1102\u1173\u11AF",
        "\u1107\u1161\u11B8\u1100\u1173\u1105\u1173\u11BA",
        "\u1107\u1161\u11B8\u1106\u1161\u11BA",
        "\u1107\u1161\u11B8\u1109\u1161\u11BC",
        "\u1107\u1161\u11B8\u1109\u1169\u11C0",
        "\u1107\u1161\u11BC\u1100\u1173\u11B7",
        "\u1107\u1161\u11BC\u1106\u1167\u11AB",
        "\u1107\u1161\u11BC\u1106\u116E\u11AB",
        "\u1107\u1161\u11BC\u1107\u1161\u1103\u1161\u11A8",
        "\u1107\u1161\u11BC\u1107\u1165\u11B8",
        "\u1107\u1161\u11BC\u1109\u1169\u11BC",
        "\u1107\u1161\u11BC\u1109\u1175\u11A8",
        "\u1107\u1161\u11BC\u110B\u1161\u11AB",
        "\u1107\u1161\u11BC\u110B\u116E\u11AF",
        "\u1107\u1161\u11BC\u110C\u1175",
        "\u1107\u1161\u11BC\u1112\u1161\u11A8",
        "\u1107\u1161\u11BC\u1112\u1162",
        "\u1107\u1161\u11BC\u1112\u1163\u11BC",
        "\u1107\u1162\u1100\u1167\u11BC",
        "\u1107\u1162\u1101\u1169\u11B8",
        "\u1107\u1162\u1103\u1161\u11AF",
        "\u1107\u1162\u1103\u1173\u1106\u1175\u11AB\u1110\u1165\u11AB",
        "\u1107\u1162\u11A8\u1103\u116E\u1109\u1161\u11AB",
        "\u1107\u1162\u11A8\u1109\u1162\u11A8",
        "\u1107\u1162\u11A8\u1109\u1165\u11BC",
        "\u1107\u1162\u11A8\u110B\u1175\u11AB",
        "\u1107\u1162\u11A8\u110C\u1166",
        "\u1107\u1162\u11A8\u1112\u116A\u110C\u1165\u11B7",
        "\u1107\u1165\u1105\u1173\u11BA",
        "\u1107\u1165\u1109\u1165\u11BA",
        "\u1107\u1165\u1110\u1173\u11AB",
        "\u1107\u1165\u11AB\u1100\u1162",
        "\u1107\u1165\u11AB\u110B\u1167\u11A8",
        "\u1107\u1165\u11AB\u110C\u1175",
        "\u1107\u1165\u11AB\u1112\u1169",
        "\u1107\u1165\u11AF\u1100\u1173\u11B7",
        "\u1107\u1165\u11AF\u1105\u1166",
        "\u1107\u1165\u11AF\u110A\u1165",
        "\u1107\u1165\u11B7\u110B\u1171",
        "\u1107\u1165\u11B7\u110B\u1175\u11AB",
        "\u1107\u1165\u11B7\u110C\u116C",
        "\u1107\u1165\u11B8\u1105\u1172\u11AF",
        "\u1107\u1165\u11B8\u110B\u116F\u11AB",
        "\u1107\u1165\u11B8\u110C\u1165\u11A8",
        "\u1107\u1165\u11B8\u110E\u1175\u11A8",
        "\u1107\u1166\u110B\u1175\u110C\u1175\u11BC",
        "\u1107\u1166\u11AF\u1110\u1173",
        "\u1107\u1167\u11AB\u1100\u1167\u11BC",
        "\u1107\u1167\u11AB\u1103\u1169\u11BC",
        "\u1107\u1167\u11AB\u1106\u1167\u11BC",
        "\u1107\u1167\u11AB\u1109\u1175\u11AB",
        "\u1107\u1167\u11AB\u1112\u1169\u1109\u1161",
        "\u1107\u1167\u11AB\u1112\u116A",
        "\u1107\u1167\u11AF\u1103\u1169",
        "\u1107\u1167\u11AF\u1106\u1167\u11BC",
        "\u1107\u1167\u11AF\u110B\u1175\u11AF",
        "\u1107\u1167\u11BC\u1109\u1175\u11AF",
        "\u1107\u1167\u11BC\u110B\u1161\u1105\u1175",
        "\u1107\u1167\u11BC\u110B\u116F\u11AB",
        "\u1107\u1169\u1100\u116A\u11AB",
        "\u1107\u1169\u1102\u1165\u1109\u1173",
        "\u1107\u1169\u1105\u1161\u1109\u1162\u11A8",
        "\u1107\u1169\u1105\u1161\u11B7",
        "\u1107\u1169\u1105\u1173\u11B7",
        "\u1107\u1169\u1109\u1161\u11BC",
        "\u1107\u1169\u110B\u1161\u11AB",
        "\u1107\u1169\u110C\u1161\u1100\u1175",
        "\u1107\u1169\u110C\u1161\u11BC",
        "\u1107\u1169\u110C\u1165\u11AB",
        "\u1107\u1169\u110C\u1169\u11AB",
        "\u1107\u1169\u1110\u1169\u11BC",
        "\u1107\u1169\u1111\u1167\u11AB\u110C\u1165\u11A8",
        "\u1107\u1169\u1112\u1165\u11B7",
        "\u1107\u1169\u11A8\u1103\u1169",
        "\u1107\u1169\u11A8\u1109\u1161",
        "\u1107\u1169\u11A8\u1109\u116E\u11BC\u110B\u1161",
        "\u1107\u1169\u11A8\u1109\u1173\u11B8",
        "\u1107\u1169\u11A9\u110B\u1173\u11B7",
        "\u1107\u1169\u11AB\u1100\u1167\u11A8\u110C\u1165\u11A8",
        "\u1107\u1169\u11AB\u1105\u1162",
        "\u1107\u1169\u11AB\u1107\u116E",
        "\u1107\u1169\u11AB\u1109\u1161",
        "\u1107\u1169\u11AB\u1109\u1165\u11BC",
        "\u1107\u1169\u11AB\u110B\u1175\u11AB",
        "\u1107\u1169\u11AB\u110C\u1175\u11AF",
        "\u1107\u1169\u11AF\u1111\u1166\u11AB",
        "\u1107\u1169\u11BC\u1109\u1161",
        "\u1107\u1169\u11BC\u110C\u1175",
        "\u1107\u1169\u11BC\u1110\u116E",
        "\u1107\u116E\u1100\u1173\u11AB",
        "\u1107\u116E\u1101\u1173\u1105\u1165\u110B\u116E\u11B7",
        "\u1107\u116E\u1103\u1161\u11B7",
        "\u1107\u116E\u1103\u1169\u11BC\u1109\u1161\u11AB",
        "\u1107\u116E\u1106\u116E\u11AB",
        "\u1107\u116E\u1107\u116E\u11AB",
        "\u1107\u116E\u1109\u1161\u11AB",
        "\u1107\u116E\u1109\u1161\u11BC",
        "\u1107\u116E\u110B\u1165\u11BF",
        "\u1107\u116E\u110B\u1175\u11AB",
        "\u1107\u116E\u110C\u1161\u11A8\u110B\u116D\u11BC",
        "\u1107\u116E\u110C\u1161\u11BC",
        "\u1107\u116E\u110C\u1165\u11BC",
        "\u1107\u116E\u110C\u1169\u11A8",
        "\u1107\u116E\u110C\u1175\u1105\u1165\u11AB\u1112\u1175",
        "\u1107\u116E\u110E\u1175\u11AB",
        "\u1107\u116E\u1110\u1161\u11A8",
        "\u1107\u116E\u1111\u116E\u11B7",
        "\u1107\u116E\u1112\u116C\u110C\u1161\u11BC",
        "\u1107\u116E\u11A8\u1107\u116E",
        "\u1107\u116E\u11A8\u1112\u1161\u11AB",
        "\u1107\u116E\u11AB\u1102\u1169",
        "\u1107\u116E\u11AB\u1105\u1163\u11BC",
        "\u1107\u116E\u11AB\u1105\u1175",
        "\u1107\u116E\u11AB\u1106\u1167\u11BC",
        "\u1107\u116E\u11AB\u1109\u1165\u11A8",
        "\u1107\u116E\u11AB\u110B\u1163",
        "\u1107\u116E\u11AB\u110B\u1171\u1100\u1175",
        "\u1107\u116E\u11AB\u1111\u1175\u11AF",
        "\u1107\u116E\u11AB\u1112\u1169\u11BC\u1109\u1162\u11A8",
        "\u1107\u116E\u11AF\u1100\u1169\u1100\u1175",
        "\u1107\u116E\u11AF\u1100\u116A",
        "\u1107\u116E\u11AF\u1100\u116D",
        "\u1107\u116E\u11AF\u1101\u1169\u11BE",
        "\u1107\u116E\u11AF\u1106\u1161\u11AB",
        "\u1107\u116E\u11AF\u1107\u1165\u11B8",
        "\u1107\u116E\u11AF\u1107\u1175\u11BE",
        "\u1107\u116E\u11AF\u110B\u1161\u11AB",
        "\u1107\u116E\u11AF\u110B\u1175\u110B\u1175\u11A8",
        "\u1107\u116E\u11AF\u1112\u1162\u11BC",
        "\u1107\u1173\u1105\u1162\u11AB\u1103\u1173",
        "\u1107\u1175\u1100\u1173\u11A8",
        "\u1107\u1175\u1102\u1161\u11AB",
        "\u1107\u1175\u1102\u1175\u11AF",
        "\u1107\u1175\u1103\u116E\u11AF\u1100\u1175",
        "\u1107\u1175\u1103\u1175\u110B\u1169",
        "\u1107\u1175\u1105\u1169\u1109\u1169",
        "\u1107\u1175\u1106\u1161\u11AB",
        "\u1107\u1175\u1106\u1167\u11BC",
        "\u1107\u1175\u1106\u1175\u11AF",
        "\u1107\u1175\u1107\u1161\u1105\u1161\u11B7",
        "\u1107\u1175\u1107\u1175\u11B7\u1107\u1161\u11B8",
        "\u1107\u1175\u1109\u1161\u11BC",
        "\u1107\u1175\u110B\u116D\u11BC",
        "\u1107\u1175\u110B\u1172\u11AF",
        "\u1107\u1175\u110C\u116E\u11BC",
        "\u1107\u1175\u1110\u1161\u1106\u1175\u11AB",
        "\u1107\u1175\u1111\u1161\u11AB",
        "\u1107\u1175\u11AF\u1103\u1175\u11BC",
        "\u1107\u1175\u11BA\u1106\u116E\u11AF",
        "\u1107\u1175\u11BA\u1107\u1161\u11BC\u110B\u116E\u11AF",
        "\u1107\u1175\u11BA\u110C\u116E\u11AF\u1100\u1175",
        "\u1107\u1175\u11BE\u1101\u1161\u11AF",
        "\u1108\u1161\u11AF\u1100\u1161\u11AB\u1109\u1162\u11A8",
        "\u1108\u1161\u11AF\u1105\u1162",
        "\u1108\u1161\u11AF\u1105\u1175",
        "\u1109\u1161\u1100\u1165\u11AB",
        "\u1109\u1161\u1100\u1168\u110C\u1165\u11AF",
        "\u1109\u1161\u1102\u1161\u110B\u1175",
        "\u1109\u1161\u1102\u1163\u11BC",
        "\u1109\u1161\u1105\u1161\u11B7",
        "\u1109\u1161\u1105\u1161\u11BC",
        "\u1109\u1161\u1105\u1175\u11B8",
        "\u1109\u1161\u1106\u1169\u1102\u1175\u11B7",
        "\u1109\u1161\u1106\u116E\u11AF",
        "\u1109\u1161\u1107\u1161\u11BC",
        "\u1109\u1161\u1109\u1161\u11BC",
        "\u1109\u1161\u1109\u1162\u11BC\u1112\u116A\u11AF",
        "\u1109\u1161\u1109\u1165\u11AF",
        "\u1109\u1161\u1109\u1173\u11B7",
        "\u1109\u1161\u1109\u1175\u11AF",
        "\u1109\u1161\u110B\u1165\u11B8",
        "\u1109\u1161\u110B\u116D\u11BC",
        "\u1109\u1161\u110B\u116F\u11AF",
        "\u1109\u1161\u110C\u1161\u11BC",
        "\u1109\u1161\u110C\u1165\u11AB",
        "\u1109\u1161\u110C\u1175\u11AB",
        "\u1109\u1161\u110E\u1169\u11AB",
        "\u1109\u1161\u110E\u116E\u11AB\u1100\u1175",
        "\u1109\u1161\u1110\u1161\u11BC",
        "\u1109\u1161\u1110\u116E\u1105\u1175",
        "\u1109\u1161\u1112\u1173\u11AF",
        "\u1109\u1161\u11AB\u1100\u1175\u11AF",
        "\u1109\u1161\u11AB\u1107\u116E\u110B\u1175\u11AB\u1100\u116A",
        "\u1109\u1161\u11AB\u110B\u1165\u11B8",
        "\u1109\u1161\u11AB\u110E\u1162\u11A8",
        "\u1109\u1161\u11AF\u1105\u1175\u11B7",
        "\u1109\u1161\u11AF\u110B\u1175\u11AB",
        "\u1109\u1161\u11AF\u110D\u1161\u11A8",
        "\u1109\u1161\u11B7\u1100\u1168\u1110\u1161\u11BC",
        "\u1109\u1161\u11B7\u1100\u116E\u11A8",
        "\u1109\u1161\u11B7\u1109\u1175\u11B8",
        "\u1109\u1161\u11B7\u110B\u116F\u11AF",
        "\u1109\u1161\u11B7\u110E\u1169\u11AB",
        "\u1109\u1161\u11BC\u1100\u116A\u11AB",
        "\u1109\u1161\u11BC\u1100\u1173\u11B7",
        "\u1109\u1161\u11BC\u1103\u1162",
        "\u1109\u1161\u11BC\u1105\u1172",
        "\u1109\u1161\u11BC\u1107\u1161\u11AB\u1100\u1175",
        "\u1109\u1161\u11BC\u1109\u1161\u11BC",
        "\u1109\u1161\u11BC\u1109\u1175\u11A8",
        "\u1109\u1161\u11BC\u110B\u1165\u11B8",
        "\u1109\u1161\u11BC\u110B\u1175\u11AB",
        "\u1109\u1161\u11BC\u110C\u1161",
        "\u1109\u1161\u11BC\u110C\u1165\u11B7",
        "\u1109\u1161\u11BC\u110E\u1165",
        "\u1109\u1161\u11BC\u110E\u116E",
        "\u1109\u1161\u11BC\u1110\u1162",
        "\u1109\u1161\u11BC\u1111\u116D",
        "\u1109\u1161\u11BC\u1111\u116E\u11B7",
        "\u1109\u1161\u11BC\u1112\u116A\u11BC",
        "\u1109\u1162\u1107\u1167\u11A8",
        "\u1109\u1162\u11A8\u1101\u1161\u11AF",
        "\u1109\u1162\u11A8\u110B\u1167\u11AB\u1111\u1175\u11AF",
        "\u1109\u1162\u11BC\u1100\u1161\u11A8",
        "\u1109\u1162\u11BC\u1106\u1167\u11BC",
        "\u1109\u1162\u11BC\u1106\u116E\u11AF",
        "\u1109\u1162\u11BC\u1107\u1161\u11BC\u1109\u1169\u11BC",
        "\u1109\u1162\u11BC\u1109\u1161\u11AB",
        "\u1109\u1162\u11BC\u1109\u1165\u11AB",
        "\u1109\u1162\u11BC\u1109\u1175\u11AB",
        "\u1109\u1162\u11BC\u110B\u1175\u11AF",
        "\u1109\u1162\u11BC\u1112\u116A\u11AF",
        "\u1109\u1165\u1105\u1161\u11B8",
        "\u1109\u1165\u1105\u1173\u11AB",
        "\u1109\u1165\u1106\u1167\u11BC",
        "\u1109\u1165\u1106\u1175\u11AB",
        "\u1109\u1165\u1107\u1175\u1109\u1173",
        "\u1109\u1165\u110B\u1163\u11BC",
        "\u1109\u1165\u110B\u116E\u11AF",
        "\u1109\u1165\u110C\u1165\u11A8",
        "\u1109\u1165\u110C\u1165\u11B7",
        "\u1109\u1165\u110D\u1169\u11A8",
        "\u1109\u1165\u110F\u1173\u11AF",
        "\u1109\u1165\u11A8\u1109\u1161",
        "\u1109\u1165\u11A8\u110B\u1172",
        "\u1109\u1165\u11AB\u1100\u1165",
        "\u1109\u1165\u11AB\u1106\u116E\u11AF",
        "\u1109\u1165\u11AB\u1107\u1162",
        "\u1109\u1165\u11AB\u1109\u1162\u11BC",
        "\u1109\u1165\u11AB\u1109\u116E",
        "\u1109\u1165\u11AB\u110B\u116F\u11AB",
        "\u1109\u1165\u11AB\u110C\u1161\u11BC",
        "\u1109\u1165\u11AB\u110C\u1165\u11AB",
        "\u1109\u1165\u11AB\u1110\u1162\u11A8",
        "\u1109\u1165\u11AB\u1111\u116E\u11BC\u1100\u1175",
        "\u1109\u1165\u11AF\u1100\u1165\u110C\u1175",
        "\u1109\u1165\u11AF\u1102\u1161\u11AF",
        "\u1109\u1165\u11AF\u1105\u1165\u11BC\u1110\u1161\u11BC",
        "\u1109\u1165\u11AF\u1106\u1167\u11BC",
        "\u1109\u1165\u11AF\u1106\u116E\u11AB",
        "\u1109\u1165\u11AF\u1109\u1161",
        "\u1109\u1165\u11AF\u110B\u1161\u11A8\u1109\u1161\u11AB",
        "\u1109\u1165\u11AF\u110E\u1175",
        "\u1109\u1165\u11AF\u1110\u1161\u11BC",
        "\u1109\u1165\u11B8\u110A\u1175",
        "\u1109\u1165\u11BC\u1100\u1169\u11BC",
        "\u1109\u1165\u11BC\u1103\u1161\u11BC",
        "\u1109\u1165\u11BC\u1106\u1167\u11BC",
        "\u1109\u1165\u11BC\u1107\u1167\u11AF",
        "\u1109\u1165\u11BC\u110B\u1175\u11AB",
        "\u1109\u1165\u11BC\u110C\u1161\u11BC",
        "\u1109\u1165\u11BC\u110C\u1165\u11A8",
        "\u1109\u1165\u11BC\u110C\u1175\u11AF",
        "\u1109\u1165\u11BC\u1112\u1161\u11B7",
        "\u1109\u1166\u1100\u1173\u11B7",
        "\u1109\u1166\u1106\u1175\u1102\u1161",
        "\u1109\u1166\u1109\u1161\u11BC",
        "\u1109\u1166\u110B\u116F\u11AF",
        "\u1109\u1166\u110C\u1169\u11BC\u1103\u1162\u110B\u116A\u11BC",
        "\u1109\u1166\u1110\u1161\u11A8",
        "\u1109\u1166\u11AB\u1110\u1165",
        "\u1109\u1166\u11AB\u1110\u1175\u1106\u1175\u1110\u1165",
        "\u1109\u1166\u11BA\u110D\u1162",
        "\u1109\u1169\u1100\u1172\u1106\u1169",
        "\u1109\u1169\u1100\u1173\u11A8\u110C\u1165\u11A8",
        "\u1109\u1169\u1100\u1173\u11B7",
        "\u1109\u1169\u1102\u1161\u1100\u1175",
        "\u1109\u1169\u1102\u1167\u11AB",
        "\u1109\u1169\u1103\u1173\u11A8",
        "\u1109\u1169\u1106\u1161\u11BC",
        "\u1109\u1169\u1106\u116E\u11AB",
        "\u1109\u1169\u1109\u1165\u11AF",
        "\u1109\u1169\u1109\u1169\u11A8",
        "\u1109\u1169\u110B\u1161\u1100\u116A",
        "\u1109\u1169\u110B\u116D\u11BC",
        "\u1109\u1169\u110B\u116F\u11AB",
        "\u1109\u1169\u110B\u1173\u11B7",
        "\u1109\u1169\u110C\u116E\u11BC\u1112\u1175",
        "\u1109\u1169\u110C\u1175\u1111\u116E\u11B7",
        "\u1109\u1169\u110C\u1175\u11AF",
        "\u1109\u1169\u1111\u116E\u11BC",
        "\u1109\u1169\u1112\u1167\u11BC",
        "\u1109\u1169\u11A8\u1103\u1161\u11B7",
        "\u1109\u1169\u11A8\u1103\u1169",
        "\u1109\u1169\u11A8\u110B\u1169\u11BA",
        "\u1109\u1169\u11AB\u1100\u1161\u1105\u1161\u11A8",
        "\u1109\u1169\u11AB\u1100\u1175\u11AF",
        "\u1109\u1169\u11AB\u1102\u1167",
        "\u1109\u1169\u11AB\u1102\u1175\u11B7",
        "\u1109\u1169\u11AB\u1103\u1173\u11BC",
        "\u1109\u1169\u11AB\u1106\u1169\u11A8",
        "\u1109\u1169\u11AB\u1108\u1167\u11A8",
        "\u1109\u1169\u11AB\u1109\u1175\u11AF",
        "\u1109\u1169\u11AB\u110C\u1175\u11AF",
        "\u1109\u1169\u11AB\u1110\u1169\u11B8",
        "\u1109\u1169\u11AB\u1112\u1162",
        "\u1109\u1169\u11AF\u110C\u1175\u11A8\u1112\u1175",
        "\u1109\u1169\u11B7\u110A\u1175",
        "\u1109\u1169\u11BC\u110B\u1161\u110C\u1175",
        "\u1109\u1169\u11BC\u110B\u1175",
        "\u1109\u1169\u11BC\u1111\u1167\u11AB",
        "\u1109\u116C\u1100\u1169\u1100\u1175",
        "\u1109\u116D\u1111\u1175\u11BC",
        "\u1109\u116E\u1100\u1165\u11AB",
        "\u1109\u116E\u1102\u1167\u11AB",
        "\u1109\u116E\u1103\u1161\u11AB",
        "\u1109\u116E\u1103\u1169\u11BA\u1106\u116E\u11AF",
        "\u1109\u116E\u1103\u1169\u11BC\u110C\u1165\u11A8",
        "\u1109\u116E\u1106\u1167\u11AB",
        "\u1109\u116E\u1106\u1167\u11BC",
        "\u1109\u116E\u1107\u1161\u11A8",
        "\u1109\u116E\u1109\u1161\u11BC",
        "\u1109\u116E\u1109\u1165\u11A8",
        "\u1109\u116E\u1109\u116E\u11AF",
        "\u1109\u116E\u1109\u1175\u1105\u1169",
        "\u1109\u116E\u110B\u1165\u11B8",
        "\u1109\u116E\u110B\u1167\u11B7",
        "\u1109\u116E\u110B\u1167\u11BC",
        "\u1109\u116E\u110B\u1175\u11B8",
        "\u1109\u116E\u110C\u116E\u11AB",
        "\u1109\u116E\u110C\u1175\u11B8",
        "\u1109\u116E\u110E\u116E\u11AF",
        "\u1109\u116E\u110F\u1165\u11BA",
        "\u1109\u116E\u1111\u1175\u11AF",
        "\u1109\u116E\u1112\u1161\u11A8",
        "\u1109\u116E\u1112\u1165\u11B7\u1109\u1162\u11BC",
        "\u1109\u116E\u1112\u116A\u1100\u1175",
        "\u1109\u116E\u11A8\u1102\u1167",
        "\u1109\u116E\u11A8\u1109\u1169",
        "\u1109\u116E\u11A8\u110C\u1166",
        "\u1109\u116E\u11AB\u1100\u1161\u11AB",
        "\u1109\u116E\u11AB\u1109\u1165",
        "\u1109\u116E\u11AB\u1109\u116E",
        "\u1109\u116E\u11AB\u1109\u1175\u11A8\u1100\u1161\u11AB",
        "\u1109\u116E\u11AB\u110B\u1171",
        "\u1109\u116E\u11AE\u1100\u1161\u1105\u1161\u11A8",
        "\u1109\u116E\u11AF\u1107\u1167\u11BC",
        "\u1109\u116E\u11AF\u110C\u1175\u11B8",
        "\u1109\u116E\u11BA\u110C\u1161",
        "\u1109\u1173\u1102\u1175\u11B7",
        "\u1109\u1173\u1106\u116E\u11AF",
        "\u1109\u1173\u1109\u1173\u1105\u1169",
        "\u1109\u1173\u1109\u1173\u11BC",
        "\u1109\u1173\u110B\u1170\u1110\u1165",
        "\u1109\u1173\u110B\u1171\u110E\u1175",
        "\u1109\u1173\u110F\u1166\u110B\u1175\u1110\u1173",
        "\u1109\u1173\u1110\u1172\u1103\u1175\u110B\u1169",
        "\u1109\u1173\u1110\u1173\u1105\u1166\u1109\u1173",
        "\u1109\u1173\u1111\u1169\u110E\u1173",
        "\u1109\u1173\u11AF\u110D\u1165\u11A8",
        "\u1109\u1173\u11AF\u1111\u1173\u11B7",
        "\u1109\u1173\u11B8\u1100\u116A\u11AB",
        "\u1109\u1173\u11B8\u1100\u1175",
        "\u1109\u1173\u11BC\u1100\u1162\u11A8",
        "\u1109\u1173\u11BC\u1105\u1175",
        "\u1109\u1173\u11BC\u1107\u116E",
        "\u1109\u1173\u11BC\u110B\u116D\u11BC\u110E\u1161",
        "\u1109\u1173\u11BC\u110C\u1175\u11AB",
        "\u1109\u1175\u1100\u1161\u11A8",
        "\u1109\u1175\u1100\u1161\u11AB",
        "\u1109\u1175\u1100\u1169\u11AF",
        "\u1109\u1175\u1100\u1173\u11B7\u110E\u1175",
        "\u1109\u1175\u1102\u1161\u1105\u1175\u110B\u1169",
        "\u1109\u1175\u1103\u1162\u11A8",
        "\u1109\u1175\u1105\u1175\u110C\u1173",
        "\u1109\u1175\u1106\u1166\u11AB\u1110\u1173",
        "\u1109\u1175\u1106\u1175\u11AB",
        "\u1109\u1175\u1107\u116E\u1106\u1169",
        "\u1109\u1175\u1109\u1165\u11AB",
        "\u1109\u1175\u1109\u1165\u11AF",
        "\u1109\u1175\u1109\u1173\u1110\u1166\u11B7",
        "\u1109\u1175\u110B\u1161\u1107\u1165\u110C\u1175",
        "\u1109\u1175\u110B\u1165\u1106\u1165\u1102\u1175",
        "\u1109\u1175\u110B\u116F\u11AF",
        "\u1109\u1175\u110B\u1175\u11AB",
        "\u1109\u1175\u110B\u1175\u11AF",
        "\u1109\u1175\u110C\u1161\u11A8",
        "\u1109\u1175\u110C\u1161\u11BC",
        "\u1109\u1175\u110C\u1165\u11AF",
        "\u1109\u1175\u110C\u1165\u11B7",
        "\u1109\u1175\u110C\u116E\u11BC",
        "\u1109\u1175\u110C\u1173\u11AB",
        "\u1109\u1175\u110C\u1175\u11B8",
        "\u1109\u1175\u110E\u1165\u11BC",
        "\u1109\u1175\u1112\u1161\u11B8",
        "\u1109\u1175\u1112\u1165\u11B7",
        "\u1109\u1175\u11A8\u1100\u116E",
        "\u1109\u1175\u11A8\u1100\u1175",
        "\u1109\u1175\u11A8\u1103\u1161\u11BC",
        "\u1109\u1175\u11A8\u1105\u1163\u11BC",
        "\u1109\u1175\u11A8\u1105\u116D\u1111\u116E\u11B7",
        "\u1109\u1175\u11A8\u1106\u116E\u11AF",
        "\u1109\u1175\u11A8\u1108\u1161\u11BC",
        "\u1109\u1175\u11A8\u1109\u1161",
        "\u1109\u1175\u11A8\u1109\u1162\u11BC\u1112\u116A\u11AF",
        "\u1109\u1175\u11A8\u110E\u1169",
        "\u1109\u1175\u11A8\u1110\u1161\u11A8",
        "\u1109\u1175\u11A8\u1111\u116E\u11B7",
        "\u1109\u1175\u11AB\u1100\u1169",
        "\u1109\u1175\u11AB\u1100\u1172",
        "\u1109\u1175\u11AB\u1102\u1167\u11B7",
        "\u1109\u1175\u11AB\u1106\u116E\u11AB",
        "\u1109\u1175\u11AB\u1107\u1161\u11AF",
        "\u1109\u1175\u11AB\u1107\u1175",
        "\u1109\u1175\u11AB\u1109\u1161",
        "\u1109\u1175\u11AB\u1109\u1166",
        "\u1109\u1175\u11AB\u110B\u116D\u11BC",
        "\u1109\u1175\u11AB\u110C\u1166\u1111\u116E\u11B7",
        "\u1109\u1175\u11AB\u110E\u1165\u11BC",
        "\u1109\u1175\u11AB\u110E\u1166",
        "\u1109\u1175\u11AB\u1112\u116A",
        "\u1109\u1175\u11AF\u1100\u1161\u11B7",
        "\u1109\u1175\u11AF\u1102\u1162",
        "\u1109\u1175\u11AF\u1105\u1167\u11A8",
        "\u1109\u1175\u11AF\u1105\u1168",
        "\u1109\u1175\u11AF\u1106\u1161\u11BC",
        "\u1109\u1175\u11AF\u1109\u116E",
        "\u1109\u1175\u11AF\u1109\u1173\u11B8",
        "\u1109\u1175\u11AF\u1109\u1175",
        "\u1109\u1175\u11AF\u110C\u1161\u11BC",
        "\u1109\u1175\u11AF\u110C\u1165\u11BC",
        "\u1109\u1175\u11AF\u110C\u1175\u11AF\u110C\u1165\u11A8",
        "\u1109\u1175\u11AF\u110E\u1165\u11AB",
        "\u1109\u1175\u11AF\u110E\u1166",
        "\u1109\u1175\u11AF\u110F\u1165\u11BA",
        "\u1109\u1175\u11AF\u1110\u1162",
        "\u1109\u1175\u11AF\u1111\u1162",
        "\u1109\u1175\u11AF\u1112\u1165\u11B7",
        "\u1109\u1175\u11AF\u1112\u1167\u11AB",
        "\u1109\u1175\u11B7\u1105\u1175",
        "\u1109\u1175\u11B7\u1107\u116E\u1105\u1173\u11B7",
        "\u1109\u1175\u11B7\u1109\u1161",
        "\u1109\u1175\u11B7\u110C\u1161\u11BC",
        "\u1109\u1175\u11B7\u110C\u1165\u11BC",
        "\u1109\u1175\u11B7\u1111\u1161\u11AB",
        "\u110A\u1161\u11BC\u1103\u116E\u11BC\u110B\u1175",
        "\u110A\u1175\u1105\u1173\u11B7",
        "\u110A\u1175\u110B\u1161\u11BA",
        "\u110B\u1161\u1100\u1161\u110A\u1175",
        "\u110B\u1161\u1102\u1161\u110B\u116E\u11AB\u1109\u1165",
        "\u110B\u1161\u1103\u1173\u1102\u1175\u11B7",
        "\u110B\u1161\u1103\u1173\u11AF",
        "\u110B\u1161\u1109\u1171\u110B\u116E\u11B7",
        "\u110B\u1161\u1109\u1173\u1111\u1161\u11AF\u1110\u1173",
        "\u110B\u1161\u1109\u1175\u110B\u1161",
        "\u110B\u1161\u110B\u116E\u11AF\u1105\u1165",
        "\u110B\u1161\u110C\u1165\u110A\u1175",
        "\u110B\u1161\u110C\u116E\u11B7\u1106\u1161",
        "\u110B\u1161\u110C\u1175\u11A8",
        "\u110B\u1161\u110E\u1175\u11B7",
        "\u110B\u1161\u1111\u1161\u1110\u1173",
        "\u110B\u1161\u1111\u1173\u1105\u1175\u110F\u1161",
        "\u110B\u1161\u1111\u1173\u11B7",
        "\u110B\u1161\u1112\u1169\u11B8",
        "\u110B\u1161\u1112\u1173\u11AB",
        "\u110B\u1161\u11A8\u1100\u1175",
        "\u110B\u1161\u11A8\u1106\u1169\u11BC",
        "\u110B\u1161\u11A8\u1109\u116E",
        "\u110B\u1161\u11AB\u1100\u1162",
        "\u110B\u1161\u11AB\u1100\u1167\u11BC",
        "\u110B\u1161\u11AB\u1100\u116A",
        "\u110B\u1161\u11AB\u1102\u1162",
        "\u110B\u1161\u11AB\u1102\u1167\u11BC",
        "\u110B\u1161\u11AB\u1103\u1169\u11BC",
        "\u110B\u1161\u11AB\u1107\u1161\u11BC",
        "\u110B\u1161\u11AB\u1107\u116E",
        "\u110B\u1161\u11AB\u110C\u116E",
        "\u110B\u1161\u11AF\u1105\u116E\u1106\u1175\u1102\u1172\u11B7",
        "\u110B\u1161\u11AF\u110F\u1169\u110B\u1169\u11AF",
        "\u110B\u1161\u11B7\u1109\u1175",
        "\u110B\u1161\u11B7\u110F\u1165\u11BA",
        "\u110B\u1161\u11B8\u1105\u1167\u11A8",
        "\u110B\u1161\u11C1\u1102\u1161\u11AF",
        "\u110B\u1161\u11C1\u1106\u116E\u11AB",
        "\u110B\u1162\u110B\u1175\u11AB",
        "\u110B\u1162\u110C\u1165\u11BC",
        "\u110B\u1162\u11A8\u1109\u116E",
        "\u110B\u1162\u11AF\u1107\u1165\u11B7",
        "\u110B\u1163\u1100\u1161\u11AB",
        "\u110B\u1163\u1103\u1161\u11AB",
        "\u110B\u1163\u110B\u1169\u11BC",
        "\u110B\u1163\u11A8\u1100\u1161\u11AB",
        "\u110B\u1163\u11A8\u1100\u116E\u11A8",
        "\u110B\u1163\u11A8\u1109\u1169\u11A8",
        "\u110B\u1163\u11A8\u1109\u116E",
        "\u110B\u1163\u11A8\u110C\u1165\u11B7",
        "\u110B\u1163\u11A8\u1111\u116E\u11B7",
        "\u110B\u1163\u11A8\u1112\u1169\u11AB\u1102\u1167",
        "\u110B\u1163\u11BC\u1102\u1167\u11B7",
        "\u110B\u1163\u11BC\u1105\u1167\u11A8",
        "\u110B\u1163\u11BC\u1106\u1161\u11AF",
        "\u110B\u1163\u11BC\u1107\u1162\u110E\u116E",
        "\u110B\u1163\u11BC\u110C\u116E",
        "\u110B\u1163\u11BC\u1111\u1161",
        "\u110B\u1165\u1103\u116E\u11B7",
        "\u110B\u1165\u1105\u1167\u110B\u116E\u11B7",
        "\u110B\u1165\u1105\u1173\u11AB",
        "\u110B\u1165\u110C\u1166\u11BA\u1107\u1161\u11B7",
        "\u110B\u1165\u110D\u1162\u11BB\u1103\u1173\u11AB",
        "\u110B\u1165\u110D\u1165\u1103\u1161\u1100\u1161",
        "\u110B\u1165\u110D\u1165\u11AB\u110C\u1175",
        "\u110B\u1165\u11AB\u1102\u1175",
        "\u110B\u1165\u11AB\u1103\u1165\u11A8",
        "\u110B\u1165\u11AB\u1105\u1169\u11AB",
        "\u110B\u1165\u11AB\u110B\u1165",
        "\u110B\u1165\u11AF\u1100\u116E\u11AF",
        "\u110B\u1165\u11AF\u1105\u1173\u11AB",
        "\u110B\u1165\u11AF\u110B\u1173\u11B7",
        "\u110B\u1165\u11AF\u1111\u1175\u11BA",
        "\u110B\u1165\u11B7\u1106\u1161",
        "\u110B\u1165\u11B8\u1106\u116E",
        "\u110B\u1165\u11B8\u110C\u1169\u11BC",
        "\u110B\u1165\u11B8\u110E\u1166",
        "\u110B\u1165\u11BC\u1103\u1165\u11BC\u110B\u1175",
        "\u110B\u1165\u11BC\u1106\u1161\u11BC",
        "\u110B\u1165\u11BC\u1110\u1165\u1105\u1175",
        "\u110B\u1165\u11BD\u1100\u1173\u110C\u1166",
        "\u110B\u1166\u1102\u1165\u110C\u1175",
        "\u110B\u1166\u110B\u1165\u110F\u1165\u11AB",
        "\u110B\u1166\u11AB\u110C\u1175\u11AB",
        "\u110B\u1167\u1100\u1165\u11AB",
        "\u110B\u1167\u1100\u1169\u1109\u1162\u11BC",
        "\u110B\u1167\u1100\u116A\u11AB",
        "\u110B\u1167\u1100\u116E\u11AB",
        "\u110B\u1167\u1100\u116F\u11AB",
        "\u110B\u1167\u1103\u1162\u1109\u1162\u11BC",
        "\u110B\u1167\u1103\u1165\u11B2",
        "\u110B\u1167\u1103\u1169\u11BC\u1109\u1162\u11BC",
        "\u110B\u1167\u1103\u1173\u11AB",
        "\u110B\u1167\u1105\u1169\u11AB",
        "\u110B\u1167\u1105\u1173\u11B7",
        "\u110B\u1167\u1109\u1165\u11BA",
        "\u110B\u1167\u1109\u1165\u11BC",
        "\u110B\u1167\u110B\u116A\u11BC",
        "\u110B\u1167\u110B\u1175\u11AB",
        "\u110B\u1167\u110C\u1165\u11AB\u1112\u1175",
        "\u110B\u1167\u110C\u1175\u11A8\u110B\u116F\u11AB",
        "\u110B\u1167\u1112\u1161\u11A8\u1109\u1162\u11BC",
        "\u110B\u1167\u1112\u1162\u11BC",
        "\u110B\u1167\u11A8\u1109\u1161",
        "\u110B\u1167\u11A8\u1109\u1175",
        "\u110B\u1167\u11A8\u1112\u1161\u11AF",
        "\u110B\u1167\u11AB\u1100\u1167\u11AF",
        "\u110B\u1167\u11AB\u1100\u116E",
        "\u110B\u1167\u11AB\u1100\u1173\u11A8",
        "\u110B\u1167\u11AB\u1100\u1175",
        "\u110B\u1167\u11AB\u1105\u1161\u11A8",
        "\u110B\u1167\u11AB\u1109\u1165\u11AF",
        "\u110B\u1167\u11AB\u1109\u1166",
        "\u110B\u1167\u11AB\u1109\u1169\u11A8",
        "\u110B\u1167\u11AB\u1109\u1173\u11B8",
        "\u110B\u1167\u11AB\u110B\u1162",
        "\u110B\u1167\u11AB\u110B\u1168\u110B\u1175\u11AB",
        "\u110B\u1167\u11AB\u110B\u1175\u11AB",
        "\u110B\u1167\u11AB\u110C\u1161\u11BC",
        "\u110B\u1167\u11AB\u110C\u116E",
        "\u110B\u1167\u11AB\u110E\u116E\u11AF",
        "\u110B\u1167\u11AB\u1111\u1175\u11AF",
        "\u110B\u1167\u11AB\u1112\u1161\u11B8",
        "\u110B\u1167\u11AB\u1112\u1172",
        "\u110B\u1167\u11AF\u1100\u1175",
        "\u110B\u1167\u11AF\u1106\u1162",
        "\u110B\u1167\u11AF\u1109\u116C",
        "\u110B\u1167\u11AF\u1109\u1175\u11B7\u1112\u1175",
        "\u110B\u1167\u11AF\u110C\u1165\u11BC",
        "\u110B\u1167\u11AF\u110E\u1161",
        "\u110B\u1167\u11AF\u1112\u1173\u11AF",
        "\u110B\u1167\u11B7\u1105\u1167",
        "\u110B\u1167\u11B8\u1109\u1165",
        "\u110B\u1167\u11BC\u1100\u116E\u11A8",
        "\u110B\u1167\u11BC\u1102\u1161\u11B7",
        "\u110B\u1167\u11BC\u1109\u1161\u11BC",
        "\u110B\u1167\u11BC\u110B\u1163\u11BC",
        "\u110B\u1167\u11BC\u110B\u1167\u11A8",
        "\u110B\u1167\u11BC\u110B\u116E\u11BC",
        "\u110B\u1167\u11BC\u110B\u116F\u11AB\u1112\u1175",
        "\u110B\u1167\u11BC\u1112\u1161",
        "\u110B\u1167\u11BC\u1112\u1163\u11BC",
        "\u110B\u1167\u11BC\u1112\u1169\u11AB",
        "\u110B\u1167\u11BC\u1112\u116A",
        "\u110B\u1167\u11C1\u1100\u116E\u1105\u1175",
        "\u110B\u1167\u11C1\u1107\u1161\u11BC",
        "\u110B\u1167\u11C1\u110C\u1175\u11B8",
        "\u110B\u1168\u1100\u1161\u11B7",
        "\u110B\u1168\u1100\u1173\u11B7",
        "\u110B\u1168\u1107\u1161\u11BC",
        "\u110B\u1168\u1109\u1161\u11AB",
        "\u110B\u1168\u1109\u1161\u11BC",
        "\u110B\u1168\u1109\u1165\u11AB",
        "\u110B\u1168\u1109\u116E\u11AF",
        "\u110B\u1168\u1109\u1173\u11B8",
        "\u110B\u1168\u1109\u1175\u11A8\u110C\u1161\u11BC",
        "\u110B\u1168\u110B\u1163\u11A8",
        "\u110B\u1168\u110C\u1165\u11AB",
        "\u110B\u1168\u110C\u1165\u11AF",
        "\u110B\u1168\u110C\u1165\u11BC",
        "\u110B\u1168\u110F\u1165\u11AB\u1103\u1162",
        "\u110B\u1168\u11BA\u1102\u1161\u11AF",
        "\u110B\u1169\u1102\u1173\u11AF",
        "\u110B\u1169\u1105\u1161\u11A8",
        "\u110B\u1169\u1105\u1162\u11BA\u1103\u1169\u11BC\u110B\u1161\u11AB",
        "\u110B\u1169\u1105\u1166\u11AB\u110C\u1175",
        "\u110B\u1169\u1105\u1169\u110C\u1175",
        "\u110B\u1169\u1105\u1173\u11AB\u1107\u1161\u11AF",
        "\u110B\u1169\u1107\u1173\u11AB",
        "\u110B\u1169\u1109\u1175\u11B8",
        "\u110B\u1169\u110B\u1167\u11B7",
        "\u110B\u1169\u110B\u116F\u11AF",
        "\u110B\u1169\u110C\u1165\u11AB",
        "\u110B\u1169\u110C\u1175\u11A8",
        "\u110B\u1169\u110C\u1175\u11BC\u110B\u1165",
        "\u110B\u1169\u1111\u1166\u1105\u1161",
        "\u110B\u1169\u1111\u1175\u1109\u1173\u1110\u1166\u11AF",
        "\u110B\u1169\u1112\u1175\u1105\u1167",
        "\u110B\u1169\u11A8\u1109\u1161\u11BC",
        "\u110B\u1169\u11A8\u1109\u116E\u1109\u116E",
        "\u110B\u1169\u11AB\u1100\u1161\u11BD",
        "\u110B\u1169\u11AB\u1105\u1161\u110B\u1175\u11AB",
        "\u110B\u1169\u11AB\u1106\u1169\u11B7",
        "\u110B\u1169\u11AB\u110C\u1169\u11BC\u110B\u1175\u11AF",
        "\u110B\u1169\u11AB\u1110\u1169\u11BC",
        "\u110B\u1169\u11AF\u1100\u1161\u110B\u1173\u11AF",
        "\u110B\u1169\u11AF\u1105\u1175\u11B7\u1111\u1175\u11A8",
        "\u110B\u1169\u11AF\u1112\u1162",
        "\u110B\u1169\u11BA\u110E\u1161\u1105\u1175\u11B7",
        "\u110B\u116A\u110B\u1175\u1109\u1167\u110E\u1173",
        "\u110B\u116A\u110B\u1175\u11AB",
        "\u110B\u116A\u11AB\u1109\u1165\u11BC",
        "\u110B\u116A\u11AB\u110C\u1165\u11AB",
        "\u110B\u116A\u11BC\u1107\u1175",
        "\u110B\u116A\u11BC\u110C\u1161",
        "\u110B\u116B\u1102\u1163\u1112\u1161\u1106\u1167\u11AB",
        "\u110B\u116B\u11AB\u110C\u1175",
        "\u110B\u116C\u1100\u1161\u11BA\u110C\u1175\u11B8",
        "\u110B\u116C\u1100\u116E\u11A8",
        "\u110B\u116C\u1105\u1169\u110B\u116E\u11B7",
        "\u110B\u116C\u1109\u1161\u11B7\u110E\u1169\u11AB",
        "\u110B\u116C\u110E\u116E\u11AF",
        "\u110B\u116C\u110E\u1175\u11B7",
        "\u110B\u116C\u1112\u1161\u11AF\u1106\u1165\u1102\u1175",
        "\u110B\u116C\u11AB\u1107\u1161\u11AF",
        "\u110B\u116C\u11AB\u1109\u1169\u11AB",
        "\u110B\u116C\u11AB\u110D\u1169\u11A8",
        "\u110B\u116D\u1100\u1173\u11B7",
        "\u110B\u116D\u110B\u1175\u11AF",
        "\u110B\u116D\u110C\u1173\u11B7",
        "\u110B\u116D\u110E\u1165\u11BC",
        "\u110B\u116D\u11BC\u1100\u1175",
        "\u110B\u116D\u11BC\u1109\u1165",
        "\u110B\u116D\u11BC\u110B\u1165",
        "\u110B\u116E\u1109\u1161\u11AB",
        "\u110B\u116E\u1109\u1165\u11AB",
        "\u110B\u116E\u1109\u1173\u11BC",
        "\u110B\u116E\u110B\u1167\u11AB\u1112\u1175",
        "\u110B\u116E\u110C\u1165\u11BC",
        "\u110B\u116E\u110E\u1166\u1100\u116E\u11A8",
        "\u110B\u116E\u1111\u1167\u11AB",
        "\u110B\u116E\u11AB\u1103\u1169\u11BC",
        "\u110B\u116E\u11AB\u1106\u1167\u11BC",
        "\u110B\u116E\u11AB\u1107\u1161\u11AB",
        "\u110B\u116E\u11AB\u110C\u1165\u11AB",
        "\u110B\u116E\u11AB\u1112\u1162\u11BC",
        "\u110B\u116E\u11AF\u1109\u1161\u11AB",
        "\u110B\u116E\u11AF\u110B\u1173\u11B7",
        "\u110B\u116E\u11B7\u110C\u1175\u11A8\u110B\u1175\u11B7",
        "\u110B\u116E\u11BA\u110B\u1165\u1105\u1173\u11AB",
        "\u110B\u116E\u11BA\u110B\u1173\u11B7",
        "\u110B\u116F\u1102\u1161\u11A8",
        "\u110B\u116F\u11AB\u1100\u1169",
        "\u110B\u116F\u11AB\u1105\u1162",
        "\u110B\u116F\u11AB\u1109\u1165",
        "\u110B\u116F\u11AB\u1109\u116E\u11BC\u110B\u1175",
        "\u110B\u116F\u11AB\u110B\u1175\u11AB",
        "\u110B\u116F\u11AB\u110C\u1161\u11BC",
        "\u110B\u116F\u11AB\u1111\u1175\u1109\u1173",
        "\u110B\u116F\u11AF\u1100\u1173\u11B8",
        "\u110B\u116F\u11AF\u1103\u1173\u110F\u1165\u11B8",
        "\u110B\u116F\u11AF\u1109\u1166",
        "\u110B\u116F\u11AF\u110B\u116D\u110B\u1175\u11AF",
        "\u110B\u1170\u110B\u1175\u1110\u1165",
        "\u110B\u1171\u1107\u1161\u11AB",
        "\u110B\u1171\u1107\u1165\u11B8",
        "\u110B\u1171\u1109\u1165\u11BC",
        "\u110B\u1171\u110B\u116F\u11AB",
        "\u110B\u1171\u1112\u1165\u11B7",
        "\u110B\u1171\u1112\u1167\u11B8",
        "\u110B\u1171\u11BA\u1109\u1161\u1105\u1161\u11B7",
        "\u110B\u1172\u1102\u1161\u11AB\u1112\u1175",
        "\u110B\u1172\u1105\u1165\u11B8",
        "\u110B\u1172\u1106\u1167\u11BC",
        "\u110B\u1172\u1106\u116E\u11AF",
        "\u110B\u1172\u1109\u1161\u11AB",
        "\u110B\u1172\u110C\u1165\u11A8",
        "\u110B\u1172\u110E\u1175\u110B\u116F\u11AB",
        "\u110B\u1172\u1112\u1161\u11A8",
        "\u110B\u1172\u1112\u1162\u11BC",
        "\u110B\u1172\u1112\u1167\u11BC",
        "\u110B\u1172\u11A8\u1100\u116E\u11AB",
        "\u110B\u1172\u11A8\u1109\u1161\u11BC",
        "\u110B\u1172\u11A8\u1109\u1175\u11B8",
        "\u110B\u1172\u11A8\u110E\u1166",
        "\u110B\u1173\u11AB\u1112\u1162\u11BC",
        "\u110B\u1173\u11B7\u1105\u1167\u11A8",
        "\u110B\u1173\u11B7\u1105\u116D",
        "\u110B\u1173\u11B7\u1107\u1161\u11AB",
        "\u110B\u1173\u11B7\u1109\u1165\u11BC",
        "\u110B\u1173\u11B7\u1109\u1175\u11A8",
        "\u110B\u1173\u11B7\u110B\u1161\u11A8",
        "\u110B\u1173\u11B7\u110C\u116E",
        "\u110B\u1174\u1100\u1167\u11AB",
        "\u110B\u1174\u1102\u1169\u11AB",
        "\u110B\u1174\u1106\u116E\u11AB",
        "\u110B\u1174\u1107\u1169\u11A8",
        "\u110B\u1174\u1109\u1175\u11A8",
        "\u110B\u1174\u1109\u1175\u11B7",
        "\u110B\u1174\u110B\u116C\u1105\u1169",
        "\u110B\u1174\u110B\u116D\u11A8",
        "\u110B\u1174\u110B\u116F\u11AB",
        "\u110B\u1174\u1112\u1161\u11A8",
        "\u110B\u1175\u1100\u1165\u11BA",
        "\u110B\u1175\u1100\u1169\u11BA",
        "\u110B\u1175\u1102\u1167\u11B7",
        "\u110B\u1175\u1102\u1169\u11B7",
        "\u110B\u1175\u1103\u1161\u11AF",
        "\u110B\u1175\u1103\u1162\u1105\u1169",
        "\u110B\u1175\u1103\u1169\u11BC",
        "\u110B\u1175\u1105\u1165\u11C2\u1100\u1166",
        "\u110B\u1175\u1105\u1167\u11A8\u1109\u1165",
        "\u110B\u1175\u1105\u1169\u11AB\u110C\u1165\u11A8",
        "\u110B\u1175\u1105\u1173\u11B7",
        "\u110B\u1175\u1106\u1175\u11AB",
        "\u110B\u1175\u1107\u1161\u11AF\u1109\u1169",
        "\u110B\u1175\u1107\u1167\u11AF",
        "\u110B\u1175\u1107\u116E\u11AF",
        "\u110B\u1175\u1108\u1161\u11AF",
        "\u110B\u1175\u1109\u1161\u11BC",
        "\u110B\u1175\u1109\u1165\u11BC",
        "\u110B\u1175\u1109\u1173\u11AF",
        "\u110B\u1175\u110B\u1163\u1100\u1175",
        "\u110B\u1175\u110B\u116D\u11BC",
        "\u110B\u1175\u110B\u116E\u11BA",
        "\u110B\u1175\u110B\u116F\u11AF",
        "\u110B\u1175\u110B\u1173\u11A8\u1100\u1169",
        "\u110B\u1175\u110B\u1175\u11A8",
        "\u110B\u1175\u110C\u1165\u11AB",
        "\u110B\u1175\u110C\u116E\u11BC",
        "\u110B\u1175\u1110\u1173\u11AE\u1102\u1161\u11AF",
        "\u110B\u1175\u1110\u1173\u11AF",
        "\u110B\u1175\u1112\u1169\u11AB",
        "\u110B\u1175\u11AB\u1100\u1161\u11AB",
        "\u110B\u1175\u11AB\u1100\u1167\u11A8",
        "\u110B\u1175\u11AB\u1100\u1169\u11BC",
        "\u110B\u1175\u11AB\u1100\u116E",
        "\u110B\u1175\u11AB\u1100\u1173\u11AB",
        "\u110B\u1175\u11AB\u1100\u1175",
        "\u110B\u1175\u11AB\u1103\u1169",
        "\u110B\u1175\u11AB\u1105\u1172",
        "\u110B\u1175\u11AB\u1106\u116E\u11AF",
        "\u110B\u1175\u11AB\u1109\u1162\u11BC",
        "\u110B\u1175\u11AB\u1109\u116B",
        "\u110B\u1175\u11AB\u110B\u1167\u11AB",
        "\u110B\u1175\u11AB\u110B\u116F\u11AB",
        "\u110B\u1175\u11AB\u110C\u1162",
        "\u110B\u1175\u11AB\u110C\u1169\u11BC",
        "\u110B\u1175\u11AB\u110E\u1165\u11AB",
        "\u110B\u1175\u11AB\u110E\u1166",
        "\u110B\u1175\u11AB\u1110\u1165\u1102\u1166\u11BA",
        "\u110B\u1175\u11AB\u1112\u1161",
        "\u110B\u1175\u11AB\u1112\u1167\u11BC",
        "\u110B\u1175\u11AF\u1100\u1169\u11B8",
        "\u110B\u1175\u11AF\u1100\u1175",
        "\u110B\u1175\u11AF\u1103\u1161\u11AB",
        "\u110B\u1175\u11AF\u1103\u1162",
        "\u110B\u1175\u11AF\u1103\u1173\u11BC",
        "\u110B\u1175\u11AF\u1107\u1161\u11AB",
        "\u110B\u1175\u11AF\u1107\u1169\u11AB",
        "\u110B\u1175\u11AF\u1107\u116E",
        "\u110B\u1175\u11AF\u1109\u1161\u11BC",
        "\u110B\u1175\u11AF\u1109\u1162\u11BC",
        "\u110B\u1175\u11AF\u1109\u1169\u11AB",
        "\u110B\u1175\u11AF\u110B\u116D\u110B\u1175\u11AF",
        "\u110B\u1175\u11AF\u110B\u116F\u11AF",
        "\u110B\u1175\u11AF\u110C\u1165\u11BC",
        "\u110B\u1175\u11AF\u110C\u1169\u11BC",
        "\u110B\u1175\u11AF\u110C\u116E\u110B\u1175\u11AF",
        "\u110B\u1175\u11AF\u110D\u1175\u11A8",
        "\u110B\u1175\u11AF\u110E\u1166",
        "\u110B\u1175\u11AF\u110E\u1175",
        "\u110B\u1175\u11AF\u1112\u1162\u11BC",
        "\u110B\u1175\u11AF\u1112\u116C\u110B\u116D\u11BC",
        "\u110B\u1175\u11B7\u1100\u1173\u11B7",
        "\u110B\u1175\u11B7\u1106\u116E",
        "\u110B\u1175\u11B8\u1103\u1162",
        "\u110B\u1175\u11B8\u1105\u1167\u11A8",
        "\u110B\u1175\u11B8\u1106\u1161\u11BA",
        "\u110B\u1175\u11B8\u1109\u1161",
        "\u110B\u1175\u11B8\u1109\u116E\u11AF",
        "\u110B\u1175\u11B8\u1109\u1175",
        "\u110B\u1175\u11B8\u110B\u116F\u11AB",
        "\u110B\u1175\u11B8\u110C\u1161\u11BC",
        "\u110B\u1175\u11B8\u1112\u1161\u11A8",
        "\u110C\u1161\u1100\u1161\u110B\u116D\u11BC",
        "\u110C\u1161\u1100\u1167\u11A8",
        "\u110C\u1161\u1100\u1173\u11A8",
        "\u110C\u1161\u1103\u1169\u11BC",
        "\u110C\u1161\u1105\u1161\u11BC",
        "\u110C\u1161\u1107\u116E\u1109\u1175\u11B7",
        "\u110C\u1161\u1109\u1175\u11A8",
        "\u110C\u1161\u1109\u1175\u11AB",
        "\u110C\u1161\u110B\u1167\u11AB",
        "\u110C\u1161\u110B\u116F\u11AB",
        "\u110C\u1161\u110B\u1172\u11AF",
        "\u110C\u1161\u110C\u1165\u11AB\u1100\u1165",
        "\u110C\u1161\u110C\u1165\u11BC",
        "\u110C\u1161\u110C\u1169\u11AB\u1109\u1175\u11B7",
        "\u110C\u1161\u1111\u1161\u11AB",
        "\u110C\u1161\u11A8\u1100\u1161",
        "\u110C\u1161\u11A8\u1102\u1167\u11AB",
        "\u110C\u1161\u11A8\u1109\u1165\u11BC",
        "\u110C\u1161\u11A8\u110B\u1165\u11B8",
        "\u110C\u1161\u11A8\u110B\u116D\u11BC",
        "\u110C\u1161\u11A8\u110B\u1173\u11AB\u1104\u1161\u11AF",
        "\u110C\u1161\u11A8\u1111\u116E\u11B7",
        "\u110C\u1161\u11AB\u1103\u1175",
        "\u110C\u1161\u11AB\u1104\u1173\u11A8",
        "\u110C\u1161\u11AB\u110E\u1175",
        "\u110C\u1161\u11AF\u1106\u1169\u11BA",
        "\u110C\u1161\u11B7\u1101\u1161\u11AB",
        "\u110C\u1161\u11B7\u1109\u116E\u1112\u1161\u11B7",
        "\u110C\u1161\u11B7\u1109\u1175",
        "\u110C\u1161\u11B7\u110B\u1169\u11BA",
        "\u110C\u1161\u11B7\u110C\u1161\u1105\u1175",
        "\u110C\u1161\u11B8\u110C\u1175",
        "\u110C\u1161\u11BC\u1100\u116A\u11AB",
        "\u110C\u1161\u11BC\u1100\u116E\u11AB",
        "\u110C\u1161\u11BC\u1100\u1175\u1100\u1161\u11AB",
        "\u110C\u1161\u11BC\u1105\u1162",
        "\u110C\u1161\u11BC\u1105\u1168",
        "\u110C\u1161\u11BC\u1105\u1173",
        "\u110C\u1161\u11BC\u1106\u1161",
        "\u110C\u1161\u11BC\u1106\u1167\u11AB",
        "\u110C\u1161\u11BC\u1106\u1169",
        "\u110C\u1161\u11BC\u1106\u1175",
        "\u110C\u1161\u11BC\u1107\u1175",
        "\u110C\u1161\u11BC\u1109\u1161",
        "\u110C\u1161\u11BC\u1109\u1169",
        "\u110C\u1161\u11BC\u1109\u1175\u11A8",
        "\u110C\u1161\u11BC\u110B\u1162\u110B\u1175\u11AB",
        "\u110C\u1161\u11BC\u110B\u1175\u11AB",
        "\u110C\u1161\u11BC\u110C\u1165\u11B7",
        "\u110C\u1161\u11BC\u110E\u1161",
        "\u110C\u1161\u11BC\u1112\u1161\u11A8\u1100\u1173\u11B7",
        "\u110C\u1162\u1102\u1173\u11BC",
        "\u110C\u1162\u1108\u1161\u11AF\u1105\u1175",
        "\u110C\u1162\u1109\u1161\u11AB",
        "\u110C\u1162\u1109\u1162\u11BC",
        "\u110C\u1162\u110C\u1161\u11A8\u1102\u1167\u11AB",
        "\u110C\u1162\u110C\u1165\u11BC",
        "\u110C\u1162\u110E\u1162\u1100\u1175",
        "\u110C\u1162\u1111\u1161\u11AB",
        "\u110C\u1162\u1112\u1161\u11A8",
        "\u110C\u1162\u1112\u116A\u11AF\u110B\u116D\u11BC",
        "\u110C\u1165\u1100\u1165\u11BA",
        "\u110C\u1165\u1100\u1169\u1105\u1175",
        "\u110C\u1165\u1100\u1169\u11BA",
        "\u110C\u1165\u1102\u1167\u11A8",
        "\u110C\u1165\u1105\u1165\u11AB",
        "\u110C\u1165\u1105\u1165\u11C2\u1100\u1166",
        "\u110C\u1165\u1107\u1165\u11AB",
        "\u110C\u1165\u110B\u116E\u11AF",
        "\u110C\u1165\u110C\u1165\u11AF\u1105\u1169",
        "\u110C\u1165\u110E\u116E\u11A8",
        "\u110C\u1165\u11A8\u1100\u1173\u11A8",
        "\u110C\u1165\u11A8\u1103\u1161\u11BC\u1112\u1175",
        "\u110C\u1165\u11A8\u1109\u1165\u11BC",
        "\u110C\u1165\u11A8\u110B\u116D\u11BC",
        "\u110C\u1165\u11A8\u110B\u1173\u11BC",
        "\u110C\u1165\u11AB\u1100\u1162",
        "\u110C\u1165\u11AB\u1100\u1169\u11BC",
        "\u110C\u1165\u11AB\u1100\u1175",
        "\u110C\u1165\u11AB\u1103\u1161\u11AF",
        "\u110C\u1165\u11AB\u1105\u1161\u1103\u1169",
        "\u110C\u1165\u11AB\u1106\u1161\u11BC",
        "\u110C\u1165\u11AB\u1106\u116E\u11AB",
        "\u110C\u1165\u11AB\u1107\u1161\u11AB",
        "\u110C\u1165\u11AB\u1107\u116E",
        "\u110C\u1165\u11AB\u1109\u1166",
        "\u110C\u1165\u11AB\u1109\u1175",
        "\u110C\u1165\u11AB\u110B\u116D\u11BC",
        "\u110C\u1165\u11AB\u110C\u1161",
        "\u110C\u1165\u11AB\u110C\u1162\u11BC",
        "\u110C\u1165\u11AB\u110C\u116E",
        "\u110C\u1165\u11AB\u110E\u1165\u11AF",
        "\u110C\u1165\u11AB\u110E\u1166",
        "\u110C\u1165\u11AB\u1110\u1169\u11BC",
        "\u110C\u1165\u11AB\u1112\u1167",
        "\u110C\u1165\u11AB\u1112\u116E",
        "\u110C\u1165\u11AF\u1103\u1162",
        "\u110C\u1165\u11AF\u1106\u1161\u11BC",
        "\u110C\u1165\u11AF\u1107\u1161\u11AB",
        "\u110C\u1165\u11AF\u110B\u1163\u11A8",
        "\u110C\u1165\u11AF\u110E\u1161",
        "\u110C\u1165\u11B7\u1100\u1165\u11B7",
        "\u110C\u1165\u11B7\u1109\u116E",
        "\u110C\u1165\u11B7\u1109\u1175\u11B7",
        "\u110C\u1165\u11B7\u110B\u116F\u11AB",
        "\u110C\u1165\u11B7\u110C\u1165\u11B7",
        "\u110C\u1165\u11B7\u110E\u1161",
        "\u110C\u1165\u11B8\u1100\u1173\u11AB",
        "\u110C\u1165\u11B8\u1109\u1175",
        "\u110C\u1165\u11B8\u110E\u1169\u11A8",
        "\u110C\u1165\u11BA\u1100\u1161\u1105\u1161\u11A8",
        "\u110C\u1165\u11BC\u1100\u1165\u110C\u1161\u11BC",
        "\u110C\u1165\u11BC\u1103\u1169",
        "\u110C\u1165\u11BC\u1105\u1172\u110C\u1161\u11BC",
        "\u110C\u1165\u11BC\u1105\u1175",
        "\u110C\u1165\u11BC\u1106\u1161\u11AF",
        "\u110C\u1165\u11BC\u1106\u1167\u11AB",
        "\u110C\u1165\u11BC\u1106\u116E\u11AB",
        "\u110C\u1165\u11BC\u1107\u1161\u11AB\u1103\u1162",
        "\u110C\u1165\u11BC\u1107\u1169",
        "\u110C\u1165\u11BC\u1107\u116E",
        "\u110C\u1165\u11BC\u1107\u1175",
        "\u110C\u1165\u11BC\u1109\u1161\u11BC",
        "\u110C\u1165\u11BC\u1109\u1165\u11BC",
        "\u110C\u1165\u11BC\u110B\u1169",
        "\u110C\u1165\u11BC\u110B\u116F\u11AB",
        "\u110C\u1165\u11BC\u110C\u1161\u11BC",
        "\u110C\u1165\u11BC\u110C\u1175",
        "\u110C\u1165\u11BC\u110E\u1175",
        "\u110C\u1165\u11BC\u1112\u116A\u11A8\u1112\u1175",
        "\u110C\u1166\u1100\u1169\u11BC",
        "\u110C\u1166\u1100\u116A\u110C\u1165\u11B7",
        "\u110C\u1166\u1103\u1162\u1105\u1169",
        "\u110C\u1166\u1106\u1169\u11A8",
        "\u110C\u1166\u1107\u1161\u11AF",
        "\u110C\u1166\u1107\u1165\u11B8",
        "\u110C\u1166\u1109\u1161\u11BA\u1102\u1161\u11AF",
        "\u110C\u1166\u110B\u1161\u11AB",
        "\u110C\u1166\u110B\u1175\u11AF",
        "\u110C\u1166\u110C\u1161\u11A8",
        "\u110C\u1166\u110C\u116E\u1103\u1169",
        "\u110C\u1166\u110E\u116E\u11AF",
        "\u110C\u1166\u1111\u116E\u11B7",
        "\u110C\u1166\u1112\u1161\u11AB",
        "\u110C\u1169\u1100\u1161\u11A8",
        "\u110C\u1169\u1100\u1165\u11AB",
        "\u110C\u1169\u1100\u1173\u11B7",
        "\u110C\u1169\u1100\u1175\u11BC",
        "\u110C\u1169\u1106\u1167\u11BC",
        "\u110C\u1169\u1106\u1175\u1105\u116D",
        "\u110C\u1169\u1109\u1161\u11BC",
        "\u110C\u1169\u1109\u1165\u11AB",
        "\u110C\u1169\u110B\u116D\u11BC\u1112\u1175",
        "\u110C\u1169\u110C\u1165\u11AF",
        "\u110C\u1169\u110C\u1165\u11BC",
        "\u110C\u1169\u110C\u1175\u11A8",
        "\u110C\u1169\u11AB\u1103\u1162\u11BA\u1106\u1161\u11AF",
        "\u110C\u1169\u11AB\u110C\u1162",
        "\u110C\u1169\u11AF\u110B\u1165\u11B8",
        "\u110C\u1169\u11AF\u110B\u1173\u11B7",
        "\u110C\u1169\u11BC\u1100\u116D",
        "\u110C\u1169\u11BC\u1105\u1169",
        "\u110C\u1169\u11BC\u1105\u1172",
        "\u110C\u1169\u11BC\u1109\u1169\u1105\u1175",
        "\u110C\u1169\u11BC\u110B\u1165\u11B8\u110B\u116F\u11AB",
        "\u110C\u1169\u11BC\u110C\u1169\u11BC",
        "\u110C\u1169\u11BC\u1112\u1161\u11B8",
        "\u110C\u116A\u1109\u1165\u11A8",
        "\u110C\u116C\u110B\u1175\u11AB",
        "\u110C\u116E\u1100\u116A\u11AB\u110C\u1165\u11A8",
        "\u110C\u116E\u1105\u1173\u11B7",
        "\u110C\u116E\u1106\u1161\u11AF",
        "\u110C\u116E\u1106\u1165\u1102\u1175",
        "\u110C\u116E\u1106\u1165\u11A8",
        "\u110C\u116E\u1106\u116E\u11AB",
        "\u110C\u116E\u1106\u1175\u11AB",
        "\u110C\u116E\u1107\u1161\u11BC",
        "\u110C\u116E\u1107\u1167\u11AB",
        "\u110C\u116E\u1109\u1175\u11A8",
        "\u110C\u116E\u110B\u1175\u11AB",
        "\u110C\u116E\u110B\u1175\u11AF",
        "\u110C\u116E\u110C\u1161\u11BC",
        "\u110C\u116E\u110C\u1165\u11AB\u110C\u1161",
        "\u110C\u116E\u1110\u1162\u11A8",
        "\u110C\u116E\u11AB\u1107\u1175",
        "\u110C\u116E\u11AF\u1100\u1165\u1105\u1175",
        "\u110C\u116E\u11AF\u1100\u1175",
        "\u110C\u116E\u11AF\u1106\u116E\u1102\u1174",
        "\u110C\u116E\u11BC\u1100\u1161\u11AB",
        "\u110C\u116E\u11BC\u1100\u1168\u1107\u1161\u11BC\u1109\u1169\u11BC",
        "\u110C\u116E\u11BC\u1100\u116E\u11A8",
        "\u110C\u116E\u11BC\u1102\u1167\u11AB",
        "\u110C\u116E\u11BC\u1103\u1161\u11AB",
        "\u110C\u116E\u11BC\u1103\u1169\u11A8",
        "\u110C\u116E\u11BC\u1107\u1161\u11AB",
        "\u110C\u116E\u11BC\u1107\u116E",
        "\u110C\u116E\u11BC\u1109\u1166",
        "\u110C\u116E\u11BC\u1109\u1169\u1100\u1175\u110B\u1165\u11B8",
        "\u110C\u116E\u11BC\u1109\u116E\u11AB",
        "\u110C\u116E\u11BC\u110B\u1161\u11BC",
        "\u110C\u116E\u11BC\u110B\u116D",
        "\u110C\u116E\u11BC\u1112\u1161\u11A8\u1100\u116D",
        "\u110C\u1173\u11A8\u1109\u1165\u11A8",
        "\u110C\u1173\u11A8\u1109\u1175",
        "\u110C\u1173\u11AF\u1100\u1165\u110B\u116E\u11B7",
        "\u110C\u1173\u11BC\u1100\u1161",
        "\u110C\u1173\u11BC\u1100\u1165",
        "\u110C\u1173\u11BC\u1100\u116F\u11AB",
        "\u110C\u1173\u11BC\u1109\u1161\u11BC",
        "\u110C\u1173\u11BC\u1109\u1166",
        "\u110C\u1175\u1100\u1161\u11A8",
        "\u110C\u1175\u1100\u1161\u11B8",
        "\u110C\u1175\u1100\u1167\u11BC",
        "\u110C\u1175\u1100\u1173\u11A8\u1112\u1175",
        "\u110C\u1175\u1100\u1173\u11B7",
        "\u110C\u1175\u1100\u1173\u11B8",
        "\u110C\u1175\u1102\u1173\u11BC",
        "\u110C\u1175\u1105\u1173\u11B7\u1100\u1175\u11AF",
        "\u110C\u1175\u1105\u1175\u1109\u1161\u11AB",
        "\u110C\u1175\u1107\u1161\u11BC",
        "\u110C\u1175\u1107\u116E\u11BC",
        "\u110C\u1175\u1109\u1175\u11A8",
        "\u110C\u1175\u110B\u1167\u11A8",
        "\u110C\u1175\u110B\u116E\u1100\u1162",
        "\u110C\u1175\u110B\u116F\u11AB",
        "\u110C\u1175\u110C\u1165\u11A8",
        "\u110C\u1175\u110C\u1165\u11B7",
        "\u110C\u1175\u110C\u1175\u11AB",
        "\u110C\u1175\u110E\u116E\u11AF",
        "\u110C\u1175\u11A8\u1109\u1165\u11AB",
        "\u110C\u1175\u11A8\u110B\u1165\u11B8",
        "\u110C\u1175\u11A8\u110B\u116F\u11AB",
        "\u110C\u1175\u11A8\u110C\u1161\u11BC",
        "\u110C\u1175\u11AB\u1100\u1173\u11B8",
        "\u110C\u1175\u11AB\u1103\u1169\u11BC",
        "\u110C\u1175\u11AB\u1105\u1169",
        "\u110C\u1175\u11AB\u1105\u116D",
        "\u110C\u1175\u11AB\u1105\u1175",
        "\u110C\u1175\u11AB\u110D\u1161",
        "\u110C\u1175\u11AB\u110E\u1161\u11AF",
        "\u110C\u1175\u11AB\u110E\u116E\u11AF",
        "\u110C\u1175\u11AB\u1110\u1169\u11BC",
        "\u110C\u1175\u11AB\u1112\u1162\u11BC",
        "\u110C\u1175\u11AF\u1106\u116E\u11AB",
        "\u110C\u1175\u11AF\u1107\u1167\u11BC",
        "\u110C\u1175\u11AF\u1109\u1165",
        "\u110C\u1175\u11B7\u110C\u1161\u11A8",
        "\u110C\u1175\u11B8\u1103\u1161\u11AB",
        "\u110C\u1175\u11B8\u110B\u1161\u11AB",
        "\u110C\u1175\u11B8\u110C\u116E\u11BC",
        "\u110D\u1161\u110C\u1173\u11BC",
        "\u110D\u1175\u1101\u1165\u1100\u1175",
        "\u110E\u1161\u1102\u1161\u11B7",
        "\u110E\u1161\u1105\u1161\u1105\u1175",
        "\u110E\u1161\u1105\u1163\u11BC",
        "\u110E\u1161\u1105\u1175\u11B7",
        "\u110E\u1161\u1107\u1167\u11AF",
        "\u110E\u1161\u1109\u1165\u11AB",
        "\u110E\u1161\u110E\u1173\u11B7",
        "\u110E\u1161\u11A8\u1100\u1161\u11A8",
        "\u110E\u1161\u11AB\u1106\u116E\u11AF",
        "\u110E\u1161\u11AB\u1109\u1165\u11BC",
        "\u110E\u1161\u11B7\u1100\u1161",
        "\u110E\u1161\u11B7\u1100\u1175\u1105\u1173\u11B7",
        "\u110E\u1161\u11B7\u1109\u1162",
        "\u110E\u1161\u11B7\u1109\u1165\u11A8",
        "\u110E\u1161\u11B7\u110B\u1167",
        "\u110E\u1161\u11B7\u110B\u116C",
        "\u110E\u1161\u11B7\u110C\u1169",
        "\u110E\u1161\u11BA\u110C\u1161\u11AB",
        "\u110E\u1161\u11BC\u1100\u1161",
        "\u110E\u1161\u11BC\u1100\u1169",
        "\u110E\u1161\u11BC\u1100\u116E",
        "\u110E\u1161\u11BC\u1106\u116E\u11AB",
        "\u110E\u1161\u11BC\u1107\u1161\u11A9",
        "\u110E\u1161\u11BC\u110C\u1161\u11A8",
        "\u110E\u1161\u11BC\u110C\u1169",
        "\u110E\u1162\u1102\u1165\u11AF",
        "\u110E\u1162\u110C\u1165\u11B7",
        "\u110E\u1162\u11A8\u1100\u1161\u1107\u1161\u11BC",
        "\u110E\u1162\u11A8\u1107\u1161\u11BC",
        "\u110E\u1162\u11A8\u1109\u1161\u11BC",
        "\u110E\u1162\u11A8\u110B\u1175\u11B7",
        "\u110E\u1162\u11B7\u1111\u1175\u110B\u1165\u11AB",
        "\u110E\u1165\u1107\u1165\u11AF",
        "\u110E\u1165\u110B\u1173\u11B7",
        "\u110E\u1165\u11AB\u1100\u116E\u11A8",
        "\u110E\u1165\u11AB\u1103\u116E\u11BC",
        "\u110E\u1165\u11AB\u110C\u1161\u11BC",
        "\u110E\u1165\u11AB\u110C\u1162",
        "\u110E\u1165\u11AB\u110E\u1165\u11AB\u1112\u1175",
        "\u110E\u1165\u11AF\u1103\u1169",
        "\u110E\u1165\u11AF\u110C\u1165\u1112\u1175",
        "\u110E\u1165\u11AF\u1112\u1161\u11A8",
        "\u110E\u1165\u11BA\u1102\u1161\u11AF",
        "\u110E\u1165\u11BA\u110D\u1162",
        "\u110E\u1165\u11BC\u1102\u1167\u11AB",
        "\u110E\u1165\u11BC\u1107\u1161\u110C\u1175",
        "\u110E\u1165\u11BC\u1109\u1169",
        "\u110E\u1165\u11BC\u110E\u116E\u11AB",
        "\u110E\u1166\u1100\u1168",
        "\u110E\u1166\u1105\u1167\u11A8",
        "\u110E\u1166\u110B\u1169\u11AB",
        "\u110E\u1166\u110B\u1172\u11A8",
        "\u110E\u1166\u110C\u116E\u11BC",
        "\u110E\u1166\u1112\u1165\u11B7",
        "\u110E\u1169\u1103\u1173\u11BC\u1112\u1161\u11A8\u1109\u1162\u11BC",
        "\u110E\u1169\u1107\u1161\u11AB",
        "\u110E\u1169\u1107\u1161\u11B8",
        "\u110E\u1169\u1109\u1161\u11BC\u1112\u116A",
        "\u110E\u1169\u1109\u116E\u11AB",
        "\u110E\u1169\u110B\u1167\u1105\u1173\u11B7",
        "\u110E\u1169\u110B\u116F\u11AB",
        "\u110E\u1169\u110C\u1165\u1102\u1167\u11A8",
        "\u110E\u1169\u110C\u1165\u11B7",
        "\u110E\u1169\u110E\u1165\u11BC",
        "\u110E\u1169\u110F\u1169\u11AF\u1105\u1175\u11BA",
        "\u110E\u1169\u11BA\u1107\u116E\u11AF",
        "\u110E\u1169\u11BC\u1100\u1161\u11A8",
        "\u110E\u1169\u11BC\u1105\u1175",
        "\u110E\u1169\u11BC\u110C\u1161\u11BC",
        "\u110E\u116A\u11AF\u110B\u1167\u11BC",
        "\u110E\u116C\u1100\u1173\u11AB",
        "\u110E\u116C\u1109\u1161\u11BC",
        "\u110E\u116C\u1109\u1165\u11AB",
        "\u110E\u116C\u1109\u1175\u11AB",
        "\u110E\u116C\u110B\u1161\u11A8",
        "\u110E\u116C\u110C\u1169\u11BC",
        "\u110E\u116E\u1109\u1165\u11A8",
        "\u110E\u116E\u110B\u1165\u11A8",
        "\u110E\u116E\u110C\u1175\u11AB",
        "\u110E\u116E\u110E\u1165\u11AB",
        "\u110E\u116E\u110E\u1173\u11A8",
        "\u110E\u116E\u11A8\u1100\u116E",
        "\u110E\u116E\u11A8\u1109\u1169",
        "\u110E\u116E\u11A8\u110C\u1166",
        "\u110E\u116E\u11A8\u1112\u1161",
        "\u110E\u116E\u11AF\u1100\u1173\u11AB",
        "\u110E\u116E\u11AF\u1107\u1161\u11AF",
        "\u110E\u116E\u11AF\u1109\u1161\u11AB",
        "\u110E\u116E\u11AF\u1109\u1175\u11AB",
        "\u110E\u116E\u11AF\u110B\u1167\u11AB",
        "\u110E\u116E\u11AF\u110B\u1175\u11B8",
        "\u110E\u116E\u11AF\u110C\u1161\u11BC",
        "\u110E\u116E\u11AF\u1111\u1161\u11AB",
        "\u110E\u116E\u11BC\u1100\u1167\u11A8",
        "\u110E\u116E\u11BC\u1100\u1169",
        "\u110E\u116E\u11BC\u1103\u1169\u11AF",
        "\u110E\u116E\u11BC\u1107\u116E\u11AB\u1112\u1175",
        "\u110E\u116E\u11BC\u110E\u1165\u11BC\u1103\u1169",
        "\u110E\u1171\u110B\u1165\u11B8",
        "\u110E\u1171\u110C\u1175\u11A8",
        "\u110E\u1171\u1112\u1163\u11BC",
        "\u110E\u1175\u110B\u1163\u11A8",
        "\u110E\u1175\u11AB\u1100\u116E",
        "\u110E\u1175\u11AB\u110E\u1165\u11A8",
        "\u110E\u1175\u11AF\u1109\u1175\u11B8",
        "\u110E\u1175\u11AF\u110B\u116F\u11AF",
        "\u110E\u1175\u11AF\u1111\u1161\u11AB",
        "\u110E\u1175\u11B7\u1103\u1162",
        "\u110E\u1175\u11B7\u1106\u116E\u11A8",
        "\u110E\u1175\u11B7\u1109\u1175\u11AF",
        "\u110E\u1175\u11BA\u1109\u1169\u11AF",
        "\u110E\u1175\u11BC\u110E\u1161\u11AB",
        "\u110F\u1161\u1106\u1166\u1105\u1161",
        "\u110F\u1161\u110B\u116E\u11AB\u1110\u1165",
        "\u110F\u1161\u11AF\u1100\u116E\u11A8\u1109\u116E",
        "\u110F\u1162\u1105\u1175\u11A8\u1110\u1165",
        "\u110F\u1162\u11B7\u1111\u1165\u1109\u1173",
        "\u110F\u1162\u11B7\u1111\u1166\u110B\u1175\u11AB",
        "\u110F\u1165\u1110\u1173\u11AB",
        "\u110F\u1165\u11AB\u1103\u1175\u1109\u1167\u11AB",
        "\u110F\u1165\u11AF\u1105\u1165",
        "\u110F\u1165\u11B7\u1111\u1172\u1110\u1165",
        "\u110F\u1169\u1101\u1175\u1105\u1175",
        "\u110F\u1169\u1106\u1175\u1103\u1175",
        "\u110F\u1169\u11AB\u1109\u1165\u1110\u1173",
        "\u110F\u1169\u11AF\u1105\u1161",
        "\u110F\u1169\u11B7\u1111\u1173\u11AF\u1105\u1166\u11A8\u1109\u1173",
        "\u110F\u1169\u11BC\u1102\u1161\u1106\u116E\u11AF",
        "\u110F\u116B\u1100\u1161\u11B7",
        "\u110F\u116E\u1103\u1166\u1110\u1161",
        "\u110F\u1173\u1105\u1175\u11B7",
        "\u110F\u1173\u11AB\u1100\u1175\u11AF",
        "\u110F\u1173\u11AB\u1104\u1161\u11AF",
        "\u110F\u1173\u11AB\u1109\u1169\u1105\u1175",
        "\u110F\u1173\u11AB\u110B\u1161\u1103\u1173\u11AF",
        "\u110F\u1173\u11AB\u110B\u1165\u1106\u1165\u1102\u1175",
        "\u110F\u1173\u11AB\u110B\u1175\u11AF",
        "\u110F\u1173\u11AB\u110C\u1165\u11AF",
        "\u110F\u1173\u11AF\u1105\u1162\u1109\u1175\u11A8",
        "\u110F\u1173\u11AF\u1105\u1165\u11B8",
        "\u110F\u1175\u11AF\u1105\u1169",
        "\u1110\u1161\u110B\u1175\u11B8",
        "\u1110\u1161\u110C\u1161\u1100\u1175",
        "\u1110\u1161\u11A8\u1100\u116E",
        "\u1110\u1161\u11A8\u110C\u1161",
        "\u1110\u1161\u11AB\u1109\u1162\u11BC",
        "\u1110\u1162\u1100\u116F\u11AB\u1103\u1169",
        "\u1110\u1162\u110B\u1163\u11BC",
        "\u1110\u1162\u1111\u116E\u11BC",
        "\u1110\u1162\u11A8\u1109\u1175",
        "\u1110\u1162\u11AF\u1105\u1165\u11AB\u1110\u1173",
        "\u1110\u1165\u1102\u1165\u11AF",
        "\u1110\u1165\u1106\u1175\u1102\u1165\u11AF",
        "\u1110\u1166\u1102\u1175\u1109\u1173",
        "\u1110\u1166\u1109\u1173\u1110\u1173",
        "\u1110\u1166\u110B\u1175\u1107\u1173\u11AF",
        "\u1110\u1166\u11AF\u1105\u1166\u1107\u1175\u110C\u1165\u11AB",
        "\u1110\u1169\u1105\u1169\u11AB",
        "\u1110\u1169\u1106\u1161\u1110\u1169",
        "\u1110\u1169\u110B\u116D\u110B\u1175\u11AF",
        "\u1110\u1169\u11BC\u1100\u1168",
        "\u1110\u1169\u11BC\u1100\u116A",
        "\u1110\u1169\u11BC\u1105\u1169",
        "\u1110\u1169\u11BC\u1109\u1175\u11AB",
        "\u1110\u1169\u11BC\u110B\u1167\u11A8",
        "\u1110\u1169\u11BC\u110B\u1175\u11AF",
        "\u1110\u1169\u11BC\u110C\u1161\u11BC",
        "\u1110\u1169\u11BC\u110C\u1166",
        "\u1110\u1169\u11BC\u110C\u1173\u11BC",
        "\u1110\u1169\u11BC\u1112\u1161\u11B8",
        "\u1110\u1169\u11BC\u1112\u116A",
        "\u1110\u116C\u1100\u1173\u11AB",
        "\u1110\u116C\u110B\u116F\u11AB",
        "\u1110\u116C\u110C\u1175\u11A8\u1100\u1173\u11B7",
        "\u1110\u1171\u1100\u1175\u11B7",
        "\u1110\u1173\u1105\u1165\u11A8",
        "\u1110\u1173\u11A8\u1100\u1173\u11B8",
        "\u1110\u1173\u11A8\u1107\u1167\u11AF",
        "\u1110\u1173\u11A8\u1109\u1165\u11BC",
        "\u1110\u1173\u11A8\u1109\u116E",
        "\u1110\u1173\u11A8\u110C\u1175\u11BC",
        "\u1110\u1173\u11A8\u1112\u1175",
        "\u1110\u1173\u11AB\u1110\u1173\u11AB\u1112\u1175",
        "\u1110\u1175\u1109\u1167\u110E\u1173",
        "\u1111\u1161\u1105\u1161\u11AB\u1109\u1162\u11A8",
        "\u1111\u1161\u110B\u1175\u11AF",
        "\u1111\u1161\u110E\u116E\u11AF\u1109\u1169",
        "\u1111\u1161\u11AB\u1100\u1167\u11AF",
        "\u1111\u1161\u11AB\u1103\u1161\u11AB",
        "\u1111\u1161\u11AB\u1106\u1162",
        "\u1111\u1161\u11AB\u1109\u1161",
        "\u1111\u1161\u11AF\u1109\u1175\u11B8",
        "\u1111\u1161\u11AF\u110B\u116F\u11AF",
        "\u1111\u1161\u11B8\u1109\u1169\u11BC",
        "\u1111\u1162\u1109\u1167\u11AB",
        "\u1111\u1162\u11A8\u1109\u1173",
        "\u1111\u1162\u11A8\u1109\u1175\u1106\u1175\u11AF\u1105\u1175",
        "\u1111\u1162\u11AB\u1110\u1175",
        "\u1111\u1165\u1109\u1166\u11AB\u1110\u1173",
        "\u1111\u1166\u110B\u1175\u11AB\u1110\u1173",
        "\u1111\u1167\u11AB\u1100\u1167\u11AB",
        "\u1111\u1167\u11AB\u110B\u1174",
        "\u1111\u1167\u11AB\u110C\u1175",
        "\u1111\u1167\u11AB\u1112\u1175",
        "\u1111\u1167\u11BC\u1100\u1161",
        "\u1111\u1167\u11BC\u1100\u1172\u11AB",
        "\u1111\u1167\u11BC\u1109\u1162\u11BC",
        "\u1111\u1167\u11BC\u1109\u1169",
        "\u1111\u1167\u11BC\u110B\u1163\u11BC",
        "\u1111\u1167\u11BC\u110B\u1175\u11AF",
        "\u1111\u1167\u11BC\u1112\u116A",
        "\u1111\u1169\u1109\u1173\u1110\u1165",
        "\u1111\u1169\u110B\u1175\u11AB\u1110\u1173",
        "\u1111\u1169\u110C\u1161\u11BC",
        "\u1111\u1169\u1112\u1161\u11B7",
        "\u1111\u116D\u1106\u1167\u11AB",
        "\u1111\u116D\u110C\u1165\u11BC",
        "\u1111\u116D\u110C\u116E\u11AB",
        "\u1111\u116D\u1112\u1167\u11AB",
        "\u1111\u116E\u11B7\u1106\u1169\u11A8",
        "\u1111\u116E\u11B7\u110C\u1175\u11AF",
        "\u1111\u116E\u11BC\u1100\u1167\u11BC",
        "\u1111\u116E\u11BC\u1109\u1169\u11A8",
        "\u1111\u116E\u11BC\u1109\u1173\u11B8",
        "\u1111\u1173\u1105\u1161\u11BC\u1109\u1173",
        "\u1111\u1173\u1105\u1175\u11AB\u1110\u1165",
        "\u1111\u1173\u11AF\u1105\u1161\u1109\u1173\u1110\u1175\u11A8",
        "\u1111\u1175\u1100\u1169\u11AB",
        "\u1111\u1175\u1106\u1161\u11BC",
        "\u1111\u1175\u110B\u1161\u1102\u1169",
        "\u1111\u1175\u11AF\u1105\u1173\u11B7",
        "\u1111\u1175\u11AF\u1109\u116E",
        "\u1111\u1175\u11AF\u110B\u116D",
        "\u1111\u1175\u11AF\u110C\u1161",
        "\u1111\u1175\u11AF\u1110\u1169\u11BC",
        "\u1111\u1175\u11BC\u1100\u1168",
        "\u1112\u1161\u1102\u1173\u1102\u1175\u11B7",
        "\u1112\u1161\u1102\u1173\u11AF",
        "\u1112\u1161\u1103\u1173\u110B\u1170\u110B\u1165",
        "\u1112\u1161\u1105\u116E\u11BA\u1107\u1161\u11B7",
        "\u1112\u1161\u1107\u1161\u11AB\u1100\u1175",
        "\u1112\u1161\u1109\u116E\u11A8\u110C\u1175\u11B8",
        "\u1112\u1161\u1109\u116E\u11AB",
        "\u1112\u1161\u110B\u1167\u1110\u1173\u11AB",
        "\u1112\u1161\u110C\u1175\u1106\u1161\u11AB",
        "\u1112\u1161\u110E\u1165\u11AB",
        "\u1112\u1161\u1111\u116E\u11B7",
        "\u1112\u1161\u1111\u1175\u11AF",
        "\u1112\u1161\u11A8\u1100\u116A",
        "\u1112\u1161\u11A8\u1100\u116D",
        "\u1112\u1161\u11A8\u1100\u1173\u11B8",
        "\u1112\u1161\u11A8\u1100\u1175",
        "\u1112\u1161\u11A8\u1102\u1167\u11AB",
        "\u1112\u1161\u11A8\u1105\u1167\u11A8",
        "\u1112\u1161\u11A8\u1107\u1165\u11AB",
        "\u1112\u1161\u11A8\u1107\u116E\u1106\u1169",
        "\u1112\u1161\u11A8\u1107\u1175",
        "\u1112\u1161\u11A8\u1109\u1162\u11BC",
        "\u1112\u1161\u11A8\u1109\u116E\u11AF",
        "\u1112\u1161\u11A8\u1109\u1173\u11B8",
        "\u1112\u1161\u11A8\u110B\u116D\u11BC\u1111\u116E\u11B7",
        "\u1112\u1161\u11A8\u110B\u116F\u11AB",
        "\u1112\u1161\u11A8\u110B\u1171",
        "\u1112\u1161\u11A8\u110C\u1161",
        "\u1112\u1161\u11A8\u110C\u1165\u11B7",
        "\u1112\u1161\u11AB\u1100\u1168",
        "\u1112\u1161\u11AB\u1100\u1173\u11AF",
        "\u1112\u1161\u11AB\u1101\u1165\u1107\u1165\u11AB\u110B\u1166",
        "\u1112\u1161\u11AB\u1102\u1161\u11BD",
        "\u1112\u1161\u11AB\u1102\u116E\u11AB",
        "\u1112\u1161\u11AB\u1103\u1169\u11BC\u110B\u1161\u11AB",
        "\u1112\u1161\u11AB\u1104\u1162",
        "\u1112\u1161\u11AB\u1105\u1161\u1109\u1161\u11AB",
        "\u1112\u1161\u11AB\u1106\u1161\u1103\u1175",
        "\u1112\u1161\u11AB\u1106\u116E\u11AB",
        "\u1112\u1161\u11AB\u1107\u1165\u11AB",
        "\u1112\u1161\u11AB\u1107\u1169\u11A8",
        "\u1112\u1161\u11AB\u1109\u1175\u11A8",
        "\u1112\u1161\u11AB\u110B\u1167\u1105\u1173\u11B7",
        "\u1112\u1161\u11AB\u110D\u1169\u11A8",
        "\u1112\u1161\u11AF\u1106\u1165\u1102\u1175",
        "\u1112\u1161\u11AF\u110B\u1161\u1107\u1165\u110C\u1175",
        "\u1112\u1161\u11AF\u110B\u1175\u11AB",
        "\u1112\u1161\u11B7\u1101\u1166",
        "\u1112\u1161\u11B7\u1107\u116E\u1105\u1169",
        "\u1112\u1161\u11B8\u1100\u1167\u11A8",
        "\u1112\u1161\u11B8\u1105\u1175\u110C\u1165\u11A8",
        "\u1112\u1161\u11BC\u1100\u1169\u11BC",
        "\u1112\u1161\u11BC\u1100\u116E",
        "\u1112\u1161\u11BC\u1109\u1161\u11BC",
        "\u1112\u1161\u11BC\u110B\u1174",
        "\u1112\u1162\u1100\u1167\u11AF",
        "\u1112\u1162\u1100\u116E\u11AB",
        "\u1112\u1162\u1103\u1161\u11B8",
        "\u1112\u1162\u1103\u1161\u11BC",
        "\u1112\u1162\u1106\u116E\u11AF",
        "\u1112\u1162\u1109\u1165\u11A8",
        "\u1112\u1162\u1109\u1165\u11AF",
        "\u1112\u1162\u1109\u116E\u110B\u116D\u11A8\u110C\u1161\u11BC",
        "\u1112\u1162\u110B\u1161\u11AB",
        "\u1112\u1162\u11A8\u1109\u1175\u11B7",
        "\u1112\u1162\u11AB\u1103\u1173\u1107\u1162\u11A8",
        "\u1112\u1162\u11B7\u1107\u1165\u1100\u1165",
        "\u1112\u1162\u11BA\u1107\u1167\u11C0",
        "\u1112\u1162\u11BA\u1109\u1161\u11AF",
        "\u1112\u1162\u11BC\u1103\u1169\u11BC",
        "\u1112\u1162\u11BC\u1107\u1169\u11A8",
        "\u1112\u1162\u11BC\u1109\u1161",
        "\u1112\u1162\u11BC\u110B\u116E\u11AB",
        "\u1112\u1162\u11BC\u110B\u1171",
        "\u1112\u1163\u11BC\u1100\u1175",
        "\u1112\u1163\u11BC\u1109\u1161\u11BC",
        "\u1112\u1163\u11BC\u1109\u116E",
        "\u1112\u1165\u1105\u1161\u11A8",
        "\u1112\u1165\u110B\u116D\u11BC",
        "\u1112\u1166\u11AF\u1100\u1175",
        "\u1112\u1167\u11AB\u1100\u116A\u11AB",
        "\u1112\u1167\u11AB\u1100\u1173\u11B7",
        "\u1112\u1167\u11AB\u1103\u1162",
        "\u1112\u1167\u11AB\u1109\u1161\u11BC",
        "\u1112\u1167\u11AB\u1109\u1175\u11AF",
        "\u1112\u1167\u11AB\u110C\u1161\u11BC",
        "\u1112\u1167\u11AB\u110C\u1162",
        "\u1112\u1167\u11AB\u110C\u1175",
        "\u1112\u1167\u11AF\u110B\u1162\u11A8",
        "\u1112\u1167\u11B8\u1105\u1167\u11A8",
        "\u1112\u1167\u11BC\u1107\u116E",
        "\u1112\u1167\u11BC\u1109\u1161",
        "\u1112\u1167\u11BC\u1109\u116E",
        "\u1112\u1167\u11BC\u1109\u1175\u11A8",
        "\u1112\u1167\u11BC\u110C\u1166",
        "\u1112\u1167\u11BC\u1110\u1162",
        "\u1112\u1167\u11BC\u1111\u1167\u11AB",
        "\u1112\u1168\u1110\u1162\u11A8",
        "\u1112\u1169\u1100\u1175\u1109\u1175\u11B7",
        "\u1112\u1169\u1102\u1161\u11B7",
        "\u1112\u1169\u1105\u1161\u11BC\u110B\u1175",
        "\u1112\u1169\u1107\u1161\u11A8",
        "\u1112\u1169\u1110\u1166\u11AF",
        "\u1112\u1169\u1112\u1173\u11B8",
        "\u1112\u1169\u11A8\u1109\u1175",
        "\u1112\u1169\u11AF\u1105\u1169",
        "\u1112\u1169\u11B7\u1111\u1166\u110B\u1175\u110C\u1175",
        "\u1112\u1169\u11BC\u1107\u1169",
        "\u1112\u1169\u11BC\u1109\u116E",
        "\u1112\u1169\u11BC\u110E\u1161",
        "\u1112\u116A\u1106\u1167\u11AB",
        "\u1112\u116A\u1107\u116E\u11AB",
        "\u1112\u116A\u1109\u1161\u11AF",
        "\u1112\u116A\u110B\u116D\u110B\u1175\u11AF",
        "\u1112\u116A\u110C\u1161\u11BC",
        "\u1112\u116A\u1112\u1161\u11A8",
        "\u1112\u116A\u11A8\u1107\u1169",
        "\u1112\u116A\u11A8\u110B\u1175\u11AB",
        "\u1112\u116A\u11A8\u110C\u1161\u11BC",
        "\u1112\u116A\u11A8\u110C\u1165\u11BC",
        "\u1112\u116A\u11AB\u1100\u1161\u11B8",
        "\u1112\u116A\u11AB\u1100\u1167\u11BC",
        "\u1112\u116A\u11AB\u110B\u1167\u11BC",
        "\u1112\u116A\u11AB\u110B\u1172\u11AF",
        "\u1112\u116A\u11AB\u110C\u1161",
        "\u1112\u116A\u11AF\u1100\u1175",
        "\u1112\u116A\u11AF\u1103\u1169\u11BC",
        "\u1112\u116A\u11AF\u1107\u1161\u11AF\u1112\u1175",
        "\u1112\u116A\u11AF\u110B\u116D\u11BC",
        "\u1112\u116A\u11AF\u110D\u1161\u11A8",
        "\u1112\u116C\u1100\u1167\u11AB",
        "\u1112\u116C\u1100\u116A\u11AB",
        "\u1112\u116C\u1107\u1169\u11A8",
        "\u1112\u116C\u1109\u1162\u11A8",
        "\u1112\u116C\u110B\u116F\u11AB",
        "\u1112\u116C\u110C\u1161\u11BC",
        "\u1112\u116C\u110C\u1165\u11AB",
        "\u1112\u116C\u11BA\u1109\u116E",
        "\u1112\u116C\u11BC\u1103\u1161\u11AB\u1107\u1169\u1103\u1169",
        "\u1112\u116D\u110B\u1172\u11AF\u110C\u1165\u11A8",
        "\u1112\u116E\u1107\u1161\u11AB",
        "\u1112\u116E\u110E\u116E\u11BA\u1100\u1161\u1105\u116E",
        "\u1112\u116E\u11AB\u1105\u1167\u11AB",
        "\u1112\u116F\u11AF\u110A\u1175\u11AB",
        "\u1112\u1172\u1109\u1175\u11A8",
        "\u1112\u1172\u110B\u1175\u11AF",
        "\u1112\u1172\u11BC\u1102\u1162",
        "\u1112\u1173\u1105\u1173\u11B7",
        "\u1112\u1173\u11A8\u1107\u1162\u11A8",
        "\u1112\u1173\u11A8\u110B\u1175\u11AB",
        "\u1112\u1173\u11AB\u110C\u1165\u11A8",
        "\u1112\u1173\u11AB\u1112\u1175",
        "\u1112\u1173\u11BC\u1106\u1175",
        "\u1112\u1173\u11BC\u1107\u116E\u11AB",
        "\u1112\u1174\u1100\u1169\u11A8",
        "\u1112\u1174\u1106\u1161\u11BC",
        "\u1112\u1174\u1109\u1162\u11BC",
        "\u1112\u1174\u11AB\u1109\u1162\u11A8",
        "\u1112\u1175\u11B7\u1101\u1165\u11BA"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/french.json
  var require_french = __commonJS({
    "node_modules/bip39/src/wordlists/french.json"(exports2, module2) {
      module2.exports = [
        "abaisser",
        "abandon",
        "abdiquer",
        "abeille",
        "abolir",
        "aborder",
        "aboutir",
        "aboyer",
        "abrasif",
        "abreuver",
        "abriter",
        "abroger",
        "abrupt",
        "absence",
        "absolu",
        "absurde",
        "abusif",
        "abyssal",
        "acade\u0301mie",
        "acajou",
        "acarien",
        "accabler",
        "accepter",
        "acclamer",
        "accolade",
        "accroche",
        "accuser",
        "acerbe",
        "achat",
        "acheter",
        "aciduler",
        "acier",
        "acompte",
        "acque\u0301rir",
        "acronyme",
        "acteur",
        "actif",
        "actuel",
        "adepte",
        "ade\u0301quat",
        "adhe\u0301sif",
        "adjectif",
        "adjuger",
        "admettre",
        "admirer",
        "adopter",
        "adorer",
        "adoucir",
        "adresse",
        "adroit",
        "adulte",
        "adverbe",
        "ae\u0301rer",
        "ae\u0301ronef",
        "affaire",
        "affecter",
        "affiche",
        "affreux",
        "affubler",
        "agacer",
        "agencer",
        "agile",
        "agiter",
        "agrafer",
        "agre\u0301able",
        "agrume",
        "aider",
        "aiguille",
        "ailier",
        "aimable",
        "aisance",
        "ajouter",
        "ajuster",
        "alarmer",
        "alchimie",
        "alerte",
        "alge\u0300bre",
        "algue",
        "alie\u0301ner",
        "aliment",
        "alle\u0301ger",
        "alliage",
        "allouer",
        "allumer",
        "alourdir",
        "alpaga",
        "altesse",
        "alve\u0301ole",
        "amateur",
        "ambigu",
        "ambre",
        "ame\u0301nager",
        "amertume",
        "amidon",
        "amiral",
        "amorcer",
        "amour",
        "amovible",
        "amphibie",
        "ampleur",
        "amusant",
        "analyse",
        "anaphore",
        "anarchie",
        "anatomie",
        "ancien",
        "ane\u0301antir",
        "angle",
        "angoisse",
        "anguleux",
        "animal",
        "annexer",
        "annonce",
        "annuel",
        "anodin",
        "anomalie",
        "anonyme",
        "anormal",
        "antenne",
        "antidote",
        "anxieux",
        "apaiser",
        "ape\u0301ritif",
        "aplanir",
        "apologie",
        "appareil",
        "appeler",
        "apporter",
        "appuyer",
        "aquarium",
        "aqueduc",
        "arbitre",
        "arbuste",
        "ardeur",
        "ardoise",
        "argent",
        "arlequin",
        "armature",
        "armement",
        "armoire",
        "armure",
        "arpenter",
        "arracher",
        "arriver",
        "arroser",
        "arsenic",
        "arte\u0301riel",
        "article",
        "aspect",
        "asphalte",
        "aspirer",
        "assaut",
        "asservir",
        "assiette",
        "associer",
        "assurer",
        "asticot",
        "astre",
        "astuce",
        "atelier",
        "atome",
        "atrium",
        "atroce",
        "attaque",
        "attentif",
        "attirer",
        "attraper",
        "aubaine",
        "auberge",
        "audace",
        "audible",
        "augurer",
        "aurore",
        "automne",
        "autruche",
        "avaler",
        "avancer",
        "avarice",
        "avenir",
        "averse",
        "aveugle",
        "aviateur",
        "avide",
        "avion",
        "aviser",
        "avoine",
        "avouer",
        "avril",
        "axial",
        "axiome",
        "badge",
        "bafouer",
        "bagage",
        "baguette",
        "baignade",
        "balancer",
        "balcon",
        "baleine",
        "balisage",
        "bambin",
        "bancaire",
        "bandage",
        "banlieue",
        "bannie\u0300re",
        "banquier",
        "barbier",
        "baril",
        "baron",
        "barque",
        "barrage",
        "bassin",
        "bastion",
        "bataille",
        "bateau",
        "batterie",
        "baudrier",
        "bavarder",
        "belette",
        "be\u0301lier",
        "belote",
        "be\u0301ne\u0301fice",
        "berceau",
        "berger",
        "berline",
        "bermuda",
        "besace",
        "besogne",
        "be\u0301tail",
        "beurre",
        "biberon",
        "bicycle",
        "bidule",
        "bijou",
        "bilan",
        "bilingue",
        "billard",
        "binaire",
        "biologie",
        "biopsie",
        "biotype",
        "biscuit",
        "bison",
        "bistouri",
        "bitume",
        "bizarre",
        "blafard",
        "blague",
        "blanchir",
        "blessant",
        "blinder",
        "blond",
        "bloquer",
        "blouson",
        "bobard",
        "bobine",
        "boire",
        "boiser",
        "bolide",
        "bonbon",
        "bondir",
        "bonheur",
        "bonifier",
        "bonus",
        "bordure",
        "borne",
        "botte",
        "boucle",
        "boueux",
        "bougie",
        "boulon",
        "bouquin",
        "bourse",
        "boussole",
        "boutique",
        "boxeur",
        "branche",
        "brasier",
        "brave",
        "brebis",
        "bre\u0300che",
        "breuvage",
        "bricoler",
        "brigade",
        "brillant",
        "brioche",
        "brique",
        "brochure",
        "broder",
        "bronzer",
        "brousse",
        "broyeur",
        "brume",
        "brusque",
        "brutal",
        "bruyant",
        "buffle",
        "buisson",
        "bulletin",
        "bureau",
        "burin",
        "bustier",
        "butiner",
        "butoir",
        "buvable",
        "buvette",
        "cabanon",
        "cabine",
        "cachette",
        "cadeau",
        "cadre",
        "cafe\u0301ine",
        "caillou",
        "caisson",
        "calculer",
        "calepin",
        "calibre",
        "calmer",
        "calomnie",
        "calvaire",
        "camarade",
        "came\u0301ra",
        "camion",
        "campagne",
        "canal",
        "caneton",
        "canon",
        "cantine",
        "canular",
        "capable",
        "caporal",
        "caprice",
        "capsule",
        "capter",
        "capuche",
        "carabine",
        "carbone",
        "caresser",
        "caribou",
        "carnage",
        "carotte",
        "carreau",
        "carton",
        "cascade",
        "casier",
        "casque",
        "cassure",
        "causer",
        "caution",
        "cavalier",
        "caverne",
        "caviar",
        "ce\u0301dille",
        "ceinture",
        "ce\u0301leste",
        "cellule",
        "cendrier",
        "censurer",
        "central",
        "cercle",
        "ce\u0301re\u0301bral",
        "cerise",
        "cerner",
        "cerveau",
        "cesser",
        "chagrin",
        "chaise",
        "chaleur",
        "chambre",
        "chance",
        "chapitre",
        "charbon",
        "chasseur",
        "chaton",
        "chausson",
        "chavirer",
        "chemise",
        "chenille",
        "che\u0301quier",
        "chercher",
        "cheval",
        "chien",
        "chiffre",
        "chignon",
        "chime\u0300re",
        "chiot",
        "chlorure",
        "chocolat",
        "choisir",
        "chose",
        "chouette",
        "chrome",
        "chute",
        "cigare",
        "cigogne",
        "cimenter",
        "cine\u0301ma",
        "cintrer",
        "circuler",
        "cirer",
        "cirque",
        "citerne",
        "citoyen",
        "citron",
        "civil",
        "clairon",
        "clameur",
        "claquer",
        "classe",
        "clavier",
        "client",
        "cligner",
        "climat",
        "clivage",
        "cloche",
        "clonage",
        "cloporte",
        "cobalt",
        "cobra",
        "cocasse",
        "cocotier",
        "coder",
        "codifier",
        "coffre",
        "cogner",
        "cohe\u0301sion",
        "coiffer",
        "coincer",
        "cole\u0300re",
        "colibri",
        "colline",
        "colmater",
        "colonel",
        "combat",
        "come\u0301die",
        "commande",
        "compact",
        "concert",
        "conduire",
        "confier",
        "congeler",
        "connoter",
        "consonne",
        "contact",
        "convexe",
        "copain",
        "copie",
        "corail",
        "corbeau",
        "cordage",
        "corniche",
        "corpus",
        "correct",
        "corte\u0300ge",
        "cosmique",
        "costume",
        "coton",
        "coude",
        "coupure",
        "courage",
        "couteau",
        "couvrir",
        "coyote",
        "crabe",
        "crainte",
        "cravate",
        "crayon",
        "cre\u0301ature",
        "cre\u0301diter",
        "cre\u0301meux",
        "creuser",
        "crevette",
        "cribler",
        "crier",
        "cristal",
        "crite\u0300re",
        "croire",
        "croquer",
        "crotale",
        "crucial",
        "cruel",
        "crypter",
        "cubique",
        "cueillir",
        "cuille\u0300re",
        "cuisine",
        "cuivre",
        "culminer",
        "cultiver",
        "cumuler",
        "cupide",
        "curatif",
        "curseur",
        "cyanure",
        "cycle",
        "cylindre",
        "cynique",
        "daigner",
        "damier",
        "danger",
        "danseur",
        "dauphin",
        "de\u0301battre",
        "de\u0301biter",
        "de\u0301border",
        "de\u0301brider",
        "de\u0301butant",
        "de\u0301caler",
        "de\u0301cembre",
        "de\u0301chirer",
        "de\u0301cider",
        "de\u0301clarer",
        "de\u0301corer",
        "de\u0301crire",
        "de\u0301cupler",
        "de\u0301dale",
        "de\u0301ductif",
        "de\u0301esse",
        "de\u0301fensif",
        "de\u0301filer",
        "de\u0301frayer",
        "de\u0301gager",
        "de\u0301givrer",
        "de\u0301glutir",
        "de\u0301grafer",
        "de\u0301jeuner",
        "de\u0301lice",
        "de\u0301loger",
        "demander",
        "demeurer",
        "de\u0301molir",
        "de\u0301nicher",
        "de\u0301nouer",
        "dentelle",
        "de\u0301nuder",
        "de\u0301part",
        "de\u0301penser",
        "de\u0301phaser",
        "de\u0301placer",
        "de\u0301poser",
        "de\u0301ranger",
        "de\u0301rober",
        "de\u0301sastre",
        "descente",
        "de\u0301sert",
        "de\u0301signer",
        "de\u0301sobe\u0301ir",
        "dessiner",
        "destrier",
        "de\u0301tacher",
        "de\u0301tester",
        "de\u0301tourer",
        "de\u0301tresse",
        "devancer",
        "devenir",
        "deviner",
        "devoir",
        "diable",
        "dialogue",
        "diamant",
        "dicter",
        "diffe\u0301rer",
        "dige\u0301rer",
        "digital",
        "digne",
        "diluer",
        "dimanche",
        "diminuer",
        "dioxyde",
        "directif",
        "diriger",
        "discuter",
        "disposer",
        "dissiper",
        "distance",
        "divertir",
        "diviser",
        "docile",
        "docteur",
        "dogme",
        "doigt",
        "domaine",
        "domicile",
        "dompter",
        "donateur",
        "donjon",
        "donner",
        "dopamine",
        "dortoir",
        "dorure",
        "dosage",
        "doseur",
        "dossier",
        "dotation",
        "douanier",
        "double",
        "douceur",
        "douter",
        "doyen",
        "dragon",
        "draper",
        "dresser",
        "dribbler",
        "droiture",
        "duperie",
        "duplexe",
        "durable",
        "durcir",
        "dynastie",
        "e\u0301blouir",
        "e\u0301carter",
        "e\u0301charpe",
        "e\u0301chelle",
        "e\u0301clairer",
        "e\u0301clipse",
        "e\u0301clore",
        "e\u0301cluse",
        "e\u0301cole",
        "e\u0301conomie",
        "e\u0301corce",
        "e\u0301couter",
        "e\u0301craser",
        "e\u0301cre\u0301mer",
        "e\u0301crivain",
        "e\u0301crou",
        "e\u0301cume",
        "e\u0301cureuil",
        "e\u0301difier",
        "e\u0301duquer",
        "effacer",
        "effectif",
        "effigie",
        "effort",
        "effrayer",
        "effusion",
        "e\u0301galiser",
        "e\u0301garer",
        "e\u0301jecter",
        "e\u0301laborer",
        "e\u0301largir",
        "e\u0301lectron",
        "e\u0301le\u0301gant",
        "e\u0301le\u0301phant",
        "e\u0301le\u0300ve",
        "e\u0301ligible",
        "e\u0301litisme",
        "e\u0301loge",
        "e\u0301lucider",
        "e\u0301luder",
        "emballer",
        "embellir",
        "embryon",
        "e\u0301meraude",
        "e\u0301mission",
        "emmener",
        "e\u0301motion",
        "e\u0301mouvoir",
        "empereur",
        "employer",
        "emporter",
        "emprise",
        "e\u0301mulsion",
        "encadrer",
        "enche\u0300re",
        "enclave",
        "encoche",
        "endiguer",
        "endosser",
        "endroit",
        "enduire",
        "e\u0301nergie",
        "enfance",
        "enfermer",
        "enfouir",
        "engager",
        "engin",
        "englober",
        "e\u0301nigme",
        "enjamber",
        "enjeu",
        "enlever",
        "ennemi",
        "ennuyeux",
        "enrichir",
        "enrobage",
        "enseigne",
        "entasser",
        "entendre",
        "entier",
        "entourer",
        "entraver",
        "e\u0301nume\u0301rer",
        "envahir",
        "enviable",
        "envoyer",
        "enzyme",
        "e\u0301olien",
        "e\u0301paissir",
        "e\u0301pargne",
        "e\u0301patant",
        "e\u0301paule",
        "e\u0301picerie",
        "e\u0301pide\u0301mie",
        "e\u0301pier",
        "e\u0301pilogue",
        "e\u0301pine",
        "e\u0301pisode",
        "e\u0301pitaphe",
        "e\u0301poque",
        "e\u0301preuve",
        "e\u0301prouver",
        "e\u0301puisant",
        "e\u0301querre",
        "e\u0301quipe",
        "e\u0301riger",
        "e\u0301rosion",
        "erreur",
        "e\u0301ruption",
        "escalier",
        "espadon",
        "espe\u0300ce",
        "espie\u0300gle",
        "espoir",
        "esprit",
        "esquiver",
        "essayer",
        "essence",
        "essieu",
        "essorer",
        "estime",
        "estomac",
        "estrade",
        "e\u0301tage\u0300re",
        "e\u0301taler",
        "e\u0301tanche",
        "e\u0301tatique",
        "e\u0301teindre",
        "e\u0301tendoir",
        "e\u0301ternel",
        "e\u0301thanol",
        "e\u0301thique",
        "ethnie",
        "e\u0301tirer",
        "e\u0301toffer",
        "e\u0301toile",
        "e\u0301tonnant",
        "e\u0301tourdir",
        "e\u0301trange",
        "e\u0301troit",
        "e\u0301tude",
        "euphorie",
        "e\u0301valuer",
        "e\u0301vasion",
        "e\u0301ventail",
        "e\u0301vidence",
        "e\u0301viter",
        "e\u0301volutif",
        "e\u0301voquer",
        "exact",
        "exage\u0301rer",
        "exaucer",
        "exceller",
        "excitant",
        "exclusif",
        "excuse",
        "exe\u0301cuter",
        "exemple",
        "exercer",
        "exhaler",
        "exhorter",
        "exigence",
        "exiler",
        "exister",
        "exotique",
        "expe\u0301dier",
        "explorer",
        "exposer",
        "exprimer",
        "exquis",
        "extensif",
        "extraire",
        "exulter",
        "fable",
        "fabuleux",
        "facette",
        "facile",
        "facture",
        "faiblir",
        "falaise",
        "fameux",
        "famille",
        "farceur",
        "farfelu",
        "farine",
        "farouche",
        "fasciner",
        "fatal",
        "fatigue",
        "faucon",
        "fautif",
        "faveur",
        "favori",
        "fe\u0301brile",
        "fe\u0301conder",
        "fe\u0301de\u0301rer",
        "fe\u0301lin",
        "femme",
        "fe\u0301mur",
        "fendoir",
        "fe\u0301odal",
        "fermer",
        "fe\u0301roce",
        "ferveur",
        "festival",
        "feuille",
        "feutre",
        "fe\u0301vrier",
        "fiasco",
        "ficeler",
        "fictif",
        "fide\u0300le",
        "figure",
        "filature",
        "filetage",
        "filie\u0300re",
        "filleul",
        "filmer",
        "filou",
        "filtrer",
        "financer",
        "finir",
        "fiole",
        "firme",
        "fissure",
        "fixer",
        "flairer",
        "flamme",
        "flasque",
        "flatteur",
        "fle\u0301au",
        "fle\u0300che",
        "fleur",
        "flexion",
        "flocon",
        "flore",
        "fluctuer",
        "fluide",
        "fluvial",
        "folie",
        "fonderie",
        "fongible",
        "fontaine",
        "forcer",
        "forgeron",
        "formuler",
        "fortune",
        "fossile",
        "foudre",
        "fouge\u0300re",
        "fouiller",
        "foulure",
        "fourmi",
        "fragile",
        "fraise",
        "franchir",
        "frapper",
        "frayeur",
        "fre\u0301gate",
        "freiner",
        "frelon",
        "fre\u0301mir",
        "fre\u0301ne\u0301sie",
        "fre\u0300re",
        "friable",
        "friction",
        "frisson",
        "frivole",
        "froid",
        "fromage",
        "frontal",
        "frotter",
        "fruit",
        "fugitif",
        "fuite",
        "fureur",
        "furieux",
        "furtif",
        "fusion",
        "futur",
        "gagner",
        "galaxie",
        "galerie",
        "gambader",
        "garantir",
        "gardien",
        "garnir",
        "garrigue",
        "gazelle",
        "gazon",
        "ge\u0301ant",
        "ge\u0301latine",
        "ge\u0301lule",
        "gendarme",
        "ge\u0301ne\u0301ral",
        "ge\u0301nie",
        "genou",
        "gentil",
        "ge\u0301ologie",
        "ge\u0301ome\u0300tre",
        "ge\u0301ranium",
        "germe",
        "gestuel",
        "geyser",
        "gibier",
        "gicler",
        "girafe",
        "givre",
        "glace",
        "glaive",
        "glisser",
        "globe",
        "gloire",
        "glorieux",
        "golfeur",
        "gomme",
        "gonfler",
        "gorge",
        "gorille",
        "goudron",
        "gouffre",
        "goulot",
        "goupille",
        "gourmand",
        "goutte",
        "graduel",
        "graffiti",
        "graine",
        "grand",
        "grappin",
        "gratuit",
        "gravir",
        "grenat",
        "griffure",
        "griller",
        "grimper",
        "grogner",
        "gronder",
        "grotte",
        "groupe",
        "gruger",
        "grutier",
        "gruye\u0300re",
        "gue\u0301pard",
        "guerrier",
        "guide",
        "guimauve",
        "guitare",
        "gustatif",
        "gymnaste",
        "gyrostat",
        "habitude",
        "hachoir",
        "halte",
        "hameau",
        "hangar",
        "hanneton",
        "haricot",
        "harmonie",
        "harpon",
        "hasard",
        "he\u0301lium",
        "he\u0301matome",
        "herbe",
        "he\u0301risson",
        "hermine",
        "he\u0301ron",
        "he\u0301siter",
        "heureux",
        "hiberner",
        "hibou",
        "hilarant",
        "histoire",
        "hiver",
        "homard",
        "hommage",
        "homoge\u0300ne",
        "honneur",
        "honorer",
        "honteux",
        "horde",
        "horizon",
        "horloge",
        "hormone",
        "horrible",
        "houleux",
        "housse",
        "hublot",
        "huileux",
        "humain",
        "humble",
        "humide",
        "humour",
        "hurler",
        "hydromel",
        "hygie\u0300ne",
        "hymne",
        "hypnose",
        "idylle",
        "ignorer",
        "iguane",
        "illicite",
        "illusion",
        "image",
        "imbiber",
        "imiter",
        "immense",
        "immobile",
        "immuable",
        "impact",
        "impe\u0301rial",
        "implorer",
        "imposer",
        "imprimer",
        "imputer",
        "incarner",
        "incendie",
        "incident",
        "incliner",
        "incolore",
        "indexer",
        "indice",
        "inductif",
        "ine\u0301dit",
        "ineptie",
        "inexact",
        "infini",
        "infliger",
        "informer",
        "infusion",
        "inge\u0301rer",
        "inhaler",
        "inhiber",
        "injecter",
        "injure",
        "innocent",
        "inoculer",
        "inonder",
        "inscrire",
        "insecte",
        "insigne",
        "insolite",
        "inspirer",
        "instinct",
        "insulter",
        "intact",
        "intense",
        "intime",
        "intrigue",
        "intuitif",
        "inutile",
        "invasion",
        "inventer",
        "inviter",
        "invoquer",
        "ironique",
        "irradier",
        "irre\u0301el",
        "irriter",
        "isoler",
        "ivoire",
        "ivresse",
        "jaguar",
        "jaillir",
        "jambe",
        "janvier",
        "jardin",
        "jauger",
        "jaune",
        "javelot",
        "jetable",
        "jeton",
        "jeudi",
        "jeunesse",
        "joindre",
        "joncher",
        "jongler",
        "joueur",
        "jouissif",
        "journal",
        "jovial",
        "joyau",
        "joyeux",
        "jubiler",
        "jugement",
        "junior",
        "jupon",
        "juriste",
        "justice",
        "juteux",
        "juve\u0301nile",
        "kayak",
        "kimono",
        "kiosque",
        "label",
        "labial",
        "labourer",
        "lace\u0301rer",
        "lactose",
        "lagune",
        "laine",
        "laisser",
        "laitier",
        "lambeau",
        "lamelle",
        "lampe",
        "lanceur",
        "langage",
        "lanterne",
        "lapin",
        "largeur",
        "larme",
        "laurier",
        "lavabo",
        "lavoir",
        "lecture",
        "le\u0301gal",
        "le\u0301ger",
        "le\u0301gume",
        "lessive",
        "lettre",
        "levier",
        "lexique",
        "le\u0301zard",
        "liasse",
        "libe\u0301rer",
        "libre",
        "licence",
        "licorne",
        "lie\u0300ge",
        "lie\u0300vre",
        "ligature",
        "ligoter",
        "ligue",
        "limer",
        "limite",
        "limonade",
        "limpide",
        "line\u0301aire",
        "lingot",
        "lionceau",
        "liquide",
        "lisie\u0300re",
        "lister",
        "lithium",
        "litige",
        "littoral",
        "livreur",
        "logique",
        "lointain",
        "loisir",
        "lombric",
        "loterie",
        "louer",
        "lourd",
        "loutre",
        "louve",
        "loyal",
        "lubie",
        "lucide",
        "lucratif",
        "lueur",
        "lugubre",
        "luisant",
        "lumie\u0300re",
        "lunaire",
        "lundi",
        "luron",
        "lutter",
        "luxueux",
        "machine",
        "magasin",
        "magenta",
        "magique",
        "maigre",
        "maillon",
        "maintien",
        "mairie",
        "maison",
        "majorer",
        "malaxer",
        "male\u0301fice",
        "malheur",
        "malice",
        "mallette",
        "mammouth",
        "mandater",
        "maniable",
        "manquant",
        "manteau",
        "manuel",
        "marathon",
        "marbre",
        "marchand",
        "mardi",
        "maritime",
        "marqueur",
        "marron",
        "marteler",
        "mascotte",
        "massif",
        "mate\u0301riel",
        "matie\u0300re",
        "matraque",
        "maudire",
        "maussade",
        "mauve",
        "maximal",
        "me\u0301chant",
        "me\u0301connu",
        "me\u0301daille",
        "me\u0301decin",
        "me\u0301diter",
        "me\u0301duse",
        "meilleur",
        "me\u0301lange",
        "me\u0301lodie",
        "membre",
        "me\u0301moire",
        "menacer",
        "mener",
        "menhir",
        "mensonge",
        "mentor",
        "mercredi",
        "me\u0301rite",
        "merle",
        "messager",
        "mesure",
        "me\u0301tal",
        "me\u0301te\u0301ore",
        "me\u0301thode",
        "me\u0301tier",
        "meuble",
        "miauler",
        "microbe",
        "miette",
        "mignon",
        "migrer",
        "milieu",
        "million",
        "mimique",
        "mince",
        "mine\u0301ral",
        "minimal",
        "minorer",
        "minute",
        "miracle",
        "miroiter",
        "missile",
        "mixte",
        "mobile",
        "moderne",
        "moelleux",
        "mondial",
        "moniteur",
        "monnaie",
        "monotone",
        "monstre",
        "montagne",
        "monument",
        "moqueur",
        "morceau",
        "morsure",
        "mortier",
        "moteur",
        "motif",
        "mouche",
        "moufle",
        "moulin",
        "mousson",
        "mouton",
        "mouvant",
        "multiple",
        "munition",
        "muraille",
        "mure\u0300ne",
        "murmure",
        "muscle",
        "muse\u0301um",
        "musicien",
        "mutation",
        "muter",
        "mutuel",
        "myriade",
        "myrtille",
        "myste\u0300re",
        "mythique",
        "nageur",
        "nappe",
        "narquois",
        "narrer",
        "natation",
        "nation",
        "nature",
        "naufrage",
        "nautique",
        "navire",
        "ne\u0301buleux",
        "nectar",
        "ne\u0301faste",
        "ne\u0301gation",
        "ne\u0301gliger",
        "ne\u0301gocier",
        "neige",
        "nerveux",
        "nettoyer",
        "neurone",
        "neutron",
        "neveu",
        "niche",
        "nickel",
        "nitrate",
        "niveau",
        "noble",
        "nocif",
        "nocturne",
        "noirceur",
        "noisette",
        "nomade",
        "nombreux",
        "nommer",
        "normatif",
        "notable",
        "notifier",
        "notoire",
        "nourrir",
        "nouveau",
        "novateur",
        "novembre",
        "novice",
        "nuage",
        "nuancer",
        "nuire",
        "nuisible",
        "nume\u0301ro",
        "nuptial",
        "nuque",
        "nutritif",
        "obe\u0301ir",
        "objectif",
        "obliger",
        "obscur",
        "observer",
        "obstacle",
        "obtenir",
        "obturer",
        "occasion",
        "occuper",
        "oce\u0301an",
        "octobre",
        "octroyer",
        "octupler",
        "oculaire",
        "odeur",
        "odorant",
        "offenser",
        "officier",
        "offrir",
        "ogive",
        "oiseau",
        "oisillon",
        "olfactif",
        "olivier",
        "ombrage",
        "omettre",
        "onctueux",
        "onduler",
        "one\u0301reux",
        "onirique",
        "opale",
        "opaque",
        "ope\u0301rer",
        "opinion",
        "opportun",
        "opprimer",
        "opter",
        "optique",
        "orageux",
        "orange",
        "orbite",
        "ordonner",
        "oreille",
        "organe",
        "orgueil",
        "orifice",
        "ornement",
        "orque",
        "ortie",
        "osciller",
        "osmose",
        "ossature",
        "otarie",
        "ouragan",
        "ourson",
        "outil",
        "outrager",
        "ouvrage",
        "ovation",
        "oxyde",
        "oxyge\u0300ne",
        "ozone",
        "paisible",
        "palace",
        "palmare\u0300s",
        "palourde",
        "palper",
        "panache",
        "panda",
        "pangolin",
        "paniquer",
        "panneau",
        "panorama",
        "pantalon",
        "papaye",
        "papier",
        "papoter",
        "papyrus",
        "paradoxe",
        "parcelle",
        "paresse",
        "parfumer",
        "parler",
        "parole",
        "parrain",
        "parsemer",
        "partager",
        "parure",
        "parvenir",
        "passion",
        "paste\u0300que",
        "paternel",
        "patience",
        "patron",
        "pavillon",
        "pavoiser",
        "payer",
        "paysage",
        "peigne",
        "peintre",
        "pelage",
        "pe\u0301lican",
        "pelle",
        "pelouse",
        "peluche",
        "pendule",
        "pe\u0301ne\u0301trer",
        "pe\u0301nible",
        "pensif",
        "pe\u0301nurie",
        "pe\u0301pite",
        "pe\u0301plum",
        "perdrix",
        "perforer",
        "pe\u0301riode",
        "permuter",
        "perplexe",
        "persil",
        "perte",
        "peser",
        "pe\u0301tale",
        "petit",
        "pe\u0301trir",
        "peuple",
        "pharaon",
        "phobie",
        "phoque",
        "photon",
        "phrase",
        "physique",
        "piano",
        "pictural",
        "pie\u0300ce",
        "pierre",
        "pieuvre",
        "pilote",
        "pinceau",
        "pipette",
        "piquer",
        "pirogue",
        "piscine",
        "piston",
        "pivoter",
        "pixel",
        "pizza",
        "placard",
        "plafond",
        "plaisir",
        "planer",
        "plaque",
        "plastron",
        "plateau",
        "pleurer",
        "plexus",
        "pliage",
        "plomb",
        "plonger",
        "pluie",
        "plumage",
        "pochette",
        "poe\u0301sie",
        "poe\u0300te",
        "pointe",
        "poirier",
        "poisson",
        "poivre",
        "polaire",
        "policier",
        "pollen",
        "polygone",
        "pommade",
        "pompier",
        "ponctuel",
        "ponde\u0301rer",
        "poney",
        "portique",
        "position",
        "posse\u0301der",
        "posture",
        "potager",
        "poteau",
        "potion",
        "pouce",
        "poulain",
        "poumon",
        "pourpre",
        "poussin",
        "pouvoir",
        "prairie",
        "pratique",
        "pre\u0301cieux",
        "pre\u0301dire",
        "pre\u0301fixe",
        "pre\u0301lude",
        "pre\u0301nom",
        "pre\u0301sence",
        "pre\u0301texte",
        "pre\u0301voir",
        "primitif",
        "prince",
        "prison",
        "priver",
        "proble\u0300me",
        "proce\u0301der",
        "prodige",
        "profond",
        "progre\u0300s",
        "proie",
        "projeter",
        "prologue",
        "promener",
        "propre",
        "prospe\u0300re",
        "prote\u0301ger",
        "prouesse",
        "proverbe",
        "prudence",
        "pruneau",
        "psychose",
        "public",
        "puceron",
        "puiser",
        "pulpe",
        "pulsar",
        "punaise",
        "punitif",
        "pupitre",
        "purifier",
        "puzzle",
        "pyramide",
        "quasar",
        "querelle",
        "question",
        "quie\u0301tude",
        "quitter",
        "quotient",
        "racine",
        "raconter",
        "radieux",
        "ragondin",
        "raideur",
        "raisin",
        "ralentir",
        "rallonge",
        "ramasser",
        "rapide",
        "rasage",
        "ratisser",
        "ravager",
        "ravin",
        "rayonner",
        "re\u0301actif",
        "re\u0301agir",
        "re\u0301aliser",
        "re\u0301animer",
        "recevoir",
        "re\u0301citer",
        "re\u0301clamer",
        "re\u0301colter",
        "recruter",
        "reculer",
        "recycler",
        "re\u0301diger",
        "redouter",
        "refaire",
        "re\u0301flexe",
        "re\u0301former",
        "refrain",
        "refuge",
        "re\u0301galien",
        "re\u0301gion",
        "re\u0301glage",
        "re\u0301gulier",
        "re\u0301ite\u0301rer",
        "rejeter",
        "rejouer",
        "relatif",
        "relever",
        "relief",
        "remarque",
        "reme\u0300de",
        "remise",
        "remonter",
        "remplir",
        "remuer",
        "renard",
        "renfort",
        "renifler",
        "renoncer",
        "rentrer",
        "renvoi",
        "replier",
        "reporter",
        "reprise",
        "reptile",
        "requin",
        "re\u0301serve",
        "re\u0301sineux",
        "re\u0301soudre",
        "respect",
        "rester",
        "re\u0301sultat",
        "re\u0301tablir",
        "retenir",
        "re\u0301ticule",
        "retomber",
        "retracer",
        "re\u0301union",
        "re\u0301ussir",
        "revanche",
        "revivre",
        "re\u0301volte",
        "re\u0301vulsif",
        "richesse",
        "rideau",
        "rieur",
        "rigide",
        "rigoler",
        "rincer",
        "riposter",
        "risible",
        "risque",
        "rituel",
        "rival",
        "rivie\u0300re",
        "rocheux",
        "romance",
        "rompre",
        "ronce",
        "rondin",
        "roseau",
        "rosier",
        "rotatif",
        "rotor",
        "rotule",
        "rouge",
        "rouille",
        "rouleau",
        "routine",
        "royaume",
        "ruban",
        "rubis",
        "ruche",
        "ruelle",
        "rugueux",
        "ruiner",
        "ruisseau",
        "ruser",
        "rustique",
        "rythme",
        "sabler",
        "saboter",
        "sabre",
        "sacoche",
        "safari",
        "sagesse",
        "saisir",
        "salade",
        "salive",
        "salon",
        "saluer",
        "samedi",
        "sanction",
        "sanglier",
        "sarcasme",
        "sardine",
        "saturer",
        "saugrenu",
        "saumon",
        "sauter",
        "sauvage",
        "savant",
        "savonner",
        "scalpel",
        "scandale",
        "sce\u0301le\u0301rat",
        "sce\u0301nario",
        "sceptre",
        "sche\u0301ma",
        "science",
        "scinder",
        "score",
        "scrutin",
        "sculpter",
        "se\u0301ance",
        "se\u0301cable",
        "se\u0301cher",
        "secouer",
        "se\u0301cre\u0301ter",
        "se\u0301datif",
        "se\u0301duire",
        "seigneur",
        "se\u0301jour",
        "se\u0301lectif",
        "semaine",
        "sembler",
        "semence",
        "se\u0301minal",
        "se\u0301nateur",
        "sensible",
        "sentence",
        "se\u0301parer",
        "se\u0301quence",
        "serein",
        "sergent",
        "se\u0301rieux",
        "serrure",
        "se\u0301rum",
        "service",
        "se\u0301same",
        "se\u0301vir",
        "sevrage",
        "sextuple",
        "side\u0301ral",
        "sie\u0300cle",
        "sie\u0301ger",
        "siffler",
        "sigle",
        "signal",
        "silence",
        "silicium",
        "simple",
        "since\u0300re",
        "sinistre",
        "siphon",
        "sirop",
        "sismique",
        "situer",
        "skier",
        "social",
        "socle",
        "sodium",
        "soigneux",
        "soldat",
        "soleil",
        "solitude",
        "soluble",
        "sombre",
        "sommeil",
        "somnoler",
        "sonde",
        "songeur",
        "sonnette",
        "sonore",
        "sorcier",
        "sortir",
        "sosie",
        "sottise",
        "soucieux",
        "soudure",
        "souffle",
        "soulever",
        "soupape",
        "source",
        "soutirer",
        "souvenir",
        "spacieux",
        "spatial",
        "spe\u0301cial",
        "sphe\u0300re",
        "spiral",
        "stable",
        "station",
        "sternum",
        "stimulus",
        "stipuler",
        "strict",
        "studieux",
        "stupeur",
        "styliste",
        "sublime",
        "substrat",
        "subtil",
        "subvenir",
        "succe\u0300s",
        "sucre",
        "suffixe",
        "sugge\u0301rer",
        "suiveur",
        "sulfate",
        "superbe",
        "supplier",
        "surface",
        "suricate",
        "surmener",
        "surprise",
        "sursaut",
        "survie",
        "suspect",
        "syllabe",
        "symbole",
        "syme\u0301trie",
        "synapse",
        "syntaxe",
        "syste\u0300me",
        "tabac",
        "tablier",
        "tactile",
        "tailler",
        "talent",
        "talisman",
        "talonner",
        "tambour",
        "tamiser",
        "tangible",
        "tapis",
        "taquiner",
        "tarder",
        "tarif",
        "tartine",
        "tasse",
        "tatami",
        "tatouage",
        "taupe",
        "taureau",
        "taxer",
        "te\u0301moin",
        "temporel",
        "tenaille",
        "tendre",
        "teneur",
        "tenir",
        "tension",
        "terminer",
        "terne",
        "terrible",
        "te\u0301tine",
        "texte",
        "the\u0300me",
        "the\u0301orie",
        "the\u0301rapie",
        "thorax",
        "tibia",
        "tie\u0300de",
        "timide",
        "tirelire",
        "tiroir",
        "tissu",
        "titane",
        "titre",
        "tituber",
        "toboggan",
        "tole\u0301rant",
        "tomate",
        "tonique",
        "tonneau",
        "toponyme",
        "torche",
        "tordre",
        "tornade",
        "torpille",
        "torrent",
        "torse",
        "tortue",
        "totem",
        "toucher",
        "tournage",
        "tousser",
        "toxine",
        "traction",
        "trafic",
        "tragique",
        "trahir",
        "train",
        "trancher",
        "travail",
        "tre\u0300fle",
        "tremper",
        "tre\u0301sor",
        "treuil",
        "triage",
        "tribunal",
        "tricoter",
        "trilogie",
        "triomphe",
        "tripler",
        "triturer",
        "trivial",
        "trombone",
        "tronc",
        "tropical",
        "troupeau",
        "tuile",
        "tulipe",
        "tumulte",
        "tunnel",
        "turbine",
        "tuteur",
        "tutoyer",
        "tuyau",
        "tympan",
        "typhon",
        "typique",
        "tyran",
        "ubuesque",
        "ultime",
        "ultrason",
        "unanime",
        "unifier",
        "union",
        "unique",
        "unitaire",
        "univers",
        "uranium",
        "urbain",
        "urticant",
        "usage",
        "usine",
        "usuel",
        "usure",
        "utile",
        "utopie",
        "vacarme",
        "vaccin",
        "vagabond",
        "vague",
        "vaillant",
        "vaincre",
        "vaisseau",
        "valable",
        "valise",
        "vallon",
        "valve",
        "vampire",
        "vanille",
        "vapeur",
        "varier",
        "vaseux",
        "vassal",
        "vaste",
        "vecteur",
        "vedette",
        "ve\u0301ge\u0301tal",
        "ve\u0301hicule",
        "veinard",
        "ve\u0301loce",
        "vendredi",
        "ve\u0301ne\u0301rer",
        "venger",
        "venimeux",
        "ventouse",
        "verdure",
        "ve\u0301rin",
        "vernir",
        "verrou",
        "verser",
        "vertu",
        "veston",
        "ve\u0301te\u0301ran",
        "ve\u0301tuste",
        "vexant",
        "vexer",
        "viaduc",
        "viande",
        "victoire",
        "vidange",
        "vide\u0301o",
        "vignette",
        "vigueur",
        "vilain",
        "village",
        "vinaigre",
        "violon",
        "vipe\u0300re",
        "virement",
        "virtuose",
        "virus",
        "visage",
        "viseur",
        "vision",
        "visqueux",
        "visuel",
        "vital",
        "vitesse",
        "viticole",
        "vitrine",
        "vivace",
        "vivipare",
        "vocation",
        "voguer",
        "voile",
        "voisin",
        "voiture",
        "volaille",
        "volcan",
        "voltiger",
        "volume",
        "vorace",
        "vortex",
        "voter",
        "vouloir",
        "voyage",
        "voyelle",
        "wagon",
        "xe\u0301non",
        "yacht",
        "ze\u0300bre",
        "ze\u0301nith",
        "zeste",
        "zoologie"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/italian.json
  var require_italian = __commonJS({
    "node_modules/bip39/src/wordlists/italian.json"(exports2, module2) {
      module2.exports = [
        "abaco",
        "abbaglio",
        "abbinato",
        "abete",
        "abisso",
        "abolire",
        "abrasivo",
        "abrogato",
        "accadere",
        "accenno",
        "accusato",
        "acetone",
        "achille",
        "acido",
        "acqua",
        "acre",
        "acrilico",
        "acrobata",
        "acuto",
        "adagio",
        "addebito",
        "addome",
        "adeguato",
        "aderire",
        "adipe",
        "adottare",
        "adulare",
        "affabile",
        "affetto",
        "affisso",
        "affranto",
        "aforisma",
        "afoso",
        "africano",
        "agave",
        "agente",
        "agevole",
        "aggancio",
        "agire",
        "agitare",
        "agonismo",
        "agricolo",
        "agrumeto",
        "aguzzo",
        "alabarda",
        "alato",
        "albatro",
        "alberato",
        "albo",
        "albume",
        "alce",
        "alcolico",
        "alettone",
        "alfa",
        "algebra",
        "aliante",
        "alibi",
        "alimento",
        "allagato",
        "allegro",
        "allievo",
        "allodola",
        "allusivo",
        "almeno",
        "alogeno",
        "alpaca",
        "alpestre",
        "altalena",
        "alterno",
        "alticcio",
        "altrove",
        "alunno",
        "alveolo",
        "alzare",
        "amalgama",
        "amanita",
        "amarena",
        "ambito",
        "ambrato",
        "ameba",
        "america",
        "ametista",
        "amico",
        "ammasso",
        "ammenda",
        "ammirare",
        "ammonito",
        "amore",
        "ampio",
        "ampliare",
        "amuleto",
        "anacardo",
        "anagrafe",
        "analista",
        "anarchia",
        "anatra",
        "anca",
        "ancella",
        "ancora",
        "andare",
        "andrea",
        "anello",
        "angelo",
        "angolare",
        "angusto",
        "anima",
        "annegare",
        "annidato",
        "anno",
        "annuncio",
        "anonimo",
        "anticipo",
        "anzi",
        "apatico",
        "apertura",
        "apode",
        "apparire",
        "appetito",
        "appoggio",
        "approdo",
        "appunto",
        "aprile",
        "arabica",
        "arachide",
        "aragosta",
        "araldica",
        "arancio",
        "aratura",
        "arazzo",
        "arbitro",
        "archivio",
        "ardito",
        "arenile",
        "argento",
        "argine",
        "arguto",
        "aria",
        "armonia",
        "arnese",
        "arredato",
        "arringa",
        "arrosto",
        "arsenico",
        "arso",
        "artefice",
        "arzillo",
        "asciutto",
        "ascolto",
        "asepsi",
        "asettico",
        "asfalto",
        "asino",
        "asola",
        "aspirato",
        "aspro",
        "assaggio",
        "asse",
        "assoluto",
        "assurdo",
        "asta",
        "astenuto",
        "astice",
        "astratto",
        "atavico",
        "ateismo",
        "atomico",
        "atono",
        "attesa",
        "attivare",
        "attorno",
        "attrito",
        "attuale",
        "ausilio",
        "austria",
        "autista",
        "autonomo",
        "autunno",
        "avanzato",
        "avere",
        "avvenire",
        "avviso",
        "avvolgere",
        "azione",
        "azoto",
        "azzimo",
        "azzurro",
        "babele",
        "baccano",
        "bacino",
        "baco",
        "badessa",
        "badilata",
        "bagnato",
        "baita",
        "balcone",
        "baldo",
        "balena",
        "ballata",
        "balzano",
        "bambino",
        "bandire",
        "baraonda",
        "barbaro",
        "barca",
        "baritono",
        "barlume",
        "barocco",
        "basilico",
        "basso",
        "batosta",
        "battuto",
        "baule",
        "bava",
        "bavosa",
        "becco",
        "beffa",
        "belgio",
        "belva",
        "benda",
        "benevole",
        "benigno",
        "benzina",
        "bere",
        "berlina",
        "beta",
        "bibita",
        "bici",
        "bidone",
        "bifido",
        "biga",
        "bilancia",
        "bimbo",
        "binocolo",
        "biologo",
        "bipede",
        "bipolare",
        "birbante",
        "birra",
        "biscotto",
        "bisesto",
        "bisnonno",
        "bisonte",
        "bisturi",
        "bizzarro",
        "blando",
        "blatta",
        "bollito",
        "bonifico",
        "bordo",
        "bosco",
        "botanico",
        "bottino",
        "bozzolo",
        "braccio",
        "bradipo",
        "brama",
        "branca",
        "bravura",
        "bretella",
        "brevetto",
        "brezza",
        "briglia",
        "brillante",
        "brindare",
        "broccolo",
        "brodo",
        "bronzina",
        "brullo",
        "bruno",
        "bubbone",
        "buca",
        "budino",
        "buffone",
        "buio",
        "bulbo",
        "buono",
        "burlone",
        "burrasca",
        "bussola",
        "busta",
        "cadetto",
        "caduco",
        "calamaro",
        "calcolo",
        "calesse",
        "calibro",
        "calmo",
        "caloria",
        "cambusa",
        "camerata",
        "camicia",
        "cammino",
        "camola",
        "campale",
        "canapa",
        "candela",
        "cane",
        "canino",
        "canotto",
        "cantina",
        "capace",
        "capello",
        "capitolo",
        "capogiro",
        "cappero",
        "capra",
        "capsula",
        "carapace",
        "carcassa",
        "cardo",
        "carisma",
        "carovana",
        "carretto",
        "cartolina",
        "casaccio",
        "cascata",
        "caserma",
        "caso",
        "cassone",
        "castello",
        "casuale",
        "catasta",
        "catena",
        "catrame",
        "cauto",
        "cavillo",
        "cedibile",
        "cedrata",
        "cefalo",
        "celebre",
        "cellulare",
        "cena",
        "cenone",
        "centesimo",
        "ceramica",
        "cercare",
        "certo",
        "cerume",
        "cervello",
        "cesoia",
        "cespo",
        "ceto",
        "chela",
        "chiaro",
        "chicca",
        "chiedere",
        "chimera",
        "china",
        "chirurgo",
        "chitarra",
        "ciao",
        "ciclismo",
        "cifrare",
        "cigno",
        "cilindro",
        "ciottolo",
        "circa",
        "cirrosi",
        "citrico",
        "cittadino",
        "ciuffo",
        "civetta",
        "civile",
        "classico",
        "clinica",
        "cloro",
        "cocco",
        "codardo",
        "codice",
        "coerente",
        "cognome",
        "collare",
        "colmato",
        "colore",
        "colposo",
        "coltivato",
        "colza",
        "coma",
        "cometa",
        "commando",
        "comodo",
        "computer",
        "comune",
        "conciso",
        "condurre",
        "conferma",
        "congelare",
        "coniuge",
        "connesso",
        "conoscere",
        "consumo",
        "continuo",
        "convegno",
        "coperto",
        "copione",
        "coppia",
        "copricapo",
        "corazza",
        "cordata",
        "coricato",
        "cornice",
        "corolla",
        "corpo",
        "corredo",
        "corsia",
        "cortese",
        "cosmico",
        "costante",
        "cottura",
        "covato",
        "cratere",
        "cravatta",
        "creato",
        "credere",
        "cremoso",
        "crescita",
        "creta",
        "criceto",
        "crinale",
        "crisi",
        "critico",
        "croce",
        "cronaca",
        "crostata",
        "cruciale",
        "crusca",
        "cucire",
        "cuculo",
        "cugino",
        "cullato",
        "cupola",
        "curatore",
        "cursore",
        "curvo",
        "cuscino",
        "custode",
        "dado",
        "daino",
        "dalmata",
        "damerino",
        "daniela",
        "dannoso",
        "danzare",
        "datato",
        "davanti",
        "davvero",
        "debutto",
        "decennio",
        "deciso",
        "declino",
        "decollo",
        "decreto",
        "dedicato",
        "definito",
        "deforme",
        "degno",
        "delegare",
        "delfino",
        "delirio",
        "delta",
        "demenza",
        "denotato",
        "dentro",
        "deposito",
        "derapata",
        "derivare",
        "deroga",
        "descritto",
        "deserto",
        "desiderio",
        "desumere",
        "detersivo",
        "devoto",
        "diametro",
        "dicembre",
        "diedro",
        "difeso",
        "diffuso",
        "digerire",
        "digitale",
        "diluvio",
        "dinamico",
        "dinnanzi",
        "dipinto",
        "diploma",
        "dipolo",
        "diradare",
        "dire",
        "dirotto",
        "dirupo",
        "disagio",
        "discreto",
        "disfare",
        "disgelo",
        "disposto",
        "distanza",
        "disumano",
        "dito",
        "divano",
        "divelto",
        "dividere",
        "divorato",
        "doblone",
        "docente",
        "doganale",
        "dogma",
        "dolce",
        "domato",
        "domenica",
        "dominare",
        "dondolo",
        "dono",
        "dormire",
        "dote",
        "dottore",
        "dovuto",
        "dozzina",
        "drago",
        "druido",
        "dubbio",
        "dubitare",
        "ducale",
        "duna",
        "duomo",
        "duplice",
        "duraturo",
        "ebano",
        "eccesso",
        "ecco",
        "eclissi",
        "economia",
        "edera",
        "edicola",
        "edile",
        "editoria",
        "educare",
        "egemonia",
        "egli",
        "egoismo",
        "egregio",
        "elaborato",
        "elargire",
        "elegante",
        "elencato",
        "eletto",
        "elevare",
        "elfico",
        "elica",
        "elmo",
        "elsa",
        "eluso",
        "emanato",
        "emblema",
        "emesso",
        "emiro",
        "emotivo",
        "emozione",
        "empirico",
        "emulo",
        "endemico",
        "enduro",
        "energia",
        "enfasi",
        "enoteca",
        "entrare",
        "enzima",
        "epatite",
        "epilogo",
        "episodio",
        "epocale",
        "eppure",
        "equatore",
        "erario",
        "erba",
        "erboso",
        "erede",
        "eremita",
        "erigere",
        "ermetico",
        "eroe",
        "erosivo",
        "errante",
        "esagono",
        "esame",
        "esanime",
        "esaudire",
        "esca",
        "esempio",
        "esercito",
        "esibito",
        "esigente",
        "esistere",
        "esito",
        "esofago",
        "esortato",
        "esoso",
        "espanso",
        "espresso",
        "essenza",
        "esso",
        "esteso",
        "estimare",
        "estonia",
        "estroso",
        "esultare",
        "etilico",
        "etnico",
        "etrusco",
        "etto",
        "euclideo",
        "europa",
        "evaso",
        "evidenza",
        "evitato",
        "evoluto",
        "evviva",
        "fabbrica",
        "faccenda",
        "fachiro",
        "falco",
        "famiglia",
        "fanale",
        "fanfara",
        "fango",
        "fantasma",
        "fare",
        "farfalla",
        "farinoso",
        "farmaco",
        "fascia",
        "fastoso",
        "fasullo",
        "faticare",
        "fato",
        "favoloso",
        "febbre",
        "fecola",
        "fede",
        "fegato",
        "felpa",
        "feltro",
        "femmina",
        "fendere",
        "fenomeno",
        "fermento",
        "ferro",
        "fertile",
        "fessura",
        "festivo",
        "fetta",
        "feudo",
        "fiaba",
        "fiducia",
        "fifa",
        "figurato",
        "filo",
        "finanza",
        "finestra",
        "finire",
        "fiore",
        "fiscale",
        "fisico",
        "fiume",
        "flacone",
        "flamenco",
        "flebo",
        "flemma",
        "florido",
        "fluente",
        "fluoro",
        "fobico",
        "focaccia",
        "focoso",
        "foderato",
        "foglio",
        "folata",
        "folclore",
        "folgore",
        "fondente",
        "fonetico",
        "fonia",
        "fontana",
        "forbito",
        "forchetta",
        "foresta",
        "formica",
        "fornaio",
        "foro",
        "fortezza",
        "forzare",
        "fosfato",
        "fosso",
        "fracasso",
        "frana",
        "frassino",
        "fratello",
        "freccetta",
        "frenata",
        "fresco",
        "frigo",
        "frollino",
        "fronde",
        "frugale",
        "frutta",
        "fucilata",
        "fucsia",
        "fuggente",
        "fulmine",
        "fulvo",
        "fumante",
        "fumetto",
        "fumoso",
        "fune",
        "funzione",
        "fuoco",
        "furbo",
        "furgone",
        "furore",
        "fuso",
        "futile",
        "gabbiano",
        "gaffe",
        "galateo",
        "gallina",
        "galoppo",
        "gambero",
        "gamma",
        "garanzia",
        "garbo",
        "garofano",
        "garzone",
        "gasdotto",
        "gasolio",
        "gastrico",
        "gatto",
        "gaudio",
        "gazebo",
        "gazzella",
        "geco",
        "gelatina",
        "gelso",
        "gemello",
        "gemmato",
        "gene",
        "genitore",
        "gennaio",
        "genotipo",
        "gergo",
        "ghepardo",
        "ghiaccio",
        "ghisa",
        "giallo",
        "gilda",
        "ginepro",
        "giocare",
        "gioiello",
        "giorno",
        "giove",
        "girato",
        "girone",
        "gittata",
        "giudizio",
        "giurato",
        "giusto",
        "globulo",
        "glutine",
        "gnomo",
        "gobba",
        "golf",
        "gomito",
        "gommone",
        "gonfio",
        "gonna",
        "governo",
        "gracile",
        "grado",
        "grafico",
        "grammo",
        "grande",
        "grattare",
        "gravoso",
        "grazia",
        "greca",
        "gregge",
        "grifone",
        "grigio",
        "grinza",
        "grotta",
        "gruppo",
        "guadagno",
        "guaio",
        "guanto",
        "guardare",
        "gufo",
        "guidare",
        "ibernato",
        "icona",
        "identico",
        "idillio",
        "idolo",
        "idra",
        "idrico",
        "idrogeno",
        "igiene",
        "ignaro",
        "ignorato",
        "ilare",
        "illeso",
        "illogico",
        "illudere",
        "imballo",
        "imbevuto",
        "imbocco",
        "imbuto",
        "immane",
        "immerso",
        "immolato",
        "impacco",
        "impeto",
        "impiego",
        "importo",
        "impronta",
        "inalare",
        "inarcare",
        "inattivo",
        "incanto",
        "incendio",
        "inchino",
        "incisivo",
        "incluso",
        "incontro",
        "incrocio",
        "incubo",
        "indagine",
        "india",
        "indole",
        "inedito",
        "infatti",
        "infilare",
        "inflitto",
        "ingaggio",
        "ingegno",
        "inglese",
        "ingordo",
        "ingrosso",
        "innesco",
        "inodore",
        "inoltrare",
        "inondato",
        "insano",
        "insetto",
        "insieme",
        "insonnia",
        "insulina",
        "intasato",
        "intero",
        "intonaco",
        "intuito",
        "inumidire",
        "invalido",
        "invece",
        "invito",
        "iperbole",
        "ipnotico",
        "ipotesi",
        "ippica",
        "iride",
        "irlanda",
        "ironico",
        "irrigato",
        "irrorare",
        "isolato",
        "isotopo",
        "isterico",
        "istituto",
        "istrice",
        "italia",
        "iterare",
        "labbro",
        "labirinto",
        "lacca",
        "lacerato",
        "lacrima",
        "lacuna",
        "laddove",
        "lago",
        "lampo",
        "lancetta",
        "lanterna",
        "lardoso",
        "larga",
        "laringe",
        "lastra",
        "latenza",
        "latino",
        "lattuga",
        "lavagna",
        "lavoro",
        "legale",
        "leggero",
        "lembo",
        "lentezza",
        "lenza",
        "leone",
        "lepre",
        "lesivo",
        "lessato",
        "lesto",
        "letterale",
        "leva",
        "levigato",
        "libero",
        "lido",
        "lievito",
        "lilla",
        "limatura",
        "limitare",
        "limpido",
        "lineare",
        "lingua",
        "liquido",
        "lira",
        "lirica",
        "lisca",
        "lite",
        "litigio",
        "livrea",
        "locanda",
        "lode",
        "logica",
        "lombare",
        "londra",
        "longevo",
        "loquace",
        "lorenzo",
        "loto",
        "lotteria",
        "luce",
        "lucidato",
        "lumaca",
        "luminoso",
        "lungo",
        "lupo",
        "luppolo",
        "lusinga",
        "lusso",
        "lutto",
        "macabro",
        "macchina",
        "macero",
        "macinato",
        "madama",
        "magico",
        "maglia",
        "magnete",
        "magro",
        "maiolica",
        "malafede",
        "malgrado",
        "malinteso",
        "malsano",
        "malto",
        "malumore",
        "mana",
        "mancia",
        "mandorla",
        "mangiare",
        "manifesto",
        "mannaro",
        "manovra",
        "mansarda",
        "mantide",
        "manubrio",
        "mappa",
        "maratona",
        "marcire",
        "maretta",
        "marmo",
        "marsupio",
        "maschera",
        "massaia",
        "mastino",
        "materasso",
        "matricola",
        "mattone",
        "maturo",
        "mazurca",
        "meandro",
        "meccanico",
        "mecenate",
        "medesimo",
        "meditare",
        "mega",
        "melassa",
        "melis",
        "melodia",
        "meninge",
        "meno",
        "mensola",
        "mercurio",
        "merenda",
        "merlo",
        "meschino",
        "mese",
        "messere",
        "mestolo",
        "metallo",
        "metodo",
        "mettere",
        "miagolare",
        "mica",
        "micelio",
        "michele",
        "microbo",
        "midollo",
        "miele",
        "migliore",
        "milano",
        "milite",
        "mimosa",
        "minerale",
        "mini",
        "minore",
        "mirino",
        "mirtillo",
        "miscela",
        "missiva",
        "misto",
        "misurare",
        "mitezza",
        "mitigare",
        "mitra",
        "mittente",
        "mnemonico",
        "modello",
        "modifica",
        "modulo",
        "mogano",
        "mogio",
        "mole",
        "molosso",
        "monastero",
        "monco",
        "mondina",
        "monetario",
        "monile",
        "monotono",
        "monsone",
        "montato",
        "monviso",
        "mora",
        "mordere",
        "morsicato",
        "mostro",
        "motivato",
        "motosega",
        "motto",
        "movenza",
        "movimento",
        "mozzo",
        "mucca",
        "mucosa",
        "muffa",
        "mughetto",
        "mugnaio",
        "mulatto",
        "mulinello",
        "multiplo",
        "mummia",
        "munto",
        "muovere",
        "murale",
        "musa",
        "muscolo",
        "musica",
        "mutevole",
        "muto",
        "nababbo",
        "nafta",
        "nanometro",
        "narciso",
        "narice",
        "narrato",
        "nascere",
        "nastrare",
        "naturale",
        "nautica",
        "naviglio",
        "nebulosa",
        "necrosi",
        "negativo",
        "negozio",
        "nemmeno",
        "neofita",
        "neretto",
        "nervo",
        "nessuno",
        "nettuno",
        "neutrale",
        "neve",
        "nevrotico",
        "nicchia",
        "ninfa",
        "nitido",
        "nobile",
        "nocivo",
        "nodo",
        "nome",
        "nomina",
        "nordico",
        "normale",
        "norvegese",
        "nostrano",
        "notare",
        "notizia",
        "notturno",
        "novella",
        "nucleo",
        "nulla",
        "numero",
        "nuovo",
        "nutrire",
        "nuvola",
        "nuziale",
        "oasi",
        "obbedire",
        "obbligo",
        "obelisco",
        "oblio",
        "obolo",
        "obsoleto",
        "occasione",
        "occhio",
        "occidente",
        "occorrere",
        "occultare",
        "ocra",
        "oculato",
        "odierno",
        "odorare",
        "offerta",
        "offrire",
        "offuscato",
        "oggetto",
        "oggi",
        "ognuno",
        "olandese",
        "olfatto",
        "oliato",
        "oliva",
        "ologramma",
        "oltre",
        "omaggio",
        "ombelico",
        "ombra",
        "omega",
        "omissione",
        "ondoso",
        "onere",
        "onice",
        "onnivoro",
        "onorevole",
        "onta",
        "operato",
        "opinione",
        "opposto",
        "oracolo",
        "orafo",
        "ordine",
        "orecchino",
        "orefice",
        "orfano",
        "organico",
        "origine",
        "orizzonte",
        "orma",
        "ormeggio",
        "ornativo",
        "orologio",
        "orrendo",
        "orribile",
        "ortensia",
        "ortica",
        "orzata",
        "orzo",
        "osare",
        "oscurare",
        "osmosi",
        "ospedale",
        "ospite",
        "ossa",
        "ossidare",
        "ostacolo",
        "oste",
        "otite",
        "otre",
        "ottagono",
        "ottimo",
        "ottobre",
        "ovale",
        "ovest",
        "ovino",
        "oviparo",
        "ovocito",
        "ovunque",
        "ovviare",
        "ozio",
        "pacchetto",
        "pace",
        "pacifico",
        "padella",
        "padrone",
        "paese",
        "paga",
        "pagina",
        "palazzina",
        "palesare",
        "pallido",
        "palo",
        "palude",
        "pandoro",
        "pannello",
        "paolo",
        "paonazzo",
        "paprica",
        "parabola",
        "parcella",
        "parere",
        "pargolo",
        "pari",
        "parlato",
        "parola",
        "partire",
        "parvenza",
        "parziale",
        "passivo",
        "pasticca",
        "patacca",
        "patologia",
        "pattume",
        "pavone",
        "peccato",
        "pedalare",
        "pedonale",
        "peggio",
        "peloso",
        "penare",
        "pendice",
        "penisola",
        "pennuto",
        "penombra",
        "pensare",
        "pentola",
        "pepe",
        "pepita",
        "perbene",
        "percorso",
        "perdonato",
        "perforare",
        "pergamena",
        "periodo",
        "permesso",
        "perno",
        "perplesso",
        "persuaso",
        "pertugio",
        "pervaso",
        "pesatore",
        "pesista",
        "peso",
        "pestifero",
        "petalo",
        "pettine",
        "petulante",
        "pezzo",
        "piacere",
        "pianta",
        "piattino",
        "piccino",
        "picozza",
        "piega",
        "pietra",
        "piffero",
        "pigiama",
        "pigolio",
        "pigro",
        "pila",
        "pilifero",
        "pillola",
        "pilota",
        "pimpante",
        "pineta",
        "pinna",
        "pinolo",
        "pioggia",
        "piombo",
        "piramide",
        "piretico",
        "pirite",
        "pirolisi",
        "pitone",
        "pizzico",
        "placebo",
        "planare",
        "plasma",
        "platano",
        "plenario",
        "pochezza",
        "poderoso",
        "podismo",
        "poesia",
        "poggiare",
        "polenta",
        "poligono",
        "pollice",
        "polmonite",
        "polpetta",
        "polso",
        "poltrona",
        "polvere",
        "pomice",
        "pomodoro",
        "ponte",
        "popoloso",
        "porfido",
        "poroso",
        "porpora",
        "porre",
        "portata",
        "posa",
        "positivo",
        "possesso",
        "postulato",
        "potassio",
        "potere",
        "pranzo",
        "prassi",
        "pratica",
        "precluso",
        "predica",
        "prefisso",
        "pregiato",
        "prelievo",
        "premere",
        "prenotare",
        "preparato",
        "presenza",
        "pretesto",
        "prevalso",
        "prima",
        "principe",
        "privato",
        "problema",
        "procura",
        "produrre",
        "profumo",
        "progetto",
        "prolunga",
        "promessa",
        "pronome",
        "proposta",
        "proroga",
        "proteso",
        "prova",
        "prudente",
        "prugna",
        "prurito",
        "psiche",
        "pubblico",
        "pudica",
        "pugilato",
        "pugno",
        "pulce",
        "pulito",
        "pulsante",
        "puntare",
        "pupazzo",
        "pupilla",
        "puro",
        "quadro",
        "qualcosa",
        "quasi",
        "querela",
        "quota",
        "raccolto",
        "raddoppio",
        "radicale",
        "radunato",
        "raffica",
        "ragazzo",
        "ragione",
        "ragno",
        "ramarro",
        "ramingo",
        "ramo",
        "randagio",
        "rantolare",
        "rapato",
        "rapina",
        "rappreso",
        "rasatura",
        "raschiato",
        "rasente",
        "rassegna",
        "rastrello",
        "rata",
        "ravveduto",
        "reale",
        "recepire",
        "recinto",
        "recluta",
        "recondito",
        "recupero",
        "reddito",
        "redimere",
        "regalato",
        "registro",
        "regola",
        "regresso",
        "relazione",
        "remare",
        "remoto",
        "renna",
        "replica",
        "reprimere",
        "reputare",
        "resa",
        "residente",
        "responso",
        "restauro",
        "rete",
        "retina",
        "retorica",
        "rettifica",
        "revocato",
        "riassunto",
        "ribadire",
        "ribelle",
        "ribrezzo",
        "ricarica",
        "ricco",
        "ricevere",
        "riciclato",
        "ricordo",
        "ricreduto",
        "ridicolo",
        "ridurre",
        "rifasare",
        "riflesso",
        "riforma",
        "rifugio",
        "rigare",
        "rigettato",
        "righello",
        "rilassato",
        "rilevato",
        "rimanere",
        "rimbalzo",
        "rimedio",
        "rimorchio",
        "rinascita",
        "rincaro",
        "rinforzo",
        "rinnovo",
        "rinomato",
        "rinsavito",
        "rintocco",
        "rinuncia",
        "rinvenire",
        "riparato",
        "ripetuto",
        "ripieno",
        "riportare",
        "ripresa",
        "ripulire",
        "risata",
        "rischio",
        "riserva",
        "risibile",
        "riso",
        "rispetto",
        "ristoro",
        "risultato",
        "risvolto",
        "ritardo",
        "ritegno",
        "ritmico",
        "ritrovo",
        "riunione",
        "riva",
        "riverso",
        "rivincita",
        "rivolto",
        "rizoma",
        "roba",
        "robotico",
        "robusto",
        "roccia",
        "roco",
        "rodaggio",
        "rodere",
        "roditore",
        "rogito",
        "rollio",
        "romantico",
        "rompere",
        "ronzio",
        "rosolare",
        "rospo",
        "rotante",
        "rotondo",
        "rotula",
        "rovescio",
        "rubizzo",
        "rubrica",
        "ruga",
        "rullino",
        "rumine",
        "rumoroso",
        "ruolo",
        "rupe",
        "russare",
        "rustico",
        "sabato",
        "sabbiare",
        "sabotato",
        "sagoma",
        "salasso",
        "saldatura",
        "salgemma",
        "salivare",
        "salmone",
        "salone",
        "saltare",
        "saluto",
        "salvo",
        "sapere",
        "sapido",
        "saporito",
        "saraceno",
        "sarcasmo",
        "sarto",
        "sassoso",
        "satellite",
        "satira",
        "satollo",
        "saturno",
        "savana",
        "savio",
        "saziato",
        "sbadiglio",
        "sbalzo",
        "sbancato",
        "sbarra",
        "sbattere",
        "sbavare",
        "sbendare",
        "sbirciare",
        "sbloccato",
        "sbocciato",
        "sbrinare",
        "sbruffone",
        "sbuffare",
        "scabroso",
        "scadenza",
        "scala",
        "scambiare",
        "scandalo",
        "scapola",
        "scarso",
        "scatenare",
        "scavato",
        "scelto",
        "scenico",
        "scettro",
        "scheda",
        "schiena",
        "sciarpa",
        "scienza",
        "scindere",
        "scippo",
        "sciroppo",
        "scivolo",
        "sclerare",
        "scodella",
        "scolpito",
        "scomparto",
        "sconforto",
        "scoprire",
        "scorta",
        "scossone",
        "scozzese",
        "scriba",
        "scrollare",
        "scrutinio",
        "scuderia",
        "scultore",
        "scuola",
        "scuro",
        "scusare",
        "sdebitare",
        "sdoganare",
        "seccatura",
        "secondo",
        "sedano",
        "seggiola",
        "segnalato",
        "segregato",
        "seguito",
        "selciato",
        "selettivo",
        "sella",
        "selvaggio",
        "semaforo",
        "sembrare",
        "seme",
        "seminato",
        "sempre",
        "senso",
        "sentire",
        "sepolto",
        "sequenza",
        "serata",
        "serbato",
        "sereno",
        "serio",
        "serpente",
        "serraglio",
        "servire",
        "sestina",
        "setola",
        "settimana",
        "sfacelo",
        "sfaldare",
        "sfamato",
        "sfarzoso",
        "sfaticato",
        "sfera",
        "sfida",
        "sfilato",
        "sfinge",
        "sfocato",
        "sfoderare",
        "sfogo",
        "sfoltire",
        "sforzato",
        "sfratto",
        "sfruttato",
        "sfuggito",
        "sfumare",
        "sfuso",
        "sgabello",
        "sgarbato",
        "sgonfiare",
        "sgorbio",
        "sgrassato",
        "sguardo",
        "sibilo",
        "siccome",
        "sierra",
        "sigla",
        "signore",
        "silenzio",
        "sillaba",
        "simbolo",
        "simpatico",
        "simulato",
        "sinfonia",
        "singolo",
        "sinistro",
        "sino",
        "sintesi",
        "sinusoide",
        "sipario",
        "sisma",
        "sistole",
        "situato",
        "slitta",
        "slogatura",
        "sloveno",
        "smarrito",
        "smemorato",
        "smentito",
        "smeraldo",
        "smilzo",
        "smontare",
        "smottato",
        "smussato",
        "snellire",
        "snervato",
        "snodo",
        "sobbalzo",
        "sobrio",
        "soccorso",
        "sociale",
        "sodale",
        "soffitto",
        "sogno",
        "soldato",
        "solenne",
        "solido",
        "sollazzo",
        "solo",
        "solubile",
        "solvente",
        "somatico",
        "somma",
        "sonda",
        "sonetto",
        "sonnifero",
        "sopire",
        "soppeso",
        "sopra",
        "sorgere",
        "sorpasso",
        "sorriso",
        "sorso",
        "sorteggio",
        "sorvolato",
        "sospiro",
        "sosta",
        "sottile",
        "spada",
        "spalla",
        "spargere",
        "spatola",
        "spavento",
        "spazzola",
        "specie",
        "spedire",
        "spegnere",
        "spelatura",
        "speranza",
        "spessore",
        "spettrale",
        "spezzato",
        "spia",
        "spigoloso",
        "spillato",
        "spinoso",
        "spirale",
        "splendido",
        "sportivo",
        "sposo",
        "spranga",
        "sprecare",
        "spronato",
        "spruzzo",
        "spuntino",
        "squillo",
        "sradicare",
        "srotolato",
        "stabile",
        "stacco",
        "staffa",
        "stagnare",
        "stampato",
        "stantio",
        "starnuto",
        "stasera",
        "statuto",
        "stelo",
        "steppa",
        "sterzo",
        "stiletto",
        "stima",
        "stirpe",
        "stivale",
        "stizzoso",
        "stonato",
        "storico",
        "strappo",
        "stregato",
        "stridulo",
        "strozzare",
        "strutto",
        "stuccare",
        "stufo",
        "stupendo",
        "subentro",
        "succoso",
        "sudore",
        "suggerito",
        "sugo",
        "sultano",
        "suonare",
        "superbo",
        "supporto",
        "surgelato",
        "surrogato",
        "sussurro",
        "sutura",
        "svagare",
        "svedese",
        "sveglio",
        "svelare",
        "svenuto",
        "svezia",
        "sviluppo",
        "svista",
        "svizzera",
        "svolta",
        "svuotare",
        "tabacco",
        "tabulato",
        "tacciare",
        "taciturno",
        "tale",
        "talismano",
        "tampone",
        "tannino",
        "tara",
        "tardivo",
        "targato",
        "tariffa",
        "tarpare",
        "tartaruga",
        "tasto",
        "tattico",
        "taverna",
        "tavolata",
        "tazza",
        "teca",
        "tecnico",
        "telefono",
        "temerario",
        "tempo",
        "temuto",
        "tendone",
        "tenero",
        "tensione",
        "tentacolo",
        "teorema",
        "terme",
        "terrazzo",
        "terzetto",
        "tesi",
        "tesserato",
        "testato",
        "tetro",
        "tettoia",
        "tifare",
        "tigella",
        "timbro",
        "tinto",
        "tipico",
        "tipografo",
        "tiraggio",
        "tiro",
        "titanio",
        "titolo",
        "titubante",
        "tizio",
        "tizzone",
        "toccare",
        "tollerare",
        "tolto",
        "tombola",
        "tomo",
        "tonfo",
        "tonsilla",
        "topazio",
        "topologia",
        "toppa",
        "torba",
        "tornare",
        "torrone",
        "tortora",
        "toscano",
        "tossire",
        "tostatura",
        "totano",
        "trabocco",
        "trachea",
        "trafila",
        "tragedia",
        "tralcio",
        "tramonto",
        "transito",
        "trapano",
        "trarre",
        "trasloco",
        "trattato",
        "trave",
        "treccia",
        "tremolio",
        "trespolo",
        "tributo",
        "tricheco",
        "trifoglio",
        "trillo",
        "trincea",
        "trio",
        "tristezza",
        "triturato",
        "trivella",
        "tromba",
        "trono",
        "troppo",
        "trottola",
        "trovare",
        "truccato",
        "tubatura",
        "tuffato",
        "tulipano",
        "tumulto",
        "tunisia",
        "turbare",
        "turchino",
        "tuta",
        "tutela",
        "ubicato",
        "uccello",
        "uccisore",
        "udire",
        "uditivo",
        "uffa",
        "ufficio",
        "uguale",
        "ulisse",
        "ultimato",
        "umano",
        "umile",
        "umorismo",
        "uncinetto",
        "ungere",
        "ungherese",
        "unicorno",
        "unificato",
        "unisono",
        "unitario",
        "unte",
        "uovo",
        "upupa",
        "uragano",
        "urgenza",
        "urlo",
        "usanza",
        "usato",
        "uscito",
        "usignolo",
        "usuraio",
        "utensile",
        "utilizzo",
        "utopia",
        "vacante",
        "vaccinato",
        "vagabondo",
        "vagliato",
        "valanga",
        "valgo",
        "valico",
        "valletta",
        "valoroso",
        "valutare",
        "valvola",
        "vampata",
        "vangare",
        "vanitoso",
        "vano",
        "vantaggio",
        "vanvera",
        "vapore",
        "varano",
        "varcato",
        "variante",
        "vasca",
        "vedetta",
        "vedova",
        "veduto",
        "vegetale",
        "veicolo",
        "velcro",
        "velina",
        "velluto",
        "veloce",
        "venato",
        "vendemmia",
        "vento",
        "verace",
        "verbale",
        "vergogna",
        "verifica",
        "vero",
        "verruca",
        "verticale",
        "vescica",
        "vessillo",
        "vestale",
        "veterano",
        "vetrina",
        "vetusto",
        "viandante",
        "vibrante",
        "vicenda",
        "vichingo",
        "vicinanza",
        "vidimare",
        "vigilia",
        "vigneto",
        "vigore",
        "vile",
        "villano",
        "vimini",
        "vincitore",
        "viola",
        "vipera",
        "virgola",
        "virologo",
        "virulento",
        "viscoso",
        "visione",
        "vispo",
        "vissuto",
        "visura",
        "vita",
        "vitello",
        "vittima",
        "vivanda",
        "vivido",
        "viziare",
        "voce",
        "voga",
        "volatile",
        "volere",
        "volpe",
        "voragine",
        "vulcano",
        "zampogna",
        "zanna",
        "zappato",
        "zattera",
        "zavorra",
        "zefiro",
        "zelante",
        "zelo",
        "zenzero",
        "zerbino",
        "zibetto",
        "zinco",
        "zircone",
        "zitto",
        "zolla",
        "zotico",
        "zucchero",
        "zufolo",
        "zulu",
        "zuppa"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/spanish.json
  var require_spanish = __commonJS({
    "node_modules/bip39/src/wordlists/spanish.json"(exports2, module2) {
      module2.exports = [
        "a\u0301baco",
        "abdomen",
        "abeja",
        "abierto",
        "abogado",
        "abono",
        "aborto",
        "abrazo",
        "abrir",
        "abuelo",
        "abuso",
        "acabar",
        "academia",
        "acceso",
        "accio\u0301n",
        "aceite",
        "acelga",
        "acento",
        "aceptar",
        "a\u0301cido",
        "aclarar",
        "acne\u0301",
        "acoger",
        "acoso",
        "activo",
        "acto",
        "actriz",
        "actuar",
        "acudir",
        "acuerdo",
        "acusar",
        "adicto",
        "admitir",
        "adoptar",
        "adorno",
        "aduana",
        "adulto",
        "ae\u0301reo",
        "afectar",
        "aficio\u0301n",
        "afinar",
        "afirmar",
        "a\u0301gil",
        "agitar",
        "agoni\u0301a",
        "agosto",
        "agotar",
        "agregar",
        "agrio",
        "agua",
        "agudo",
        "a\u0301guila",
        "aguja",
        "ahogo",
        "ahorro",
        "aire",
        "aislar",
        "ajedrez",
        "ajeno",
        "ajuste",
        "alacra\u0301n",
        "alambre",
        "alarma",
        "alba",
        "a\u0301lbum",
        "alcalde",
        "aldea",
        "alegre",
        "alejar",
        "alerta",
        "aleta",
        "alfiler",
        "alga",
        "algodo\u0301n",
        "aliado",
        "aliento",
        "alivio",
        "alma",
        "almeja",
        "almi\u0301bar",
        "altar",
        "alteza",
        "altivo",
        "alto",
        "altura",
        "alumno",
        "alzar",
        "amable",
        "amante",
        "amapola",
        "amargo",
        "amasar",
        "a\u0301mbar",
        "a\u0301mbito",
        "ameno",
        "amigo",
        "amistad",
        "amor",
        "amparo",
        "amplio",
        "ancho",
        "anciano",
        "ancla",
        "andar",
        "ande\u0301n",
        "anemia",
        "a\u0301ngulo",
        "anillo",
        "a\u0301nimo",
        "ani\u0301s",
        "anotar",
        "antena",
        "antiguo",
        "antojo",
        "anual",
        "anular",
        "anuncio",
        "an\u0303adir",
        "an\u0303ejo",
        "an\u0303o",
        "apagar",
        "aparato",
        "apetito",
        "apio",
        "aplicar",
        "apodo",
        "aporte",
        "apoyo",
        "aprender",
        "aprobar",
        "apuesta",
        "apuro",
        "arado",
        "aran\u0303a",
        "arar",
        "a\u0301rbitro",
        "a\u0301rbol",
        "arbusto",
        "archivo",
        "arco",
        "arder",
        "ardilla",
        "arduo",
        "a\u0301rea",
        "a\u0301rido",
        "aries",
        "armoni\u0301a",
        "arne\u0301s",
        "aroma",
        "arpa",
        "arpo\u0301n",
        "arreglo",
        "arroz",
        "arruga",
        "arte",
        "artista",
        "asa",
        "asado",
        "asalto",
        "ascenso",
        "asegurar",
        "aseo",
        "asesor",
        "asiento",
        "asilo",
        "asistir",
        "asno",
        "asombro",
        "a\u0301spero",
        "astilla",
        "astro",
        "astuto",
        "asumir",
        "asunto",
        "atajo",
        "ataque",
        "atar",
        "atento",
        "ateo",
        "a\u0301tico",
        "atleta",
        "a\u0301tomo",
        "atraer",
        "atroz",
        "atu\u0301n",
        "audaz",
        "audio",
        "auge",
        "aula",
        "aumento",
        "ausente",
        "autor",
        "aval",
        "avance",
        "avaro",
        "ave",
        "avellana",
        "avena",
        "avestruz",
        "avio\u0301n",
        "aviso",
        "ayer",
        "ayuda",
        "ayuno",
        "azafra\u0301n",
        "azar",
        "azote",
        "azu\u0301car",
        "azufre",
        "azul",
        "baba",
        "babor",
        "bache",
        "bahi\u0301a",
        "baile",
        "bajar",
        "balanza",
        "balco\u0301n",
        "balde",
        "bambu\u0301",
        "banco",
        "banda",
        "ban\u0303o",
        "barba",
        "barco",
        "barniz",
        "barro",
        "ba\u0301scula",
        "basto\u0301n",
        "basura",
        "batalla",
        "bateri\u0301a",
        "batir",
        "batuta",
        "bau\u0301l",
        "bazar",
        "bebe\u0301",
        "bebida",
        "bello",
        "besar",
        "beso",
        "bestia",
        "bicho",
        "bien",
        "bingo",
        "blanco",
        "bloque",
        "blusa",
        "boa",
        "bobina",
        "bobo",
        "boca",
        "bocina",
        "boda",
        "bodega",
        "boina",
        "bola",
        "bolero",
        "bolsa",
        "bomba",
        "bondad",
        "bonito",
        "bono",
        "bonsa\u0301i",
        "borde",
        "borrar",
        "bosque",
        "bote",
        "boti\u0301n",
        "bo\u0301veda",
        "bozal",
        "bravo",
        "brazo",
        "brecha",
        "breve",
        "brillo",
        "brinco",
        "brisa",
        "broca",
        "broma",
        "bronce",
        "brote",
        "bruja",
        "brusco",
        "bruto",
        "buceo",
        "bucle",
        "bueno",
        "buey",
        "bufanda",
        "bufo\u0301n",
        "bu\u0301ho",
        "buitre",
        "bulto",
        "burbuja",
        "burla",
        "burro",
        "buscar",
        "butaca",
        "buzo\u0301n",
        "caballo",
        "cabeza",
        "cabina",
        "cabra",
        "cacao",
        "cada\u0301ver",
        "cadena",
        "caer",
        "cafe\u0301",
        "cai\u0301da",
        "caima\u0301n",
        "caja",
        "cajo\u0301n",
        "cal",
        "calamar",
        "calcio",
        "caldo",
        "calidad",
        "calle",
        "calma",
        "calor",
        "calvo",
        "cama",
        "cambio",
        "camello",
        "camino",
        "campo",
        "ca\u0301ncer",
        "candil",
        "canela",
        "canguro",
        "canica",
        "canto",
        "can\u0303a",
        "can\u0303o\u0301n",
        "caoba",
        "caos",
        "capaz",
        "capita\u0301n",
        "capote",
        "captar",
        "capucha",
        "cara",
        "carbo\u0301n",
        "ca\u0301rcel",
        "careta",
        "carga",
        "carin\u0303o",
        "carne",
        "carpeta",
        "carro",
        "carta",
        "casa",
        "casco",
        "casero",
        "caspa",
        "castor",
        "catorce",
        "catre",
        "caudal",
        "causa",
        "cazo",
        "cebolla",
        "ceder",
        "cedro",
        "celda",
        "ce\u0301lebre",
        "celoso",
        "ce\u0301lula",
        "cemento",
        "ceniza",
        "centro",
        "cerca",
        "cerdo",
        "cereza",
        "cero",
        "cerrar",
        "certeza",
        "ce\u0301sped",
        "cetro",
        "chacal",
        "chaleco",
        "champu\u0301",
        "chancla",
        "chapa",
        "charla",
        "chico",
        "chiste",
        "chivo",
        "choque",
        "choza",
        "chuleta",
        "chupar",
        "ciclo\u0301n",
        "ciego",
        "cielo",
        "cien",
        "cierto",
        "cifra",
        "cigarro",
        "cima",
        "cinco",
        "cine",
        "cinta",
        "cipre\u0301s",
        "circo",
        "ciruela",
        "cisne",
        "cita",
        "ciudad",
        "clamor",
        "clan",
        "claro",
        "clase",
        "clave",
        "cliente",
        "clima",
        "cli\u0301nica",
        "cobre",
        "coccio\u0301n",
        "cochino",
        "cocina",
        "coco",
        "co\u0301digo",
        "codo",
        "cofre",
        "coger",
        "cohete",
        "coji\u0301n",
        "cojo",
        "cola",
        "colcha",
        "colegio",
        "colgar",
        "colina",
        "collar",
        "colmo",
        "columna",
        "combate",
        "comer",
        "comida",
        "co\u0301modo",
        "compra",
        "conde",
        "conejo",
        "conga",
        "conocer",
        "consejo",
        "contar",
        "copa",
        "copia",
        "corazo\u0301n",
        "corbata",
        "corcho",
        "cordo\u0301n",
        "corona",
        "correr",
        "coser",
        "cosmos",
        "costa",
        "cra\u0301neo",
        "cra\u0301ter",
        "crear",
        "crecer",
        "crei\u0301do",
        "crema",
        "cri\u0301a",
        "crimen",
        "cripta",
        "crisis",
        "cromo",
        "cro\u0301nica",
        "croqueta",
        "crudo",
        "cruz",
        "cuadro",
        "cuarto",
        "cuatro",
        "cubo",
        "cubrir",
        "cuchara",
        "cuello",
        "cuento",
        "cuerda",
        "cuesta",
        "cueva",
        "cuidar",
        "culebra",
        "culpa",
        "culto",
        "cumbre",
        "cumplir",
        "cuna",
        "cuneta",
        "cuota",
        "cupo\u0301n",
        "cu\u0301pula",
        "curar",
        "curioso",
        "curso",
        "curva",
        "cutis",
        "dama",
        "danza",
        "dar",
        "dardo",
        "da\u0301til",
        "deber",
        "de\u0301bil",
        "de\u0301cada",
        "decir",
        "dedo",
        "defensa",
        "definir",
        "dejar",
        "delfi\u0301n",
        "delgado",
        "delito",
        "demora",
        "denso",
        "dental",
        "deporte",
        "derecho",
        "derrota",
        "desayuno",
        "deseo",
        "desfile",
        "desnudo",
        "destino",
        "desvi\u0301o",
        "detalle",
        "detener",
        "deuda",
        "di\u0301a",
        "diablo",
        "diadema",
        "diamante",
        "diana",
        "diario",
        "dibujo",
        "dictar",
        "diente",
        "dieta",
        "diez",
        "difi\u0301cil",
        "digno",
        "dilema",
        "diluir",
        "dinero",
        "directo",
        "dirigir",
        "disco",
        "disen\u0303o",
        "disfraz",
        "diva",
        "divino",
        "doble",
        "doce",
        "dolor",
        "domingo",
        "don",
        "donar",
        "dorado",
        "dormir",
        "dorso",
        "dos",
        "dosis",
        "drago\u0301n",
        "droga",
        "ducha",
        "duda",
        "duelo",
        "duen\u0303o",
        "dulce",
        "du\u0301o",
        "duque",
        "durar",
        "dureza",
        "duro",
        "e\u0301bano",
        "ebrio",
        "echar",
        "eco",
        "ecuador",
        "edad",
        "edicio\u0301n",
        "edificio",
        "editor",
        "educar",
        "efecto",
        "eficaz",
        "eje",
        "ejemplo",
        "elefante",
        "elegir",
        "elemento",
        "elevar",
        "elipse",
        "e\u0301lite",
        "elixir",
        "elogio",
        "eludir",
        "embudo",
        "emitir",
        "emocio\u0301n",
        "empate",
        "empen\u0303o",
        "empleo",
        "empresa",
        "enano",
        "encargo",
        "enchufe",
        "enci\u0301a",
        "enemigo",
        "enero",
        "enfado",
        "enfermo",
        "engan\u0303o",
        "enigma",
        "enlace",
        "enorme",
        "enredo",
        "ensayo",
        "ensen\u0303ar",
        "entero",
        "entrar",
        "envase",
        "envi\u0301o",
        "e\u0301poca",
        "equipo",
        "erizo",
        "escala",
        "escena",
        "escolar",
        "escribir",
        "escudo",
        "esencia",
        "esfera",
        "esfuerzo",
        "espada",
        "espejo",
        "espi\u0301a",
        "esposa",
        "espuma",
        "esqui\u0301",
        "estar",
        "este",
        "estilo",
        "estufa",
        "etapa",
        "eterno",
        "e\u0301tica",
        "etnia",
        "evadir",
        "evaluar",
        "evento",
        "evitar",
        "exacto",
        "examen",
        "exceso",
        "excusa",
        "exento",
        "exigir",
        "exilio",
        "existir",
        "e\u0301xito",
        "experto",
        "explicar",
        "exponer",
        "extremo",
        "fa\u0301brica",
        "fa\u0301bula",
        "fachada",
        "fa\u0301cil",
        "factor",
        "faena",
        "faja",
        "falda",
        "fallo",
        "falso",
        "faltar",
        "fama",
        "familia",
        "famoso",
        "farao\u0301n",
        "farmacia",
        "farol",
        "farsa",
        "fase",
        "fatiga",
        "fauna",
        "favor",
        "fax",
        "febrero",
        "fecha",
        "feliz",
        "feo",
        "feria",
        "feroz",
        "fe\u0301rtil",
        "fervor",
        "festi\u0301n",
        "fiable",
        "fianza",
        "fiar",
        "fibra",
        "ficcio\u0301n",
        "ficha",
        "fideo",
        "fiebre",
        "fiel",
        "fiera",
        "fiesta",
        "figura",
        "fijar",
        "fijo",
        "fila",
        "filete",
        "filial",
        "filtro",
        "fin",
        "finca",
        "fingir",
        "finito",
        "firma",
        "flaco",
        "flauta",
        "flecha",
        "flor",
        "flota",
        "fluir",
        "flujo",
        "flu\u0301or",
        "fobia",
        "foca",
        "fogata",
        "fogo\u0301n",
        "folio",
        "folleto",
        "fondo",
        "forma",
        "forro",
        "fortuna",
        "forzar",
        "fosa",
        "foto",
        "fracaso",
        "fra\u0301gil",
        "franja",
        "frase",
        "fraude",
        "frei\u0301r",
        "freno",
        "fresa",
        "fri\u0301o",
        "frito",
        "fruta",
        "fuego",
        "fuente",
        "fuerza",
        "fuga",
        "fumar",
        "funcio\u0301n",
        "funda",
        "furgo\u0301n",
        "furia",
        "fusil",
        "fu\u0301tbol",
        "futuro",
        "gacela",
        "gafas",
        "gaita",
        "gajo",
        "gala",
        "galeri\u0301a",
        "gallo",
        "gamba",
        "ganar",
        "gancho",
        "ganga",
        "ganso",
        "garaje",
        "garza",
        "gasolina",
        "gastar",
        "gato",
        "gavila\u0301n",
        "gemelo",
        "gemir",
        "gen",
        "ge\u0301nero",
        "genio",
        "gente",
        "geranio",
        "gerente",
        "germen",
        "gesto",
        "gigante",
        "gimnasio",
        "girar",
        "giro",
        "glaciar",
        "globo",
        "gloria",
        "gol",
        "golfo",
        "goloso",
        "golpe",
        "goma",
        "gordo",
        "gorila",
        "gorra",
        "gota",
        "goteo",
        "gozar",
        "grada",
        "gra\u0301fico",
        "grano",
        "grasa",
        "gratis",
        "grave",
        "grieta",
        "grillo",
        "gripe",
        "gris",
        "grito",
        "grosor",
        "gru\u0301a",
        "grueso",
        "grumo",
        "grupo",
        "guante",
        "guapo",
        "guardia",
        "guerra",
        "gui\u0301a",
        "guin\u0303o",
        "guion",
        "guiso",
        "guitarra",
        "gusano",
        "gustar",
        "haber",
        "ha\u0301bil",
        "hablar",
        "hacer",
        "hacha",
        "hada",
        "hallar",
        "hamaca",
        "harina",
        "haz",
        "hazan\u0303a",
        "hebilla",
        "hebra",
        "hecho",
        "helado",
        "helio",
        "hembra",
        "herir",
        "hermano",
        "he\u0301roe",
        "hervir",
        "hielo",
        "hierro",
        "hi\u0301gado",
        "higiene",
        "hijo",
        "himno",
        "historia",
        "hocico",
        "hogar",
        "hoguera",
        "hoja",
        "hombre",
        "hongo",
        "honor",
        "honra",
        "hora",
        "hormiga",
        "horno",
        "hostil",
        "hoyo",
        "hueco",
        "huelga",
        "huerta",
        "hueso",
        "huevo",
        "huida",
        "huir",
        "humano",
        "hu\u0301medo",
        "humilde",
        "humo",
        "hundir",
        "huraca\u0301n",
        "hurto",
        "icono",
        "ideal",
        "idioma",
        "i\u0301dolo",
        "iglesia",
        "iglu\u0301",
        "igual",
        "ilegal",
        "ilusio\u0301n",
        "imagen",
        "ima\u0301n",
        "imitar",
        "impar",
        "imperio",
        "imponer",
        "impulso",
        "incapaz",
        "i\u0301ndice",
        "inerte",
        "infiel",
        "informe",
        "ingenio",
        "inicio",
        "inmenso",
        "inmune",
        "innato",
        "insecto",
        "instante",
        "intere\u0301s",
        "i\u0301ntimo",
        "intuir",
        "inu\u0301til",
        "invierno",
        "ira",
        "iris",
        "ironi\u0301a",
        "isla",
        "islote",
        "jabali\u0301",
        "jabo\u0301n",
        "jamo\u0301n",
        "jarabe",
        "jardi\u0301n",
        "jarra",
        "jaula",
        "jazmi\u0301n",
        "jefe",
        "jeringa",
        "jinete",
        "jornada",
        "joroba",
        "joven",
        "joya",
        "juerga",
        "jueves",
        "juez",
        "jugador",
        "jugo",
        "juguete",
        "juicio",
        "junco",
        "jungla",
        "junio",
        "juntar",
        "ju\u0301piter",
        "jurar",
        "justo",
        "juvenil",
        "juzgar",
        "kilo",
        "koala",
        "labio",
        "lacio",
        "lacra",
        "lado",
        "ladro\u0301n",
        "lagarto",
        "la\u0301grima",
        "laguna",
        "laico",
        "lamer",
        "la\u0301mina",
        "la\u0301mpara",
        "lana",
        "lancha",
        "langosta",
        "lanza",
        "la\u0301piz",
        "largo",
        "larva",
        "la\u0301stima",
        "lata",
        "la\u0301tex",
        "latir",
        "laurel",
        "lavar",
        "lazo",
        "leal",
        "leccio\u0301n",
        "leche",
        "lector",
        "leer",
        "legio\u0301n",
        "legumbre",
        "lejano",
        "lengua",
        "lento",
        "len\u0303a",
        "leo\u0301n",
        "leopardo",
        "lesio\u0301n",
        "letal",
        "letra",
        "leve",
        "leyenda",
        "libertad",
        "libro",
        "licor",
        "li\u0301der",
        "lidiar",
        "lienzo",
        "liga",
        "ligero",
        "lima",
        "li\u0301mite",
        "limo\u0301n",
        "limpio",
        "lince",
        "lindo",
        "li\u0301nea",
        "lingote",
        "lino",
        "linterna",
        "li\u0301quido",
        "liso",
        "lista",
        "litera",
        "litio",
        "litro",
        "llaga",
        "llama",
        "llanto",
        "llave",
        "llegar",
        "llenar",
        "llevar",
        "llorar",
        "llover",
        "lluvia",
        "lobo",
        "locio\u0301n",
        "loco",
        "locura",
        "lo\u0301gica",
        "logro",
        "lombriz",
        "lomo",
        "lonja",
        "lote",
        "lucha",
        "lucir",
        "lugar",
        "lujo",
        "luna",
        "lunes",
        "lupa",
        "lustro",
        "luto",
        "luz",
        "maceta",
        "macho",
        "madera",
        "madre",
        "maduro",
        "maestro",
        "mafia",
        "magia",
        "mago",
        "mai\u0301z",
        "maldad",
        "maleta",
        "malla",
        "malo",
        "mama\u0301",
        "mambo",
        "mamut",
        "manco",
        "mando",
        "manejar",
        "manga",
        "maniqui\u0301",
        "manjar",
        "mano",
        "manso",
        "manta",
        "man\u0303ana",
        "mapa",
        "ma\u0301quina",
        "mar",
        "marco",
        "marea",
        "marfil",
        "margen",
        "marido",
        "ma\u0301rmol",
        "marro\u0301n",
        "martes",
        "marzo",
        "masa",
        "ma\u0301scara",
        "masivo",
        "matar",
        "materia",
        "matiz",
        "matriz",
        "ma\u0301ximo",
        "mayor",
        "mazorca",
        "mecha",
        "medalla",
        "medio",
        "me\u0301dula",
        "mejilla",
        "mejor",
        "melena",
        "melo\u0301n",
        "memoria",
        "menor",
        "mensaje",
        "mente",
        "menu\u0301",
        "mercado",
        "merengue",
        "me\u0301rito",
        "mes",
        "meso\u0301n",
        "meta",
        "meter",
        "me\u0301todo",
        "metro",
        "mezcla",
        "miedo",
        "miel",
        "miembro",
        "miga",
        "mil",
        "milagro",
        "militar",
        "millo\u0301n",
        "mimo",
        "mina",
        "minero",
        "mi\u0301nimo",
        "minuto",
        "miope",
        "mirar",
        "misa",
        "miseria",
        "misil",
        "mismo",
        "mitad",
        "mito",
        "mochila",
        "mocio\u0301n",
        "moda",
        "modelo",
        "moho",
        "mojar",
        "molde",
        "moler",
        "molino",
        "momento",
        "momia",
        "monarca",
        "moneda",
        "monja",
        "monto",
        "mon\u0303o",
        "morada",
        "morder",
        "moreno",
        "morir",
        "morro",
        "morsa",
        "mortal",
        "mosca",
        "mostrar",
        "motivo",
        "mover",
        "mo\u0301vil",
        "mozo",
        "mucho",
        "mudar",
        "mueble",
        "muela",
        "muerte",
        "muestra",
        "mugre",
        "mujer",
        "mula",
        "muleta",
        "multa",
        "mundo",
        "mun\u0303eca",
        "mural",
        "muro",
        "mu\u0301sculo",
        "museo",
        "musgo",
        "mu\u0301sica",
        "muslo",
        "na\u0301car",
        "nacio\u0301n",
        "nadar",
        "naipe",
        "naranja",
        "nariz",
        "narrar",
        "nasal",
        "natal",
        "nativo",
        "natural",
        "na\u0301usea",
        "naval",
        "nave",
        "navidad",
        "necio",
        "ne\u0301ctar",
        "negar",
        "negocio",
        "negro",
        "neo\u0301n",
        "nervio",
        "neto",
        "neutro",
        "nevar",
        "nevera",
        "nicho",
        "nido",
        "niebla",
        "nieto",
        "nin\u0303ez",
        "nin\u0303o",
        "ni\u0301tido",
        "nivel",
        "nobleza",
        "noche",
        "no\u0301mina",
        "noria",
        "norma",
        "norte",
        "nota",
        "noticia",
        "novato",
        "novela",
        "novio",
        "nube",
        "nuca",
        "nu\u0301cleo",
        "nudillo",
        "nudo",
        "nuera",
        "nueve",
        "nuez",
        "nulo",
        "nu\u0301mero",
        "nutria",
        "oasis",
        "obeso",
        "obispo",
        "objeto",
        "obra",
        "obrero",
        "observar",
        "obtener",
        "obvio",
        "oca",
        "ocaso",
        "oce\u0301ano",
        "ochenta",
        "ocho",
        "ocio",
        "ocre",
        "octavo",
        "octubre",
        "oculto",
        "ocupar",
        "ocurrir",
        "odiar",
        "odio",
        "odisea",
        "oeste",
        "ofensa",
        "oferta",
        "oficio",
        "ofrecer",
        "ogro",
        "oi\u0301do",
        "oi\u0301r",
        "ojo",
        "ola",
        "oleada",
        "olfato",
        "olivo",
        "olla",
        "olmo",
        "olor",
        "olvido",
        "ombligo",
        "onda",
        "onza",
        "opaco",
        "opcio\u0301n",
        "o\u0301pera",
        "opinar",
        "oponer",
        "optar",
        "o\u0301ptica",
        "opuesto",
        "oracio\u0301n",
        "orador",
        "oral",
        "o\u0301rbita",
        "orca",
        "orden",
        "oreja",
        "o\u0301rgano",
        "orgi\u0301a",
        "orgullo",
        "oriente",
        "origen",
        "orilla",
        "oro",
        "orquesta",
        "oruga",
        "osadi\u0301a",
        "oscuro",
        "osezno",
        "oso",
        "ostra",
        "oton\u0303o",
        "otro",
        "oveja",
        "o\u0301vulo",
        "o\u0301xido",
        "oxi\u0301geno",
        "oyente",
        "ozono",
        "pacto",
        "padre",
        "paella",
        "pa\u0301gina",
        "pago",
        "pai\u0301s",
        "pa\u0301jaro",
        "palabra",
        "palco",
        "paleta",
        "pa\u0301lido",
        "palma",
        "paloma",
        "palpar",
        "pan",
        "panal",
        "pa\u0301nico",
        "pantera",
        "pan\u0303uelo",
        "papa\u0301",
        "papel",
        "papilla",
        "paquete",
        "parar",
        "parcela",
        "pared",
        "parir",
        "paro",
        "pa\u0301rpado",
        "parque",
        "pa\u0301rrafo",
        "parte",
        "pasar",
        "paseo",
        "pasio\u0301n",
        "paso",
        "pasta",
        "pata",
        "patio",
        "patria",
        "pausa",
        "pauta",
        "pavo",
        "payaso",
        "peato\u0301n",
        "pecado",
        "pecera",
        "pecho",
        "pedal",
        "pedir",
        "pegar",
        "peine",
        "pelar",
        "peldan\u0303o",
        "pelea",
        "peligro",
        "pellejo",
        "pelo",
        "peluca",
        "pena",
        "pensar",
        "pen\u0303o\u0301n",
        "peo\u0301n",
        "peor",
        "pepino",
        "pequen\u0303o",
        "pera",
        "percha",
        "perder",
        "pereza",
        "perfil",
        "perico",
        "perla",
        "permiso",
        "perro",
        "persona",
        "pesa",
        "pesca",
        "pe\u0301simo",
        "pestan\u0303a",
        "pe\u0301talo",
        "petro\u0301leo",
        "pez",
        "pezun\u0303a",
        "picar",
        "picho\u0301n",
        "pie",
        "piedra",
        "pierna",
        "pieza",
        "pijama",
        "pilar",
        "piloto",
        "pimienta",
        "pino",
        "pintor",
        "pinza",
        "pin\u0303a",
        "piojo",
        "pipa",
        "pirata",
        "pisar",
        "piscina",
        "piso",
        "pista",
        "pito\u0301n",
        "pizca",
        "placa",
        "plan",
        "plata",
        "playa",
        "plaza",
        "pleito",
        "pleno",
        "plomo",
        "pluma",
        "plural",
        "pobre",
        "poco",
        "poder",
        "podio",
        "poema",
        "poesi\u0301a",
        "poeta",
        "polen",
        "polici\u0301a",
        "pollo",
        "polvo",
        "pomada",
        "pomelo",
        "pomo",
        "pompa",
        "poner",
        "porcio\u0301n",
        "portal",
        "posada",
        "poseer",
        "posible",
        "poste",
        "potencia",
        "potro",
        "pozo",
        "prado",
        "precoz",
        "pregunta",
        "premio",
        "prensa",
        "preso",
        "previo",
        "primo",
        "pri\u0301ncipe",
        "prisio\u0301n",
        "privar",
        "proa",
        "probar",
        "proceso",
        "producto",
        "proeza",
        "profesor",
        "programa",
        "prole",
        "promesa",
        "pronto",
        "propio",
        "pro\u0301ximo",
        "prueba",
        "pu\u0301blico",
        "puchero",
        "pudor",
        "pueblo",
        "puerta",
        "puesto",
        "pulga",
        "pulir",
        "pulmo\u0301n",
        "pulpo",
        "pulso",
        "puma",
        "punto",
        "pun\u0303al",
        "pun\u0303o",
        "pupa",
        "pupila",
        "pure\u0301",
        "quedar",
        "queja",
        "quemar",
        "querer",
        "queso",
        "quieto",
        "qui\u0301mica",
        "quince",
        "quitar",
        "ra\u0301bano",
        "rabia",
        "rabo",
        "racio\u0301n",
        "radical",
        "rai\u0301z",
        "rama",
        "rampa",
        "rancho",
        "rango",
        "rapaz",
        "ra\u0301pido",
        "rapto",
        "rasgo",
        "raspa",
        "rato",
        "rayo",
        "raza",
        "razo\u0301n",
        "reaccio\u0301n",
        "realidad",
        "reban\u0303o",
        "rebote",
        "recaer",
        "receta",
        "rechazo",
        "recoger",
        "recreo",
        "recto",
        "recurso",
        "red",
        "redondo",
        "reducir",
        "reflejo",
        "reforma",
        "refra\u0301n",
        "refugio",
        "regalo",
        "regir",
        "regla",
        "regreso",
        "rehe\u0301n",
        "reino",
        "rei\u0301r",
        "reja",
        "relato",
        "relevo",
        "relieve",
        "relleno",
        "reloj",
        "remar",
        "remedio",
        "remo",
        "rencor",
        "rendir",
        "renta",
        "reparto",
        "repetir",
        "reposo",
        "reptil",
        "res",
        "rescate",
        "resina",
        "respeto",
        "resto",
        "resumen",
        "retiro",
        "retorno",
        "retrato",
        "reunir",
        "reve\u0301s",
        "revista",
        "rey",
        "rezar",
        "rico",
        "riego",
        "rienda",
        "riesgo",
        "rifa",
        "ri\u0301gido",
        "rigor",
        "rinco\u0301n",
        "rin\u0303o\u0301n",
        "ri\u0301o",
        "riqueza",
        "risa",
        "ritmo",
        "rito",
        "rizo",
        "roble",
        "roce",
        "rociar",
        "rodar",
        "rodeo",
        "rodilla",
        "roer",
        "rojizo",
        "rojo",
        "romero",
        "romper",
        "ron",
        "ronco",
        "ronda",
        "ropa",
        "ropero",
        "rosa",
        "rosca",
        "rostro",
        "rotar",
        "rubi\u0301",
        "rubor",
        "rudo",
        "rueda",
        "rugir",
        "ruido",
        "ruina",
        "ruleta",
        "rulo",
        "rumbo",
        "rumor",
        "ruptura",
        "ruta",
        "rutina",
        "sa\u0301bado",
        "saber",
        "sabio",
        "sable",
        "sacar",
        "sagaz",
        "sagrado",
        "sala",
        "saldo",
        "salero",
        "salir",
        "salmo\u0301n",
        "salo\u0301n",
        "salsa",
        "salto",
        "salud",
        "salvar",
        "samba",
        "sancio\u0301n",
        "sandi\u0301a",
        "sanear",
        "sangre",
        "sanidad",
        "sano",
        "santo",
        "sapo",
        "saque",
        "sardina",
        "sarte\u0301n",
        "sastre",
        "sata\u0301n",
        "sauna",
        "saxofo\u0301n",
        "seccio\u0301n",
        "seco",
        "secreto",
        "secta",
        "sed",
        "seguir",
        "seis",
        "sello",
        "selva",
        "semana",
        "semilla",
        "senda",
        "sensor",
        "sen\u0303al",
        "sen\u0303or",
        "separar",
        "sepia",
        "sequi\u0301a",
        "ser",
        "serie",
        "sermo\u0301n",
        "servir",
        "sesenta",
        "sesio\u0301n",
        "seta",
        "setenta",
        "severo",
        "sexo",
        "sexto",
        "sidra",
        "siesta",
        "siete",
        "siglo",
        "signo",
        "si\u0301laba",
        "silbar",
        "silencio",
        "silla",
        "si\u0301mbolo",
        "simio",
        "sirena",
        "sistema",
        "sitio",
        "situar",
        "sobre",
        "socio",
        "sodio",
        "sol",
        "solapa",
        "soldado",
        "soledad",
        "so\u0301lido",
        "soltar",
        "solucio\u0301n",
        "sombra",
        "sondeo",
        "sonido",
        "sonoro",
        "sonrisa",
        "sopa",
        "soplar",
        "soporte",
        "sordo",
        "sorpresa",
        "sorteo",
        "soste\u0301n",
        "so\u0301tano",
        "suave",
        "subir",
        "suceso",
        "sudor",
        "suegra",
        "suelo",
        "suen\u0303o",
        "suerte",
        "sufrir",
        "sujeto",
        "sulta\u0301n",
        "sumar",
        "superar",
        "suplir",
        "suponer",
        "supremo",
        "sur",
        "surco",
        "suren\u0303o",
        "surgir",
        "susto",
        "sutil",
        "tabaco",
        "tabique",
        "tabla",
        "tabu\u0301",
        "taco",
        "tacto",
        "tajo",
        "talar",
        "talco",
        "talento",
        "talla",
        "talo\u0301n",
        "taman\u0303o",
        "tambor",
        "tango",
        "tanque",
        "tapa",
        "tapete",
        "tapia",
        "tapo\u0301n",
        "taquilla",
        "tarde",
        "tarea",
        "tarifa",
        "tarjeta",
        "tarot",
        "tarro",
        "tarta",
        "tatuaje",
        "tauro",
        "taza",
        "tazo\u0301n",
        "teatro",
        "techo",
        "tecla",
        "te\u0301cnica",
        "tejado",
        "tejer",
        "tejido",
        "tela",
        "tele\u0301fono",
        "tema",
        "temor",
        "templo",
        "tenaz",
        "tender",
        "tener",
        "tenis",
        "tenso",
        "teori\u0301a",
        "terapia",
        "terco",
        "te\u0301rmino",
        "ternura",
        "terror",
        "tesis",
        "tesoro",
        "testigo",
        "tetera",
        "texto",
        "tez",
        "tibio",
        "tiburo\u0301n",
        "tiempo",
        "tienda",
        "tierra",
        "tieso",
        "tigre",
        "tijera",
        "tilde",
        "timbre",
        "ti\u0301mido",
        "timo",
        "tinta",
        "ti\u0301o",
        "ti\u0301pico",
        "tipo",
        "tira",
        "tiro\u0301n",
        "tita\u0301n",
        "ti\u0301tere",
        "ti\u0301tulo",
        "tiza",
        "toalla",
        "tobillo",
        "tocar",
        "tocino",
        "todo",
        "toga",
        "toldo",
        "tomar",
        "tono",
        "tonto",
        "topar",
        "tope",
        "toque",
        "to\u0301rax",
        "torero",
        "tormenta",
        "torneo",
        "toro",
        "torpedo",
        "torre",
        "torso",
        "tortuga",
        "tos",
        "tosco",
        "toser",
        "to\u0301xico",
        "trabajo",
        "tractor",
        "traer",
        "tra\u0301fico",
        "trago",
        "traje",
        "tramo",
        "trance",
        "trato",
        "trauma",
        "trazar",
        "tre\u0301bol",
        "tregua",
        "treinta",
        "tren",
        "trepar",
        "tres",
        "tribu",
        "trigo",
        "tripa",
        "triste",
        "triunfo",
        "trofeo",
        "trompa",
        "tronco",
        "tropa",
        "trote",
        "trozo",
        "truco",
        "trueno",
        "trufa",
        "tuberi\u0301a",
        "tubo",
        "tuerto",
        "tumba",
        "tumor",
        "tu\u0301nel",
        "tu\u0301nica",
        "turbina",
        "turismo",
        "turno",
        "tutor",
        "ubicar",
        "u\u0301lcera",
        "umbral",
        "unidad",
        "unir",
        "universo",
        "uno",
        "untar",
        "un\u0303a",
        "urbano",
        "urbe",
        "urgente",
        "urna",
        "usar",
        "usuario",
        "u\u0301til",
        "utopi\u0301a",
        "uva",
        "vaca",
        "vaci\u0301o",
        "vacuna",
        "vagar",
        "vago",
        "vaina",
        "vajilla",
        "vale",
        "va\u0301lido",
        "valle",
        "valor",
        "va\u0301lvula",
        "vampiro",
        "vara",
        "variar",
        "varo\u0301n",
        "vaso",
        "vecino",
        "vector",
        "vehi\u0301culo",
        "veinte",
        "vejez",
        "vela",
        "velero",
        "veloz",
        "vena",
        "vencer",
        "venda",
        "veneno",
        "vengar",
        "venir",
        "venta",
        "venus",
        "ver",
        "verano",
        "verbo",
        "verde",
        "vereda",
        "verja",
        "verso",
        "verter",
        "vi\u0301a",
        "viaje",
        "vibrar",
        "vicio",
        "vi\u0301ctima",
        "vida",
        "vi\u0301deo",
        "vidrio",
        "viejo",
        "viernes",
        "vigor",
        "vil",
        "villa",
        "vinagre",
        "vino",
        "vin\u0303edo",
        "violi\u0301n",
        "viral",
        "virgo",
        "virtud",
        "visor",
        "vi\u0301spera",
        "vista",
        "vitamina",
        "viudo",
        "vivaz",
        "vivero",
        "vivir",
        "vivo",
        "volca\u0301n",
        "volumen",
        "volver",
        "voraz",
        "votar",
        "voto",
        "voz",
        "vuelo",
        "vulgar",
        "yacer",
        "yate",
        "yegua",
        "yema",
        "yerno",
        "yeso",
        "yodo",
        "yoga",
        "yogur",
        "zafiro",
        "zanja",
        "zapato",
        "zarza",
        "zona",
        "zorro",
        "zumo",
        "zurdo"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/japanese.json
  var require_japanese = __commonJS({
    "node_modules/bip39/src/wordlists/japanese.json"(exports2, module2) {
      module2.exports = [
        "\u3042\u3044\u3053\u304F\u3057\u3093",
        "\u3042\u3044\u3055\u3064",
        "\u3042\u3044\u305F\u3099",
        "\u3042\u304A\u305D\u3099\u3089",
        "\u3042\u304B\u3061\u3083\u3093",
        "\u3042\u304D\u308B",
        "\u3042\u3051\u304B\u3099\u305F",
        "\u3042\u3051\u308B",
        "\u3042\u3053\u304B\u3099\u308C\u308B",
        "\u3042\u3055\u3044",
        "\u3042\u3055\u3072",
        "\u3042\u3057\u3042\u3068",
        "\u3042\u3057\u3099\u308F\u3046",
        "\u3042\u3059\u3099\u304B\u308B",
        "\u3042\u3059\u3099\u304D",
        "\u3042\u305D\u3075\u3099",
        "\u3042\u305F\u3048\u308B",
        "\u3042\u305F\u305F\u3081\u308B",
        "\u3042\u305F\u308A\u307E\u3048",
        "\u3042\u305F\u308B",
        "\u3042\u3064\u3044",
        "\u3042\u3064\u304B\u3046",
        "\u3042\u3063\u3057\u3085\u304F",
        "\u3042\u3064\u307E\u308A",
        "\u3042\u3064\u3081\u308B",
        "\u3042\u3066\u306A",
        "\u3042\u3066\u306F\u307E\u308B",
        "\u3042\u3072\u308B",
        "\u3042\u3075\u3099\u3089",
        "\u3042\u3075\u3099\u308B",
        "\u3042\u3075\u308C\u308B",
        "\u3042\u307E\u3044",
        "\u3042\u307E\u3068\u3099",
        "\u3042\u307E\u3084\u304B\u3059",
        "\u3042\u307E\u308A",
        "\u3042\u307F\u3082\u306E",
        "\u3042\u3081\u308A\u304B",
        "\u3042\u3084\u307E\u308B",
        "\u3042\u3086\u3080",
        "\u3042\u3089\u3044\u304F\u3099\u307E",
        "\u3042\u3089\u3057",
        "\u3042\u3089\u3059\u3057\u3099",
        "\u3042\u3089\u305F\u3081\u308B",
        "\u3042\u3089\u3086\u308B",
        "\u3042\u3089\u308F\u3059",
        "\u3042\u308A\u304B\u3099\u3068\u3046",
        "\u3042\u308F\u305B\u308B",
        "\u3042\u308F\u3066\u308B",
        "\u3042\u3093\u3044",
        "\u3042\u3093\u304B\u3099\u3044",
        "\u3042\u3093\u3053",
        "\u3042\u3093\u305B\u3099\u3093",
        "\u3042\u3093\u3066\u3044",
        "\u3042\u3093\u306A\u3044",
        "\u3042\u3093\u307E\u308A",
        "\u3044\u3044\u305F\u3099\u3059",
        "\u3044\u304A\u3093",
        "\u3044\u304B\u3099\u3044",
        "\u3044\u304B\u3099\u304F",
        "\u3044\u304D\u304A\u3044",
        "\u3044\u304D\u306A\u308A",
        "\u3044\u304D\u3082\u306E",
        "\u3044\u304D\u308B",
        "\u3044\u304F\u3057\u3099",
        "\u3044\u304F\u3075\u3099\u3093",
        "\u3044\u3051\u306F\u3099\u306A",
        "\u3044\u3051\u3093",
        "\u3044\u3053\u3046",
        "\u3044\u3053\u304F",
        "\u3044\u3053\u3064",
        "\u3044\u3055\u307E\u3057\u3044",
        "\u3044\u3055\u3093",
        "\u3044\u3057\u304D",
        "\u3044\u3057\u3099\u3085\u3046",
        "\u3044\u3057\u3099\u3087\u3046",
        "\u3044\u3057\u3099\u308F\u308B",
        "\u3044\u3059\u3099\u307F",
        "\u3044\u3059\u3099\u308C",
        "\u3044\u305B\u3044",
        "\u3044\u305B\u3048\u3072\u3099",
        "\u3044\u305B\u304B\u3044",
        "\u3044\u305B\u304D",
        "\u3044\u305B\u3099\u3093",
        "\u3044\u305D\u3046\u308D\u3046",
        "\u3044\u305D\u304B\u3099\u3057\u3044",
        "\u3044\u305F\u3099\u3044",
        "\u3044\u305F\u3099\u304F",
        "\u3044\u305F\u3059\u3099\u3089",
        "\u3044\u305F\u307F",
        "\u3044\u305F\u308A\u3042",
        "\u3044\u3061\u304A\u3046",
        "\u3044\u3061\u3057\u3099",
        "\u3044\u3061\u3068\u3099",
        "\u3044\u3061\u306F\u3099",
        "\u3044\u3061\u3075\u3099",
        "\u3044\u3061\u308A\u3085\u3046",
        "\u3044\u3064\u304B",
        "\u3044\u3063\u3057\u3085\u3093",
        "\u3044\u3063\u305B\u3044",
        "\u3044\u3063\u305D\u3046",
        "\u3044\u3063\u305F\u3093",
        "\u3044\u3063\u3061",
        "\u3044\u3063\u3066\u3044",
        "\u3044\u3063\u307B\u309A\u3046",
        "\u3044\u3066\u3055\u3099",
        "\u3044\u3066\u3093",
        "\u3044\u3068\u3099\u3046",
        "\u3044\u3068\u3053",
        "\u3044\u306A\u3044",
        "\u3044\u306A\u304B",
        "\u3044\u306D\u3080\u308A",
        "\u3044\u306E\u3061",
        "\u3044\u306E\u308B",
        "\u3044\u306F\u3064",
        "\u3044\u306F\u3099\u308B",
        "\u3044\u306F\u3093",
        "\u3044\u3072\u3099\u304D",
        "\u3044\u3072\u3093",
        "\u3044\u3075\u304F",
        "\u3044\u3078\u3093",
        "\u3044\u307B\u3046",
        "\u3044\u307F\u3093",
        "\u3044\u3082\u3046\u3068",
        "\u3044\u3082\u305F\u308C",
        "\u3044\u3082\u308A",
        "\u3044\u3084\u304B\u3099\u308B",
        "\u3044\u3084\u3059",
        "\u3044\u3088\u304B\u3093",
        "\u3044\u3088\u304F",
        "\u3044\u3089\u3044",
        "\u3044\u3089\u3059\u3068",
        "\u3044\u308A\u304F\u3099\u3061",
        "\u3044\u308A\u3087\u3046",
        "\u3044\u308C\u3044",
        "\u3044\u308C\u3082\u306E",
        "\u3044\u308C\u308B",
        "\u3044\u308D\u3048\u3093\u3072\u309A\u3064",
        "\u3044\u308F\u3044",
        "\u3044\u308F\u3046",
        "\u3044\u308F\u304B\u3093",
        "\u3044\u308F\u306F\u3099",
        "\u3044\u308F\u3086\u308B",
        "\u3044\u3093\u3051\u3099\u3093\u307E\u3081",
        "\u3044\u3093\u3055\u3064",
        "\u3044\u3093\u3057\u3087\u3046",
        "\u3044\u3093\u3088\u3046",
        "\u3046\u3048\u304D",
        "\u3046\u3048\u308B",
        "\u3046\u304A\u3055\u3099",
        "\u3046\u304B\u3099\u3044",
        "\u3046\u304B\u3075\u3099",
        "\u3046\u304B\u3078\u3099\u308B",
        "\u3046\u304D\u308F",
        "\u3046\u304F\u3089\u3044\u306A",
        "\u3046\u304F\u308C\u308C",
        "\u3046\u3051\u305F\u307E\u308F\u308B",
        "\u3046\u3051\u3064\u3051",
        "\u3046\u3051\u3068\u308B",
        "\u3046\u3051\u3082\u3064",
        "\u3046\u3051\u308B",
        "\u3046\u3053\u3099\u304B\u3059",
        "\u3046\u3053\u3099\u304F",
        "\u3046\u3053\u3093",
        "\u3046\u3055\u304D\u3099",
        "\u3046\u3057\u306A\u3046",
        "\u3046\u3057\u308D\u304B\u3099\u307F",
        "\u3046\u3059\u3044",
        "\u3046\u3059\u304D\u3099",
        "\u3046\u3059\u304F\u3099\u3089\u3044",
        "\u3046\u3059\u3081\u308B",
        "\u3046\u305B\u3064",
        "\u3046\u3061\u3042\u308F\u305B",
        "\u3046\u3061\u304B\u3099\u308F",
        "\u3046\u3061\u304D",
        "\u3046\u3061\u3085\u3046",
        "\u3046\u3063\u304B\u308A",
        "\u3046\u3064\u304F\u3057\u3044",
        "\u3046\u3063\u305F\u3048\u308B",
        "\u3046\u3064\u308B",
        "\u3046\u3068\u3099\u3093",
        "\u3046\u306A\u304D\u3099",
        "\u3046\u306A\u3057\u3099",
        "\u3046\u306A\u3059\u3099\u304F",
        "\u3046\u306A\u308B",
        "\u3046\u306D\u308B",
        "\u3046\u306E\u3046",
        "\u3046\u3075\u3099\u3051\u3099",
        "\u3046\u3075\u3099\u3053\u3099\u3048",
        "\u3046\u307E\u308C\u308B",
        "\u3046\u3081\u308B",
        "\u3046\u3082\u3046",
        "\u3046\u3084\u307E\u3046",
        "\u3046\u3088\u304F",
        "\u3046\u3089\u304B\u3099\u3048\u3059",
        "\u3046\u3089\u304F\u3099\u3061",
        "\u3046\u3089\u306A\u3044",
        "\u3046\u308A\u3042\u3051\u3099",
        "\u3046\u308A\u304D\u308C",
        "\u3046\u308B\u3055\u3044",
        "\u3046\u308C\u3057\u3044",
        "\u3046\u308C\u3086\u304D",
        "\u3046\u308C\u308B",
        "\u3046\u308D\u3053",
        "\u3046\u308F\u304D",
        "\u3046\u308F\u3055",
        "\u3046\u3093\u3053\u3046",
        "\u3046\u3093\u3061\u3093",
        "\u3046\u3093\u3066\u3093",
        "\u3046\u3093\u3068\u3099\u3046",
        "\u3048\u3044\u3048\u3093",
        "\u3048\u3044\u304B\u3099",
        "\u3048\u3044\u304D\u3087\u3046",
        "\u3048\u3044\u3053\u3099",
        "\u3048\u3044\u305B\u3044",
        "\u3048\u3044\u3075\u3099\u3093",
        "\u3048\u3044\u3088\u3046",
        "\u3048\u3044\u308F",
        "\u3048\u304A\u308A",
        "\u3048\u304B\u3099\u304A",
        "\u3048\u304B\u3099\u304F",
        "\u3048\u304D\u305F\u3044",
        "\u3048\u304F\u305B\u308B",
        "\u3048\u3057\u3083\u304F",
        "\u3048\u3059\u3066",
        "\u3048\u3064\u3089\u3093",
        "\u3048\u306E\u304F\u3099",
        "\u3048\u307B\u3046\u307E\u304D",
        "\u3048\u307B\u3093",
        "\u3048\u307E\u304D",
        "\u3048\u3082\u3057\u3099",
        "\u3048\u3082\u306E",
        "\u3048\u3089\u3044",
        "\u3048\u3089\u3075\u3099",
        "\u3048\u308A\u3042",
        "\u3048\u3093\u3048\u3093",
        "\u3048\u3093\u304B\u3044",
        "\u3048\u3093\u304D\u3099",
        "\u3048\u3093\u3051\u3099\u304D",
        "\u3048\u3093\u3057\u3085\u3046",
        "\u3048\u3093\u305B\u3099\u3064",
        "\u3048\u3093\u305D\u304F",
        "\u3048\u3093\u3061\u3087\u3046",
        "\u3048\u3093\u3068\u3064",
        "\u304A\u3044\u304B\u3051\u308B",
        "\u304A\u3044\u3053\u3059",
        "\u304A\u3044\u3057\u3044",
        "\u304A\u3044\u3064\u304F",
        "\u304A\u3046\u3048\u3093",
        "\u304A\u3046\u3055\u307E",
        "\u304A\u3046\u3057\u3099",
        "\u304A\u3046\u305B\u3064",
        "\u304A\u3046\u305F\u3044",
        "\u304A\u3046\u3075\u304F",
        "\u304A\u3046\u3078\u3099\u3044",
        "\u304A\u3046\u3088\u3046",
        "\u304A\u3048\u308B",
        "\u304A\u304A\u3044",
        "\u304A\u304A\u3046",
        "\u304A\u304A\u3068\u3099\u304A\u308A",
        "\u304A\u304A\u3084",
        "\u304A\u304A\u3088\u305D",
        "\u304A\u304B\u3048\u308A",
        "\u304A\u304B\u3059\u3099",
        "\u304A\u304B\u3099\u3080",
        "\u304A\u304B\u308F\u308A",
        "\u304A\u304D\u3099\u306A\u3046",
        "\u304A\u304D\u308B",
        "\u304A\u304F\u3055\u307E",
        "\u304A\u304F\u3057\u3099\u3087\u3046",
        "\u304A\u304F\u308A\u304B\u3099\u306A",
        "\u304A\u304F\u308B",
        "\u304A\u304F\u308C\u308B",
        "\u304A\u3053\u3059",
        "\u304A\u3053\u306A\u3046",
        "\u304A\u3053\u308B",
        "\u304A\u3055\u3048\u308B",
        "\u304A\u3055\u306A\u3044",
        "\u304A\u3055\u3081\u308B",
        "\u304A\u3057\u3044\u308C",
        "\u304A\u3057\u3048\u308B",
        "\u304A\u3057\u3099\u304D\u3099",
        "\u304A\u3057\u3099\u3055\u3093",
        "\u304A\u3057\u3083\u308C",
        "\u304A\u305D\u3089\u304F",
        "\u304A\u305D\u308F\u308B",
        "\u304A\u305F\u304B\u3099\u3044",
        "\u304A\u305F\u304F",
        "\u304A\u305F\u3099\u3084\u304B",
        "\u304A\u3061\u3064\u304F",
        "\u304A\u3063\u3068",
        "\u304A\u3064\u308A",
        "\u304A\u3066\u3099\u304B\u3051",
        "\u304A\u3068\u3057\u3082\u306E",
        "\u304A\u3068\u306A\u3057\u3044",
        "\u304A\u3068\u3099\u308A",
        "\u304A\u3068\u3099\u308D\u304B\u3059",
        "\u304A\u306F\u3099\u3055\u3093",
        "\u304A\u307E\u3044\u308A",
        "\u304A\u3081\u3066\u3099\u3068\u3046",
        "\u304A\u3082\u3044\u3066\u3099",
        "\u304A\u3082\u3046",
        "\u304A\u3082\u305F\u3044",
        "\u304A\u3082\u3061\u3083",
        "\u304A\u3084\u3064",
        "\u304A\u3084\u3086\u3072\u3099",
        "\u304A\u3088\u307B\u3099\u3059",
        "\u304A\u3089\u3093\u305F\u3099",
        "\u304A\u308D\u3059",
        "\u304A\u3093\u304B\u3099\u304F",
        "\u304A\u3093\u3051\u3044",
        "\u304A\u3093\u3057\u3083",
        "\u304A\u3093\u305B\u3093",
        "\u304A\u3093\u305F\u3099\u3093",
        "\u304A\u3093\u3061\u3085\u3046",
        "\u304A\u3093\u3068\u3099\u3051\u3044",
        "\u304B\u3042\u3064",
        "\u304B\u3044\u304B\u3099",
        "\u304B\u3099\u3044\u304D",
        "\u304B\u3099\u3044\u3051\u3093",
        "\u304B\u3099\u3044\u3053\u3046",
        "\u304B\u3044\u3055\u3064",
        "\u304B\u3044\u3057\u3083",
        "\u304B\u3044\u3059\u3044\u3088\u304F",
        "\u304B\u3044\u305B\u3099\u3093",
        "\u304B\u3044\u305D\u3099\u3046\u3068\u3099",
        "\u304B\u3044\u3064\u3046",
        "\u304B\u3044\u3066\u3093",
        "\u304B\u3044\u3068\u3046",
        "\u304B\u3044\u3075\u304F",
        "\u304B\u3099\u3044\u3078\u304D",
        "\u304B\u3044\u307B\u3046",
        "\u304B\u3044\u3088\u3046",
        "\u304B\u3099\u3044\u3089\u3044",
        "\u304B\u3044\u308F",
        "\u304B\u3048\u308B",
        "\u304B\u304A\u308A",
        "\u304B\u304B\u3048\u308B",
        "\u304B\u304B\u3099\u304F",
        "\u304B\u304B\u3099\u3057",
        "\u304B\u304B\u3099\u307F",
        "\u304B\u304F\u3053\u3099",
        "\u304B\u304F\u3068\u304F",
        "\u304B\u3055\u3099\u308B",
        "\u304B\u3099\u305D\u3099\u3046",
        "\u304B\u305F\u3044",
        "\u304B\u305F\u3061",
        "\u304B\u3099\u3061\u3087\u3046",
        "\u304B\u3099\u3063\u304D\u3085\u3046",
        "\u304B\u3099\u3063\u3053\u3046",
        "\u304B\u3099\u3063\u3055\u3093",
        "\u304B\u3099\u3063\u3057\u3087\u3046",
        "\u304B\u306A\u3055\u3099\u308F\u3057",
        "\u304B\u306E\u3046",
        "\u304B\u3099\u306F\u304F",
        "\u304B\u3075\u3099\u304B",
        "\u304B\u307B\u3046",
        "\u304B\u307B\u3053\u3099",
        "\u304B\u307E\u3046",
        "\u304B\u307E\u307B\u3099\u3053",
        "\u304B\u3081\u308C\u304A\u3093",
        "\u304B\u3086\u3044",
        "\u304B\u3088\u3046\u3072\u3099",
        "\u304B\u3089\u3044",
        "\u304B\u308B\u3044",
        "\u304B\u308D\u3046",
        "\u304B\u308F\u304F",
        "\u304B\u308F\u3089",
        "\u304B\u3099\u3093\u304B",
        "\u304B\u3093\u3051\u3044",
        "\u304B\u3093\u3053\u3046",
        "\u304B\u3093\u3057\u3083",
        "\u304B\u3093\u305D\u3046",
        "\u304B\u3093\u305F\u3093",
        "\u304B\u3093\u3061",
        "\u304B\u3099\u3093\u306F\u3099\u308B",
        "\u304D\u3042\u3044",
        "\u304D\u3042\u3064",
        "\u304D\u3044\u308D",
        "\u304D\u3099\u3044\u3093",
        "\u304D\u3046\u3044",
        "\u304D\u3046\u3093",
        "\u304D\u3048\u308B",
        "\u304D\u304A\u3046",
        "\u304D\u304A\u304F",
        "\u304D\u304A\u3061",
        "\u304D\u304A\u3093",
        "\u304D\u304B\u3044",
        "\u304D\u304B\u304F",
        "\u304D\u304B\u3093\u3057\u3083",
        "\u304D\u304D\u3066",
        "\u304D\u304F\u306F\u3099\u308A",
        "\u304D\u304F\u3089\u3051\u3099",
        "\u304D\u3051\u3093\u305B\u3044",
        "\u304D\u3053\u3046",
        "\u304D\u3053\u3048\u308B",
        "\u304D\u3053\u304F",
        "\u304D\u3055\u3044",
        "\u304D\u3055\u304F",
        "\u304D\u3055\u307E",
        "\u304D\u3055\u3089\u304D\u3099",
        "\u304D\u3099\u3057\u3099\u304B\u304B\u3099\u304F",
        "\u304D\u3099\u3057\u304D",
        "\u304D\u3099\u3057\u3099\u305F\u3044\u3051\u3093",
        "\u304D\u3099\u3057\u3099\u306B\u3063\u3066\u3044",
        "\u304D\u3099\u3057\u3099\u3085\u3064\u3057\u3083",
        "\u304D\u3059\u3046",
        "\u304D\u305B\u3044",
        "\u304D\u305B\u304D",
        "\u304D\u305B\u3064",
        "\u304D\u305D\u3046",
        "\u304D\u305D\u3099\u304F",
        "\u304D\u305D\u3099\u3093",
        "\u304D\u305F\u3048\u308B",
        "\u304D\u3061\u3087\u3046",
        "\u304D\u3064\u3048\u3093",
        "\u304D\u3099\u3063\u3061\u308A",
        "\u304D\u3064\u3064\u304D",
        "\u304D\u3064\u306D",
        "\u304D\u3066\u3044",
        "\u304D\u3068\u3099\u3046",
        "\u304D\u3068\u3099\u304F",
        "\u304D\u306A\u3044",
        "\u304D\u306A\u304B\u3099",
        "\u304D\u306A\u3053",
        "\u304D\u306C\u3053\u3099\u3057",
        "\u304D\u306D\u3093",
        "\u304D\u306E\u3046",
        "\u304D\u306E\u3057\u305F",
        "\u304D\u306F\u304F",
        "\u304D\u3072\u3099\u3057\u3044",
        "\u304D\u3072\u3093",
        "\u304D\u3075\u304F",
        "\u304D\u3075\u3099\u3093",
        "\u304D\u307B\u3099\u3046",
        "\u304D\u307B\u3093",
        "\u304D\u307E\u308B",
        "\u304D\u307F\u3064",
        "\u304D\u3080\u3059\u3099\u304B\u3057\u3044",
        "\u304D\u3081\u308B",
        "\u304D\u3082\u305F\u3099\u3081\u3057",
        "\u304D\u3082\u3061",
        "\u304D\u3082\u306E",
        "\u304D\u3083\u304F",
        "\u304D\u3084\u304F",
        "\u304D\u3099\u3085\u3046\u306B\u304F",
        "\u304D\u3088\u3046",
        "\u304D\u3087\u3046\u308A\u3085\u3046",
        "\u304D\u3089\u3044",
        "\u304D\u3089\u304F",
        "\u304D\u308A\u3093",
        "\u304D\u308C\u3044",
        "\u304D\u308C\u3064",
        "\u304D\u308D\u304F",
        "\u304D\u3099\u308D\u3093",
        "\u304D\u308F\u3081\u308B",
        "\u304D\u3099\u3093\u3044\u308D",
        "\u304D\u3093\u304B\u304F\u3057\u3099",
        "\u304D\u3093\u3057\u3099\u3087",
        "\u304D\u3093\u3088\u3046\u3072\u3099",
        "\u304F\u3099\u3042\u3044",
        "\u304F\u3044\u3059\u3099",
        "\u304F\u3046\u304B\u3093",
        "\u304F\u3046\u304D",
        "\u304F\u3046\u304F\u3099\u3093",
        "\u304F\u3046\u3053\u3046",
        "\u304F\u3099\u3046\u305B\u3044",
        "\u304F\u3046\u305D\u3046",
        "\u304F\u3099\u3046\u305F\u3089",
        "\u304F\u3046\u3075\u304F",
        "\u304F\u3046\u307B\u3099",
        "\u304F\u304B\u3093",
        "\u304F\u304D\u3087\u3046",
        "\u304F\u3051\u3099\u3093",
        "\u304F\u3099\u3053\u3046",
        "\u304F\u3055\u3044",
        "\u304F\u3055\u304D",
        "\u304F\u3055\u306F\u3099\u306A",
        "\u304F\u3055\u308B",
        "\u304F\u3057\u3083\u307F",
        "\u304F\u3057\u3087\u3046",
        "\u304F\u3059\u306E\u304D",
        "\u304F\u3059\u308A\u3086\u3072\u3099",
        "\u304F\u305B\u3051\u3099",
        "\u304F\u305B\u3093",
        "\u304F\u3099\u305F\u3044\u3066\u304D",
        "\u304F\u305F\u3099\u3055\u308B",
        "\u304F\u305F\u3072\u3099\u308C\u308B",
        "\u304F\u3061\u3053\u307F",
        "\u304F\u3061\u3055\u304D",
        "\u304F\u3064\u3057\u305F",
        "\u304F\u3099\u3063\u3059\u308A",
        "\u304F\u3064\u308D\u304F\u3099",
        "\u304F\u3068\u3046\u3066\u3093",
        "\u304F\u3068\u3099\u304F",
        "\u304F\u306A\u3093",
        "\u304F\u306D\u304F\u306D",
        "\u304F\u306E\u3046",
        "\u304F\u3075\u3046",
        "\u304F\u307F\u3042\u308F\u305B",
        "\u304F\u307F\u305F\u3066\u308B",
        "\u304F\u3081\u308B",
        "\u304F\u3084\u304F\u3057\u3087",
        "\u304F\u3089\u3059",
        "\u304F\u3089\u3078\u3099\u308B",
        "\u304F\u308B\u307E",
        "\u304F\u308C\u308B",
        "\u304F\u308D\u3046",
        "\u304F\u308F\u3057\u3044",
        "\u304F\u3099\u3093\u304B\u3093",
        "\u304F\u3099\u3093\u3057\u3087\u304F",
        "\u304F\u3099\u3093\u305F\u3044",
        "\u304F\u3099\u3093\u3066",
        "\u3051\u3042\u306A",
        "\u3051\u3044\u304B\u304F",
        "\u3051\u3044\u3051\u3093",
        "\u3051\u3044\u3053",
        "\u3051\u3044\u3055\u3064",
        "\u3051\u3099\u3044\u3057\u3099\u3085\u3064",
        "\u3051\u3044\u305F\u3044",
        "\u3051\u3099\u3044\u306E\u3046\u3057\u3099\u3093",
        "\u3051\u3044\u308C\u304D",
        "\u3051\u3044\u308D",
        "\u3051\u304A\u3068\u3059",
        "\u3051\u304A\u308A\u3082\u306E",
        "\u3051\u3099\u304D\u304B",
        "\u3051\u3099\u304D\u3051\u3099\u3093",
        "\u3051\u3099\u304D\u305F\u3099\u3093",
        "\u3051\u3099\u304D\u3061\u3093",
        "\u3051\u3099\u304D\u3068\u3064",
        "\u3051\u3099\u304D\u306F",
        "\u3051\u3099\u304D\u3084\u304F",
        "\u3051\u3099\u3053\u3046",
        "\u3051\u3099\u3053\u304F\u3057\u3099\u3087\u3046",
        "\u3051\u3099\u3055\u3099\u3044",
        "\u3051\u3055\u304D",
        "\u3051\u3099\u3055\u3099\u3093",
        "\u3051\u3057\u304D",
        "\u3051\u3057\u3053\u3099\u3080",
        "\u3051\u3057\u3087\u3046",
        "\u3051\u3099\u3059\u3068",
        "\u3051\u305F\u306F\u3099",
        "\u3051\u3061\u3083\u3063\u3075\u309A",
        "\u3051\u3061\u3089\u3059",
        "\u3051\u3064\u3042\u3064",
        "\u3051\u3064\u3044",
        "\u3051\u3064\u3048\u304D",
        "\u3051\u3063\u3053\u3093",
        "\u3051\u3064\u3057\u3099\u3087",
        "\u3051\u3063\u305B\u304D",
        "\u3051\u3063\u3066\u3044",
        "\u3051\u3064\u307E\u3064",
        "\u3051\u3099\u3064\u3088\u3046\u3072\u3099",
        "\u3051\u3099\u3064\u308C\u3044",
        "\u3051\u3064\u308D\u3093",
        "\u3051\u3099\u3068\u3099\u304F",
        "\u3051\u3068\u306F\u3099\u3059",
        "\u3051\u3068\u308B",
        "\u3051\u306A\u3051\u3099",
        "\u3051\u306A\u3059",
        "\u3051\u306A\u307F",
        "\u3051\u306C\u304D",
        "\u3051\u3099\u306D\u3064",
        "\u3051\u306D\u3093",
        "\u3051\u306F\u3044",
        "\u3051\u3099\u3072\u3093",
        "\u3051\u3075\u3099\u304B\u3044",
        "\u3051\u3099\u307B\u3099\u304F",
        "\u3051\u307E\u308A",
        "\u3051\u307F\u304B\u308B",
        "\u3051\u3080\u3057",
        "\u3051\u3080\u308A",
        "\u3051\u3082\u306E",
        "\u3051\u3089\u3044",
        "\u3051\u308D\u3051\u308D",
        "\u3051\u308F\u3057\u3044",
        "\u3051\u3093\u3044",
        "\u3051\u3093\u3048\u3064",
        "\u3051\u3093\u304A",
        "\u3051\u3093\u304B",
        "\u3051\u3099\u3093\u304D",
        "\u3051\u3093\u3051\u3099\u3093",
        "\u3051\u3093\u3053\u3046",
        "\u3051\u3093\u3055\u304F",
        "\u3051\u3093\u3057\u3085\u3046",
        "\u3051\u3093\u3059\u3046",
        "\u3051\u3099\u3093\u305D\u3046",
        "\u3051\u3093\u3061\u304F",
        "\u3051\u3093\u3066\u3044",
        "\u3051\u3093\u3068\u3046",
        "\u3051\u3093\u306A\u3044",
        "\u3051\u3093\u306B\u3093",
        "\u3051\u3099\u3093\u3075\u3099\u3064",
        "\u3051\u3093\u307E",
        "\u3051\u3093\u307F\u3093",
        "\u3051\u3093\u3081\u3044",
        "\u3051\u3093\u3089\u3093",
        "\u3051\u3093\u308A",
        "\u3053\u3042\u304F\u307E",
        "\u3053\u3044\u306C",
        "\u3053\u3044\u3072\u3099\u3068",
        "\u3053\u3099\u3046\u3044",
        "\u3053\u3046\u3048\u3093",
        "\u3053\u3046\u304A\u3093",
        "\u3053\u3046\u304B\u3093",
        "\u3053\u3099\u3046\u304D\u3085\u3046",
        "\u3053\u3099\u3046\u3051\u3044",
        "\u3053\u3046\u3053\u3046",
        "\u3053\u3046\u3055\u3044",
        "\u3053\u3046\u3057\u3099",
        "\u3053\u3046\u3059\u3044",
        "\u3053\u3099\u3046\u305B\u3044",
        "\u3053\u3046\u305D\u304F",
        "\u3053\u3046\u305F\u3044",
        "\u3053\u3046\u3061\u3083",
        "\u3053\u3046\u3064\u3046",
        "\u3053\u3046\u3066\u3044",
        "\u3053\u3046\u3068\u3099\u3046",
        "\u3053\u3046\u306A\u3044",
        "\u3053\u3046\u306F\u3044",
        "\u3053\u3099\u3046\u307B\u3046",
        "\u3053\u3099\u3046\u307E\u3093",
        "\u3053\u3046\u3082\u304F",
        "\u3053\u3046\u308A\u3064",
        "\u3053\u3048\u308B",
        "\u3053\u304A\u308A",
        "\u3053\u3099\u304B\u3044",
        "\u3053\u3099\u304B\u3099\u3064",
        "\u3053\u3099\u304B\u3093",
        "\u3053\u304F\u3053\u3099",
        "\u3053\u304F\u3055\u3044",
        "\u3053\u304F\u3068\u3046",
        "\u3053\u304F\u306A\u3044",
        "\u3053\u304F\u306F\u304F",
        "\u3053\u304F\u3099\u307E",
        "\u3053\u3051\u3044",
        "\u3053\u3051\u308B",
        "\u3053\u3053\u306E\u304B",
        "\u3053\u3053\u308D",
        "\u3053\u3055\u3081",
        "\u3053\u3057\u3064",
        "\u3053\u3059\u3046",
        "\u3053\u305B\u3044",
        "\u3053\u305B\u304D",
        "\u3053\u305B\u3099\u3093",
        "\u3053\u305D\u305F\u3099\u3066",
        "\u3053\u305F\u3044",
        "\u3053\u305F\u3048\u308B",
        "\u3053\u305F\u3064",
        "\u3053\u3061\u3087\u3046",
        "\u3053\u3063\u304B",
        "\u3053\u3064\u3053\u3064",
        "\u3053\u3064\u306F\u3099\u3093",
        "\u3053\u3064\u3075\u3099",
        "\u3053\u3066\u3044",
        "\u3053\u3066\u3093",
        "\u3053\u3068\u304B\u3099\u3089",
        "\u3053\u3068\u3057",
        "\u3053\u3068\u306F\u3099",
        "\u3053\u3068\u308A",
        "\u3053\u306A\u3053\u3099\u306A",
        "\u3053\u306D\u3053\u306D",
        "\u3053\u306E\u307E\u307E",
        "\u3053\u306E\u307F",
        "\u3053\u306E\u3088",
        "\u3053\u3099\u306F\u3093",
        "\u3053\u3072\u3064\u3057\u3099",
        "\u3053\u3075\u3046",
        "\u3053\u3075\u3093",
        "\u3053\u307B\u3099\u308C\u308B",
        "\u3053\u3099\u307E\u3042\u3075\u3099\u3089",
        "\u3053\u307E\u304B\u3044",
        "\u3053\u3099\u307E\u3059\u308A",
        "\u3053\u307E\u3064\u306A",
        "\u3053\u307E\u308B",
        "\u3053\u3080\u304D\u3099\u3053",
        "\u3053\u3082\u3057\u3099",
        "\u3053\u3082\u3061",
        "\u3053\u3082\u306E",
        "\u3053\u3082\u3093",
        "\u3053\u3084\u304F",
        "\u3053\u3084\u307E",
        "\u3053\u3086\u3046",
        "\u3053\u3086\u3072\u3099",
        "\u3053\u3088\u3044",
        "\u3053\u3088\u3046",
        "\u3053\u308A\u308B",
        "\u3053\u308C\u304F\u3057\u3087\u3093",
        "\u3053\u308D\u3063\u3051",
        "\u3053\u308F\u3082\u3066",
        "\u3053\u308F\u308C\u308B",
        "\u3053\u3093\u3044\u3093",
        "\u3053\u3093\u304B\u3044",
        "\u3053\u3093\u304D",
        "\u3053\u3093\u3057\u3085\u3046",
        "\u3053\u3093\u3059\u3044",
        "\u3053\u3093\u305F\u3099\u3066",
        "\u3053\u3093\u3068\u3093",
        "\u3053\u3093\u306A\u3093",
        "\u3053\u3093\u3072\u3099\u306B",
        "\u3053\u3093\u307B\u309A\u3093",
        "\u3053\u3093\u307E\u3051",
        "\u3053\u3093\u3084",
        "\u3053\u3093\u308C\u3044",
        "\u3053\u3093\u308F\u304F",
        "\u3055\u3099\u3044\u3048\u304D",
        "\u3055\u3044\u304B\u3044",
        "\u3055\u3044\u304D\u3093",
        "\u3055\u3099\u3044\u3051\u3099\u3093",
        "\u3055\u3099\u3044\u3053",
        "\u3055\u3044\u3057\u3087",
        "\u3055\u3044\u305B\u3044",
        "\u3055\u3099\u3044\u305F\u304F",
        "\u3055\u3099\u3044\u3061\u3085\u3046",
        "\u3055\u3044\u3066\u304D",
        "\u3055\u3099\u3044\u308A\u3087\u3046",
        "\u3055\u3046\u306A",
        "\u3055\u304B\u3044\u3057",
        "\u3055\u304B\u3099\u3059",
        "\u3055\u304B\u306A",
        "\u3055\u304B\u307F\u3061",
        "\u3055\u304B\u3099\u308B",
        "\u3055\u304D\u3099\u3087\u3046",
        "\u3055\u304F\u3057",
        "\u3055\u304F\u3072\u3093",
        "\u3055\u304F\u3089",
        "\u3055\u3053\u304F",
        "\u3055\u3053\u3064",
        "\u3055\u3059\u3099\u304B\u308B",
        "\u3055\u3099\u305B\u304D",
        "\u3055\u305F\u3093",
        "\u3055\u3064\u3048\u3044",
        "\u3055\u3099\u3064\u304A\u3093",
        "\u3055\u3099\u3063\u304B",
        "\u3055\u3099\u3064\u304B\u3099\u304F",
        "\u3055\u3063\u304D\u3087\u304F",
        "\u3055\u3099\u3063\u3057",
        "\u3055\u3064\u3057\u3099\u3093",
        "\u3055\u3099\u3063\u305D\u3046",
        "\u3055\u3064\u305F\u306F\u3099",
        "\u3055\u3064\u307E\u3044\u3082",
        "\u3055\u3066\u3044",
        "\u3055\u3068\u3044\u3082",
        "\u3055\u3068\u3046",
        "\u3055\u3068\u304A\u3084",
        "\u3055\u3068\u3057",
        "\u3055\u3068\u308B",
        "\u3055\u306E\u3046",
        "\u3055\u306F\u3099\u304F",
        "\u3055\u3072\u3099\u3057\u3044",
        "\u3055\u3078\u3099\u3064",
        "\u3055\u307B\u3046",
        "\u3055\u307B\u3068\u3099",
        "\u3055\u307E\u3059",
        "\u3055\u307F\u3057\u3044",
        "\u3055\u307F\u305F\u3099\u308C",
        "\u3055\u3080\u3051",
        "\u3055\u3081\u308B",
        "\u3055\u3084\u3048\u3093\u3068\u3099\u3046",
        "\u3055\u3086\u3046",
        "\u3055\u3088\u3046",
        "\u3055\u3088\u304F",
        "\u3055\u3089\u305F\u3099",
        "\u3055\u3099\u308B\u305D\u306F\u3099",
        "\u3055\u308F\u3084\u304B",
        "\u3055\u308F\u308B",
        "\u3055\u3093\u3044\u3093",
        "\u3055\u3093\u304B",
        "\u3055\u3093\u304D\u3083\u304F",
        "\u3055\u3093\u3053\u3046",
        "\u3055\u3093\u3055\u3044",
        "\u3055\u3099\u3093\u3057\u3087",
        "\u3055\u3093\u3059\u3046",
        "\u3055\u3093\u305B\u3044",
        "\u3055\u3093\u305D",
        "\u3055\u3093\u3061",
        "\u3055\u3093\u307E",
        "\u3055\u3093\u307F",
        "\u3055\u3093\u3089\u3093",
        "\u3057\u3042\u3044",
        "\u3057\u3042\u3051\u3099",
        "\u3057\u3042\u3055\u3063\u3066",
        "\u3057\u3042\u308F\u305B",
        "\u3057\u3044\u304F",
        "\u3057\u3044\u3093",
        "\u3057\u3046\u3061",
        "\u3057\u3048\u3044",
        "\u3057\u304A\u3051",
        "\u3057\u304B\u3044",
        "\u3057\u304B\u304F",
        "\u3057\u3099\u304B\u3093",
        "\u3057\u3053\u3099\u3068",
        "\u3057\u3059\u3046",
        "\u3057\u3099\u305F\u3099\u3044",
        "\u3057\u305F\u3046\u3051",
        "\u3057\u305F\u304D\u3099",
        "\u3057\u305F\u3066",
        "\u3057\u305F\u307F",
        "\u3057\u3061\u3087\u3046",
        "\u3057\u3061\u308A\u3093",
        "\u3057\u3063\u304B\u308A",
        "\u3057\u3064\u3057\u3099",
        "\u3057\u3064\u3082\u3093",
        "\u3057\u3066\u3044",
        "\u3057\u3066\u304D",
        "\u3057\u3066\u3064",
        "\u3057\u3099\u3066\u3093",
        "\u3057\u3099\u3068\u3099\u3046",
        "\u3057\u306A\u304D\u3099\u308C",
        "\u3057\u306A\u3082\u306E",
        "\u3057\u306A\u3093",
        "\u3057\u306D\u307E",
        "\u3057\u306D\u3093",
        "\u3057\u306E\u304F\u3099",
        "\u3057\u306E\u3075\u3099",
        "\u3057\u306F\u3044",
        "\u3057\u306F\u3099\u304B\u308A",
        "\u3057\u306F\u3064",
        "\u3057\u306F\u3089\u3044",
        "\u3057\u306F\u3093",
        "\u3057\u3072\u3087\u3046",
        "\u3057\u3075\u304F",
        "\u3057\u3099\u3075\u3099\u3093",
        "\u3057\u3078\u3044",
        "\u3057\u307B\u3046",
        "\u3057\u307B\u3093",
        "\u3057\u307E\u3046",
        "\u3057\u307E\u308B",
        "\u3057\u307F\u3093",
        "\u3057\u3080\u3051\u308B",
        "\u3057\u3099\u3080\u3057\u3087",
        "\u3057\u3081\u3044",
        "\u3057\u3081\u308B",
        "\u3057\u3082\u3093",
        "\u3057\u3083\u3044\u3093",
        "\u3057\u3083\u3046\u3093",
        "\u3057\u3083\u304A\u3093",
        "\u3057\u3099\u3083\u304B\u3099\u3044\u3082",
        "\u3057\u3084\u304F\u3057\u3087",
        "\u3057\u3083\u304F\u307B\u3046",
        "\u3057\u3083\u3051\u3093",
        "\u3057\u3083\u3053",
        "\u3057\u3083\u3055\u3099\u3044",
        "\u3057\u3083\u3057\u3093",
        "\u3057\u3083\u305B\u3093",
        "\u3057\u3083\u305D\u3046",
        "\u3057\u3083\u305F\u3044",
        "\u3057\u3083\u3061\u3087\u3046",
        "\u3057\u3083\u3063\u304D\u3093",
        "\u3057\u3099\u3083\u307E",
        "\u3057\u3083\u308A\u3093",
        "\u3057\u3083\u308C\u3044",
        "\u3057\u3099\u3086\u3046",
        "\u3057\u3099\u3085\u3046\u3057\u3087",
        "\u3057\u3085\u304F\u306F\u304F",
        "\u3057\u3099\u3085\u3057\u3093",
        "\u3057\u3085\u3063\u305B\u304D",
        "\u3057\u3085\u307F",
        "\u3057\u3085\u3089\u306F\u3099",
        "\u3057\u3099\u3085\u3093\u306F\u3099\u3093",
        "\u3057\u3087\u3046\u304B\u3044",
        "\u3057\u3087\u304F\u305F\u304F",
        "\u3057\u3087\u3063\u3051\u3093",
        "\u3057\u3087\u3068\u3099\u3046",
        "\u3057\u3087\u3082\u3064",
        "\u3057\u3089\u305B\u308B",
        "\u3057\u3089\u3078\u3099\u308B",
        "\u3057\u3093\u304B",
        "\u3057\u3093\u3053\u3046",
        "\u3057\u3099\u3093\u3057\u3099\u3083",
        "\u3057\u3093\u305B\u3044\u3057\u3099",
        "\u3057\u3093\u3061\u304F",
        "\u3057\u3093\u308A\u3093",
        "\u3059\u3042\u3051\u3099",
        "\u3059\u3042\u3057",
        "\u3059\u3042\u306A",
        "\u3059\u3099\u3042\u3093",
        "\u3059\u3044\u3048\u3044",
        "\u3059\u3044\u304B",
        "\u3059\u3044\u3068\u3046",
        "\u3059\u3099\u3044\u3075\u3099\u3093",
        "\u3059\u3044\u3088\u3046\u3072\u3099",
        "\u3059\u3046\u304B\u3099\u304F",
        "\u3059\u3046\u3057\u3099\u3064",
        "\u3059\u3046\u305B\u3093",
        "\u3059\u304A\u3068\u3099\u308A",
        "\u3059\u304D\u307E",
        "\u3059\u304F\u3046",
        "\u3059\u304F\u306A\u3044",
        "\u3059\u3051\u308B",
        "\u3059\u3053\u3099\u3044",
        "\u3059\u3053\u3057",
        "\u3059\u3099\u3055\u3093",
        "\u3059\u3059\u3099\u3057\u3044",
        "\u3059\u3059\u3080",
        "\u3059\u3059\u3081\u308B",
        "\u3059\u3063\u304B\u308A",
        "\u3059\u3099\u3063\u3057\u308A",
        "\u3059\u3099\u3063\u3068",
        "\u3059\u3066\u304D",
        "\u3059\u3066\u308B",
        "\u3059\u306D\u308B",
        "\u3059\u306E\u3053",
        "\u3059\u306F\u305F\u3099",
        "\u3059\u306F\u3099\u3089\u3057\u3044",
        "\u3059\u3099\u3072\u3087\u3046",
        "\u3059\u3099\u3075\u3099\u306C\u308C",
        "\u3059\u3075\u3099\u308A",
        "\u3059\u3075\u308C",
        "\u3059\u3078\u3099\u3066",
        "\u3059\u3078\u3099\u308B",
        "\u3059\u3099\u307B\u3046",
        "\u3059\u307B\u3099\u3093",
        "\u3059\u307E\u3044",
        "\u3059\u3081\u3057",
        "\u3059\u3082\u3046",
        "\u3059\u3084\u304D",
        "\u3059\u3089\u3059\u3089",
        "\u3059\u308B\u3081",
        "\u3059\u308C\u3061\u304B\u3099\u3046",
        "\u3059\u308D\u3063\u3068",
        "\u3059\u308F\u308B",
        "\u3059\u3093\u305B\u3099\u3093",
        "\u3059\u3093\u307B\u309A\u3046",
        "\u305B\u3042\u3075\u3099\u3089",
        "\u305B\u3044\u304B\u3064",
        "\u305B\u3044\u3051\u3099\u3093",
        "\u305B\u3044\u3057\u3099",
        "\u305B\u3044\u3088\u3046",
        "\u305B\u304A\u3046",
        "\u305B\u304B\u3044\u304B\u3093",
        "\u305B\u304D\u306B\u3093",
        "\u305B\u304D\u3080",
        "\u305B\u304D\u3086",
        "\u305B\u304D\u3089\u3093\u3046\u3093",
        "\u305B\u3051\u3093",
        "\u305B\u3053\u3046",
        "\u305B\u3059\u3057\u3099",
        "\u305B\u305F\u3044",
        "\u305B\u305F\u3051",
        "\u305B\u3063\u304B\u304F",
        "\u305B\u3063\u304D\u3083\u304F",
        "\u305B\u3099\u3063\u304F",
        "\u305B\u3063\u3051\u3093",
        "\u305B\u3063\u3053\u3064",
        "\u305B\u3063\u3055\u305F\u304F\u307E",
        "\u305B\u3064\u305D\u3099\u304F",
        "\u305B\u3064\u305F\u3099\u3093",
        "\u305B\u3064\u3066\u3099\u3093",
        "\u305B\u3063\u306F\u309A\u3093",
        "\u305B\u3064\u3072\u3099",
        "\u305B\u3064\u3075\u3099\u3093",
        "\u305B\u3064\u3081\u3044",
        "\u305B\u3064\u308A\u3064",
        "\u305B\u306A\u304B",
        "\u305B\u306E\u3072\u3099",
        "\u305B\u306F\u306F\u3099",
        "\u305B\u3072\u3099\u308D",
        "\u305B\u307B\u3099\u306D",
        "\u305B\u307E\u3044",
        "\u305B\u307E\u308B",
        "\u305B\u3081\u308B",
        "\u305B\u3082\u305F\u308C",
        "\u305B\u308A\u3075",
        "\u305B\u3099\u3093\u3042\u304F",
        "\u305B\u3093\u3044",
        "\u305B\u3093\u3048\u3044",
        "\u305B\u3093\u304B",
        "\u305B\u3093\u304D\u3087",
        "\u305B\u3093\u304F",
        "\u305B\u3093\u3051\u3099\u3093",
        "\u305B\u3099\u3093\u3053\u3099",
        "\u305B\u3093\u3055\u3044",
        "\u305B\u3093\u3057\u3085",
        "\u305B\u3093\u3059\u3044",
        "\u305B\u3093\u305B\u3044",
        "\u305B\u3093\u305D\u3099",
        "\u305B\u3093\u305F\u304F",
        "\u305B\u3093\u3061\u3087\u3046",
        "\u305B\u3093\u3066\u3044",
        "\u305B\u3093\u3068\u3046",
        "\u305B\u3093\u306C\u304D",
        "\u305B\u3093\u306D\u3093",
        "\u305B\u3093\u306F\u309A\u3044",
        "\u305B\u3099\u3093\u3075\u3099",
        "\u305B\u3099\u3093\u307B\u309A\u3046",
        "\u305B\u3093\u3080",
        "\u305B\u3093\u3081\u3093\u3057\u3099\u3087",
        "\u305B\u3093\u3082\u3093",
        "\u305B\u3093\u3084\u304F",
        "\u305B\u3093\u3086\u3046",
        "\u305B\u3093\u3088\u3046",
        "\u305B\u3099\u3093\u3089",
        "\u305B\u3099\u3093\u308A\u3083\u304F",
        "\u305B\u3093\u308C\u3044",
        "\u305B\u3093\u308D",
        "\u305D\u3042\u304F",
        "\u305D\u3044\u3068\u3051\u3099\u308B",
        "\u305D\u3044\u306D",
        "\u305D\u3046\u304B\u3099\u3093\u304D\u3087\u3046",
        "\u305D\u3046\u304D",
        "\u305D\u3046\u3053\u3099",
        "\u305D\u3046\u3057\u3093",
        "\u305D\u3046\u305F\u3099\u3093",
        "\u305D\u3046\u306A\u3093",
        "\u305D\u3046\u3072\u3099",
        "\u305D\u3046\u3081\u3093",
        "\u305D\u3046\u308A",
        "\u305D\u3048\u3082\u306E",
        "\u305D\u3048\u3093",
        "\u305D\u304B\u3099\u3044",
        "\u305D\u3051\u3099\u304D",
        "\u305D\u3053\u3046",
        "\u305D\u3053\u305D\u3053",
        "\u305D\u3055\u3099\u3044",
        "\u305D\u3057\u306A",
        "\u305D\u305B\u3044",
        "\u305D\u305B\u3093",
        "\u305D\u305D\u304F\u3099",
        "\u305D\u305F\u3099\u3066\u308B",
        "\u305D\u3064\u3046",
        "\u305D\u3064\u3048\u3093",
        "\u305D\u3063\u304B\u3093",
        "\u305D\u3064\u304D\u3099\u3087\u3046",
        "\u305D\u3063\u3051\u3064",
        "\u305D\u3063\u3053\u3046",
        "\u305D\u3063\u305B\u3093",
        "\u305D\u3063\u3068",
        "\u305D\u3068\u304B\u3099\u308F",
        "\u305D\u3068\u3064\u3099\u3089",
        "\u305D\u306A\u3048\u308B",
        "\u305D\u306A\u305F",
        "\u305D\u3075\u307B\u3099",
        "\u305D\u307B\u3099\u304F",
        "\u305D\u307B\u3099\u308D",
        "\u305D\u307E\u3064",
        "\u305D\u307E\u308B",
        "\u305D\u3080\u304F",
        "\u305D\u3080\u308A\u3048",
        "\u305D\u3081\u308B",
        "\u305D\u3082\u305D\u3082",
        "\u305D\u3088\u304B\u305B\u3099",
        "\u305D\u3089\u307E\u3081",
        "\u305D\u308D\u3046",
        "\u305D\u3093\u304B\u3044",
        "\u305D\u3093\u3051\u3044",
        "\u305D\u3093\u3055\u3099\u3044",
        "\u305D\u3093\u3057\u3064",
        "\u305D\u3093\u305D\u3099\u304F",
        "\u305D\u3093\u3061\u3087\u3046",
        "\u305D\u3099\u3093\u3072\u3099",
        "\u305D\u3099\u3093\u3075\u3099\u3093",
        "\u305D\u3093\u307F\u3093",
        "\u305F\u3042\u3044",
        "\u305F\u3044\u3044\u3093",
        "\u305F\u3044\u3046\u3093",
        "\u305F\u3044\u3048\u304D",
        "\u305F\u3044\u304A\u3046",
        "\u305F\u3099\u3044\u304B\u3099\u304F",
        "\u305F\u3044\u304D",
        "\u305F\u3044\u304F\u3099\u3046",
        "\u305F\u3044\u3051\u3093",
        "\u305F\u3044\u3053",
        "\u305F\u3044\u3055\u3099\u3044",
        "\u305F\u3099\u3044\u3057\u3099\u3087\u3046\u3075\u3099",
        "\u305F\u3099\u3044\u3059\u304D",
        "\u305F\u3044\u305B\u3064",
        "\u305F\u3044\u305D\u3046",
        "\u305F\u3099\u3044\u305F\u3044",
        "\u305F\u3044\u3061\u3087\u3046",
        "\u305F\u3044\u3066\u3044",
        "\u305F\u3099\u3044\u3068\u3099\u3053\u308D",
        "\u305F\u3044\u306A\u3044",
        "\u305F\u3044\u306D\u3064",
        "\u305F\u3044\u306E\u3046",
        "\u305F\u3044\u306F\u3093",
        "\u305F\u3099\u3044\u3072\u3087\u3046",
        "\u305F\u3044\u3075\u3046",
        "\u305F\u3044\u3078\u3093",
        "\u305F\u3044\u307B",
        "\u305F\u3044\u307E\u3064\u306F\u3099\u306A",
        "\u305F\u3044\u307F\u3093\u304F\u3099",
        "\u305F\u3044\u3080",
        "\u305F\u3044\u3081\u3093",
        "\u305F\u3044\u3084\u304D",
        "\u305F\u3044\u3088\u3046",
        "\u305F\u3044\u3089",
        "\u305F\u3044\u308A\u3087\u304F",
        "\u305F\u3044\u308B",
        "\u305F\u3044\u308F\u3093",
        "\u305F\u3046\u3048",
        "\u305F\u3048\u308B",
        "\u305F\u304A\u3059",
        "\u305F\u304A\u308B",
        "\u305F\u304A\u308C\u308B",
        "\u305F\u304B\u3044",
        "\u305F\u304B\u306D",
        "\u305F\u304D\u3072\u3099",
        "\u305F\u304F\u3055\u3093",
        "\u305F\u3053\u304F",
        "\u305F\u3053\u3084\u304D",
        "\u305F\u3055\u3044",
        "\u305F\u3057\u3055\u3099\u3093",
        "\u305F\u3099\u3057\u3099\u3083\u308C",
        "\u305F\u3059\u3051\u308B",
        "\u305F\u3059\u3099\u3055\u308F\u308B",
        "\u305F\u305D\u304B\u3099\u308C",
        "\u305F\u305F\u304B\u3046",
        "\u305F\u305F\u304F",
        "\u305F\u305F\u3099\u3057\u3044",
        "\u305F\u305F\u307F",
        "\u305F\u3061\u306F\u3099\u306A",
        "\u305F\u3099\u3063\u304B\u3044",
        "\u305F\u3099\u3063\u304D\u3083\u304F",
        "\u305F\u3099\u3063\u3053",
        "\u305F\u3099\u3063\u3057\u3085\u3064",
        "\u305F\u3099\u3063\u305F\u3044",
        "\u305F\u3066\u308B",
        "\u305F\u3068\u3048\u308B",
        "\u305F\u306A\u306F\u3099\u305F",
        "\u305F\u306B\u3093",
        "\u305F\u306C\u304D",
        "\u305F\u306E\u3057\u307F",
        "\u305F\u306F\u3064",
        "\u305F\u3075\u3099\u3093",
        "\u305F\u3078\u3099\u308B",
        "\u305F\u307B\u3099\u3046",
        "\u305F\u307E\u3053\u3099",
        "\u305F\u307E\u308B",
        "\u305F\u3099\u3080\u308B",
        "\u305F\u3081\u3044\u304D",
        "\u305F\u3081\u3059",
        "\u305F\u3081\u308B",
        "\u305F\u3082\u3064",
        "\u305F\u3084\u3059\u3044",
        "\u305F\u3088\u308B",
        "\u305F\u3089\u3059",
        "\u305F\u308A\u304D\u307B\u3093\u304B\u3099\u3093",
        "\u305F\u308A\u3087\u3046",
        "\u305F\u308A\u308B",
        "\u305F\u308B\u3068",
        "\u305F\u308C\u308B",
        "\u305F\u308C\u3093\u3068",
        "\u305F\u308D\u3063\u3068",
        "\u305F\u308F\u3080\u308C\u308B",
        "\u305F\u3099\u3093\u3042\u3064",
        "\u305F\u3093\u3044",
        "\u305F\u3093\u304A\u3093",
        "\u305F\u3093\u304B",
        "\u305F\u3093\u304D",
        "\u305F\u3093\u3051\u3093",
        "\u305F\u3093\u3053\u3099",
        "\u305F\u3093\u3055\u3093",
        "\u305F\u3093\u3057\u3099\u3087\u3046\u3072\u3099",
        "\u305F\u3099\u3093\u305B\u3044",
        "\u305F\u3093\u305D\u304F",
        "\u305F\u3093\u305F\u3044",
        "\u305F\u3099\u3093\u3061",
        "\u305F\u3093\u3066\u3044",
        "\u305F\u3093\u3068\u3046",
        "\u305F\u3099\u3093\u306A",
        "\u305F\u3093\u306B\u3093",
        "\u305F\u3099\u3093\u306D\u3064",
        "\u305F\u3093\u306E\u3046",
        "\u305F\u3093\u3072\u309A\u3093",
        "\u305F\u3099\u3093\u307B\u3099\u3046",
        "\u305F\u3093\u307E\u3064",
        "\u305F\u3093\u3081\u3044",
        "\u305F\u3099\u3093\u308C\u3064",
        "\u305F\u3099\u3093\u308D",
        "\u305F\u3099\u3093\u308F",
        "\u3061\u3042\u3044",
        "\u3061\u3042\u3093",
        "\u3061\u3044\u304D",
        "\u3061\u3044\u3055\u3044",
        "\u3061\u3048\u3093",
        "\u3061\u304B\u3044",
        "\u3061\u304B\u3089",
        "\u3061\u304D\u3085\u3046",
        "\u3061\u304D\u3093",
        "\u3061\u3051\u3044\u3059\u3099",
        "\u3061\u3051\u3093",
        "\u3061\u3053\u304F",
        "\u3061\u3055\u3044",
        "\u3061\u3057\u304D",
        "\u3061\u3057\u308A\u3087\u3046",
        "\u3061\u305B\u3044",
        "\u3061\u305D\u3046",
        "\u3061\u305F\u3044",
        "\u3061\u305F\u3093",
        "\u3061\u3061\u304A\u3084",
        "\u3061\u3064\u3057\u3099\u3087",
        "\u3061\u3066\u304D",
        "\u3061\u3066\u3093",
        "\u3061\u306C\u304D",
        "\u3061\u306C\u308A",
        "\u3061\u306E\u3046",
        "\u3061\u3072\u3087\u3046",
        "\u3061\u3078\u3044\u305B\u3093",
        "\u3061\u307B\u3046",
        "\u3061\u307E\u305F",
        "\u3061\u307F\u3064",
        "\u3061\u307F\u3068\u3099\u308D",
        "\u3061\u3081\u3044\u3068\u3099",
        "\u3061\u3083\u3093\u3053\u306A\u3078\u3099",
        "\u3061\u3085\u3046\u3044",
        "\u3061\u3086\u308A\u3087\u304F",
        "\u3061\u3087\u3046\u3057",
        "\u3061\u3087\u3055\u304F\u3051\u3093",
        "\u3061\u3089\u3057",
        "\u3061\u3089\u307F",
        "\u3061\u308A\u304B\u3099\u307F",
        "\u3061\u308A\u3087\u3046",
        "\u3061\u308B\u3068\u3099",
        "\u3061\u308F\u308F",
        "\u3061\u3093\u305F\u3044",
        "\u3061\u3093\u3082\u304F",
        "\u3064\u3044\u304B",
        "\u3064\u3044\u305F\u3061",
        "\u3064\u3046\u304B",
        "\u3064\u3046\u3057\u3099\u3087\u3046",
        "\u3064\u3046\u306F\u3093",
        "\u3064\u3046\u308F",
        "\u3064\u304B\u3046",
        "\u3064\u304B\u308C\u308B",
        "\u3064\u304F\u306D",
        "\u3064\u304F\u308B",
        "\u3064\u3051\u306D",
        "\u3064\u3051\u308B",
        "\u3064\u3053\u3099\u3046",
        "\u3064\u305F\u3048\u308B",
        "\u3064\u3064\u3099\u304F",
        "\u3064\u3064\u3057\u3099",
        "\u3064\u3064\u3080",
        "\u3064\u3068\u3081\u308B",
        "\u3064\u306A\u304B\u3099\u308B",
        "\u3064\u306A\u307F",
        "\u3064\u306D\u3064\u3099\u306D",
        "\u3064\u306E\u308B",
        "\u3064\u3075\u3099\u3059",
        "\u3064\u307E\u3089\u306A\u3044",
        "\u3064\u307E\u308B",
        "\u3064\u307F\u304D",
        "\u3064\u3081\u305F\u3044",
        "\u3064\u3082\u308A",
        "\u3064\u3082\u308B",
        "\u3064\u3088\u3044",
        "\u3064\u308B\u307B\u3099",
        "\u3064\u308B\u307F\u304F",
        "\u3064\u308F\u3082\u306E",
        "\u3064\u308F\u308A",
        "\u3066\u3042\u3057",
        "\u3066\u3042\u3066",
        "\u3066\u3042\u307F",
        "\u3066\u3044\u304A\u3093",
        "\u3066\u3044\u304B",
        "\u3066\u3044\u304D",
        "\u3066\u3044\u3051\u3044",
        "\u3066\u3044\u3053\u304F",
        "\u3066\u3044\u3055\u3064",
        "\u3066\u3044\u3057",
        "\u3066\u3044\u305B\u3044",
        "\u3066\u3044\u305F\u3044",
        "\u3066\u3044\u3068\u3099",
        "\u3066\u3044\u306D\u3044",
        "\u3066\u3044\u3072\u3087\u3046",
        "\u3066\u3044\u3078\u3093",
        "\u3066\u3044\u307B\u3099\u3046",
        "\u3066\u3046\u3061",
        "\u3066\u304A\u304F\u308C",
        "\u3066\u304D\u3068\u3046",
        "\u3066\u304F\u3072\u3099",
        "\u3066\u3099\u3053\u307B\u3099\u3053",
        "\u3066\u3055\u304D\u3099\u3087\u3046",
        "\u3066\u3055\u3051\u3099",
        "\u3066\u3059\u308A",
        "\u3066\u305D\u3046",
        "\u3066\u3061\u304B\u3099\u3044",
        "\u3066\u3061\u3087\u3046",
        "\u3066\u3064\u304B\u3099\u304F",
        "\u3066\u3064\u3064\u3099\u304D",
        "\u3066\u3099\u3063\u306F\u309A",
        "\u3066\u3064\u307B\u3099\u3046",
        "\u3066\u3064\u3084",
        "\u3066\u3099\u306C\u304B\u3048",
        "\u3066\u306C\u304D",
        "\u3066\u306C\u304F\u3099\u3044",
        "\u3066\u306E\u3072\u3089",
        "\u3066\u306F\u3044",
        "\u3066\u3075\u3099\u304F\u308D",
        "\u3066\u3075\u305F\u3099",
        "\u3066\u307B\u3068\u3099\u304D",
        "\u3066\u307B\u3093",
        "\u3066\u307E\u3048",
        "\u3066\u307E\u304D\u3059\u3099\u3057",
        "\u3066\u307F\u3057\u3099\u304B",
        "\u3066\u307F\u3084\u3051\u3099",
        "\u3066\u3089\u3059",
        "\u3066\u308C\u3072\u3099",
        "\u3066\u308F\u3051",
        "\u3066\u308F\u305F\u3057",
        "\u3066\u3099\u3093\u3042\u3064",
        "\u3066\u3093\u3044\u3093",
        "\u3066\u3093\u304B\u3044",
        "\u3066\u3093\u304D",
        "\u3066\u3093\u304F\u3099",
        "\u3066\u3093\u3051\u3093",
        "\u3066\u3093\u3053\u3099\u304F",
        "\u3066\u3093\u3055\u3044",
        "\u3066\u3093\u3057",
        "\u3066\u3093\u3059\u3046",
        "\u3066\u3099\u3093\u3061",
        "\u3066\u3093\u3066\u304D",
        "\u3066\u3093\u3068\u3046",
        "\u3066\u3093\u306A\u3044",
        "\u3066\u3093\u3075\u309A\u3089",
        "\u3066\u3093\u307B\u3099\u3046\u305F\u3099\u3044",
        "\u3066\u3093\u3081\u3064",
        "\u3066\u3093\u3089\u3093\u304B\u3044",
        "\u3066\u3099\u3093\u308A\u3087\u304F",
        "\u3066\u3099\u3093\u308F",
        "\u3068\u3099\u3042\u3044",
        "\u3068\u3044\u308C",
        "\u3068\u3099\u3046\u304B\u3093",
        "\u3068\u3046\u304D\u3085\u3046",
        "\u3068\u3099\u3046\u304F\u3099",
        "\u3068\u3046\u3057",
        "\u3068\u3046\u3080\u304D\u3099",
        "\u3068\u304A\u3044",
        "\u3068\u304A\u304B",
        "\u3068\u304A\u304F",
        "\u3068\u304A\u3059",
        "\u3068\u304A\u308B",
        "\u3068\u304B\u3044",
        "\u3068\u304B\u3059",
        "\u3068\u304D\u304A\u308A",
        "\u3068\u304D\u3068\u3099\u304D",
        "\u3068\u304F\u3044",
        "\u3068\u304F\u3057\u3085\u3046",
        "\u3068\u304F\u3066\u3093",
        "\u3068\u304F\u306B",
        "\u3068\u304F\u3078\u3099\u3064",
        "\u3068\u3051\u3044",
        "\u3068\u3051\u308B",
        "\u3068\u3053\u3084",
        "\u3068\u3055\u304B",
        "\u3068\u3057\u3087\u304B\u3093",
        "\u3068\u305D\u3046",
        "\u3068\u305F\u3093",
        "\u3068\u3061\u3085\u3046",
        "\u3068\u3063\u304D\u3085\u3046",
        "\u3068\u3063\u304F\u3093",
        "\u3068\u3064\u305B\u3099\u3093",
        "\u3068\u3064\u306B\u3085\u3046",
        "\u3068\u3068\u3099\u3051\u308B",
        "\u3068\u3068\u306E\u3048\u308B",
        "\u3068\u306A\u3044",
        "\u3068\u306A\u3048\u308B",
        "\u3068\u306A\u308A",
        "\u3068\u306E\u3055\u307E",
        "\u3068\u306F\u3099\u3059",
        "\u3068\u3099\u3075\u3099\u304B\u3099\u308F",
        "\u3068\u307B\u3046",
        "\u3068\u307E\u308B",
        "\u3068\u3081\u308B",
        "\u3068\u3082\u305F\u3099\u3061",
        "\u3068\u3082\u308B",
        "\u3068\u3099\u3088\u3046\u3072\u3099",
        "\u3068\u3089\u3048\u308B",
        "\u3068\u3093\u304B\u3064",
        "\u3068\u3099\u3093\u3075\u3099\u308A",
        "\u306A\u3044\u304B\u304F",
        "\u306A\u3044\u3053\u3046",
        "\u306A\u3044\u3057\u3087",
        "\u306A\u3044\u3059",
        "\u306A\u3044\u305B\u3093",
        "\u306A\u3044\u305D\u3046",
        "\u306A\u304A\u3059",
        "\u306A\u304B\u3099\u3044",
        "\u306A\u304F\u3059",
        "\u306A\u3051\u3099\u308B",
        "\u306A\u3053\u3046\u3068\u3099",
        "\u306A\u3055\u3051",
        "\u306A\u305F\u3066\u3099\u3053\u3053",
        "\u306A\u3063\u3068\u3046",
        "\u306A\u3064\u3084\u3059\u307F",
        "\u306A\u306A\u304A\u3057",
        "\u306A\u306B\u3053\u3099\u3068",
        "\u306A\u306B\u3082\u306E",
        "\u306A\u306B\u308F",
        "\u306A\u306E\u304B",
        "\u306A\u3075\u305F\u3099",
        "\u306A\u307E\u3044\u304D",
        "\u306A\u307E\u3048",
        "\u306A\u307E\u307F",
        "\u306A\u307F\u305F\u3099",
        "\u306A\u3081\u3089\u304B",
        "\u306A\u3081\u308B",
        "\u306A\u3084\u3080",
        "\u306A\u3089\u3046",
        "\u306A\u3089\u3072\u3099",
        "\u306A\u3089\u3075\u3099",
        "\u306A\u308C\u308B",
        "\u306A\u308F\u3068\u3072\u3099",
        "\u306A\u308F\u306F\u3099\u308A",
        "\u306B\u3042\u3046",
        "\u306B\u3044\u304B\u3099\u305F",
        "\u306B\u3046\u3051",
        "\u306B\u304A\u3044",
        "\u306B\u304B\u3044",
        "\u306B\u304B\u3099\u3066",
        "\u306B\u304D\u3072\u3099",
        "\u306B\u304F\u3057\u307F",
        "\u306B\u304F\u307E\u3093",
        "\u306B\u3051\u3099\u308B",
        "\u306B\u3055\u3093\u304B\u305F\u3093\u305D",
        "\u306B\u3057\u304D",
        "\u306B\u305B\u3082\u306E",
        "\u306B\u3061\u3057\u3099\u3087\u3046",
        "\u306B\u3061\u3088\u3046\u3072\u3099",
        "\u306B\u3063\u304B",
        "\u306B\u3063\u304D",
        "\u306B\u3063\u3051\u3044",
        "\u306B\u3063\u3053\u3046",
        "\u306B\u3063\u3055\u3093",
        "\u306B\u3063\u3057\u3087\u304F",
        "\u306B\u3063\u3059\u3046",
        "\u306B\u3063\u305B\u304D",
        "\u306B\u3063\u3066\u3044",
        "\u306B\u306A\u3046",
        "\u306B\u307B\u3093",
        "\u306B\u307E\u3081",
        "\u306B\u3082\u3064",
        "\u306B\u3084\u308A",
        "\u306B\u3085\u3046\u3044\u3093",
        "\u306B\u308A\u3093\u3057\u3083",
        "\u306B\u308F\u3068\u308A",
        "\u306B\u3093\u3044",
        "\u306B\u3093\u304B",
        "\u306B\u3093\u304D",
        "\u306B\u3093\u3051\u3099\u3093",
        "\u306B\u3093\u3057\u304D",
        "\u306B\u3093\u3059\u3099\u3046",
        "\u306B\u3093\u305D\u3046",
        "\u306B\u3093\u305F\u3044",
        "\u306B\u3093\u3061",
        "\u306B\u3093\u3066\u3044",
        "\u306B\u3093\u306B\u304F",
        "\u306B\u3093\u3075\u309A",
        "\u306B\u3093\u307E\u308A",
        "\u306B\u3093\u3080",
        "\u306B\u3093\u3081\u3044",
        "\u306B\u3093\u3088\u3046",
        "\u306C\u3044\u304F\u304D\u3099",
        "\u306C\u304B\u3059",
        "\u306C\u304F\u3099\u3044\u3068\u308B",
        "\u306C\u304F\u3099\u3046",
        "\u306C\u304F\u3082\u308A",
        "\u306C\u3059\u3080",
        "\u306C\u307E\u3048\u3072\u3099",
        "\u306C\u3081\u308A",
        "\u306C\u3089\u3059",
        "\u306C\u3093\u3061\u3083\u304F",
        "\u306D\u3042\u3051\u3099",
        "\u306D\u3044\u304D",
        "\u306D\u3044\u308B",
        "\u306D\u3044\u308D",
        "\u306D\u304F\u3099\u305B",
        "\u306D\u304F\u305F\u3044",
        "\u306D\u304F\u3089",
        "\u306D\u3053\u305B\u3099",
        "\u306D\u3053\u3080",
        "\u306D\u3055\u3051\u3099",
        "\u306D\u3059\u3053\u3099\u3059",
        "\u306D\u305D\u3078\u3099\u308B",
        "\u306D\u305F\u3099\u3093",
        "\u306D\u3064\u3044",
        "\u306D\u3063\u3057\u3093",
        "\u306D\u3064\u305D\u3099\u3046",
        "\u306D\u3063\u305F\u3044\u304D\u3099\u3087",
        "\u306D\u3075\u3099\u305D\u304F",
        "\u306D\u3075\u305F\u3099",
        "\u306D\u307B\u3099\u3046",
        "\u306D\u307B\u308A\u306F\u307B\u308A",
        "\u306D\u307E\u304D",
        "\u306D\u307E\u308F\u3057",
        "\u306D\u307F\u307F",
        "\u306D\u3080\u3044",
        "\u306D\u3080\u305F\u3044",
        "\u306D\u3082\u3068",
        "\u306D\u3089\u3046",
        "\u306D\u308F\u3055\u3099",
        "\u306D\u3093\u3044\u308A",
        "\u306D\u3093\u304A\u3057",
        "\u306D\u3093\u304B\u3093",
        "\u306D\u3093\u304D\u3093",
        "\u306D\u3093\u304F\u3099",
        "\u306D\u3093\u3055\u3099",
        "\u306D\u3093\u3057",
        "\u306D\u3093\u3061\u3083\u304F",
        "\u306D\u3093\u3068\u3099",
        "\u306D\u3093\u3072\u309A",
        "\u306D\u3093\u3075\u3099\u3064",
        "\u306D\u3093\u307E\u3064",
        "\u306D\u3093\u308A\u3087\u3046",
        "\u306D\u3093\u308C\u3044",
        "\u306E\u3044\u3059\u3099",
        "\u306E\u304A\u3064\u3099\u307E",
        "\u306E\u304B\u3099\u3059",
        "\u306E\u304D\u306A\u307F",
        "\u306E\u3053\u304D\u3099\u308A",
        "\u306E\u3053\u3059",
        "\u306E\u3053\u308B",
        "\u306E\u305B\u308B",
        "\u306E\u305D\u3099\u304F",
        "\u306E\u305D\u3099\u3080",
        "\u306E\u305F\u307E\u3046",
        "\u306E\u3061\u307B\u3068\u3099",
        "\u306E\u3063\u304F",
        "\u306E\u306F\u3099\u3059",
        "\u306E\u306F\u3089",
        "\u306E\u3078\u3099\u308B",
        "\u306E\u307B\u3099\u308B",
        "\u306E\u307F\u3082\u306E",
        "\u306E\u3084\u307E",
        "\u306E\u3089\u3044\u306C",
        "\u306E\u3089\u306D\u3053",
        "\u306E\u308A\u3082\u306E",
        "\u306E\u308A\u3086\u304D",
        "\u306E\u308C\u3093",
        "\u306E\u3093\u304D",
        "\u306F\u3099\u3042\u3044",
        "\u306F\u3042\u304F",
        "\u306F\u3099\u3042\u3055\u3093",
        "\u306F\u3099\u3044\u304B",
        "\u306F\u3099\u3044\u304F",
        "\u306F\u3044\u3051\u3093",
        "\u306F\u3044\u3053\u3099",
        "\u306F\u3044\u3057\u3093",
        "\u306F\u3044\u3059\u3044",
        "\u306F\u3044\u305B\u3093",
        "\u306F\u3044\u305D\u3046",
        "\u306F\u3044\u3061",
        "\u306F\u3099\u3044\u306F\u3099\u3044",
        "\u306F\u3044\u308C\u3064",
        "\u306F\u3048\u308B",
        "\u306F\u304A\u308B",
        "\u306F\u304B\u3044",
        "\u306F\u3099\u304B\u308A",
        "\u306F\u304B\u308B",
        "\u306F\u304F\u3057\u3085",
        "\u306F\u3051\u3093",
        "\u306F\u3053\u3075\u3099",
        "\u306F\u3055\u307F",
        "\u306F\u3055\u3093",
        "\u306F\u3057\u3053\u3099",
        "\u306F\u3099\u3057\u3087",
        "\u306F\u3057\u308B",
        "\u306F\u305B\u308B",
        "\u306F\u309A\u305D\u3053\u3093",
        "\u306F\u305D\u3093",
        "\u306F\u305F\u3093",
        "\u306F\u3061\u307F\u3064",
        "\u306F\u3064\u304A\u3093",
        "\u306F\u3063\u304B\u304F",
        "\u306F\u3064\u3099\u304D",
        "\u306F\u3063\u304D\u308A",
        "\u306F\u3063\u304F\u3064",
        "\u306F\u3063\u3051\u3093",
        "\u306F\u3063\u3053\u3046",
        "\u306F\u3063\u3055\u3093",
        "\u306F\u3063\u3057\u3093",
        "\u306F\u3063\u305F\u3064",
        "\u306F\u3063\u3061\u3085\u3046",
        "\u306F\u3063\u3066\u3093",
        "\u306F\u3063\u3072\u309A\u3087\u3046",
        "\u306F\u3063\u307B\u309A\u3046",
        "\u306F\u306A\u3059",
        "\u306F\u306A\u3072\u3099",
        "\u306F\u306B\u304B\u3080",
        "\u306F\u3075\u3099\u3089\u3057",
        "\u306F\u307F\u304B\u3099\u304D",
        "\u306F\u3080\u304B\u3046",
        "\u306F\u3081\u3064",
        "\u306F\u3084\u3044",
        "\u306F\u3084\u3057",
        "\u306F\u3089\u3046",
        "\u306F\u308D\u3046\u3043\u3093",
        "\u306F\u308F\u3044",
        "\u306F\u3093\u3044",
        "\u306F\u3093\u3048\u3044",
        "\u306F\u3093\u304A\u3093",
        "\u306F\u3093\u304B\u304F",
        "\u306F\u3093\u304D\u3087\u3046",
        "\u306F\u3099\u3093\u304F\u3099\u307F",
        "\u306F\u3093\u3053",
        "\u306F\u3093\u3057\u3083",
        "\u306F\u3093\u3059\u3046",
        "\u306F\u3093\u305F\u3099\u3093",
        "\u306F\u309A\u3093\u3061",
        "\u306F\u309A\u3093\u3064",
        "\u306F\u3093\u3066\u3044",
        "\u306F\u3093\u3068\u3057",
        "\u306F\u3093\u306E\u3046",
        "\u306F\u3093\u306F\u309A",
        "\u306F\u3093\u3075\u3099\u3093",
        "\u306F\u3093\u3078\u309A\u3093",
        "\u306F\u3093\u307B\u3099\u3046\u304D",
        "\u306F\u3093\u3081\u3044",
        "\u306F\u3093\u3089\u3093",
        "\u306F\u3093\u308D\u3093",
        "\u3072\u3044\u304D",
        "\u3072\u3046\u3093",
        "\u3072\u3048\u308B",
        "\u3072\u304B\u304F",
        "\u3072\u304B\u308A",
        "\u3072\u304B\u308B",
        "\u3072\u304B\u3093",
        "\u3072\u304F\u3044",
        "\u3072\u3051\u3064",
        "\u3072\u3053\u3046\u304D",
        "\u3072\u3053\u304F",
        "\u3072\u3055\u3044",
        "\u3072\u3055\u3057\u3075\u3099\u308A",
        "\u3072\u3055\u3093",
        "\u3072\u3099\u3057\u3099\u3085\u3064\u304B\u3093",
        "\u3072\u3057\u3087",
        "\u3072\u305D\u304B",
        "\u3072\u305D\u3080",
        "\u3072\u305F\u3080\u304D",
        "\u3072\u305F\u3099\u308A",
        "\u3072\u305F\u308B",
        "\u3072\u3064\u304D\u3099",
        "\u3072\u3063\u3053\u3057",
        "\u3072\u3063\u3057",
        "\u3072\u3064\u3057\u3099\u3085\u3072\u3093",
        "\u3072\u3063\u3059",
        "\u3072\u3064\u305B\u3099\u3093",
        "\u3072\u309A\u3063\u305F\u308A",
        "\u3072\u309A\u3063\u3061\u308A",
        "\u3072\u3064\u3088\u3046",
        "\u3072\u3066\u3044",
        "\u3072\u3068\u3053\u3099\u307F",
        "\u3072\u306A\u307E\u3064\u308A",
        "\u3072\u306A\u3093",
        "\u3072\u306D\u308B",
        "\u3072\u306F\u3093",
        "\u3072\u3072\u3099\u304F",
        "\u3072\u3072\u3087\u3046",
        "\u3072\u307B\u3046",
        "\u3072\u307E\u308F\u308A",
        "\u3072\u307E\u3093",
        "\u3072\u307F\u3064",
        "\u3072\u3081\u3044",
        "\u3072\u3081\u3057\u3099\u3057",
        "\u3072\u3084\u3051",
        "\u3072\u3084\u3059",
        "\u3072\u3088\u3046",
        "\u3072\u3099\u3087\u3046\u304D",
        "\u3072\u3089\u304B\u3099\u306A",
        "\u3072\u3089\u304F",
        "\u3072\u308A\u3064",
        "\u3072\u308A\u3087\u3046",
        "\u3072\u308B\u307E",
        "\u3072\u308B\u3084\u3059\u307F",
        "\u3072\u308C\u3044",
        "\u3072\u308D\u3044",
        "\u3072\u308D\u3046",
        "\u3072\u308D\u304D",
        "\u3072\u308D\u3086\u304D",
        "\u3072\u3093\u304B\u304F",
        "\u3072\u3093\u3051\u3064",
        "\u3072\u3093\u3053\u3093",
        "\u3072\u3093\u3057\u3085",
        "\u3072\u3093\u305D\u3046",
        "\u3072\u309A\u3093\u3061",
        "\u3072\u3093\u306F\u309A\u3093",
        "\u3072\u3099\u3093\u307B\u3099\u3046",
        "\u3075\u3042\u3093",
        "\u3075\u3044\u3046\u3061",
        "\u3075\u3046\u3051\u3044",
        "\u3075\u3046\u305B\u3093",
        "\u3075\u309A\u3046\u305F\u308D\u3046",
        "\u3075\u3046\u3068\u3046",
        "\u3075\u3046\u3075",
        "\u3075\u3048\u308B",
        "\u3075\u304A\u3093",
        "\u3075\u304B\u3044",
        "\u3075\u304D\u3093",
        "\u3075\u304F\u3055\u3099\u3064",
        "\u3075\u304F\u3075\u3099\u304F\u308D",
        "\u3075\u3053\u3046",
        "\u3075\u3055\u3044",
        "\u3075\u3057\u304D\u3099",
        "\u3075\u3057\u3099\u307F",
        "\u3075\u3059\u307E",
        "\u3075\u305B\u3044",
        "\u3075\u305B\u304F\u3099",
        "\u3075\u305D\u304F",
        "\u3075\u3099\u305F\u306B\u304F",
        "\u3075\u305F\u3093",
        "\u3075\u3061\u3087\u3046",
        "\u3075\u3064\u3046",
        "\u3075\u3064\u304B",
        "\u3075\u3063\u304B\u3064",
        "\u3075\u3063\u304D",
        "\u3075\u3063\u3053\u304F",
        "\u3075\u3099\u3068\u3099\u3046",
        "\u3075\u3068\u308B",
        "\u3075\u3068\u3093",
        "\u3075\u306E\u3046",
        "\u3075\u306F\u3044",
        "\u3075\u3072\u3087\u3046",
        "\u3075\u3078\u3093",
        "\u3075\u307E\u3093",
        "\u3075\u307F\u3093",
        "\u3075\u3081\u3064",
        "\u3075\u3081\u3093",
        "\u3075\u3088\u3046",
        "\u3075\u308A\u3053",
        "\u3075\u308A\u308B",
        "\u3075\u308B\u3044",
        "\u3075\u3093\u3044\u304D",
        "\u3075\u3099\u3093\u304B\u3099\u304F",
        "\u3075\u3099\u3093\u304F\u3099",
        "\u3075\u3093\u3057\u3064",
        "\u3075\u3099\u3093\u305B\u304D",
        "\u3075\u3093\u305D\u3046",
        "\u3075\u3099\u3093\u307B\u309A\u3046",
        "\u3078\u3044\u3042\u3093",
        "\u3078\u3044\u304A\u3093",
        "\u3078\u3044\u304B\u3099\u3044",
        "\u3078\u3044\u304D",
        "\u3078\u3044\u3051\u3099\u3093",
        "\u3078\u3044\u3053\u3046",
        "\u3078\u3044\u3055",
        "\u3078\u3044\u3057\u3083",
        "\u3078\u3044\u305B\u3064",
        "\u3078\u3044\u305D",
        "\u3078\u3044\u305F\u304F",
        "\u3078\u3044\u3066\u3093",
        "\u3078\u3044\u306D\u3064",
        "\u3078\u3044\u308F",
        "\u3078\u304D\u304B\u3099",
        "\u3078\u3053\u3080",
        "\u3078\u3099\u306B\u3044\u308D",
        "\u3078\u3099\u306B\u3057\u3087\u3046\u304B\u3099",
        "\u3078\u3089\u3059",
        "\u3078\u3093\u304B\u3093",
        "\u3078\u3099\u3093\u304D\u3087\u3046",
        "\u3078\u3099\u3093\u3053\u3099\u3057",
        "\u3078\u3093\u3055\u3044",
        "\u3078\u3093\u305F\u3044",
        "\u3078\u3099\u3093\u308A",
        "\u307B\u3042\u3093",
        "\u307B\u3044\u304F",
        "\u307B\u3099\u3046\u304D\u3099\u3087",
        "\u307B\u3046\u3053\u304F",
        "\u307B\u3046\u305D\u3046",
        "\u307B\u3046\u307B\u3046",
        "\u307B\u3046\u3082\u3093",
        "\u307B\u3046\u308A\u3064",
        "\u307B\u3048\u308B",
        "\u307B\u304A\u3093",
        "\u307B\u304B\u3093",
        "\u307B\u304D\u3087\u3046",
        "\u307B\u3099\u304D\u3093",
        "\u307B\u304F\u308D",
        "\u307B\u3051\u3064",
        "\u307B\u3051\u3093",
        "\u307B\u3053\u3046",
        "\u307B\u3053\u308B",
        "\u307B\u3057\u3044",
        "\u307B\u3057\u3064",
        "\u307B\u3057\u3085",
        "\u307B\u3057\u3087\u3046",
        "\u307B\u305B\u3044",
        "\u307B\u305D\u3044",
        "\u307B\u305D\u304F",
        "\u307B\u305F\u3066",
        "\u307B\u305F\u308B",
        "\u307B\u309A\u3061\u3075\u3099\u304F\u308D",
        "\u307B\u3063\u304D\u3087\u304F",
        "\u307B\u3063\u3055",
        "\u307B\u3063\u305F\u3093",
        "\u307B\u3068\u3093\u3068\u3099",
        "\u307B\u3081\u308B",
        "\u307B\u3093\u3044",
        "\u307B\u3093\u304D",
        "\u307B\u3093\u3051",
        "\u307B\u3093\u3057\u3064",
        "\u307B\u3093\u3084\u304F",
        "\u307E\u3044\u306B\u3061",
        "\u307E\u304B\u3044",
        "\u307E\u304B\u305B\u308B",
        "\u307E\u304B\u3099\u308B",
        "\u307E\u3051\u308B",
        "\u307E\u3053\u3068",
        "\u307E\u3055\u3064",
        "\u307E\u3057\u3099\u3081",
        "\u307E\u3059\u304F",
        "\u307E\u305B\u3099\u308B",
        "\u307E\u3064\u308A",
        "\u307E\u3068\u3081",
        "\u307E\u306A\u3075\u3099",
        "\u307E\u306C\u3051",
        "\u307E\u306D\u304F",
        "\u307E\u307B\u3046",
        "\u307E\u3082\u308B",
        "\u307E\u3086\u3051\u3099",
        "\u307E\u3088\u3046",
        "\u307E\u308D\u3084\u304B",
        "\u307E\u308F\u3059",
        "\u307E\u308F\u308A",
        "\u307E\u308F\u308B",
        "\u307E\u3093\u304B\u3099",
        "\u307E\u3093\u304D\u3064",
        "\u307E\u3093\u305D\u3099\u304F",
        "\u307E\u3093\u306A\u304B",
        "\u307F\u3044\u3089",
        "\u307F\u3046\u3061",
        "\u307F\u3048\u308B",
        "\u307F\u304B\u3099\u304F",
        "\u307F\u304B\u305F",
        "\u307F\u304B\u3093",
        "\u307F\u3051\u3093",
        "\u307F\u3053\u3093",
        "\u307F\u3057\u3099\u304B\u3044",
        "\u307F\u3059\u3044",
        "\u307F\u3059\u3048\u308B",
        "\u307F\u305B\u308B",
        "\u307F\u3063\u304B",
        "\u307F\u3064\u304B\u308B",
        "\u307F\u3064\u3051\u308B",
        "\u307F\u3066\u3044",
        "\u307F\u3068\u3081\u308B",
        "\u307F\u306A\u3068",
        "\u307F\u306A\u307F\u304B\u3055\u3044",
        "\u307F\u306D\u3089\u308B",
        "\u307F\u306E\u3046",
        "\u307F\u306E\u304B\u3099\u3059",
        "\u307F\u307B\u3093",
        "\u307F\u3082\u3068",
        "\u307F\u3084\u3051\u3099",
        "\u307F\u3089\u3044",
        "\u307F\u308A\u3087\u304F",
        "\u307F\u308F\u304F",
        "\u307F\u3093\u304B",
        "\u307F\u3093\u305D\u3099\u304F",
        "\u3080\u3044\u304B",
        "\u3080\u3048\u304D",
        "\u3080\u3048\u3093",
        "\u3080\u304B\u3044",
        "\u3080\u304B\u3046",
        "\u3080\u304B\u3048",
        "\u3080\u304B\u3057",
        "\u3080\u304D\u3099\u3061\u3083",
        "\u3080\u3051\u308B",
        "\u3080\u3051\u3099\u3093",
        "\u3080\u3055\u307B\u3099\u308B",
        "\u3080\u3057\u3042\u3064\u3044",
        "\u3080\u3057\u306F\u3099",
        "\u3080\u3057\u3099\u3085\u3093",
        "\u3080\u3057\u308D",
        "\u3080\u3059\u3046",
        "\u3080\u3059\u3053",
        "\u3080\u3059\u3075\u3099",
        "\u3080\u3059\u3081",
        "\u3080\u305B\u308B",
        "\u3080\u305B\u3093",
        "\u3080\u3061\u3085\u3046",
        "\u3080\u306A\u3057\u3044",
        "\u3080\u306E\u3046",
        "\u3080\u3084\u307F",
        "\u3080\u3088\u3046",
        "\u3080\u3089\u3055\u304D",
        "\u3080\u308A\u3087\u3046",
        "\u3080\u308D\u3093",
        "\u3081\u3044\u3042\u3093",
        "\u3081\u3044\u3046\u3093",
        "\u3081\u3044\u3048\u3093",
        "\u3081\u3044\u304B\u304F",
        "\u3081\u3044\u304D\u3087\u304F",
        "\u3081\u3044\u3055\u3044",
        "\u3081\u3044\u3057",
        "\u3081\u3044\u305D\u3046",
        "\u3081\u3044\u3075\u3099\u3064",
        "\u3081\u3044\u308C\u3044",
        "\u3081\u3044\u308F\u304F",
        "\u3081\u304F\u3099\u307E\u308C\u308B",
        "\u3081\u3055\u3099\u3059",
        "\u3081\u3057\u305F",
        "\u3081\u3059\u3099\u3089\u3057\u3044",
        "\u3081\u305F\u3099\u3064",
        "\u3081\u307E\u3044",
        "\u3081\u3084\u3059",
        "\u3081\u3093\u304D\u3087",
        "\u3081\u3093\u305B\u304D",
        "\u3081\u3093\u3068\u3099\u3046",
        "\u3082\u3046\u3057\u3042\u3051\u3099\u308B",
        "\u3082\u3046\u3068\u3099\u3046\u3051\u3093",
        "\u3082\u3048\u308B",
        "\u3082\u304F\u3057",
        "\u3082\u304F\u3066\u304D",
        "\u3082\u304F\u3088\u3046\u3072\u3099",
        "\u3082\u3061\u308D\u3093",
        "\u3082\u3068\u3099\u308B",
        "\u3082\u3089\u3046",
        "\u3082\u3093\u304F",
        "\u3082\u3093\u305F\u3099\u3044",
        "\u3084\u304A\u3084",
        "\u3084\u3051\u308B",
        "\u3084\u3055\u3044",
        "\u3084\u3055\u3057\u3044",
        "\u3084\u3059\u3044",
        "\u3084\u3059\u305F\u308D\u3046",
        "\u3084\u3059\u307F",
        "\u3084\u305B\u308B",
        "\u3084\u305D\u3046",
        "\u3084\u305F\u3044",
        "\u3084\u3061\u3093",
        "\u3084\u3063\u3068",
        "\u3084\u3063\u306F\u309A\u308A",
        "\u3084\u3075\u3099\u308B",
        "\u3084\u3081\u308B",
        "\u3084\u3084\u3053\u3057\u3044",
        "\u3084\u3088\u3044",
        "\u3084\u308F\u3089\u304B\u3044",
        "\u3086\u3046\u304D",
        "\u3086\u3046\u3072\u3099\u3093\u304D\u3087\u304F",
        "\u3086\u3046\u3078\u3099",
        "\u3086\u3046\u3081\u3044",
        "\u3086\u3051\u3064",
        "\u3086\u3057\u3085\u3064",
        "\u3086\u305B\u3093",
        "\u3086\u305D\u3046",
        "\u3086\u305F\u304B",
        "\u3086\u3061\u3083\u304F",
        "\u3086\u3066\u3099\u308B",
        "\u3086\u306B\u3085\u3046",
        "\u3086\u3072\u3099\u308F",
        "\u3086\u3089\u3044",
        "\u3086\u308C\u308B",
        "\u3088\u3046\u3044",
        "\u3088\u3046\u304B",
        "\u3088\u3046\u304D\u3085\u3046",
        "\u3088\u3046\u3057\u3099",
        "\u3088\u3046\u3059",
        "\u3088\u3046\u3061\u3048\u3093",
        "\u3088\u304B\u305B\u3099",
        "\u3088\u304B\u3093",
        "\u3088\u304D\u3093",
        "\u3088\u304F\u305B\u3044",
        "\u3088\u304F\u307B\u3099\u3046",
        "\u3088\u3051\u3044",
        "\u3088\u3053\u3099\u308C\u308B",
        "\u3088\u3055\u3093",
        "\u3088\u3057\u3085\u3046",
        "\u3088\u305D\u3046",
        "\u3088\u305D\u304F",
        "\u3088\u3063\u304B",
        "\u3088\u3066\u3044",
        "\u3088\u3068\u3099\u304B\u3099\u308F\u304F",
        "\u3088\u306D\u3064",
        "\u3088\u3084\u304F",
        "\u3088\u3086\u3046",
        "\u3088\u308D\u3053\u3075\u3099",
        "\u3088\u308D\u3057\u3044",
        "\u3089\u3044\u3046",
        "\u3089\u304F\u304B\u3099\u304D",
        "\u3089\u304F\u3053\u3099",
        "\u3089\u304F\u3055\u3064",
        "\u3089\u304F\u305F\u3099",
        "\u3089\u3057\u3093\u306F\u3099\u3093",
        "\u3089\u305B\u3093",
        "\u3089\u305D\u3099\u304F",
        "\u3089\u305F\u3044",
        "\u3089\u3063\u304B",
        "\u3089\u308C\u3064",
        "\u308A\u3048\u304D",
        "\u308A\u304B\u3044",
        "\u308A\u304D\u3055\u304F",
        "\u308A\u304D\u305B\u3064",
        "\u308A\u304F\u304F\u3099\u3093",
        "\u308A\u304F\u3064",
        "\u308A\u3051\u3093",
        "\u308A\u3053\u3046",
        "\u308A\u305B\u3044",
        "\u308A\u305D\u3046",
        "\u308A\u305D\u304F",
        "\u308A\u3066\u3093",
        "\u308A\u306D\u3093",
        "\u308A\u3086\u3046",
        "\u308A\u3085\u3046\u304B\u3099\u304F",
        "\u308A\u3088\u3046",
        "\u308A\u3087\u3046\u308A",
        "\u308A\u3087\u304B\u3093",
        "\u308A\u3087\u304F\u3061\u3083",
        "\u308A\u3087\u3053\u3046",
        "\u308A\u308A\u304F",
        "\u308A\u308C\u304D",
        "\u308A\u308D\u3093",
        "\u308A\u3093\u3053\u3099",
        "\u308B\u3044\u3051\u3044",
        "\u308B\u3044\u3055\u3044",
        "\u308B\u3044\u3057\u3099",
        "\u308B\u3044\u305B\u304D",
        "\u308B\u3059\u306F\u3099\u3093",
        "\u308B\u308A\u304B\u3099\u308F\u3089",
        "\u308C\u3044\u304B\u3093",
        "\u308C\u3044\u304D\u3099",
        "\u308C\u3044\u305B\u3044",
        "\u308C\u3044\u305D\u3099\u3046\u3053",
        "\u308C\u3044\u3068\u3046",
        "\u308C\u3044\u307B\u3099\u3046",
        "\u308C\u304D\u3057",
        "\u308C\u304D\u305F\u3099\u3044",
        "\u308C\u3093\u3042\u3044",
        "\u308C\u3093\u3051\u3044",
        "\u308C\u3093\u3053\u3093",
        "\u308C\u3093\u3055\u3044",
        "\u308C\u3093\u3057\u3085\u3046",
        "\u308C\u3093\u305D\u3099\u304F",
        "\u308C\u3093\u3089\u304F",
        "\u308D\u3046\u304B",
        "\u308D\u3046\u3053\u3099",
        "\u308D\u3046\u3057\u3099\u3093",
        "\u308D\u3046\u305D\u304F",
        "\u308D\u304F\u304B\u3099",
        "\u308D\u3053\u3064",
        "\u308D\u3057\u3099\u3046\u3089",
        "\u308D\u3057\u3085\u3064",
        "\u308D\u305B\u3093",
        "\u308D\u3066\u3093",
        "\u308D\u3081\u3093",
        "\u308D\u308C\u3064",
        "\u308D\u3093\u304D\u3099",
        "\u308D\u3093\u306F\u309A",
        "\u308D\u3093\u3075\u3099\u3093",
        "\u308D\u3093\u308A",
        "\u308F\u304B\u3059",
        "\u308F\u304B\u3081",
        "\u308F\u304B\u3084\u307E",
        "\u308F\u304B\u308C\u308B",
        "\u308F\u3057\u3064",
        "\u308F\u3057\u3099\u307E\u3057",
        "\u308F\u3059\u308C\u3082\u306E",
        "\u308F\u3089\u3046",
        "\u308F\u308C\u308B"
      ];
    }
  });

  // node_modules/bip39/src/wordlists/english.json
  var require_english = __commonJS({
    "node_modules/bip39/src/wordlists/english.json"(exports2, module2) {
      module2.exports = [
        "abandon",
        "ability",
        "able",
        "about",
        "above",
        "absent",
        "absorb",
        "abstract",
        "absurd",
        "abuse",
        "access",
        "accident",
        "account",
        "accuse",
        "achieve",
        "acid",
        "acoustic",
        "acquire",
        "across",
        "act",
        "action",
        "actor",
        "actress",
        "actual",
        "adapt",
        "add",
        "addict",
        "address",
        "adjust",
        "admit",
        "adult",
        "advance",
        "advice",
        "aerobic",
        "affair",
        "afford",
        "afraid",
        "again",
        "age",
        "agent",
        "agree",
        "ahead",
        "aim",
        "air",
        "airport",
        "aisle",
        "alarm",
        "album",
        "alcohol",
        "alert",
        "alien",
        "all",
        "alley",
        "allow",
        "almost",
        "alone",
        "alpha",
        "already",
        "also",
        "alter",
        "always",
        "amateur",
        "amazing",
        "among",
        "amount",
        "amused",
        "analyst",
        "anchor",
        "ancient",
        "anger",
        "angle",
        "angry",
        "animal",
        "ankle",
        "announce",
        "annual",
        "another",
        "answer",
        "antenna",
        "antique",
        "anxiety",
        "any",
        "apart",
        "apology",
        "appear",
        "apple",
        "approve",
        "april",
        "arch",
        "arctic",
        "area",
        "arena",
        "argue",
        "arm",
        "armed",
        "armor",
        "army",
        "around",
        "arrange",
        "arrest",
        "arrive",
        "arrow",
        "art",
        "artefact",
        "artist",
        "artwork",
        "ask",
        "aspect",
        "assault",
        "asset",
        "assist",
        "assume",
        "asthma",
        "athlete",
        "atom",
        "attack",
        "attend",
        "attitude",
        "attract",
        "auction",
        "audit",
        "august",
        "aunt",
        "author",
        "auto",
        "autumn",
        "average",
        "avocado",
        "avoid",
        "awake",
        "aware",
        "away",
        "awesome",
        "awful",
        "awkward",
        "axis",
        "baby",
        "bachelor",
        "bacon",
        "badge",
        "bag",
        "balance",
        "balcony",
        "ball",
        "bamboo",
        "banana",
        "banner",
        "bar",
        "barely",
        "bargain",
        "barrel",
        "base",
        "basic",
        "basket",
        "battle",
        "beach",
        "bean",
        "beauty",
        "because",
        "become",
        "beef",
        "before",
        "begin",
        "behave",
        "behind",
        "believe",
        "below",
        "belt",
        "bench",
        "benefit",
        "best",
        "betray",
        "better",
        "between",
        "beyond",
        "bicycle",
        "bid",
        "bike",
        "bind",
        "biology",
        "bird",
        "birth",
        "bitter",
        "black",
        "blade",
        "blame",
        "blanket",
        "blast",
        "bleak",
        "bless",
        "blind",
        "blood",
        "blossom",
        "blouse",
        "blue",
        "blur",
        "blush",
        "board",
        "boat",
        "body",
        "boil",
        "bomb",
        "bone",
        "bonus",
        "book",
        "boost",
        "border",
        "boring",
        "borrow",
        "boss",
        "bottom",
        "bounce",
        "box",
        "boy",
        "bracket",
        "brain",
        "brand",
        "brass",
        "brave",
        "bread",
        "breeze",
        "brick",
        "bridge",
        "brief",
        "bright",
        "bring",
        "brisk",
        "broccoli",
        "broken",
        "bronze",
        "broom",
        "brother",
        "brown",
        "brush",
        "bubble",
        "buddy",
        "budget",
        "buffalo",
        "build",
        "bulb",
        "bulk",
        "bullet",
        "bundle",
        "bunker",
        "burden",
        "burger",
        "burst",
        "bus",
        "business",
        "busy",
        "butter",
        "buyer",
        "buzz",
        "cabbage",
        "cabin",
        "cable",
        "cactus",
        "cage",
        "cake",
        "call",
        "calm",
        "camera",
        "camp",
        "can",
        "canal",
        "cancel",
        "candy",
        "cannon",
        "canoe",
        "canvas",
        "canyon",
        "capable",
        "capital",
        "captain",
        "car",
        "carbon",
        "card",
        "cargo",
        "carpet",
        "carry",
        "cart",
        "case",
        "cash",
        "casino",
        "castle",
        "casual",
        "cat",
        "catalog",
        "catch",
        "category",
        "cattle",
        "caught",
        "cause",
        "caution",
        "cave",
        "ceiling",
        "celery",
        "cement",
        "census",
        "century",
        "cereal",
        "certain",
        "chair",
        "chalk",
        "champion",
        "change",
        "chaos",
        "chapter",
        "charge",
        "chase",
        "chat",
        "cheap",
        "check",
        "cheese",
        "chef",
        "cherry",
        "chest",
        "chicken",
        "chief",
        "child",
        "chimney",
        "choice",
        "choose",
        "chronic",
        "chuckle",
        "chunk",
        "churn",
        "cigar",
        "cinnamon",
        "circle",
        "citizen",
        "city",
        "civil",
        "claim",
        "clap",
        "clarify",
        "claw",
        "clay",
        "clean",
        "clerk",
        "clever",
        "click",
        "client",
        "cliff",
        "climb",
        "clinic",
        "clip",
        "clock",
        "clog",
        "close",
        "cloth",
        "cloud",
        "clown",
        "club",
        "clump",
        "cluster",
        "clutch",
        "coach",
        "coast",
        "coconut",
        "code",
        "coffee",
        "coil",
        "coin",
        "collect",
        "color",
        "column",
        "combine",
        "come",
        "comfort",
        "comic",
        "common",
        "company",
        "concert",
        "conduct",
        "confirm",
        "congress",
        "connect",
        "consider",
        "control",
        "convince",
        "cook",
        "cool",
        "copper",
        "copy",
        "coral",
        "core",
        "corn",
        "correct",
        "cost",
        "cotton",
        "couch",
        "country",
        "couple",
        "course",
        "cousin",
        "cover",
        "coyote",
        "crack",
        "cradle",
        "craft",
        "cram",
        "crane",
        "crash",
        "crater",
        "crawl",
        "crazy",
        "cream",
        "credit",
        "creek",
        "crew",
        "cricket",
        "crime",
        "crisp",
        "critic",
        "crop",
        "cross",
        "crouch",
        "crowd",
        "crucial",
        "cruel",
        "cruise",
        "crumble",
        "crunch",
        "crush",
        "cry",
        "crystal",
        "cube",
        "culture",
        "cup",
        "cupboard",
        "curious",
        "current",
        "curtain",
        "curve",
        "cushion",
        "custom",
        "cute",
        "cycle",
        "dad",
        "damage",
        "damp",
        "dance",
        "danger",
        "daring",
        "dash",
        "daughter",
        "dawn",
        "day",
        "deal",
        "debate",
        "debris",
        "decade",
        "december",
        "decide",
        "decline",
        "decorate",
        "decrease",
        "deer",
        "defense",
        "define",
        "defy",
        "degree",
        "delay",
        "deliver",
        "demand",
        "demise",
        "denial",
        "dentist",
        "deny",
        "depart",
        "depend",
        "deposit",
        "depth",
        "deputy",
        "derive",
        "describe",
        "desert",
        "design",
        "desk",
        "despair",
        "destroy",
        "detail",
        "detect",
        "develop",
        "device",
        "devote",
        "diagram",
        "dial",
        "diamond",
        "diary",
        "dice",
        "diesel",
        "diet",
        "differ",
        "digital",
        "dignity",
        "dilemma",
        "dinner",
        "dinosaur",
        "direct",
        "dirt",
        "disagree",
        "discover",
        "disease",
        "dish",
        "dismiss",
        "disorder",
        "display",
        "distance",
        "divert",
        "divide",
        "divorce",
        "dizzy",
        "doctor",
        "document",
        "dog",
        "doll",
        "dolphin",
        "domain",
        "donate",
        "donkey",
        "donor",
        "door",
        "dose",
        "double",
        "dove",
        "draft",
        "dragon",
        "drama",
        "drastic",
        "draw",
        "dream",
        "dress",
        "drift",
        "drill",
        "drink",
        "drip",
        "drive",
        "drop",
        "drum",
        "dry",
        "duck",
        "dumb",
        "dune",
        "during",
        "dust",
        "dutch",
        "duty",
        "dwarf",
        "dynamic",
        "eager",
        "eagle",
        "early",
        "earn",
        "earth",
        "easily",
        "east",
        "easy",
        "echo",
        "ecology",
        "economy",
        "edge",
        "edit",
        "educate",
        "effort",
        "egg",
        "eight",
        "either",
        "elbow",
        "elder",
        "electric",
        "elegant",
        "element",
        "elephant",
        "elevator",
        "elite",
        "else",
        "embark",
        "embody",
        "embrace",
        "emerge",
        "emotion",
        "employ",
        "empower",
        "empty",
        "enable",
        "enact",
        "end",
        "endless",
        "endorse",
        "enemy",
        "energy",
        "enforce",
        "engage",
        "engine",
        "enhance",
        "enjoy",
        "enlist",
        "enough",
        "enrich",
        "enroll",
        "ensure",
        "enter",
        "entire",
        "entry",
        "envelope",
        "episode",
        "equal",
        "equip",
        "era",
        "erase",
        "erode",
        "erosion",
        "error",
        "erupt",
        "escape",
        "essay",
        "essence",
        "estate",
        "eternal",
        "ethics",
        "evidence",
        "evil",
        "evoke",
        "evolve",
        "exact",
        "example",
        "excess",
        "exchange",
        "excite",
        "exclude",
        "excuse",
        "execute",
        "exercise",
        "exhaust",
        "exhibit",
        "exile",
        "exist",
        "exit",
        "exotic",
        "expand",
        "expect",
        "expire",
        "explain",
        "expose",
        "express",
        "extend",
        "extra",
        "eye",
        "eyebrow",
        "fabric",
        "face",
        "faculty",
        "fade",
        "faint",
        "faith",
        "fall",
        "false",
        "fame",
        "family",
        "famous",
        "fan",
        "fancy",
        "fantasy",
        "farm",
        "fashion",
        "fat",
        "fatal",
        "father",
        "fatigue",
        "fault",
        "favorite",
        "feature",
        "february",
        "federal",
        "fee",
        "feed",
        "feel",
        "female",
        "fence",
        "festival",
        "fetch",
        "fever",
        "few",
        "fiber",
        "fiction",
        "field",
        "figure",
        "file",
        "film",
        "filter",
        "final",
        "find",
        "fine",
        "finger",
        "finish",
        "fire",
        "firm",
        "first",
        "fiscal",
        "fish",
        "fit",
        "fitness",
        "fix",
        "flag",
        "flame",
        "flash",
        "flat",
        "flavor",
        "flee",
        "flight",
        "flip",
        "float",
        "flock",
        "floor",
        "flower",
        "fluid",
        "flush",
        "fly",
        "foam",
        "focus",
        "fog",
        "foil",
        "fold",
        "follow",
        "food",
        "foot",
        "force",
        "forest",
        "forget",
        "fork",
        "fortune",
        "forum",
        "forward",
        "fossil",
        "foster",
        "found",
        "fox",
        "fragile",
        "frame",
        "frequent",
        "fresh",
        "friend",
        "fringe",
        "frog",
        "front",
        "frost",
        "frown",
        "frozen",
        "fruit",
        "fuel",
        "fun",
        "funny",
        "furnace",
        "fury",
        "future",
        "gadget",
        "gain",
        "galaxy",
        "gallery",
        "game",
        "gap",
        "garage",
        "garbage",
        "garden",
        "garlic",
        "garment",
        "gas",
        "gasp",
        "gate",
        "gather",
        "gauge",
        "gaze",
        "general",
        "genius",
        "genre",
        "gentle",
        "genuine",
        "gesture",
        "ghost",
        "giant",
        "gift",
        "giggle",
        "ginger",
        "giraffe",
        "girl",
        "give",
        "glad",
        "glance",
        "glare",
        "glass",
        "glide",
        "glimpse",
        "globe",
        "gloom",
        "glory",
        "glove",
        "glow",
        "glue",
        "goat",
        "goddess",
        "gold",
        "good",
        "goose",
        "gorilla",
        "gospel",
        "gossip",
        "govern",
        "gown",
        "grab",
        "grace",
        "grain",
        "grant",
        "grape",
        "grass",
        "gravity",
        "great",
        "green",
        "grid",
        "grief",
        "grit",
        "grocery",
        "group",
        "grow",
        "grunt",
        "guard",
        "guess",
        "guide",
        "guilt",
        "guitar",
        "gun",
        "gym",
        "habit",
        "hair",
        "half",
        "hammer",
        "hamster",
        "hand",
        "happy",
        "harbor",
        "hard",
        "harsh",
        "harvest",
        "hat",
        "have",
        "hawk",
        "hazard",
        "head",
        "health",
        "heart",
        "heavy",
        "hedgehog",
        "height",
        "hello",
        "helmet",
        "help",
        "hen",
        "hero",
        "hidden",
        "high",
        "hill",
        "hint",
        "hip",
        "hire",
        "history",
        "hobby",
        "hockey",
        "hold",
        "hole",
        "holiday",
        "hollow",
        "home",
        "honey",
        "hood",
        "hope",
        "horn",
        "horror",
        "horse",
        "hospital",
        "host",
        "hotel",
        "hour",
        "hover",
        "hub",
        "huge",
        "human",
        "humble",
        "humor",
        "hundred",
        "hungry",
        "hunt",
        "hurdle",
        "hurry",
        "hurt",
        "husband",
        "hybrid",
        "ice",
        "icon",
        "idea",
        "identify",
        "idle",
        "ignore",
        "ill",
        "illegal",
        "illness",
        "image",
        "imitate",
        "immense",
        "immune",
        "impact",
        "impose",
        "improve",
        "impulse",
        "inch",
        "include",
        "income",
        "increase",
        "index",
        "indicate",
        "indoor",
        "industry",
        "infant",
        "inflict",
        "inform",
        "inhale",
        "inherit",
        "initial",
        "inject",
        "injury",
        "inmate",
        "inner",
        "innocent",
        "input",
        "inquiry",
        "insane",
        "insect",
        "inside",
        "inspire",
        "install",
        "intact",
        "interest",
        "into",
        "invest",
        "invite",
        "involve",
        "iron",
        "island",
        "isolate",
        "issue",
        "item",
        "ivory",
        "jacket",
        "jaguar",
        "jar",
        "jazz",
        "jealous",
        "jeans",
        "jelly",
        "jewel",
        "job",
        "join",
        "joke",
        "journey",
        "joy",
        "judge",
        "juice",
        "jump",
        "jungle",
        "junior",
        "junk",
        "just",
        "kangaroo",
        "keen",
        "keep",
        "ketchup",
        "key",
        "kick",
        "kid",
        "kidney",
        "kind",
        "kingdom",
        "kiss",
        "kit",
        "kitchen",
        "kite",
        "kitten",
        "kiwi",
        "knee",
        "knife",
        "knock",
        "know",
        "lab",
        "label",
        "labor",
        "ladder",
        "lady",
        "lake",
        "lamp",
        "language",
        "laptop",
        "large",
        "later",
        "latin",
        "laugh",
        "laundry",
        "lava",
        "law",
        "lawn",
        "lawsuit",
        "layer",
        "lazy",
        "leader",
        "leaf",
        "learn",
        "leave",
        "lecture",
        "left",
        "leg",
        "legal",
        "legend",
        "leisure",
        "lemon",
        "lend",
        "length",
        "lens",
        "leopard",
        "lesson",
        "letter",
        "level",
        "liar",
        "liberty",
        "library",
        "license",
        "life",
        "lift",
        "light",
        "like",
        "limb",
        "limit",
        "link",
        "lion",
        "liquid",
        "list",
        "little",
        "live",
        "lizard",
        "load",
        "loan",
        "lobster",
        "local",
        "lock",
        "logic",
        "lonely",
        "long",
        "loop",
        "lottery",
        "loud",
        "lounge",
        "love",
        "loyal",
        "lucky",
        "luggage",
        "lumber",
        "lunar",
        "lunch",
        "luxury",
        "lyrics",
        "machine",
        "mad",
        "magic",
        "magnet",
        "maid",
        "mail",
        "main",
        "major",
        "make",
        "mammal",
        "man",
        "manage",
        "mandate",
        "mango",
        "mansion",
        "manual",
        "maple",
        "marble",
        "march",
        "margin",
        "marine",
        "market",
        "marriage",
        "mask",
        "mass",
        "master",
        "match",
        "material",
        "math",
        "matrix",
        "matter",
        "maximum",
        "maze",
        "meadow",
        "mean",
        "measure",
        "meat",
        "mechanic",
        "medal",
        "media",
        "melody",
        "melt",
        "member",
        "memory",
        "mention",
        "menu",
        "mercy",
        "merge",
        "merit",
        "merry",
        "mesh",
        "message",
        "metal",
        "method",
        "middle",
        "midnight",
        "milk",
        "million",
        "mimic",
        "mind",
        "minimum",
        "minor",
        "minute",
        "miracle",
        "mirror",
        "misery",
        "miss",
        "mistake",
        "mix",
        "mixed",
        "mixture",
        "mobile",
        "model",
        "modify",
        "mom",
        "moment",
        "monitor",
        "monkey",
        "monster",
        "month",
        "moon",
        "moral",
        "more",
        "morning",
        "mosquito",
        "mother",
        "motion",
        "motor",
        "mountain",
        "mouse",
        "move",
        "movie",
        "much",
        "muffin",
        "mule",
        "multiply",
        "muscle",
        "museum",
        "mushroom",
        "music",
        "must",
        "mutual",
        "myself",
        "mystery",
        "myth",
        "naive",
        "name",
        "napkin",
        "narrow",
        "nasty",
        "nation",
        "nature",
        "near",
        "neck",
        "need",
        "negative",
        "neglect",
        "neither",
        "nephew",
        "nerve",
        "nest",
        "net",
        "network",
        "neutral",
        "never",
        "news",
        "next",
        "nice",
        "night",
        "noble",
        "noise",
        "nominee",
        "noodle",
        "normal",
        "north",
        "nose",
        "notable",
        "note",
        "nothing",
        "notice",
        "novel",
        "now",
        "nuclear",
        "number",
        "nurse",
        "nut",
        "oak",
        "obey",
        "object",
        "oblige",
        "obscure",
        "observe",
        "obtain",
        "obvious",
        "occur",
        "ocean",
        "october",
        "odor",
        "off",
        "offer",
        "office",
        "often",
        "oil",
        "okay",
        "old",
        "olive",
        "olympic",
        "omit",
        "once",
        "one",
        "onion",
        "online",
        "only",
        "open",
        "opera",
        "opinion",
        "oppose",
        "option",
        "orange",
        "orbit",
        "orchard",
        "order",
        "ordinary",
        "organ",
        "orient",
        "original",
        "orphan",
        "ostrich",
        "other",
        "outdoor",
        "outer",
        "output",
        "outside",
        "oval",
        "oven",
        "over",
        "own",
        "owner",
        "oxygen",
        "oyster",
        "ozone",
        "pact",
        "paddle",
        "page",
        "pair",
        "palace",
        "palm",
        "panda",
        "panel",
        "panic",
        "panther",
        "paper",
        "parade",
        "parent",
        "park",
        "parrot",
        "party",
        "pass",
        "patch",
        "path",
        "patient",
        "patrol",
        "pattern",
        "pause",
        "pave",
        "payment",
        "peace",
        "peanut",
        "pear",
        "peasant",
        "pelican",
        "pen",
        "penalty",
        "pencil",
        "people",
        "pepper",
        "perfect",
        "permit",
        "person",
        "pet",
        "phone",
        "photo",
        "phrase",
        "physical",
        "piano",
        "picnic",
        "picture",
        "piece",
        "pig",
        "pigeon",
        "pill",
        "pilot",
        "pink",
        "pioneer",
        "pipe",
        "pistol",
        "pitch",
        "pizza",
        "place",
        "planet",
        "plastic",
        "plate",
        "play",
        "please",
        "pledge",
        "pluck",
        "plug",
        "plunge",
        "poem",
        "poet",
        "point",
        "polar",
        "pole",
        "police",
        "pond",
        "pony",
        "pool",
        "popular",
        "portion",
        "position",
        "possible",
        "post",
        "potato",
        "pottery",
        "poverty",
        "powder",
        "power",
        "practice",
        "praise",
        "predict",
        "prefer",
        "prepare",
        "present",
        "pretty",
        "prevent",
        "price",
        "pride",
        "primary",
        "print",
        "priority",
        "prison",
        "private",
        "prize",
        "problem",
        "process",
        "produce",
        "profit",
        "program",
        "project",
        "promote",
        "proof",
        "property",
        "prosper",
        "protect",
        "proud",
        "provide",
        "public",
        "pudding",
        "pull",
        "pulp",
        "pulse",
        "pumpkin",
        "punch",
        "pupil",
        "puppy",
        "purchase",
        "purity",
        "purpose",
        "purse",
        "push",
        "put",
        "puzzle",
        "pyramid",
        "quality",
        "quantum",
        "quarter",
        "question",
        "quick",
        "quit",
        "quiz",
        "quote",
        "rabbit",
        "raccoon",
        "race",
        "rack",
        "radar",
        "radio",
        "rail",
        "rain",
        "raise",
        "rally",
        "ramp",
        "ranch",
        "random",
        "range",
        "rapid",
        "rare",
        "rate",
        "rather",
        "raven",
        "raw",
        "razor",
        "ready",
        "real",
        "reason",
        "rebel",
        "rebuild",
        "recall",
        "receive",
        "recipe",
        "record",
        "recycle",
        "reduce",
        "reflect",
        "reform",
        "refuse",
        "region",
        "regret",
        "regular",
        "reject",
        "relax",
        "release",
        "relief",
        "rely",
        "remain",
        "remember",
        "remind",
        "remove",
        "render",
        "renew",
        "rent",
        "reopen",
        "repair",
        "repeat",
        "replace",
        "report",
        "require",
        "rescue",
        "resemble",
        "resist",
        "resource",
        "response",
        "result",
        "retire",
        "retreat",
        "return",
        "reunion",
        "reveal",
        "review",
        "reward",
        "rhythm",
        "rib",
        "ribbon",
        "rice",
        "rich",
        "ride",
        "ridge",
        "rifle",
        "right",
        "rigid",
        "ring",
        "riot",
        "ripple",
        "risk",
        "ritual",
        "rival",
        "river",
        "road",
        "roast",
        "robot",
        "robust",
        "rocket",
        "romance",
        "roof",
        "rookie",
        "room",
        "rose",
        "rotate",
        "rough",
        "round",
        "route",
        "royal",
        "rubber",
        "rude",
        "rug",
        "rule",
        "run",
        "runway",
        "rural",
        "sad",
        "saddle",
        "sadness",
        "safe",
        "sail",
        "salad",
        "salmon",
        "salon",
        "salt",
        "salute",
        "same",
        "sample",
        "sand",
        "satisfy",
        "satoshi",
        "sauce",
        "sausage",
        "save",
        "say",
        "scale",
        "scan",
        "scare",
        "scatter",
        "scene",
        "scheme",
        "school",
        "science",
        "scissors",
        "scorpion",
        "scout",
        "scrap",
        "screen",
        "script",
        "scrub",
        "sea",
        "search",
        "season",
        "seat",
        "second",
        "secret",
        "section",
        "security",
        "seed",
        "seek",
        "segment",
        "select",
        "sell",
        "seminar",
        "senior",
        "sense",
        "sentence",
        "series",
        "service",
        "session",
        "settle",
        "setup",
        "seven",
        "shadow",
        "shaft",
        "shallow",
        "share",
        "shed",
        "shell",
        "sheriff",
        "shield",
        "shift",
        "shine",
        "ship",
        "shiver",
        "shock",
        "shoe",
        "shoot",
        "shop",
        "short",
        "shoulder",
        "shove",
        "shrimp",
        "shrug",
        "shuffle",
        "shy",
        "sibling",
        "sick",
        "side",
        "siege",
        "sight",
        "sign",
        "silent",
        "silk",
        "silly",
        "silver",
        "similar",
        "simple",
        "since",
        "sing",
        "siren",
        "sister",
        "situate",
        "six",
        "size",
        "skate",
        "sketch",
        "ski",
        "skill",
        "skin",
        "skirt",
        "skull",
        "slab",
        "slam",
        "sleep",
        "slender",
        "slice",
        "slide",
        "slight",
        "slim",
        "slogan",
        "slot",
        "slow",
        "slush",
        "small",
        "smart",
        "smile",
        "smoke",
        "smooth",
        "snack",
        "snake",
        "snap",
        "sniff",
        "snow",
        "soap",
        "soccer",
        "social",
        "sock",
        "soda",
        "soft",
        "solar",
        "soldier",
        "solid",
        "solution",
        "solve",
        "someone",
        "song",
        "soon",
        "sorry",
        "sort",
        "soul",
        "sound",
        "soup",
        "source",
        "south",
        "space",
        "spare",
        "spatial",
        "spawn",
        "speak",
        "special",
        "speed",
        "spell",
        "spend",
        "sphere",
        "spice",
        "spider",
        "spike",
        "spin",
        "spirit",
        "split",
        "spoil",
        "sponsor",
        "spoon",
        "sport",
        "spot",
        "spray",
        "spread",
        "spring",
        "spy",
        "square",
        "squeeze",
        "squirrel",
        "stable",
        "stadium",
        "staff",
        "stage",
        "stairs",
        "stamp",
        "stand",
        "start",
        "state",
        "stay",
        "steak",
        "steel",
        "stem",
        "step",
        "stereo",
        "stick",
        "still",
        "sting",
        "stock",
        "stomach",
        "stone",
        "stool",
        "story",
        "stove",
        "strategy",
        "street",
        "strike",
        "strong",
        "struggle",
        "student",
        "stuff",
        "stumble",
        "style",
        "subject",
        "submit",
        "subway",
        "success",
        "such",
        "sudden",
        "suffer",
        "sugar",
        "suggest",
        "suit",
        "summer",
        "sun",
        "sunny",
        "sunset",
        "super",
        "supply",
        "supreme",
        "sure",
        "surface",
        "surge",
        "surprise",
        "surround",
        "survey",
        "suspect",
        "sustain",
        "swallow",
        "swamp",
        "swap",
        "swarm",
        "swear",
        "sweet",
        "swift",
        "swim",
        "swing",
        "switch",
        "sword",
        "symbol",
        "symptom",
        "syrup",
        "system",
        "table",
        "tackle",
        "tag",
        "tail",
        "talent",
        "talk",
        "tank",
        "tape",
        "target",
        "task",
        "taste",
        "tattoo",
        "taxi",
        "teach",
        "team",
        "tell",
        "ten",
        "tenant",
        "tennis",
        "tent",
        "term",
        "test",
        "text",
        "thank",
        "that",
        "theme",
        "then",
        "theory",
        "there",
        "they",
        "thing",
        "this",
        "thought",
        "three",
        "thrive",
        "throw",
        "thumb",
        "thunder",
        "ticket",
        "tide",
        "tiger",
        "tilt",
        "timber",
        "time",
        "tiny",
        "tip",
        "tired",
        "tissue",
        "title",
        "toast",
        "tobacco",
        "today",
        "toddler",
        "toe",
        "together",
        "toilet",
        "token",
        "tomato",
        "tomorrow",
        "tone",
        "tongue",
        "tonight",
        "tool",
        "tooth",
        "top",
        "topic",
        "topple",
        "torch",
        "tornado",
        "tortoise",
        "toss",
        "total",
        "tourist",
        "toward",
        "tower",
        "town",
        "toy",
        "track",
        "trade",
        "traffic",
        "tragic",
        "train",
        "transfer",
        "trap",
        "trash",
        "travel",
        "tray",
        "treat",
        "tree",
        "trend",
        "trial",
        "tribe",
        "trick",
        "trigger",
        "trim",
        "trip",
        "trophy",
        "trouble",
        "truck",
        "true",
        "truly",
        "trumpet",
        "trust",
        "truth",
        "try",
        "tube",
        "tuition",
        "tumble",
        "tuna",
        "tunnel",
        "turkey",
        "turn",
        "turtle",
        "twelve",
        "twenty",
        "twice",
        "twin",
        "twist",
        "two",
        "type",
        "typical",
        "ugly",
        "umbrella",
        "unable",
        "unaware",
        "uncle",
        "uncover",
        "under",
        "undo",
        "unfair",
        "unfold",
        "unhappy",
        "uniform",
        "unique",
        "unit",
        "universe",
        "unknown",
        "unlock",
        "until",
        "unusual",
        "unveil",
        "update",
        "upgrade",
        "uphold",
        "upon",
        "upper",
        "upset",
        "urban",
        "urge",
        "usage",
        "use",
        "used",
        "useful",
        "useless",
        "usual",
        "utility",
        "vacant",
        "vacuum",
        "vague",
        "valid",
        "valley",
        "valve",
        "van",
        "vanish",
        "vapor",
        "various",
        "vast",
        "vault",
        "vehicle",
        "velvet",
        "vendor",
        "venture",
        "venue",
        "verb",
        "verify",
        "version",
        "very",
        "vessel",
        "veteran",
        "viable",
        "vibrant",
        "vicious",
        "victory",
        "video",
        "view",
        "village",
        "vintage",
        "violin",
        "virtual",
        "virus",
        "visa",
        "visit",
        "visual",
        "vital",
        "vivid",
        "vocal",
        "voice",
        "void",
        "volcano",
        "volume",
        "vote",
        "voyage",
        "wage",
        "wagon",
        "wait",
        "walk",
        "wall",
        "walnut",
        "want",
        "warfare",
        "warm",
        "warrior",
        "wash",
        "wasp",
        "waste",
        "water",
        "wave",
        "way",
        "wealth",
        "weapon",
        "wear",
        "weasel",
        "weather",
        "web",
        "wedding",
        "weekend",
        "weird",
        "welcome",
        "west",
        "wet",
        "whale",
        "what",
        "wheat",
        "wheel",
        "when",
        "where",
        "whip",
        "whisper",
        "wide",
        "width",
        "wife",
        "wild",
        "will",
        "win",
        "window",
        "wine",
        "wing",
        "wink",
        "winner",
        "winter",
        "wire",
        "wisdom",
        "wise",
        "wish",
        "witness",
        "wolf",
        "woman",
        "wonder",
        "wood",
        "wool",
        "word",
        "work",
        "world",
        "worry",
        "worth",
        "wrap",
        "wreck",
        "wrestle",
        "wrist",
        "write",
        "wrong",
        "yard",
        "year",
        "yellow",
        "you",
        "young",
        "youth",
        "zebra",
        "zero",
        "zone",
        "zoo"
      ];
    }
  });

  // node_modules/bip39/src/_wordlists.js
  var require_wordlists = __commonJS({
    "node_modules/bip39/src/_wordlists.js"(exports2) {
      "use strict";
      init_polyfills();
      Object.defineProperty(exports2, "__esModule", { value: true });
      var wordlists = {};
      exports2.wordlists = wordlists;
      var _default;
      exports2._default = _default;
      try {
        exports2._default = _default = require_chinese_simplified();
        wordlists.chinese_simplified = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_chinese_traditional();
        wordlists.chinese_traditional = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_korean();
        wordlists.korean = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_french();
        wordlists.french = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_italian();
        wordlists.italian = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_spanish();
        wordlists.spanish = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_japanese();
        wordlists.japanese = _default;
        wordlists.JA = _default;
      } catch (err) {
      }
      try {
        exports2._default = _default = require_english();
        wordlists.english = _default;
        wordlists.EN = _default;
      } catch (err) {
      }
    }
  });

  // node_modules/bip39/src/index.js
  var require_src3 = __commonJS({
    "node_modules/bip39/src/index.js"(exports2) {
      "use strict";
      init_polyfills();
      Object.defineProperty(exports2, "__esModule", { value: true });
      var createHash = require_browser2();
      var pbkdf2_1 = require_browser4();
      var randomBytes = require_browser5();
      var _wordlists_1 = require_wordlists();
      var DEFAULT_WORDLIST = _wordlists_1._default;
      var INVALID_MNEMONIC = "Invalid mnemonic";
      var INVALID_ENTROPY = "Invalid entropy";
      var INVALID_CHECKSUM = "Invalid mnemonic checksum";
      var WORDLIST_REQUIRED = "A wordlist is required but a default could not be found.\nPlease explicitly pass a 2048 word array explicitly.";
      function lpad(str, padString, length) {
        while (str.length < length)
          str = padString + str;
        return str;
      }
      function binaryToByte(bin) {
        return parseInt(bin, 2);
      }
      function bytesToBinary(bytes) {
        return bytes.map((x) => lpad(x.toString(2), "0", 8)).join("");
      }
      function deriveChecksumBits(entropyBuffer) {
        const ENT = entropyBuffer.length * 8;
        const CS = ENT / 32;
        const hash = createHash("sha256").update(entropyBuffer).digest();
        return bytesToBinary([...hash]).slice(0, CS);
      }
      function salt(password) {
        return "mnemonic" + (password || "");
      }
      function mnemonicToSeedSync2(mnemonic, password) {
        const mnemonicBuffer = Buffer2.from((mnemonic || "").normalize("NFKD"), "utf8");
        const saltBuffer = Buffer2.from(salt((password || "").normalize("NFKD")), "utf8");
        return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, "sha512");
      }
      exports2.mnemonicToSeedSync = mnemonicToSeedSync2;
      function mnemonicToSeed(mnemonic, password) {
        return new Promise((resolve, reject) => {
          try {
            const mnemonicBuffer = Buffer2.from((mnemonic || "").normalize("NFKD"), "utf8");
            const saltBuffer = Buffer2.from(salt((password || "").normalize("NFKD")), "utf8");
            pbkdf2_1.pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, "sha512", (err, data) => {
              if (err)
                return reject(err);
              else
                return resolve(data);
            });
          } catch (error) {
            return reject(error);
          }
        });
      }
      exports2.mnemonicToSeed = mnemonicToSeed;
      function mnemonicToEntropy(mnemonic, wordlist) {
        wordlist = wordlist || DEFAULT_WORDLIST;
        if (!wordlist) {
          throw new Error(WORDLIST_REQUIRED);
        }
        const words = (mnemonic || "").normalize("NFKD").split(" ");
        if (words.length % 3 !== 0)
          throw new Error(INVALID_MNEMONIC);
        const bits = words.map((word) => {
          const index = wordlist.indexOf(word);
          if (index === -1)
            throw new Error(INVALID_MNEMONIC);
          return lpad(index.toString(2), "0", 11);
        }).join("");
        const dividerIndex = Math.floor(bits.length / 33) * 32;
        const entropyBits = bits.slice(0, dividerIndex);
        const checksumBits = bits.slice(dividerIndex);
        const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);
        if (entropyBytes.length < 16)
          throw new Error(INVALID_ENTROPY);
        if (entropyBytes.length > 32)
          throw new Error(INVALID_ENTROPY);
        if (entropyBytes.length % 4 !== 0)
          throw new Error(INVALID_ENTROPY);
        const entropy = Buffer2.from(entropyBytes);
        const newChecksum = deriveChecksumBits(entropy);
        if (newChecksum !== checksumBits)
          throw new Error(INVALID_CHECKSUM);
        return entropy.toString("hex");
      }
      exports2.mnemonicToEntropy = mnemonicToEntropy;
      function entropyToMnemonic(entropy, wordlist) {
        if (!Buffer2.isBuffer(entropy))
          entropy = Buffer2.from(entropy, "hex");
        wordlist = wordlist || DEFAULT_WORDLIST;
        if (!wordlist) {
          throw new Error(WORDLIST_REQUIRED);
        }
        if (entropy.length < 16)
          throw new TypeError(INVALID_ENTROPY);
        if (entropy.length > 32)
          throw new TypeError(INVALID_ENTROPY);
        if (entropy.length % 4 !== 0)
          throw new TypeError(INVALID_ENTROPY);
        const entropyBits = bytesToBinary([...entropy]);
        const checksumBits = deriveChecksumBits(entropy);
        const bits = entropyBits + checksumBits;
        const chunks = bits.match(/(.{1,11})/g);
        const words = chunks.map((binary) => {
          const index = binaryToByte(binary);
          return wordlist[index];
        });
        return wordlist[0] === "\u3042\u3044\u3053\u304F\u3057\u3093" ? words.join("\u3000") : words.join(" ");
      }
      exports2.entropyToMnemonic = entropyToMnemonic;
      function generateMnemonic(strength, rng, wordlist) {
        strength = strength || 128;
        if (strength % 32 !== 0)
          throw new TypeError(INVALID_ENTROPY);
        rng = rng || randomBytes;
        return entropyToMnemonic(rng(strength / 8), wordlist);
      }
      exports2.generateMnemonic = generateMnemonic;
      function validateMnemonic(mnemonic, wordlist) {
        try {
          mnemonicToEntropy(mnemonic, wordlist);
        } catch (e) {
          return false;
        }
        return true;
      }
      exports2.validateMnemonic = validateMnemonic;
      function setDefaultWordlist(language) {
        const result = _wordlists_1.wordlists[language];
        if (result)
          DEFAULT_WORDLIST = result;
        else
          throw new Error('Could not find wordlist for language "' + language + '"');
      }
      exports2.setDefaultWordlist = setDefaultWordlist;
      function getDefaultWordlist() {
        if (!DEFAULT_WORDLIST)
          throw new Error("No Default Wordlist set");
        return Object.keys(_wordlists_1.wordlists).filter((lang) => {
          if (lang === "JA" || lang === "EN")
            return false;
          return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);
        })[0];
      }
      exports2.getDefaultWordlist = getDefaultWordlist;
      var _wordlists_2 = require_wordlists();
      exports2.wordlists = _wordlists_2.wordlists;
    }
  });

  // src/api.ts
  init_polyfills();

  // src/pkg/precompiles.js
  init_polyfills();
  var import_meta = {};
  var wasm;
  function addToExternrefTable0(obj) {
    const idx = wasm.__externref_table_alloc();
    wasm.__wbindgen_export_2.set(idx, obj);
    return idx;
  }
  function handleError(f, args) {
    try {
      return f.apply(this, args);
    } catch (e) {
      const idx = addToExternrefTable0(e);
      wasm.__wbindgen_exn_store(idx);
    }
  }
  function getFromExternrefTable0(idx) {
    return wasm.__wbindgen_export_2.get(idx);
  }
  var cachedTextDecoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {
    throw Error("TextDecoder not available");
  } };
  if (typeof TextDecoder !== "undefined") {
    cachedTextDecoder.decode();
  }
  var cachedUint8ArrayMemory0 = null;
  function getUint8ArrayMemory0() {
    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {
      cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8ArrayMemory0;
  }
  function getStringFromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));
  }
  function getCachedStringFromWasm0(ptr, len) {
    if (ptr === 0) {
      return getFromExternrefTable0(len);
    } else {
      return getStringFromWasm0(ptr, len);
    }
  }
  function isLikeNone(x) {
    return x === void 0 || x === null;
  }
  function recover_mnemonic(shares_serialized) {
    const ret = wasm.recover_mnemonic(shares_serialized);
    var v12 = getCachedStringFromWasm0(ret[0], ret[1]);
    if (ret[0] !== 0) {
      wasm.__wbindgen_free(ret[0], ret[1], 1);
    }
    return v12;
  }
  async function __wbg_load(module2, imports) {
    if (typeof Response === "function" && module2 instanceof Response) {
      if (typeof WebAssembly.instantiateStreaming === "function") {
        try {
          return await WebAssembly.instantiateStreaming(module2, imports);
        } catch (e) {
          if (module2.headers.get("Content-Type") != "application/wasm") {
            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
          } else {
            throw e;
          }
        }
      }
      const bytes = await module2.arrayBuffer();
      return await WebAssembly.instantiate(bytes, imports);
    } else {
      const instance = await WebAssembly.instantiate(module2, imports);
      if (instance instanceof WebAssembly.Instance) {
        return { instance, module: module2 };
      } else {
        return instance;
      }
    }
  }
  function __wbg_get_imports() {
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {
      const ret = arg0.buffer;
      return ret;
    };
    imports.wbg.__wbg_call_672a4d21634d4a24 = function() {
      return handleError(function(arg0, arg1) {
        const ret = arg0.call(arg1);
        return ret;
      }, arguments);
    };
    imports.wbg.__wbg_call_7cccdd69e0791ae2 = function() {
      return handleError(function(arg0, arg1, arg2) {
        const ret = arg0.call(arg1, arg2);
        return ret;
      }, arguments);
    };
    imports.wbg.__wbg_crypto_574e78ad8b13b65f = function(arg0) {
      const ret = arg0.crypto;
      return ret;
    };
    imports.wbg.__wbg_getRandomValues_b8f5dbd5f3995a9e = function() {
      return handleError(function(arg0, arg1) {
        arg0.getRandomValues(arg1);
      }, arguments);
    };
    imports.wbg.__wbg_get_b9b93047fe3cf45b = function(arg0, arg1) {
      const ret = arg0[arg1 >>> 0];
      return ret;
    };
    imports.wbg.__wbg_instanceof_Uint8Array_17156bcf118086a9 = function(arg0) {
      let result;
      try {
        result = arg0 instanceof Uint8Array;
      } catch (_) {
        result = false;
      }
      const ret = result;
      return ret;
    };
    imports.wbg.__wbg_length_a446193dc22c12f8 = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_length_e2d2a49132c1b256 = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_log_c222819a41e063d3 = function(arg0) {
      console.log(arg0);
    };
    imports.wbg.__wbg_msCrypto_a61aeb35a24c1329 = function(arg0) {
      const ret = arg0.msCrypto;
      return ret;
    };
    imports.wbg.__wbg_new_a12002a7f91c75be = function(arg0) {
      const ret = new Uint8Array(arg0);
      return ret;
    };
    imports.wbg.__wbg_newnoargs_105ed471475aaf50 = function(arg0, arg1) {
      var v02 = getCachedStringFromWasm0(arg0, arg1);
      const ret = new Function(v02);
      return ret;
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a = function(arg0, arg1, arg2) {
      const ret = new Uint8Array(arg0, arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_newwithlength_a381634e90c276d4 = function(arg0) {
      const ret = new Uint8Array(arg0 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_node_905d3e251edff8a2 = function(arg0) {
      const ret = arg0.node;
      return ret;
    };
    imports.wbg.__wbg_process_dc0fbacc7c1c06f7 = function(arg0) {
      const ret = arg0.process;
      return ret;
    };
    imports.wbg.__wbg_randomFillSync_ac0988aba3254290 = function() {
      return handleError(function(arg0, arg1) {
        arg0.randomFillSync(arg1);
      }, arguments);
    };
    imports.wbg.__wbg_require_60cc747a6bc5215a = function() {
      return handleError(function() {
        const ret = module.require;
        return ret;
      }, arguments);
    };
    imports.wbg.__wbg_set_65595bdd868b3009 = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07 = function() {
      const ret = typeof globalThis === "undefined" ? null : globalThis;
      return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);
    };
    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0 = function() {
      const ret = typeof globalThis === "undefined" ? null : globalThis;
      return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);
    };
    imports.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819 = function() {
      const ret = typeof self === "undefined" ? null : self;
      return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);
    };
    imports.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40 = function() {
      const ret = typeof window === "undefined" ? null : window;
      return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);
    };
    imports.wbg.__wbg_subarray_aa9065fa9dc5df96 = function(arg0, arg1, arg2) {
      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_versions_c01dfd4722a88165 = function(arg0) {
      const ret = arg0.versions;
      return ret;
    };
    imports.wbg.__wbindgen_init_externref_table = function() {
      const table = wasm.__wbindgen_export_2;
      const offset = table.grow(4);
      table.set(0, void 0);
      table.set(offset + 0, void 0);
      table.set(offset + 1, null);
      table.set(offset + 2, true);
      table.set(offset + 3, false);
      ;
    };
    imports.wbg.__wbindgen_is_function = function(arg0) {
      const ret = typeof arg0 === "function";
      return ret;
    };
    imports.wbg.__wbindgen_is_object = function(arg0) {
      const val = arg0;
      const ret = typeof val === "object" && val !== null;
      return ret;
    };
    imports.wbg.__wbindgen_is_string = function(arg0) {
      const ret = typeof arg0 === "string";
      return ret;
    };
    imports.wbg.__wbindgen_is_undefined = function(arg0) {
      const ret = arg0 === void 0;
      return ret;
    };
    imports.wbg.__wbindgen_memory = function() {
      const ret = wasm.memory;
      return ret;
    };
    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
      const ret = getStringFromWasm0(arg0, arg1);
      return ret;
    };
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
      throw new Error(getStringFromWasm0(arg0, arg1));
    };
    return imports;
  }
  function __wbg_init_memory(imports, memory) {
  }
  function __wbg_finalize_init(instance, module2) {
    wasm = instance.exports;
    __wbg_init.__wbindgen_wasm_module = module2;
    cachedUint8ArrayMemory0 = null;
    wasm.__wbindgen_start();
    return wasm;
  }
  function initSync(module2) {
    if (wasm !== void 0) return wasm;
    if (typeof module2 !== "undefined") {
      if (Object.getPrototypeOf(module2) === Object.prototype) {
        ({ module: module2 } = module2);
      } else {
        console.warn("using deprecated parameters for `initSync()`; pass a single object instead");
      }
    }
    const imports = __wbg_get_imports();
    __wbg_init_memory(imports);
    if (!(module2 instanceof WebAssembly.Module)) {
      module2 = new WebAssembly.Module(module2);
    }
    const instance = new WebAssembly.Instance(module2, imports);
    return __wbg_finalize_init(instance, module2);
  }
  async function __wbg_init(module_or_path) {
    if (wasm !== void 0) return wasm;
    if (typeof module_or_path !== "undefined") {
      if (Object.getPrototypeOf(module_or_path) === Object.prototype) {
        ({ module_or_path } = module_or_path);
      } else {
        console.warn("using deprecated parameters for the initialization function; pass a single object instead");
      }
    }
    if (typeof module_or_path === "undefined") {
      module_or_path = new URL("precompiles_bg.wasm", import_meta.url);
    }
    const imports = __wbg_get_imports();
    if (typeof module_or_path === "string" || typeof Request === "function" && module_or_path instanceof Request || typeof URL === "function" && module_or_path instanceof URL) {
      module_or_path = fetch(module_or_path);
    }
    __wbg_init_memory(imports);
    const { instance, module: module2 } = await __wbg_load(await module_or_path, imports);
    return __wbg_finalize_init(instance, module2);
  }

  // src/seed.ts
  init_polyfills();
  var bip32 = __toESM(require_src2(), 1);
  var bip39 = __toESM(require_src3(), 1);
  var import_bs58check = __toESM(require_bs58check(), 1);
  var import_safe_buffer = __toESM(require_safe_buffer(), 1);

  // node_modules/mina-signer/dist/web/index.js
  init_polyfills();
  var Mn = Object.create;
  var g0 = Object.defineProperty;
  var _n = Object.getOwnPropertyDescriptor;
  var On = Object.getOwnPropertyNames;
  var Kn = Object.getPrototypeOf;
  var zn = Object.prototype.hasOwnProperty;
  var Te = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);
  var Vn = (e, t, n, r) => {
    if (t && typeof t == "object" || typeof t == "function") for (let i of On(t)) !zn.call(e, i) && i !== n && g0(e, i, { get: () => t[i], enumerable: !(r = _n(t, i)) || r.enumerable });
    return e;
  };
  var It = (e, t, n) => (n = e != null ? Mn(Kn(e)) : {}, Vn(t || !e || !e.__esModule ? g0(n, "default", { value: e, enumerable: true }) : n, e));
  var V0 = Te((exports, module) => {
    (function() {
      "use strict";
      var ERROR = "input is invalid type", WINDOW = typeof window == "object", root = WINDOW ? window : {};
      root.JS_SHA256_NO_WINDOW && (WINDOW = false);
      var WEB_WORKER = !WINDOW && typeof self == "object", NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
      NODE_JS ? root = globalThis : WEB_WORKER && (root = self);
      var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module == "object" && module.exports, AMD = typeof define == "function" && define.amd, ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [-2147483648, 8388608, 32768, 128], SHIFT = [24, 16, 8, 0], K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"], blocks = [];
      (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(e) {
        return Object.prototype.toString.call(e) === "[object Array]";
      }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(e) {
        return typeof e == "object" && e.buffer && e.buffer.constructor === ArrayBuffer;
      });
      var createOutputMethod = function(e, t) {
        return function(n) {
          return new Sha256(t, true).update(n)[e]();
        };
      }, createMethod = function(e) {
        var t = createOutputMethod("hex", e);
        NODE_JS && (t = nodeWrap(t, e)), t.create = function() {
          return new Sha256(e);
        }, t.update = function(i) {
          return t.create().update(i);
        };
        for (var n = 0; n < OUTPUT_TYPES.length; ++n) {
          var r = OUTPUT_TYPES[n];
          t[r] = createOutputMethod(r, e);
        }
        return t;
      }, nodeWrap = function(method, is224) {
        var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), algorithm = is224 ? "sha224" : "sha256", nodeMethod = function(e) {
          if (typeof e == "string") return crypto.createHash(algorithm).update(e, "utf8").digest("hex");
          if (e == null) throw new Error(ERROR);
          return e.constructor === ArrayBuffer && (e = new Uint8Array(e)), Array.isArray(e) || ArrayBuffer.isView(e) || e.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(e)).digest("hex") : method(e);
        };
        return nodeMethod;
      }, createHmacOutputMethod = function(e, t) {
        return function(n, r) {
          return new HmacSha256(n, t, true).update(r)[e]();
        };
      }, createHmacMethod = function(e) {
        var t = createHmacOutputMethod("hex", e);
        t.create = function(i) {
          return new HmacSha256(i, e);
        }, t.update = function(i, o) {
          return t.create(i).update(o);
        };
        for (var n = 0; n < OUTPUT_TYPES.length; ++n) {
          var r = OUTPUT_TYPES[n];
          t[r] = createHmacOutputMethod(r, e);
        }
        return t;
      };
      function Sha256(e, t) {
        t ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], e ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = false, this.first = true, this.is224 = e;
      }
      Sha256.prototype.update = function(e) {
        if (!this.finalized) {
          var t, n = typeof e;
          if (n !== "string") {
            if (n === "object") {
              if (e === null) throw new Error(ERROR);
              if (ARRAY_BUFFER && e.constructor === ArrayBuffer) e = new Uint8Array(e);
              else if (!Array.isArray(e) && (!ARRAY_BUFFER || !ArrayBuffer.isView(e))) throw new Error(ERROR);
            } else throw new Error(ERROR);
            t = true;
          }
          for (var r, i = 0, o, l = e.length, s = this.blocks; i < l; ) {
            if (this.hashed && (this.hashed = false, s[0] = this.block, s[16] = s[1] = s[2] = s[3] = s[4] = s[5] = s[6] = s[7] = s[8] = s[9] = s[10] = s[11] = s[12] = s[13] = s[14] = s[15] = 0), t) for (o = this.start; i < l && o < 64; ++i) s[o >> 2] |= e[i] << SHIFT[o++ & 3];
            else for (o = this.start; i < l && o < 64; ++i) r = e.charCodeAt(i), r < 128 ? s[o >> 2] |= r << SHIFT[o++ & 3] : r < 2048 ? (s[o >> 2] |= (192 | r >> 6) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r & 63) << SHIFT[o++ & 3]) : r < 55296 || r >= 57344 ? (s[o >> 2] |= (224 | r >> 12) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r >> 6 & 63) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r & 63) << SHIFT[o++ & 3]) : (r = 65536 + ((r & 1023) << 10 | e.charCodeAt(++i) & 1023), s[o >> 2] |= (240 | r >> 18) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r >> 12 & 63) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r >> 6 & 63) << SHIFT[o++ & 3], s[o >> 2] |= (128 | r & 63) << SHIFT[o++ & 3]);
            this.lastByteIndex = o, this.bytes += o - this.start, o >= 64 ? (this.block = s[16], this.start = o - 64, this.hash(), this.hashed = true) : this.start = o;
          }
          return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
        }
      }, Sha256.prototype.finalize = function() {
        if (!this.finalized) {
          this.finalized = true;
          var e = this.blocks, t = this.lastByteIndex;
          e[16] = this.block, e[t >> 2] |= EXTRA[t & 3], this.block = e[16], t >= 56 && (this.hashed || this.hash(), e[0] = this.block, e[16] = e[1] = e[2] = e[3] = e[4] = e[5] = e[6] = e[7] = e[8] = e[9] = e[10] = e[11] = e[12] = e[13] = e[14] = e[15] = 0), e[14] = this.hBytes << 3 | this.bytes >>> 29, e[15] = this.bytes << 3, this.hash();
        }
      }, Sha256.prototype.hash = function() {
        var e = this.h0, t = this.h1, n = this.h2, r = this.h3, i = this.h4, o = this.h5, l = this.h6, s = this.h7, u = this.blocks, p, a, c, d, f, y, h, b, m, S, B;
        for (p = 16; p < 64; ++p) f = u[p - 15], a = (f >>> 7 | f << 25) ^ (f >>> 18 | f << 14) ^ f >>> 3, f = u[p - 2], c = (f >>> 17 | f << 15) ^ (f >>> 19 | f << 13) ^ f >>> 10, u[p] = u[p - 16] + a + u[p - 7] + c << 0;
        for (B = t & n, p = 0; p < 64; p += 4) this.first ? (this.is224 ? (b = 300032, f = u[0] - 1413257819, s = f - 150054599 << 0, r = f + 24177077 << 0) : (b = 704751109, f = u[0] - 210244248, s = f - 1521486534 << 0, r = f + 143694565 << 0), this.first = false) : (a = (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10), c = (i >>> 6 | i << 26) ^ (i >>> 11 | i << 21) ^ (i >>> 25 | i << 7), b = e & t, d = b ^ e & n ^ B, h = i & o ^ ~i & l, f = s + c + h + K[p] + u[p], y = a + d, s = r + f << 0, r = f + y << 0), a = (r >>> 2 | r << 30) ^ (r >>> 13 | r << 19) ^ (r >>> 22 | r << 10), c = (s >>> 6 | s << 26) ^ (s >>> 11 | s << 21) ^ (s >>> 25 | s << 7), m = r & e, d = m ^ r & t ^ b, h = s & i ^ ~s & o, f = l + c + h + K[p + 1] + u[p + 1], y = a + d, l = n + f << 0, n = f + y << 0, a = (n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10), c = (l >>> 6 | l << 26) ^ (l >>> 11 | l << 21) ^ (l >>> 25 | l << 7), S = n & r, d = S ^ n & e ^ m, h = l & s ^ ~l & i, f = o + c + h + K[p + 2] + u[p + 2], y = a + d, o = t + f << 0, t = f + y << 0, a = (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10), c = (o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7), B = t & n, d = B ^ t & r ^ S, h = o & l ^ ~o & s, f = i + c + h + K[p + 3] + u[p + 3], y = a + d, i = e + f << 0, e = f + y << 0;
        this.h0 = this.h0 + e << 0, this.h1 = this.h1 + t << 0, this.h2 = this.h2 + n << 0, this.h3 = this.h3 + r << 0, this.h4 = this.h4 + i << 0, this.h5 = this.h5 + o << 0, this.h6 = this.h6 + l << 0, this.h7 = this.h7 + s << 0;
      }, Sha256.prototype.hex = function() {
        this.finalize();
        var e = this.h0, t = this.h1, n = this.h2, r = this.h3, i = this.h4, o = this.h5, l = this.h6, s = this.h7, u = HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 4 & 15] + HEX_CHARS[e & 15] + HEX_CHARS[t >> 28 & 15] + HEX_CHARS[t >> 24 & 15] + HEX_CHARS[t >> 20 & 15] + HEX_CHARS[t >> 16 & 15] + HEX_CHARS[t >> 12 & 15] + HEX_CHARS[t >> 8 & 15] + HEX_CHARS[t >> 4 & 15] + HEX_CHARS[t & 15] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[n & 15] + HEX_CHARS[r >> 28 & 15] + HEX_CHARS[r >> 24 & 15] + HEX_CHARS[r >> 20 & 15] + HEX_CHARS[r >> 16 & 15] + HEX_CHARS[r >> 12 & 15] + HEX_CHARS[r >> 8 & 15] + HEX_CHARS[r >> 4 & 15] + HEX_CHARS[r & 15] + HEX_CHARS[i >> 28 & 15] + HEX_CHARS[i >> 24 & 15] + HEX_CHARS[i >> 20 & 15] + HEX_CHARS[i >> 16 & 15] + HEX_CHARS[i >> 12 & 15] + HEX_CHARS[i >> 8 & 15] + HEX_CHARS[i >> 4 & 15] + HEX_CHARS[i & 15] + HEX_CHARS[o >> 28 & 15] + HEX_CHARS[o >> 24 & 15] + HEX_CHARS[o >> 20 & 15] + HEX_CHARS[o >> 16 & 15] + HEX_CHARS[o >> 12 & 15] + HEX_CHARS[o >> 8 & 15] + HEX_CHARS[o >> 4 & 15] + HEX_CHARS[o & 15] + HEX_CHARS[l >> 28 & 15] + HEX_CHARS[l >> 24 & 15] + HEX_CHARS[l >> 20 & 15] + HEX_CHARS[l >> 16 & 15] + HEX_CHARS[l >> 12 & 15] + HEX_CHARS[l >> 8 & 15] + HEX_CHARS[l >> 4 & 15] + HEX_CHARS[l & 15];
        return this.is224 || (u += HEX_CHARS[s >> 28 & 15] + HEX_CHARS[s >> 24 & 15] + HEX_CHARS[s >> 20 & 15] + HEX_CHARS[s >> 16 & 15] + HEX_CHARS[s >> 12 & 15] + HEX_CHARS[s >> 8 & 15] + HEX_CHARS[s >> 4 & 15] + HEX_CHARS[s & 15]), u;
      }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
        this.finalize();
        var e = this.h0, t = this.h1, n = this.h2, r = this.h3, i = this.h4, o = this.h5, l = this.h6, s = this.h7, u = [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, e & 255, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, t & 255, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, n & 255, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, r & 255, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, i & 255, o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, o & 255, l >> 24 & 255, l >> 16 & 255, l >> 8 & 255, l & 255];
        return this.is224 || u.push(s >> 24 & 255, s >> 16 & 255, s >> 8 & 255, s & 255), u;
      }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
        this.finalize();
        var e = new ArrayBuffer(this.is224 ? 28 : 32), t = new DataView(e);
        return t.setUint32(0, this.h0), t.setUint32(4, this.h1), t.setUint32(8, this.h2), t.setUint32(12, this.h3), t.setUint32(16, this.h4), t.setUint32(20, this.h5), t.setUint32(24, this.h6), this.is224 || t.setUint32(28, this.h7), e;
      };
      function HmacSha256(e, t, n) {
        var r, i = typeof e;
        if (i === "string") {
          var o = [], l = e.length, s = 0, u;
          for (r = 0; r < l; ++r) u = e.charCodeAt(r), u < 128 ? o[s++] = u : u < 2048 ? (o[s++] = 192 | u >> 6, o[s++] = 128 | u & 63) : u < 55296 || u >= 57344 ? (o[s++] = 224 | u >> 12, o[s++] = 128 | u >> 6 & 63, o[s++] = 128 | u & 63) : (u = 65536 + ((u & 1023) << 10 | e.charCodeAt(++r) & 1023), o[s++] = 240 | u >> 18, o[s++] = 128 | u >> 12 & 63, o[s++] = 128 | u >> 6 & 63, o[s++] = 128 | u & 63);
          e = o;
        } else if (i === "object") {
          if (e === null) throw new Error(ERROR);
          if (ARRAY_BUFFER && e.constructor === ArrayBuffer) e = new Uint8Array(e);
          else if (!Array.isArray(e) && (!ARRAY_BUFFER || !ArrayBuffer.isView(e))) throw new Error(ERROR);
        } else throw new Error(ERROR);
        e.length > 64 && (e = new Sha256(t, true).update(e).array());
        var p = [], a = [];
        for (r = 0; r < 64; ++r) {
          var c = e[r] || 0;
          p[r] = 92 ^ c, a[r] = 54 ^ c;
        }
        Sha256.call(this, t, n), this.update(a), this.oKeyPad = p, this.inner = true, this.sharedMemory = n;
      }
      HmacSha256.prototype = new Sha256(), HmacSha256.prototype.finalize = function() {
        if (Sha256.prototype.finalize.call(this), this.inner) {
          this.inner = false;
          var e = this.array();
          Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(e), Sha256.prototype.finalize.call(this);
        }
      };
      var exports = createMethod();
      exports.sha256 = exports, exports.sha224 = createMethod(true), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(true), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224, AMD && define(function() {
        return exports;
      }));
    })();
  });
  var Qt = Te((M6, I1) => {
    var W2 = "Input must be an string, Buffer or Uint8Array";
    function j2(e) {
      let t;
      if (e instanceof Uint8Array) t = e;
      else if (typeof e == "string") t = new TextEncoder().encode(e);
      else throw new Error(W2);
      return t;
    }
    function Y2(e) {
      return Array.prototype.map.call(e, function(t) {
        return (t < 16 ? "0" : "") + t.toString(16);
      }).join("");
    }
    function yt(e) {
      return (4294967296 + e).toString(16).substring(1);
    }
    function Q2(e, t, n) {
      let r = `
` + e + " = ";
      for (let i = 0; i < t.length; i += 2) {
        if (n === 32) r += yt(t[i]).toUpperCase(), r += " ", r += yt(t[i + 1]).toUpperCase();
        else if (n === 64) r += yt(t[i + 1]).toUpperCase(), r += yt(t[i]).toUpperCase();
        else throw new Error("Invalid size " + n);
        i % 6 === 4 ? r += `
` + new Array(e.length + 4).join(" ") : i < t.length - 2 && (r += " ");
      }
      console.log(r);
    }
    function e3(e, t, n) {
      let r = (/* @__PURE__ */ new Date()).getTime(), i = new Uint8Array(t);
      for (let l = 0; l < t; l++) i[l] = l % 256;
      let o = (/* @__PURE__ */ new Date()).getTime();
      console.log("Generated random input in " + (o - r) + "ms"), r = o;
      for (let l = 0; l < n; l++) {
        let s = e(i), u = (/* @__PURE__ */ new Date()).getTime(), p = u - r;
        r = u, console.log("Hashed in " + p + "ms: " + s.substring(0, 20) + "..."), console.log(Math.round(t / (1 << 20) / (p / 1e3) * 100) / 100 + " MB PER SECOND");
      }
    }
    I1.exports = { normalizeInput: j2, toHex: Y2, debugPrint: Q2, testSpeed: e3 };
  });
  var M1 = Te((_6, R1) => {
    var gt = Qt();
    function ht(e, t, n) {
      let r = e[t] + e[n], i = e[t + 1] + e[n + 1];
      r >= 4294967296 && i++, e[t] = r, e[t + 1] = i;
    }
    function F1(e, t, n, r) {
      let i = e[t] + n;
      n < 0 && (i += 4294967296);
      let o = e[t + 1] + r;
      i >= 4294967296 && o++, e[t] = i, e[t + 1] = o;
    }
    function T1(e, t) {
      return e[t] ^ e[t + 1] << 8 ^ e[t + 2] << 16 ^ e[t + 3] << 24;
    }
    function oe(e, t, n, r, i, o) {
      let l = qe[i], s = qe[i + 1], u = qe[o], p = qe[o + 1];
      ht(E, e, t), F1(E, e, l, s);
      let a = E[r] ^ E[e], c = E[r + 1] ^ E[e + 1];
      E[r] = c, E[r + 1] = a, ht(E, n, r), a = E[t] ^ E[n], c = E[t + 1] ^ E[n + 1], E[t] = a >>> 24 ^ c << 8, E[t + 1] = c >>> 24 ^ a << 8, ht(E, e, t), F1(E, e, u, p), a = E[r] ^ E[e], c = E[r + 1] ^ E[e + 1], E[r] = a >>> 16 ^ c << 16, E[r + 1] = c >>> 16 ^ a << 16, ht(E, n, r), a = E[t] ^ E[n], c = E[t + 1] ^ E[n + 1], E[t] = c >>> 31 ^ a << 1, E[t + 1] = a >>> 31 ^ c << 1;
    }
    var U1 = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]), t3 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], O = new Uint8Array(t3.map(function(e) {
      return e * 2;
    })), E = new Uint32Array(32), qe = new Uint32Array(32);
    function P1(e, t) {
      let n = 0;
      for (n = 0; n < 16; n++) E[n] = e.h[n], E[n + 16] = U1[n];
      for (E[24] = E[24] ^ e.t, E[25] = E[25] ^ e.t / 4294967296, t && (E[28] = ~E[28], E[29] = ~E[29]), n = 0; n < 32; n++) qe[n] = T1(e.b, 4 * n);
      for (n = 0; n < 12; n++) oe(0, 8, 16, 24, O[n * 16 + 0], O[n * 16 + 1]), oe(2, 10, 18, 26, O[n * 16 + 2], O[n * 16 + 3]), oe(4, 12, 20, 28, O[n * 16 + 4], O[n * 16 + 5]), oe(6, 14, 22, 30, O[n * 16 + 6], O[n * 16 + 7]), oe(0, 10, 20, 30, O[n * 16 + 8], O[n * 16 + 9]), oe(2, 12, 22, 24, O[n * 16 + 10], O[n * 16 + 11]), oe(4, 14, 16, 26, O[n * 16 + 12], O[n * 16 + 13]), oe(6, 8, 18, 28, O[n * 16 + 14], O[n * 16 + 15]);
      for (n = 0; n < 16; n++) e.h[n] = e.h[n] ^ E[n] ^ E[n + 16];
    }
    var ae = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    function C1(e, t, n, r) {
      if (e === 0 || e > 64) throw new Error("Illegal output length, expected 0 < length <= 64");
      if (t && t.length > 64) throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
      if (n && n.length !== 16) throw new Error("Illegal salt, expected Uint8Array with length is 16");
      if (r && r.length !== 16) throw new Error("Illegal personal, expected Uint8Array with length is 16");
      let i = { b: new Uint8Array(128), h: new Uint32Array(16), t: 0, c: 0, outlen: e };
      ae.fill(0), ae[0] = e, t && (ae[1] = t.length), ae[2] = 1, ae[3] = 1, n && ae.set(n, 32), r && ae.set(r, 48);
      for (let o = 0; o < 16; o++) i.h[o] = U1[o] ^ T1(ae, o * 4);
      return t && (e0(i, t), i.c = 128), i;
    }
    function e0(e, t) {
      for (let n = 0; n < t.length; n++) e.c === 128 && (e.t += e.c, P1(e, false), e.c = 0), e.b[e.c++] = t[n];
    }
    function H1(e) {
      for (e.t += e.c; e.c < 128; ) e.b[e.c++] = 0;
      P1(e, true);
      let t = new Uint8Array(e.outlen);
      for (let n = 0; n < e.outlen; n++) t[n] = e.h[n >> 2] >> 8 * (n & 3);
      return t;
    }
    function N1(e, t, n, r, i) {
      n = n || 64, e = gt.normalizeInput(e), r && (r = gt.normalizeInput(r)), i && (i = gt.normalizeInput(i));
      let o = C1(n, t, r, i);
      return e0(o, e), H1(o);
    }
    function n3(e, t, n, r, i) {
      let o = N1(e, t, n, r, i);
      return gt.toHex(o);
    }
    R1.exports = { blake2b: N1, blake2bHex: n3, blake2bInit: C1, blake2bUpdate: e0, blake2bFinal: H1 };
  });
  var D1 = Te((O6, L1) => {
    var _1 = Qt();
    function r3(e, t) {
      return e[t] ^ e[t + 1] << 8 ^ e[t + 2] << 16 ^ e[t + 3] << 24;
    }
    function le(e, t, n, r, i, o) {
      w[e] = w[e] + w[t] + i, w[r] = bt(w[r] ^ w[e], 16), w[n] = w[n] + w[r], w[t] = bt(w[t] ^ w[n], 12), w[e] = w[e] + w[t] + o, w[r] = bt(w[r] ^ w[e], 8), w[n] = w[n] + w[r], w[t] = bt(w[t] ^ w[n], 7);
    }
    function bt(e, t) {
      return e >>> t ^ e << 32 - t;
    }
    var O1 = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), z = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0]), w = new Uint32Array(16), _ = new Uint32Array(16);
    function K1(e, t) {
      let n = 0;
      for (n = 0; n < 8; n++) w[n] = e.h[n], w[n + 8] = O1[n];
      for (w[12] ^= e.t, w[13] ^= e.t / 4294967296, t && (w[14] = ~w[14]), n = 0; n < 16; n++) _[n] = r3(e.b, 4 * n);
      for (n = 0; n < 10; n++) le(0, 4, 8, 12, _[z[n * 16 + 0]], _[z[n * 16 + 1]]), le(1, 5, 9, 13, _[z[n * 16 + 2]], _[z[n * 16 + 3]]), le(2, 6, 10, 14, _[z[n * 16 + 4]], _[z[n * 16 + 5]]), le(3, 7, 11, 15, _[z[n * 16 + 6]], _[z[n * 16 + 7]]), le(0, 5, 10, 15, _[z[n * 16 + 8]], _[z[n * 16 + 9]]), le(1, 6, 11, 12, _[z[n * 16 + 10]], _[z[n * 16 + 11]]), le(2, 7, 8, 13, _[z[n * 16 + 12]], _[z[n * 16 + 13]]), le(3, 4, 9, 14, _[z[n * 16 + 14]], _[z[n * 16 + 15]]);
      for (n = 0; n < 8; n++) e.h[n] ^= w[n] ^ w[n + 8];
    }
    function z1(e, t) {
      if (!(e > 0 && e <= 32)) throw new Error("Incorrect output length, should be in [1, 32]");
      let n = t ? t.length : 0;
      if (t && !(n > 0 && n <= 32)) throw new Error("Incorrect key length, should be in [1, 32]");
      let r = { h: new Uint32Array(O1), b: new Uint8Array(64), c: 0, t: 0, outlen: e };
      return r.h[0] ^= 16842752 ^ n << 8 ^ e, n > 0 && (t0(r, t), r.c = 64), r;
    }
    function t0(e, t) {
      for (let n = 0; n < t.length; n++) e.c === 64 && (e.t += e.c, K1(e, false), e.c = 0), e.b[e.c++] = t[n];
    }
    function V1(e) {
      for (e.t += e.c; e.c < 64; ) e.b[e.c++] = 0;
      K1(e, true);
      let t = new Uint8Array(e.outlen);
      for (let n = 0; n < e.outlen; n++) t[n] = e.h[n >> 2] >> 8 * (n & 3) & 255;
      return t;
    }
    function J1(e, t, n) {
      n = n || 32, e = _1.normalizeInput(e);
      let r = z1(n, t);
      return t0(r, e), V1(r);
    }
    function i3(e, t, n) {
      let r = J1(e, t, n);
      return _1.toHex(r);
    }
    L1.exports = { blake2s: J1, blake2sHex: i3, blake2sInit: z1, blake2sUpdate: t0, blake2sFinal: V1 };
  });
  var n0 = Te((K6, q1) => {
    var Ze = M1(), Xe = D1();
    q1.exports = { blake2b: Ze.blake2b, blake2bHex: Ze.blake2bHex, blake2bInit: Ze.blake2bInit, blake2bUpdate: Ze.blake2bUpdate, blake2bFinal: Ze.blake2bFinal, blake2s: Xe.blake2s, blake2sHex: Xe.blake2sHex, blake2sInit: Xe.blake2sInit, blake2sUpdate: Xe.blake2sUpdate, blake2sFinal: Xe.blake2sFinal };
  });
  function Ft(e, t) {
    if (!e) throw Error(t ?? "Assertion failed");
  }
  var q3 = (1n << 64n) - 1n;
  function je(e) {
    let t = 0n, n = 0n;
    for (let r of e) t += BigInt(r) << n, n += 8n;
    return t;
  }
  var Jn = {};
  for (let e = 0; e < 16; e++) Jn[e.toString(16).charCodeAt(0)] = e;
  var Z3 = new TextEncoder();
  var X3 = new Uint8Array(64);
  function $(e, t) {
    if (e < 0n) throw Error(`bigIntToBytes: negative numbers are not supported, got ${e}`);
    if (t === void 0) return Ln(e);
    let n = Array(t);
    for (let r = 0; r < t; r++, e >>= 8n) n[r] = Number(e & 0xffn);
    if (e > 0n) throw Error(`bigIntToBytes: input does not fit in ${t} bytes`);
    return n;
  }
  function Ln(e) {
    let t = [];
    for (; e > 0n; e >>= 8n) t.push(Number(e & 0xffn));
    return t;
  }
  function Ue(e) {
    if (e < 0n) throw Error(`bigIntToBits: negative numbers are not supported, got ${e}`);
    let t = [];
    for (; e > 0n; e >>= 1n) {
      let n = !!(e & 1n);
      t.push(n);
    }
    return t;
  }
  function Tt(e, t, n) {
    let r = Dn(e, t);
    return qn(r, n);
  }
  function Dn(e, t) {
    if (t <= 0n) throw Error("fromBase: base must be positive");
    let n = [];
    for (let o = t, l = 1; l < e.length; o **= 2n, l *= 2) n.push(o);
    let r = n.length;
    e = e.concat(Array(2 ** r - e.length).fill(0n));
    for (let o = 0; o < r; o++) {
      let l = Array(e.length >> 1), s = n[o];
      for (let u = 0; u < l.length; u++) l[u] = e[2 * u] + s * e[2 * u + 1];
      e = l;
    }
    console.assert(e.length === 1);
    let [i] = e;
    return i;
  }
  function qn(e, t) {
    if (t <= 0n) throw Error("toBase: base must be positive");
    let n = [];
    for (let o = t; o < e; o **= 2n) n.push(o);
    let r = [e], i = n.length;
    for (let o = 0; o < i; o++) {
      let l = Array(2 * r.length), s = n[i - 1 - o];
      for (let u = 0; u < r.length; u++) {
        let p = r[u], a = p / s;
        l[2 * u + 1] = a, l[2 * u] = p - a * s;
      }
      r = l;
    }
    for (; r[r.length - 1] === 0n; ) r.pop();
    return r;
  }
  function Se(e) {
    return typeof e == "number" && (e = BigInt(e)), e === 1n ? 0 : (e - 1n).toString(2).length;
  }
  function Ye(e, t) {
    return e > t ? e : t;
  }
  function G(e) {
    return e < 0n ? -e : e;
  }
  function Ut(e) {
    return e >= 0 ? 1n : -1n;
  }
  function Qe(e) {
    return crypto.getRandomValues(new Uint8Array(e));
  }
  var Ce = 0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n;
  var He = 0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n;
  var Zn = 0x40000000000000000000000000000000224698fc094cf91b992d30edn;
  var Xn = 0x40000000000000000000000000000000224698fc0994a8dd8c46eb21n;
  var $n = 0x2bce74deac30ebda362120830561f81aea322bf2b7bb7584bdad6fabd87ea32fn;
  var Gn = 0x2de6a9b8746d3f589e5c4dfd492ae26e9bb97ea3c106f049a70e2c1102b6d05fn;
  function g(e, t) {
    return e = e % t, e < 0 ? e + t : e;
  }
  function Pe(e, t, n) {
    e = g(e, n);
    let r = 1n;
    for (; t > 0n; t >>= 1n) t & 1n && (r = g(r * e, n)), e = g(e * e, n);
    return r;
  }
  function ke(e, t) {
    if (e = g(e, t), e === 0n) return;
    let n = t, r = 0n, i = 1n, o = 1n, l = 0n;
    for (; e !== 0n; ) {
      let s = n / e, u = g(n, e), p = r - o * s, a = i - l * s;
      n = e, e = u, r = o, i = l, o = p, l = a;
    }
    if (n === 1n) return g(r, t);
  }
  function Wn(e, t, n, r, i) {
    if (e = g(e, t), e === 0n) return;
    let o = 31, l = 31, s = BigInt(o), u = (1n << s) - 1n, p = t, a = e, c = 0n, d = 1n, f = 0;
    for (; f < 2 * n; f++) {
      let h = 1, b = 0, m = 0, S = 1, B = Number(p & u), x = Number(a & u), q = Math.max(Se(p), Se(a)), be = BigInt(Math.max(q - l, 0)), Z = Number(p >> be), ee = Number(a >> be);
      for (let h0 = 0; h0 < o; h0++) B & 1 ? x & 1 ? ee <= Z ? (Z = Z - ee >> 1, B = B - x >> 1, h = h + m, b = b + S, m <<= 1, S <<= 1) : (ee = ee - Z >> 1, x = x - B >> 1, m = h + m, S = b + S, h <<= 1, b <<= 1) : (ee >>= 1, x >>= 1, h <<= 1, b <<= 1) : (Z >>= 1, B >>= 1, m <<= 1, S <<= 1);
      let re = BigInt(h), ue = BigInt(b), ce = BigInt(m), We = BigInt(S), Cn = p * re - a * ue, Hn = a * We - p * ce;
      p = Cn >> s, a = Hn >> s, p < 0 && (p = -p, re = -re, ue = -ue), a < 0 && (a = -a, ce = -ce, We = -We);
      let Nn = c * re + d * ue, Rn = d * We + c * ce;
      if (c = Nn, d = Rn, p === 0n) break;
      if (a === 0n) {
        Ft(p === 1n, "u = 1"), d = g(-c, t);
        break;
      }
    }
    let y = BigInt((f + 1) * o);
    return d = g(d * i, t), d = g(d << r - y, t), Ft(g(e * d - 1n, t) === 0n, "mod p"), d;
  }
  function jn(e, t, n, r, i) {
    if (e === 0n) return 0n;
    let o = Pe(e, n - 1n >> 1n, t), l = g(o * e, t);
    for (o = g(o * l, t); ; ) {
      if (o === 1n) return l;
      let s = 0n, u = o;
      for (; u !== 1n; ) u = g(u * u, t), s = s + 1n;
      if (s === i) return;
      let p = Pe(r, 1n << i - s - 1n, t);
      i = s, r = g(p * p, t), o = g(o * r, t), l = g(l * p, t);
    }
  }
  function b0(e, t) {
    return e === 0n ? true : Pe(e, (t - 1n) / 2n, t) === 1n;
  }
  function Yn(e, t, n) {
    for (; ; ) {
      let r = Qe(t);
      r[t - 1] &= n;
      let i = je(r);
      if (i < e) return i;
    }
  }
  var J = Ne(Ce, { oddFactor: Zn, twoadicRoot: $n, twoadicity: 32n });
  var te = Ne(He, { oddFactor: Xn, twoadicRoot: Gn, twoadicity: 32n });
  function Ne(e, t) {
    let { oddFactor: n, twoadicRoot: r, twoadicity: i } = t ?? Qn(e), o = Se(e), l = Math.ceil(o / 8), u = (1 << o - 8 * (l - 1)) - 1, p = 31, a = Math.ceil(o / p), c = BigInt(2 * a * p), d = ke(1n << c, e), f = d !== void 0 ? (y) => Wn(y, e, a, c, d) : (y) => ke(y, e);
    return { modulus: e, sizeInBits: o, t: n, M: i, twoadicRoot: r, mod(y) {
      return g(y, e);
    }, add(y, h) {
      return g(y + h, e);
    }, not(y, h) {
      return g(2n ** BigInt(h) - (y + 1n), e);
    }, negate(y) {
      return y === 0n ? 0n : e - y;
    }, sub(y, h) {
      return g(y - h, e);
    }, mul(y, h) {
      return g(y * h, e);
    }, inverse: f, div(y, h) {
      let b = f(h);
      if (b !== void 0) return g(y * b, e);
    }, square(y) {
      return g(y * y, e);
    }, isSquare(y) {
      return b0(y, e);
    }, sqrt(y) {
      return jn(y, e, n, r, i);
    }, power(y, h) {
      return Pe(y, h, e);
    }, dot(y, h) {
      let b = 0n, m = y.length;
      for (let S = 0; S < m; S++) b += y[S] * h[S];
      return g(b, e);
    }, equal(y, h) {
      return g(y - h, e) === 0n;
    }, isEven(y) {
      return !(y & 1n);
    }, random() {
      return Yn(e, l, u);
    }, fromNumber(y) {
      return g(BigInt(y), e);
    }, fromBigint(y) {
      return g(y, e);
    }, rot(y, h, b = "left", m = 64n) {
      b === "right" && (h = m - h);
      let S = y << h, B = S >> m;
      return S & (1n << m) - 1n | B;
    }, leftShift(y, h, b = 64) {
      return y << BigInt(h) & (1n << BigInt(b)) - 1n;
    }, rightShift(y, h) {
      return y >> BigInt(h);
    } };
  }
  function Qn(e) {
    let t = e - 1n, n = 0n;
    for (; (t & 1n) === 0n; ) t >>= 1n, n++;
    let r = 2n;
    for (; b0(r, e); ) r++;
    let i = Pe(r, t, e);
    return { oddFactor: t, twoadicRoot: i, twoadicity: n };
  }
  function e2(e) {
    return Error(`${e}
This shouldn't have happened and indicates an internal bug.`);
  }
  function L(e, t = "Failed assertion.") {
    if (!e) throw e2(t);
  }
  function v0(e, t, n, r, i, o) {
    if (i === void 0 || o === void 0) try {
      ({ endoScalar: i, endoBase: o } = r2(t, n, r));
    } catch (u) {
      console.log(`Warning: no endomorphism for ${e}`, u?.message);
      return;
    }
    let l = o, s = i2(n.modulus, i);
    return { scalar: i, base: o, decomposeMaxBits: s.maxBits, decompose(u) {
      return x0(u, s);
    }, endomorphism(u) {
      return t2(u, l, t.modulus);
    }, scaleProjective(u, p) {
      return S0(u, p, t.modulus, l, s);
    }, scale(u, p) {
      let a = Oe(u), c = S0(a, p, t.modulus, l, s);
      return et(c, t.modulus);
    } };
  }
  function x0(e, t) {
    let { v00: n, v01: r, v10: i, v11: o, det: l } = t, s = k0(-o * e, l), u = k0(i * e, l), p = n * s + r * u + e, a = i * s + o * u;
    return [{ value: p, isNegative: p < 0n, abs: G(p) }, { value: a, isNegative: a < 0n, abs: G(a) }];
  }
  function t2(e, t, n) {
    return { x: g(t * e.x, n), y: e.y };
  }
  function n2(e, t, n) {
    return { x: g(t * e.x, n), y: e.y, z: e.z };
  }
  function S0(e, t, n, r, i) {
    let o = n2(e, r, n), [l, s] = x0(t, i), u = Ue(l.abs), p = Ue(s.abs);
    l.isNegative && (e = Me(e, n)), s.isNegative && (o = Me(o, n));
    let a = pe;
    for (let c = i.maxBits - 1; c >= 0 && (u[c] && (a = ve(a, e, n)), p[c] && (a = ve(a, o, n)), c !== 0); c--) a = _e(a, n);
    return a;
  }
  function r2(e, t, n) {
    let r = e.modulus, i = t.modulus;
    L(r % 3n === 1n, "Base field has a cube root of unity"), L(i % 3n === 1n, "Scalar field has a cube root of unity");
    let o = t.sqrt(t.negate(3n));
    L(o !== void 0, "Scalar field has a square root of -3");
    let l = t.div(t.sub(o, 1n), 2n);
    L(l !== void 0, "Scalar field has a cube root of unity"), L(t.power(l, 3n) === 1n, "lambda is a cube root"), L(l !== 1n, "lambda is not 1");
    let s = Re(n, l, r);
    L(s.y === n.y, "multiplication by lambda is a cheap endomorphism");
    let u = e.div(s.x, n.x);
    L(u !== void 0, "Gx is invertible"), L(e.power(u, 3n) === 1n, "beta is a cube root"), L(u !== 1n, "beta is not 1");
    let p = Re(n, t.random(), r), a = Re(p, l, r);
    return L(a.x === e.mul(u, p.x), "confirm endomorphism"), L(a.y === p.y, "confirm endomorphism"), { endoScalar: l, endoBase: u };
  }
  function i2(e, t) {
    let [[n, r], [i, o]] = o2(t, e), l = n * o - i * r, s = (G(n) + G(r) >> 1n) + 1n, u = (G(i) + G(o) >> 1n) + 1n, p = Se(Ye(s, u));
    return { v00: n, v01: r, v10: i, v11: o, det: l, maxS0: s, maxS1: u, maxBits: p };
  }
  function o2(e, t) {
    if (e > t) throw Error("a > p");
    let [n, r] = [t, e], [i, o] = [1n, 0n], [l, s] = [0n, 1n];
    for (; r * r > t; ) {
      let h = n / r;
      [n, r] = [r, n - h * r], [i, o] = [o, i - h * o], [l, s] = [s, l - h * s];
    }
    let u = n / r, p = n - u * r, a = l - u * s, [c, d] = [r, -s], [f, y] = Ye(n, G(l)) <= Ye(p, G(a)) ? [n, -l] : [p, -a];
    return [[c, f], [d, y]];
  }
  function k0(e, t) {
    let n = Ut(e) * Ut(t);
    e = G(e), t = G(t);
    let r = e / t;
    return 2n * (e - r * t) >= t && r++, n * r;
  }
  var w0 = { x: 1n, y: 12418654782883325593414442427049395787963493412651469444558597405572177144507n };
  var a2 = { x: 1n, y: 11426906929455361843568202299992114520848200991084027513389447476559454104162n };
  var l2 = 2942865608506852014473558576493638302197734138389222805617480874486368177743n;
  var A0 = 20444556541222657078399132219657928148671392403212669005631716460534733845831n;
  var s2 = 8503465768106391777493614032514048814691664078728891710322960303815233784505n;
  var I0 = 26005156700822196841419187675678338661165322343552424574062261873906994770353n;
  var Pt = 5n;
  var Ct = 0n;
  var pe = { x: 1n, y: 1n, z: 0n };
  var u2 = { create: (e, t) => {
    let { a: n, b: r } = t.spec;
    if (n !== 0n) throw Error("GroupMap only supports a = 0");
    function i(u) {
      let p = e.power(u, 3n), a = e.add(p, r);
      if (e.isSquare(a)) return { x: u, y: e.sqrt(a) };
    }
    function o(u) {
      let { u: p, v: a, y: c } = u;
      return [a, e.negate(e.add(p, a)), e.add(p, e.square(c))];
    }
    function l(u) {
      let p = e.div(u.z, u.y);
      if (p === void 0) throw Error(`Division undefined! ${u.z}/${u.y}`);
      let a = e.sub(p, t.u_over_2);
      return { u: t.u, v: a, y: u.y };
    }
    function s(u) {
      let { z: p, y: a } = t.projection_point, c = e.mul(t.conic_c, u), d = e.add(e.mul(c, a), p), f = e.add(e.mul(c, u), 1n), y = e.div(d, f);
      if (y === void 0) throw Error(`Division undefined! ${d}/${f}`);
      let h = e.mul(2n, y);
      return { z: e.sub(p, h), y: e.sub(a, e.mul(h, u)) };
    }
    return { potentialXs: (u) => o(l(s(u))), tryDecode: i };
  } };
  var c2 = { u: 2n, u_over_2: 1n, conic_c: 3n, projection_point: { z: 12196889842669319921865617096620076994180062626450149327690483414064673774441n, y: 1n }, spec: { a: 0n, b: 5n } };
  var F0 = u2.create(J, c2);
  function Me({ x: e, y: t, z: n }, r) {
    return { x: e, y: t === 0n ? 0n : r - t, z: n };
  }
  function ve(e, t, n) {
    if (e.z === 0n) return t;
    if (t.z === 0n) return e;
    let r = e.x, i = e.y, o = e.z, l = t.x, s = t.y, u = t.z, p = g(o * o, n), a = g(u * u, n), c = g(r * a, n), d = g(l * p, n), f = g(i * u * a, n), y = g(s * o * p, n), h = g(d - c, n);
    if (h === 0n) {
      if (f === y) return _e(e, n);
      if (g(f + y, n) === 0n) return pe;
      throw Error("projectiveAdd: invalid point");
    }
    let b = g(h * h << 2n, n), m = g(h * b, n), S = 2n * (y - f), B = g(c * b, n), x = g(S * S - m - 2n * B, n), q = g(S * (B - x) - 2n * f * m, n), be = g(((o + u) * (o + u) - p - a) * h, n);
    return { x, y: q, z: be };
  }
  function _e(e, t) {
    if (e.z === 0n) return e;
    let n = e.x, r = e.y, i = e.z;
    if (r === 0n) throw Error("projectiveDouble: unhandled case");
    let o = g(n * n, t), l = g(r * r, t), s = g(l * l, t), u = g(2n * ((n + l) * (n + l) - o - s), t), p = 3n * o, a = g(p * p, t), c = g(a - 2n * u, t), d = g(p * (u - c) - 8n * s, t), f = g(2n * r * i, t);
    return { x: c, y: d, z: f };
  }
  function p2(e, t, n) {
    return ve(e, Me(t, n), n);
  }
  function Ht(e, t, n) {
    let r = typeof t == "bigint" ? Ue(t) : t, i = pe;
    for (let o of r) o && (i = ve(i, e, n)), e = _e(e, n);
    return i;
  }
  function Oe({ x: e, y: t, infinity: n }) {
    return n ? pe : { x: e, y: t, z: 1n };
  }
  function et(e, t) {
    let n = e.z;
    if (n === 0n) return { x: 0n, y: 0n, infinity: true };
    if (n === 1n) return { x: e.x, y: e.y, infinity: false };
    {
      let r = ke(n, t), i = g(r * r, t), o = g(e.x * i, t), l = g(e.y * r * i, t);
      return { x: o, y: l, infinity: false };
    }
  }
  function T0(e, t, n) {
    if ((e.z === 0n || t.z === 0n) && e.z !== t.z) return false;
    let r = g(e.z * e.z, n), i = g(t.z * t.z, n);
    if (g(e.x * i - t.x * r, n) !== 0n) return false;
    let o = g(r * e.z, n), l = g(i * t.z, n);
    return g(e.y * l, n) === g(t.y * o, n);
  }
  function f2({ x: e, y: t, z: n }, r, i) {
    let o = g(g(e * e, r) * e, r), l = g(t * t, r), s = g(g(n * n, r) * n, r), u = g(s * s, r);
    return g(l - o - i * u, r) === 0n;
  }
  function U0(e, t, n) {
    let r = Ht(e, n, t);
    return T0(r, pe, t);
  }
  function P0({ name: e, modulus: t, order: n, cofactor: r, generator: i, b: o, a: l, endoBase: s, endoScalar: u }) {
    if (l !== 0n) throw Error("createCurveProjective only supports a = 0");
    r ?? (r = 1n);
    let p = r !== 1n;
    return { name: e, modulus: t, order: n, cofactor: r, zero: pe, one: { ...i, z: 1n }, get endoBase() {
      if (s === void 0) throw Error("`endoBase` for this curve was not provided.");
      return s;
    }, get endoScalar() {
      if (u === void 0) throw Error("`endoScalar` for this curve was not provided.");
      return u;
    }, a: l, b: o, hasCofactor: p, equal(a, c) {
      return T0(a, c, t);
    }, isOnCurve(a) {
      return f2(a, t, o);
    }, isInSubgroup(a) {
      return U0(a, t, n);
    }, add(a, c) {
      return ve(a, c, t);
    }, double(a) {
      return _e(a, t);
    }, negate(a) {
      return Me(a, t);
    }, sub(a, c) {
      return p2(a, c, t);
    }, scale(a, c) {
      return Ht(a, c, t);
    }, endomorphism({ x: a, y: c, z: d }) {
      if (s === void 0) throw Error("endomorphism needs `endoBase` parameter.");
      return { x: g(s * a, t), y: c, z: d };
    }, toAffine(a) {
      return et(a, t);
    }, fromAffine(a) {
      return Oe(a);
    } };
  }
  var W = P0({ name: "Pallas", modulus: Ce, order: He, generator: w0, b: Pt, a: Ct, endoBase: A0, endoScalar: I0 });
  var u8 = P0({ name: "Vesta", modulus: He, order: Ce, generator: a2, b: Pt, a: Ct, endoBase: l2, endoScalar: s2 });
  var Ke = { x: 0n, y: 0n, infinity: true };
  function d2({ x: e, y: t, infinity: n }, r, i, o) {
    if (n) return true;
    let l = g(e * e, r);
    return g(t * t - e * l - i * e - o, r) === 0n;
  }
  function E0(e, t, n) {
    if (e.infinity) return t;
    if (t.infinity) return e;
    let { x: r, y: i } = e, { x: o, y: l } = t;
    if (r === o) return i === l ? C0(e, n) : Ke;
    let s = ke(o - r, n);
    if (s === void 0) throw Error("impossible");
    let u = g((l - i) * s, n), p = g(u * u - r - o, n), a = g(u * (r - p) - i, n);
    return { x: p, y: a, infinity: false };
  }
  function C0({ x: e, y: t, infinity: n }, r) {
    if (n) return Ke;
    let i = ke(2n * t, r);
    if (i === void 0) throw Error("impossible");
    let o = g(3n * e * e * i, r), l = g(o * o - 2n * e, r), s = g(o * (e - l) - t, r);
    return { x: l, y: s, infinity: false };
  }
  function B0({ x: e, y: t, infinity: n }, r) {
    return n ? Ke : { x: e, y: t === 0n ? 0n : r - t, infinity: n };
  }
  function Re(e, t, n) {
    let r = Oe(e), i = Ht(r, t, n);
    return et(i, n);
  }
  var c8 = m2({ name: "Pallas", modulus: Ce, order: He, generator: w0, b: Pt, a: Ct, endoBase: A0, endoScalar: I0 });
  function m2({ name: e, modulus: t, order: n, cofactor: r, generator: i, a: o, b: l, endoScalar: s, endoBase: u }) {
    if (o !== 0n) throw Error("createCurveAffine only supports a = 0");
    let p = r !== void 0 && r !== 1n, a = Ne(t), c = Ne(n), d = { ...i, infinity: false }, f = v0(e, a, c, d, s, u);
    return { name: e, Field: a, Scalar: c, modulus: t, order: n, a: o, b: l, cofactor: r, hasCofactor: p, zero: Ke, one: d, hasEndomorphism: f !== void 0, get Endo() {
      if (f === void 0) throw Error(`no endomorphism defined on ${e}`);
      return f;
    }, from(y) {
      return y.x === 0n && y.y === 0n ? Ke : { ...y, infinity: false };
    }, fromNonzero(y) {
      if (y.x === 0n && y.y === 0n) throw Error("fromNonzero: got (0, 0), which is reserved for the zero point");
      return { ...y, infinity: false };
    }, equal(y, h) {
      return g(y.x - h.x, t) === 0n && g(y.y - h.y, t) === 0n;
    }, isOnCurve(y) {
      return d2(y, t, o, l);
    }, isInSubgroup(y) {
      return U0(Oe(y), t, n);
    }, add(y, h) {
      return E0(y, h, t);
    }, double(y) {
      return C0(y, t);
    }, negate(y) {
      return B0(y, t);
    }, sub(y, h) {
      return E0(y, B0(h, t), t);
    }, scale(y, h) {
      return Re(y, h, t);
    } };
  }
  var T = { event: "MinaZkappEvent******", events: "MinaZkappEvents*****", sequenceEvents: "MinaZkappSeqEvents**", zkappBodyMainnet: "MainnetZkappBody****", zkappBodyTestnet: "TestnetZkappBody****", accountUpdateCons: "MinaAcctUpdateCons**", accountUpdateNode: "MinaAcctUpdateNode**", zkappMemo: "MinaZkappMemo*******", signatureMainnet: "MinaSignatureMainnet", signatureTestnet: "CodaSignature*******", zkappUri: "MinaZkappUri********", deriveTokenId: "MinaDeriveTokenId***", sideLoadedVK: "MinaSideLoadedVk****" };
  var M = { tokenIdKey: 28, receiptChainHash: 12, ledgerHash: 5, epochSeed: 13, stateHash: 16, publicKey: 203, userCommandMemo: 20, privateKey: 90, signature: 154, transactionHash: 29, signedCommandV1: 19 };
  var H0 = { txnVersion: 3 };
  var N0 = { mds: [["12035446894107573964500871153637039653510326950134440362813193268448863222019", "25461374787957152039031444204194007219326765802730624564074257060397341542093", "27667907157110496066452777015908813333407980290333709698851344970789663080149"], ["4491931056866994439025447213644536587424785196363427220456343191847333476930", "14743631939509747387607291926699970421064627808101543132147270746750887019919", "9448400033389617131295304336481030167723486090288313334230651810071857784477"], ["10525578725509990281643336361904863911009900817790387635342941550657754064843", "27437632000253211280915908546961303399777448677029255413769125486614773776695", "27566319851776897085443681456689352477426926500749993803132851225169606086988"]], roundConstants: [["21155079691556475130150866428468322463125560312786319980770950159250751855431", "16883442198399350202652499677723930673110172289234921799701652810789093522349", "17030687036425314703519085065002231920937594822150793091243263847382891822670"], ["25216718237129482752721276445368692059997901880654047883630276346421457427360", "9054264347380455706540423067244764093107767235485930776517975315876127782582", "26439087121446593160953570192891907825526260324480347638727375735543609856888"], ["15251000790817261169639394496851831733819930596125214313084182526610855787494", "10861916012597714684433535077722887124099023163589869801449218212493070551767", "18597653523270601187312528478986388028263730767495975370566527202946430104139"], ["15831416454198644276563319006805490049460322229057756462580029181847589006611", "15171856919255965617705854914448645702014039524159471542852132430360867202292", "15488495958879593647482715143904752785889816789652405888927117106448507625751"], ["19039802679983063488134304670998725949842655199289961967801223969839823940152", "4720101937153217036737330058775388037616286510783561045464678919473230044408", "10226318327254973427513859412126640040910264416718766418164893837597674300190"], ["20878756131129218406920515859235137275859844638301967889441262030146031838819", "7178475685651744631172532830973371642652029385893667810726019303466125436953", "1996970955918516145107673266490486752153434673064635795711751450164177339618"], ["15205545916434157464929420145756897321482314798910153575340430817222504672630", "25660296961552699573824264215804279051322332899472350724416657386062327210698", "13842611741937412200312851417353455040950878279339067816479233688850376089318"], ["1383799642177300432144836486981606294838630135265094078921115713566691160459", "1135532281155277588005319334542025976079676424839948500020664227027300010929", "4384117336930380014868572224801371377488688194169758696438185377724744869360"], ["21725577575710270071808882335900370909424604447083353471892004026180492193649", "676128913284806802699862508051022306366147359505124346651466289788974059668", "25186611339598418732666781049829183886812651492845008333418424746493100589207"], ["10402240124664763733060094237696964473609580414190944671778761753887884341073", "11918307118590866200687906627767559273324023585642003803337447146531313172441", "16895677254395661024186292503536662354181715337630376909778003268311296637301"], ["23818602699032741669874498456696325705498383130221297580399035778119213224810", "4285193711150023248690088154344086684336247475445482883105661485741762600154", "19133204443389422404056150665863951250222934590192266371578950735825153238612"], ["5515589673266504033533906836494002702866463791762187140099560583198974233395", "11830435563729472715615302060564876527985621376031612798386367965451821182352", "7510711479224915247011074129666445216001563200717943545636462819681638560128"], ["24694843201907722940091503626731830056550128225297370217610328578733387733444", "27361655066973784653563425664091383058914302579694897188019422193564924110528", "21606788186194534241166833954371013788633495786419718955480491478044413102713"], ["19934060063390905409309407607814787335159021816537006003398035237707924006757", "8495813630060004961768092461554180468161254914257386012937942498774724649553", "27524960680529762202005330464726908693944660961000958842417927307941561848461"], ["15178481650950399259757805400615635703086255035073919114667254549690862896985", "16164780354695672259791105197274509251141405713012804937107314962551600380870", "10529167793600778056702353412758954281652843049850979705476598375597148191979"], ["721141070179074082553302896292167103755384741083338957818644728290501449040", "22044408985956234023934090378372374883099115753118261312473550998188148912041", "27068254103241989852888872162525066148367014691482601147536314217249046186315"], ["3880429241956357176819112098792744584376727450211873998699580893624868748961", "17387097125522937623262508065966749501583017524609697127088211568136333655623", "6256814421247770895467770393029354017922744712896100913895513234184920631289"], ["2942627347777337187690939671601251987500285937340386328746818861972711408579", "24031654937764287280548628128490074801809101323243546313826173430897408945397", "14401457902976567713827506689641442844921449636054278900045849050301331732143"], ["20170632877385406450742199836933900257692624353889848352407590794211839130727", "24056496193857444725324410428861722338174099794084586764867109123681727290181", "11257913009612703357266904349759250619633397075667824800196659858304604714965"], ["22228158921984425749199071461510152694025757871561406897041788037116931009246", "9152163378317846541430311327336774331416267016980485920222768197583559318682", "13906695403538884432896105059360907560653506400343268230130536740148070289175"], ["7220714562509721437034241786731185291972496952091254931195414855962344025067", "27608867305903811397208862801981345878179337369367554478205559689592889691927", "13288465747219756218882697408422850918209170830515545272152965967042670763153"], ["8251343892709140154567051772980662609566359215743613773155065627504813327653", "22035238365102171608166944627493632660244312563934708756134297161332908879090", "13560937766273321037807329177749403409731524715067067740487246745322577571823"], ["21652518608959234550262559135285358020552897349934571164032339186996805408040", "22479086963324173427634460342145551255011746993910136574926173581069603086891", "13676501958531751140966255121288182631772843001727158043704693838707387130095"], ["5680310394102577950568930199056707827608275306479994663197187031893244826674", "25125360450906166639190392763071557410047335755341060350879819485506243289998", "22659254028501616785029594492374243581602744364859762239504348429834224676676"], ["23101411405087512171421838856759448177512679869882987631073569441496722536782", "24149774013240355952057123660656464942409328637280437515964899830988178868108", "5782097512368226173095183217893826020351125522160843964147125728530147423065"], ["13540762114500083869920564649399977644344247485313990448129838910231204868111", "20421637734328811337527547703833013277831804985438407401987624070721139913982", "7742664118615900772129122541139124149525273579639574972380600206383923500701"], ["1109643801053963021778418773196543643970146666329661268825691230294798976318", "16580663920817053843121063692728699890952505074386761779275436996241901223840", "14638514680222429058240285918830106208025229459346033470787111294847121792366"], ["17080385857812672649489217965285727739557573467014392822992021264701563205891", "26176268111736737558502775993925696791974738793095023824029827577569530708665", "4382756253392449071896813428140986330161215829425086284611219278674857536001"], ["13934033814940585315406666445960471293638427404971553891617533231178815348902", "27054912732979753314774418228399230433963143177662848084045249524271046173121", "28916070403698593376490976676534962592542013020010643734621202484860041243391"], ["24820015636966360150164458094894587765384135259446295278101998130934963922381", "7969535238488580655870884015145760954416088335296905520306227531221721881868", "7690547696740080985104189563436871930607055124031711216224219523236060212249"], ["9712576468091272384496248353414290908377825697488757134833205246106605867289", "12148698031438398980683630141370402088785182722473169207262735228500190477924", "14359657643133476969781351728574842164124292705609900285041476162075031948227"], ["23563839965372067275137992801035780013422228997724286060975035719045352435470", "4184634822776323233231956802962638484057536837393405750680645555481330909086", "16249511905185772125762038789038193114431085603985079639889795722501216492487"], ["11001863048692031559800673473526311616702863826063550559568315794438941516621", "4702354107983530219070178410740869035350641284373933887080161024348425080464", "23751680507533064238793742311430343910720206725883441625894258483004979501613"], ["28670526516158451470169873496541739545860177757793329093045522432279094518766", "3568312993091537758218792253361873752799472566055209125947589819564395417072", "1819755756343439646550062754332039103654718693246396323207323333948654200950"], ["5372129954699791301953948907349887257752247843844511069896766784624930478273", "17512156688034945920605615850550150476471921176481039715733979181538491476080", "25777105342317622165159064911913148785971147228777677435200128966844208883059"], ["25350392006158741749134238306326265756085455157012701586003300872637887157982", "20096724945283767296886159120145376967480397366990493578897615204296873954844", "8063283381910110762785892100479219642751540456251198202214433355775540036851"], ["4393613870462297385565277757207010824900723217720226130342463666351557475823", "9874972555132910032057499689351411450892722671352476280351715757363137891038", "23590926474329902351439438151596866311245682682435235170001347511997242904868"], ["17723373371137275859467518615551278584842947963894791032296774955869958211070", "2350345015303336966039836492267992193191479606566494799781846958620636621159", "27755207882790211140683010581856487965587066971982625511152297537534623405016"], ["6584607987789185408123601849106260907671314994378225066806060862710814193906", "609759108847171587253578490536519506369136135254150754300671591987320319770", "28435187585965602110074342250910608316032945187476441868666714022529803033083"], ["16016664911651770663938916450245705908287192964254704641717751103464322455303", "17551273293154696089066968171579395800922204266630874071186322718903959339163", "20414195497994754529479032467015716938594722029047207834858832838081413050198"], ["19773307918850685463180290966774465805537520595602496529624568184993487593855", "24598603838812162820757838364185126333280131847747737533989799467867231166980", "11040972566103463398651864390163813377135738019556270484707889323659789290225"], ["5189242080957784038860188184443287562488963023922086723850863987437818393811", "1435203288979376557721239239445613396009633263160237764653161500252258220144", "13066591163578079667911016543985168493088721636164837520689376346534152547210"], ["17345901407013599418148210465150865782628422047458024807490502489711252831342", "22139633362249671900128029132387275539363684188353969065288495002671733200348", "1061056418502836172283188490483332922126033656372467737207927075184389487061"], ["10241738906190857416046229928455551829189196941239601756375665129874835232299", "27808033332417845112292408673209999320983657696373938259351951416571545364415", "18820154989873674261497645724903918046694142479240549687085662625471577737140"], ["7983688435214640842673294735439196010654951226956101271763849527529940619307", "17067928657801807648925755556866676899145460770352731818062909643149568271566", "24472070825156236829515738091791182856425635433388202153358580534810244942762"], ["25752201169361795911258625731016717414310986450004737514595241038036936283227", "26041505376284666160132119888949817249574689146924196064963008712979256107535", "23977050489096115210391718599021827780049209314283111721864956071820102846008"], ["26678257097278788410676026718736087312816016749016738933942134600725962413805", "10480026985951498884090911619636977502506079971893083605102044931823547311729", "21126631300593007055117122830961273871167754554670317425822083333557535463396"], ["1564862894215434177641156287699106659379648851457681469848362532131406827573", "13247162472821152334486419054854847522301612781818744556576865965657773174584", "8673615954922496961704442777870253767001276027366984739283715623634850885984"], ["2794525076937490807476666942602262298677291735723129868457629508555429470085", "4656175953888995612264371467596648522808911819700660048695373348629527757049", "23221574237857660318443567292601561932489621919104226163978909845174616477329"], ["1878392460078272317716114458784636517603142716091316893054365153068227117145", "2370412714505757731457251173604396662292063533194555369091306667486647634097", "17409784861870189930766639925394191888667317762328427589153989811980152373276"], ["25869136641898166514111941708608048269584233242773814014385564101168774293194", "11361209360311194794795494027949518465383235799633128250259863567683341091323", "14913258820718821235077379851098720071902170702113538811112331615559409988569"], ["12957012022018304419868287033513141736995211906682903915897515954290678373899", "17128889547450684566010972445328859295804027707361763477802050112063630550300", "23329219085372232771288306767242735245018143857623151155581182779769305489903"], ["1607741027962933685476527275858938699728586794398382348454736018784568853937", "2611953825405141009309433982109911976923326848135736099261873796908057448476", "7372230383134982628913227482618052530364724821976589156840317933676130378411"], ["20203606758501212620842735123770014952499754751430660463060696990317556818571", "4678361398979174017885631008335559529633853759463947250620930343087749944307", "27176462634198471376002287271754121925750749676999036165457559387195124025594"], ["6361981813552614697928697527332318530502852015189048838072565811230204474643", "13815234633287489023151647353581705241145927054858922281829444557905946323248", "10888828634279127981352133512429657747610298502219125571406085952954136470354"]], fullRounds: 55, partialRounds: 0, hasInitialRoundConstant: false, stateSize: 3, rate: 2, power: 7 };
  var R0 = { mds: [["5328350144166205084223774245058198666309664348635459768305312917086056785354", "15214731724107930304595906373487084110291887262136882623959435918484004667388", "22399519358931858664262538157042328690232277435337286643350379269028878354609"], ["10086628405675314879458652402278736459294354590428582803795166650930540770072", "17127968360683744052278857147989507037142007029142438136689352416106177192235", "14207324749280135281015658576564097509614634975132487654324863824516044294735"], ["3059104278162906687184746935153057867173086006783171716838577369156969739687", "16755849208683706534025643823697988418063305979108082130624352443958404325985", "16889774624482628108075965871448623911656600744832339664842346756371603433407"]], roundConstants: [["1346081094044643970582493287085428191977688221215786919106342366360741041016", "10635969173348128974923358283368657934408577270968219574411363948927109531877", "18431955373344919956072236142080066866861234899777299873162413437379924987003"], ["5797044060651575840084283729791357462720161727701814038830889113712361837236", "931288489507796144596974766082847744938192694315568692730730202141894005205", "13659894470945121760517769979107966886673294523737498361566285362771110125394"], ["6076231707445968054305995680347976771585015308155855387339303513025362636128", "28822740034050339685362260108484262889265034407340240070058997651710236456303", "23420266473857869790486107029614186913447272961845992963194006142267563993493"], ["13753917374184785903125509246122783296344288469304898921025291716613575849357", "22396739346703340038555577564698139382745239004673153148674304627904081092826", "13064238335532551154986111986409392866270911640785653458047811526842088084911"], ["23165923875642452719095776619341762858050322341374771345641255745672274104746", "1876216571769482372914291210815859835162659440705283782713345335434924136736", "25448252060136178247213604035267580231762596830634036926922217427938159849142"], ["2161875315509206970842862195937323600322108268401381254431163181777726747153", "19159855698625842998331760283165907305622417625829203038229273729196960321630", "24828563875172432296791053766778475681869974948122169083176331088266823626561"], ["15959479662608710141128458274961057999257961784282074767105536637788386907463", "8006369581283017287449277389162056290714176164680299906116833200510117952858", "18794336794618132129607701188430371953320538976527988886453665523008714542779"], ["19408271715954593722501381885401160867835377473312521553027032015227895029571", "13654747284005184272412579731446984220568337794941823533879059135026064413631", "14094055032353750931629930778481002727722804310855727808905931659115939920989"], ["13241818625838429282823260827177433104574315653706102174619924764342778921524", "25709259239494174564705048436260891089407557689981668111890003079561388887725", "26866626910239634723971078462134580196819809568632305020800296809092442642381"], ["23886826350713085163238005260075062110062681905356997481925492650252417143049", "16853602711255261520713463306790360324679500458440235992292027384928526778856", "18444710386168488194610417945072711530390091945738595259171890487504771614189"], ["16896789009769903615328691751424474161656500693270070895928499575572871141439", "23842266984616972287898037872537536999393060934879414668030219493005225085992", "24369698563802298585444760814856330583118549706483939267059237951238240608187"], ["25360195173713628054110426524260405937218170863260484655473435413697869858790", "1486437708678506228822038923353468635394979165769861487132708983207562337116", "18653498960429911228442559598959970807723487073275324556015861725806677047150"], ["18878179044241268037057256060083772636369783391816038647949347814518015576522", "178715779905629247116805974152863592571182389085419970371289655361443016848", "8381006794425876451998903949255801618132578446062133243427381291481465852184"], ["4176946262813877719206528849579392120806054050640974718891398605746592169324", "16376345520728802444699629729684297833862527190772376028981704525651968727081", "8399065769082251057361366626601550736334213197703006866551331927128775757919"], ["15435308585611812393531506745122614542196708285088622615406141986333182280857", "4082259282787276939431186930090898350392871145699460879678141552997816391817", "26348742719959309014730178326877937464605873211235784184917342950648457078699"], ["9707631711734344681918469569872517425107158187591261754498805460753455298868", "27910768846011709391567916011595957279088224137468948238696800459136335473132", "20407239095656434708569263842372155762970847207558227886302782130015730063802"], ["22726225412881182965250630589245572283256255052470345984553083359461473893802", "12443967854426795490638709950679156338200426963050610832781263082981525248175", "27102543658848146076219989119639465430524061997280788166887046421706499775415"], ["14427224233985680214097547669945064793149553513421479297921556194475574770861", "22917454832925781549840198815703114840452733537799472739275668965081704937832", "3455076056123630366063931123762198941796412458154689469887583689725886013901"], ["4513100023937785913596662867311227004762025658663076805918211014066645403017", "18187619530784075723418065322038024507729605774832001333883311123910954334059", "9447065431426150382325592560406989926365684509675374414068135115024495130938"], ["3227816098015819796753427754968234889554095489076864339942014527747604603014", "14798316759185072116520458171957899889489461918408669809912344751222514418582", "23013904852315603905843158448056763116188801262838729536210355401378476650033"], ["20979191509934291452182967564058656088941447895799901211038858159903580333267", "20772973010251235271448378823573767262405703078344288856168565499702414379868", "10105446427739226002497411811738001382334316505480517822035303561899927603685"], ["11079074761356717003579108002319997196881121172538617046865136940931215263187", "4693927775411489288330326150094711670434597808961717172753867514688725690438", "18581720304902876944842830383273503265470859268712618325357902881821721540119"], ["3065369948183164725765083504606321683481629263177690053939474679689088169185", "18515622379147081456114962668688706121098539582467584736624699157043365677487", "17563088600719312877716085528177751048248154461245613291986010180187238198006"], ["26199746176994924146211004840756471702409132230831594954444947705902602287290", "7576136600627345523051497639367002272003104458453478964661395239732811642605", "20058687874612168338994287374025378897088936171250328231848098497610185784281"], ["16894722532414195606958290526999761110785277556463400588047573469106594850228", "13961730805696859614283621225672002906734926278118993580398533742874863598733", "25256842011135514243352951950573936602906198374305137963222382546140030647211"], ["18530360047537856737482157200091774590035773602620205695980247565433703032532", "23014819965938599260086897799541446473887833964178378497976832161473586995397", "27911426213258307990762460361663504655967992659180759140364181941291843542489"], ["1067338118323302017358103178057182291035336430305886255160210378977812067042", "17219092885519007424608854460610388434712113621163885775309496940189894433620", "16432921127615937542183846559291144733339643093361323334499888895135356545408"], ["28608851042959977114787048070153637607786033079364369200270218128830983558707", "10121629780013165888398831090128011045011860641816380162950736555305748332191", "2348036340843128746981122630521268144839343500596932561106759754644596320722"], ["16619881370356823200358060093334065394764987467483650323706184068451904156452", "2302436627861989749837563733434625231689351276818486757748445924305258835336", "27514536540953539473280001431110316405453388911725550380123851609652679788049"], ["9459277727420672604737117687200019308525004979918488827092207438664125039815", "23425670740358068509956137586663046763224562225383386726193078231034380596217", "7641885067011661443791509688937280323563328029517832788240965464798835873658"], ["9579420382351699601929202663836555665702024548386778299996961509578687980280", "18513671386572584282611234979588379470994484682444053600751415262497237017703", "24923151431234706142737221165378041700050312199585085101919834422744926421604"], ["21131320841803068139502705966375283830095161079635803028011171241658723560073", "19208476595309656066589572658712717685014329237892885950958199953675225096566", "24023185216737416080949689106968568821656545490748664446389634158498624398204"], ["7510552996848634969347937904645640209946785877619890235458182993413526028718", "3694415017252995094553868781762548289196990492336482360084813900937464847638", "9219021070107873028263141554048987416559034633883158827414043929220388719352"], ["5058327241234443421111591959922712922949620710493120384930391763032694640881", "13148252221647574076185511663661016015859769210867362839817254885265598775418", "15186790492457240277904880519227706403545816456632095870015828239411033220638"], ["2775942914650502409705888572245750999561427024488403026572311267798009048466", "6277965230841030155341171319927732572492215818164736949144854827643964384893", "24144742149845235561087977558785057713814731737434473021812189457617252043745"], ["25789129719327437503403457598813971826156253950521984610569937361506914183550", "21500534320778995945845999974779950304491968082325255355181901574840373597824", "17185359848218837018503091932245529880546896465437232425673134558221638601375"], ["12253896579078110143384981818031883112606762215016553811786428215758384195713", "12956658260778456372481429232709881794962204180363200699121804724437678625542", "3023603786717368708677300377055384474816569333060487675635618249403832078921"], ["4186492855716808019562789862833898284927736051002588766326482010810259565130", "4263939782228419774639068267872291539552889472311225829898746091327730032923", "24068843626280451423530509388397151179174104901782990365720205643492047328816"], ["14564937827374621319716285527475223392664010281568256859627186463065876537730", "28367596550218705971881480694115935470211319172596432472834880507822452927283", "28712267437482356021504544448225827500268648754270274754623969882031853409874"], ["4542596163006916397403529184431773692747461300288194722982487051249951403191", "2530461821259252672899452671728393208543894014761816288817584587718369998371", "12886393063011539390567049190923398676964700147222878509238966758839020897414"], ["21593897590707514492037699253654745501762191795293908682495110982956631870528", "13233005790593128135480716846773978578237145313006994631606474472023504621256", "21621863098292803642478350494794106282518362577273973885587684567452726939909"], ["26068620073001644720969640099644251616742620988609091568084348314770436291745", "18248589586787935500122854210401321966459127818593446990365211078521058875685", "21247134484403265289037859533347798468858819117600251067578809852124865474448"], ["7947383127165915366383984718363902897504221803836013123394785749404572432524", "22173041014621867335598230447618036223462011647696367239478182269973488867154", "16773227734018849308448505860847939069870370055633571816925675705713088305139"], ["10708707957340055662073314227607620808612686977606082605219160019699644826999", "21249897193797038261479589555720746994050836195265348846222835266344091683000", "12581195059139097540117398803363514148192715293133623516709277290477633379593"], ["19779599816866992123290302397082614570282926215253589712189610064229996603178", "21749216503901548676985371189807470207364320167486559936962401093285243029177", "17600045923623503357380202389718735904174992978547372448837488832457719009224"], ["2732872979548118117758016335601225525660858727422778256671975055129965858636", "13703031005128062046175331918702218558750713240446179585947851411173844703597", "28447710105386636841938034820015573492556750872924193415447818187228356409281"], ["28539960355005748517007309210788803416171161412204526246799800716567376494244", "21329318452221893900731030722137844458345358926323127858742388587761302609863", "28135302149599894709369178097439582767613940517471323224020113411362601191873"], ["24980774120400248734054527936006392540889095705961960837980443629260392758683", "20339911045808632098936066397942175169549806052128535543540543556255197716643", "7929293103930252545581851978492699598413941396422930641071359388697302362494"], ["8911092207145893152276662096451247820054843777071569723455408545101628926203", "19648860643145256523615441075182036100116634560394529500146405733687718224516", "14635387208623683806428528837466762532853903031263830054986064902455379735903"], ["11555212214346132926966321609673228184079851030522218543981385635403167028692", "20896918157639814425520058178561910811657326967880217845710779511927814874973", "4650158165912007049140499755153804318686705949436165235742106170124284287326"], ["13880660273492757167295696447853232191657893303250187467329180558670697369810", "8043529172463774320604378774840863923445982272478964686447801046272917236836", "2134399296482715903442913099374581981696436050603410080564843555725771329441"], ["27320952903412641133501507962185246982787769547770982814240701526492601978122", "23417491374379751329394424924400186404791519133465537872457405970098902747611", "17612427354278346772575179176139417348059847375297761006336024476146551185903"], ["10710998507064742997612080847223278109404482930427999113323732519626499166548", "14958094513415797513745395709487730603918953350067504982704138489305723550923", "24096319595904213497633343966229498735553590589105811393277073274927955202995"], ["17983724131200292654039765185049138356840415443160477259330748730019147254309", "17598096800487588874709548646068838880468456205252324677357706597166777506441", "27420647821110229619898200875848631488422182349567475956209153112306555222281"], ["448538544835457571662601142415301047108854812427100562339376187510452313026", "23494184556634922103535803143214434479598067155171780264810485708203176455201", "22626342941879801989161990529511235538216563009907378573817996229389756621777"], ["26128268137723417163973860961686381960826033145738852158792607959175787222856", "20225791828042873305317281581105429726352058325970107209484198122707862156597", "7538871133759632802857159609785118198934349221046986784429069814655215585732"], ["26184554861259642274153262777073624024579929401668865520166966302070394487366", "28755259264665180745537307265993667261709206143628938749669440804401623257679", "11896066093033549470312328497237649508068258723531931099214795928200015717321"], ["21657721599978732693249012287058163532690942515202465984736373311077240614059", "9214914097169852704753116653702415951907628005986883140609006971322091003693", "18710111680849814325169297240208687402588261569152088592693815711857504371037"], ["6813635166770764528979084175325709935892248249948967889926276426090222296643", "20546585456429436268067726231902751119458200511988152296570567167520382569278", "20087466019194902429054761607398988292568594301671509779549344754172952693871"], ["28185105286740691904534067831357491310995891986363455251895371651360605333143", "10108348212894231193041286244259038275269464277821588425688314560368589986063", "11433633215392393209829215018579238412423821563056156785641278458497271271546"], ["27870881917195016999862550657996865268956893566432995492427618003637597051321", "102309803677783876701097881491240456320211833502658383473112057006867019389", "22844040227595875612525628393174357057929113317578127744718774517498324646590"], ["18364790233947478619325319418813215212267974311771564959136180502266118026133", "2480624341921718230432383518425561514824501138863702825916674641657321180841", "16778939567530361665956758171503829349658551798564323167725356065198936433124"], ["11947564511486966895926950599696532964589539443187518177489990556481125699966", "3133187646540385483015602955087323554103587039123577645562801570574691666057", "27704797101265438206569218421707753788081674727344603874614391656565567951541"], ["13001484695584753475562184349533365512515447041450030471627087395341039487710", "477322000667279478600757543806155989948171541982639893984064422067850617496", "13913755821658634147813329813115566967428755223601185963529801459396673113438"], ["16621869429023470107454028095846067937827722393398508604914831452950874033411", "21755744236927410239079501831014076529931327263341620300431356747367343619046", "26538666591151124505694487799121414506088199961481579132019627484065014831180"], ["3066480818457008068617042549071052338581291837882909165666223566402713429090", "16182268213934119294035309949459684472027705439038023775276926916166831108357", "28907604876608422892474268478706783033050951245339691569015166507728369585190"], ["27973960109508292680965426133498827831691369851701664449575719912259359998113", "1456924360278399121996742356757866616312146358469991014696110099534285524446", "8234248752911525485438611255163504976087091103090603316695312869292347668495"], ["8716078950082339630026654067608811496722305720644485560320987802533380421009", "19016744645809919602099479306503354923553336014593353020688463619133130053825", "24379650661051444982012238084495990858827340608012118841005379796362233056432"], ["2245379544097631382062919677963998259142792890502492881341386639439507471783", "28788137434161061988371619554419440748189388934884757179010092973102292086583", "7187000185648741287953633167647835668543536354944774631102766873251849991238"], ["18319349500538500800225762827448369057030532278398270164660609327776487168142", "2622932985948021877314529887962683530522545893985767148345336304947201715671", "13805188629797792210337544360632964855143280581052079479249966961215582531026"], ["27457600993464082637917106210690168172469473943609357897393615707457194410878", "15448646156961779103834447043970817898237835202826003934642165760908058355399", "9396792545729486882231669677795667529746274932273033601723318032992363022062"], ["9927877141952679457141759789181418464292082444806533413864151258248124544859", "23827901395971835838179844085051957393677906360196119690926757794561937573142", "3273544693673216914876067527455588276979859627093391584406340272737391174619"], ["19571510438350300564152393820251652609646082150148656806391655428002614034315", "4458840243585913642400750597703353770666314833058197517675446022682775625834", "6452218213610300363069953741424106105609715382419342511693148495219793324457"], ["14558167930891460678441266912176752652821641543245953113671886345167213541771", "10650967986920075561478528461783351160938460620955779955379459848889204404950", "19990009778942542934049216419052172134625404062770188357110708518621145688588"], ["26855242974447190235826233682457047761532515293146087151296725996543442567035", "22785340043356532865086769889360674409753343398766563441587096485751538658065", "28603049427449348335651629195385434188071937908693764500052489540779792538285"], ["20545812864989828913452616721240947168977365844984763819184465128164378967167", "23234068381345797209897730226956922073109641728569353961504167817770340037954", "26031714567641615877877111172701145299483019910006153132858512509897185854695"], ["9512221744061419790435674197238913998387834650389922233458121639503195504983", "12587458000103271975978240683793268604398305885278203470492658961734100340536", "9670291694005369437277651504604785512303147991710650505302465204429311229197"], ["26995526763045548800439747262386290359229145489609341602564040676717570935439", "23742712112104280264401317024221734961713400615669958343926511931219510484675", "27931469778579449247589315744656633392873808631802461175539563849884447358271"], ["20669006894143187877081688942720159738269397552445286314270368345994751825389", "26891772301075275370472640177651637211280740381619976926886106618375467277414", "28387986011980449959047232529988203397251084614417760995257355718700961696092"], ["6579105010484741592730389416372694666279917604793318157514380025250233913402", "11007035767869292700964744408562802781669930023548892567535397874932420229930", "981148366863906885900456473323410468923514528856216824044152942069412627408"], ["22213671088722307302576907504985884923571642958053627659840326928319445671280", "1318836216310789598614608105109389429335273432455224127576823891011367206122", "25586582796990779718352441955439394949194222626688223867952982491529809559257"], ["4923739488579452777913681531125585976446366144127161879759262506690369040090", "23505612338866210737103599484620591026802005128655081877133994175016351514827", "323887003859465324514901860965142186539600668250760639664361851354147799637"], ["10198923064967306784017949469108033682156920551672348936591491217255268794658", "9593680688139131432883442351722730169325112619984238956948153423155998917175", "27027988263960602112273050725720071355535922812577299127302015348825197871870"], ["14419883951157390867695097127684346981136020111885301573583640959136319507752", "5104414988075833278683649298543440897371415916271358703850262680431809374355", "24739655595299332818980677669648719986462429574612913501586844601377825836782"], ["28522818684103966731129743408029731246564480741348128436668680764518115102581", "21520350704208288978690888796633940487888044365108767319141211249242880355961", "17391005598311948834360476853940353239444383292422171321575043660157438608537"], ["15367833944125677011173327826570204350687925236257190051755087781855930646142", "21715073802090413714601069529558707101797361591183718695054701329871284436172", "8994093285353831008525761670339342200997965950202092028313103110478252647618"], ["8370824693889782161629525898408725452177580012023459750897244954935682978671", "16123253540853556024347150096993154278773652905830608614979368087152152043083", "3535380953353495025888433493640531836449699255364366295870140701379497967423"], ["6954518484798178646508803478426114267143074508396663899281411171704702743829", "28903134801897070276701950388422104654018369750191967384271618837091859516942", "20872505363530172448468374920196608937030884647150175861507911076568784054834"], ["6902861581703501105786795670676641959401710346423594578401934671029571262513", "10124161387604183369443890585742198433184078889862870469507328332805848271064", "10488004060799269337071647841224034919633445750252076195310163972966405029030"], ["507704911991278613147490289466075160618843900088471236546244459176211783848", "7252739745607302667257774481690407709040936359589867974787811552896597703097", "23278073497974004442836030100920157527910770509761505828038443336325476654930"], ["22766285055433137793164317120096790621982728188995759745859222009100808389090", "23129058299483468195787339200845749049960038336751758017949899311636830205152", "16665333681978951552434356320651834889869437822496200946959897681307959400425"], ["12145699202182574939376505075528461451757079041659894988784442097333218352048", "26340666275844437932755852805027863696219004039301187587209926587657008948704", "19208771804191839410002226941825269105677187954811130189835856228258013753206"], ["21957102494792377508237608216278079874536155315851198461024084071231867104453", "6933367436450995525851693784691226222726503560893470094614235356287049091852", "15707767379191450768747057313641112321773921923533732633534831270357733757271"], ["27661963645951389261638591385668507557739541354225916772550248746235106571003", "19699458096897937575096494582288688995241392471402204995195057374756282223421", "902873385171181344315871113842580653512118892800584003934454469411716098791"], ["17184835876565576154014372215369798779520343573944211203710896053325717110660", "664657295519303589036289440053175741110032988007278988577620229144220576240", "10803972669668998371638869508774217165881281885838503958226056357738500321396"], ["2329846733754251453632375727999372856194157027336139087170310553870624325301", "14139944357035048486675740400655356660678187875721949218090128899571575479791", "18368148273419807418427674359327442879484531833435081951870369910704734685351"], ["10480273665080572189328459165704340191901489646067580012574464138528963201459", "21773636700078124500346009061678153597323236568110076029811348966753228682835", "18184268307211429260956076021417309535471438696101133218049142374847151474905"], ["25957533025669311312382992376854735734491934602484112256289764602447226406852", "22223261506176684934865714490719116745135417403915426392159449667435294570739", "22937309162832499167063076416585504361695925730111272512450449042837586253575"], ["16956181785481598286719868503945127919581091625126206673934113115358441284347", "8497782777197814773596870810881707148695901557289856910220737358078100998191", "21135503731586600979470064722475007625236017670426339278983640892218291297054"], ["17809297343844488723046665739910571149089769215421130894378638450427880983923", "72435395972188389387093550708873189001876361107443937983754878061522372356", "7511239878692099209014947248389283109997289411550315391143819429585903287870"]], fullRounds: 63, partialRounds: 0, hasInitialRoundConstant: true, stateSize: 3, rate: 2, power: 5 };
  var xe = { dummyVerificationKeyHash: "3392518251768960475377392625298437850623664973002200885669375116181514017494" };
  function M0(e, t) {
    if (!Number.isInteger(e) || e < 0) throw Error(t);
  }
  function tt(e, t) {
    if (!Number.isInteger(e) || e <= 0) throw Error(t);
  }
  function V({ toBytes: e, readBytes: t }) {
    let n = (r, i) => {
      if (M0(i, "readBytes: offset must be integer >= 0"), i >= r.length) throw Error("readBytes: offset must be within bytes length");
      let [o, l] = t(r, i);
      if (l < i) throw Error("offset returned by readBytes must be greater than initial offset");
      if (l > r.length) throw Error("offset returned by readBytes must not exceed bytes length");
      return [o, l];
    };
    return { toBytes: e, readBytes: n, fromBytes(r) {
      let [i, o] = n(r, 0);
      if (o < r.length) throw Error("fromBytes: input bytes left over");
      return i;
    } };
  }
  function j(e, t) {
    return V({ toBytes(n) {
      let r = e.toBytes(n);
      return r.unshift(t), r;
    }, readBytes(n, r) {
      let i = n[r++];
      if (i !== t) throw Error(`fromBytes: Invalid version byte. Expected ${t}, got ${i}.`);
      return e.readBytes(n, r);
    } });
  }
  function O0({ toBytes: e, readBytes: t }, n) {
    return V({ toBytes: e, readBytes(r, i) {
      let [o, l] = t(r, i);
      return n(o), [o, l];
    } });
  }
  function N(e, t) {
    let n = t.map((i) => e[i]), r = y2(n);
    return V({ toBytes(i) {
      let o = t.map((l) => i[l]);
      return r.toBytes(o);
    }, readBytes(i, o) {
      let [l, s] = r.readBytes(i, o);
      return [Object.fromEntries(t.map((p, a) => [p, l[a]])), s];
    } });
  }
  function y2(e) {
    let t = e.length;
    return V({ toBytes(n) {
      let r = [];
      for (let i = 0; i < t; i++) {
        let o = e[i].toBytes(n[i]);
        r.push(...o);
      }
      return r;
    }, readBytes(n, r) {
      let i = [];
      for (let o = 0; o < t; o++) {
        let [l, s] = e[o].readBytes(n, r);
        r = s, i.push(l);
      }
      return [i, r];
    } });
  }
  function Ee(e) {
    let t = Object.fromEntries(e.map(({ type: n }, r) => [n, r]));
    return V({ toBytes(n) {
      let r = t[n.type], i = e[r];
      if ("value" in i) {
        let o = i.value;
        return [r, ...o.toBytes(n.value)];
      }
      return [r];
    }, readBytes(n, r) {
      let i = n[r];
      r++;
      let o = e[i];
      if ("value" in o) {
        let [l, s] = o.value.readBytes(n, r);
        return [{ type: o.type, value: l }, s];
      }
      return [{ type: o.type }, r];
    } });
  }
  var _t = V({ toBytes(e) {
    return [de(e), ...Y(e)];
  }, readBytes(e, t) {
    let n = e[t++], r = t + n;
    return [ot(e.slice(t, r)), r];
  } });
  var _0 = 255;
  var Nt = 254;
  var Rt = 253;
  var Mt = 252;
  function Ot(e) {
    let t = 1n << BigInt(e - 1), n = e >> 3;
    if (n * 8 !== e) throw Error("bits must be evenly divisible by 8");
    return V({ toBytes(r) {
      if (r < -t || r >= t) throw Error(`int${e} out of range, got ${r}`);
      if (r >= 0) return r < 0x80n ? $(r, 1) : r < 0x8000n ? [Nt, ...$(r, 2)] : r < 2147483648 ? [Rt, ...$(r, 4)] : [Mt, ...$(r, 8)];
      {
        let i = 1n << 64n;
        return r >= -0x80n ? [_0, ...$(i + r & 0xffn, 1)] : r >= -0x8000n ? [Nt, ...$(i + r & 0xffffn, 2)] : r >= -2147483648 ? [Rt, ...$(i + r & 0xffffffffn, 4)] : [Mt, ...$(i + r, 8)];
      }
    }, readBytes(r, i) {
      let o = r[i++];
      if (o < 128) return [BigInt(o), i];
      let l = { [_0]: 1, [Nt]: 2, [Rt]: 4, [Mt]: 8 }[o];
      if (l === void 0) throw Error("binable integer: invalid start byte");
      let s = i + l, u = h2(r.slice(i, s), n);
      if (u >= t && (u -= 2n * t), u < -t || u >= t) throw Error(`int${e} out of range, got ${u}`);
      return [u, s];
    } });
  }
  function h2(e, t) {
    let n = e.length, i = e[n - 1] >> 7 === 1 ? 255 : 0, o = e.concat(Array(t - n).fill(i));
    return je(o);
  }
  function K0(e) {
    let t = Ot(e), n = 1n << BigInt(e - 1);
    return g2(t, { to(r) {
      if (r < 0n || r >= 2n * n) throw Error(`uint${e} out of range, got ${r}`);
      return r >= n ? r - 2n * n : r;
    }, from(r) {
      let i = r < 0n ? r + 2n * n : r;
      if (i < 0n || i >= 2n * n) throw Error(`uint${e} out of range, got ${i}`);
      return i;
    } });
  }
  var h8 = Ot(64);
  var g8 = Ot(32);
  var nt = K0(64);
  var rt = K0(32);
  function Be(e, t) {
    let n = e.sizeInBytes;
    if (t.length >= n) throw Error("prefix too long");
    let r = Y(t);
    return e.fromBytes(r.concat(Array(n - r.length).fill(0)));
  }
  function it([...e]) {
    let t = [];
    for (; e.length > 0; ) {
      let n = e.splice(0, 8), r = 0;
      for (let i = 0; i < 8; i++) n[i] && (r |= 1 << i);
      t.push(r);
    }
    return t;
  }
  function fe(e) {
    return e.map((t) => {
      let n = Array(8);
      for (let r = 0; r < 8; r++) n[r] = !!(t & 1), t >>= 1;
      return n;
    }).flat();
  }
  function ze(e, t) {
    return { ...e, toBits(n) {
      return fe(e.toBytes(n)).slice(0, t);
    }, fromBits(n) {
      return e.fromBytes(it(n));
    }, sizeInBytes: Math.ceil(t / 8), sizeInBits: t };
  }
  function g2(e, { to: t, from: n }) {
    return V({ toBytes(r) {
      return e.toBytes(t(r));
    }, readBytes(r, i) {
      let [o, l] = e.readBytes(r, i);
      return [n(o), l];
    } });
  }
  var z0 = new TextEncoder();
  var b2 = new TextDecoder();
  function Y(e) {
    return [...z0.encode(e)];
  }
  function ot(e) {
    return b2.decode(Uint8Array.from(e));
  }
  function de(e) {
    return z0.encode(e).length;
  }
  var Kt = It(V0(), 1);
  var J0 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split("");
  var L0 = {};
  J0.forEach((e, t) => {
    L0[e] = t;
  });
  function S2(e, t) {
    let n = [t, ...e], r = D0(n), i = n.concat(r);
    return v2(i);
  }
  function k2(e, t) {
    let n = x2(e), r = n.slice(-4), i = n.slice(0, -4), o = D0(i);
    if (!I2(r, o)) throw Error("fromBase58Check: invalid checksum");
    if (i[0] !== t) throw Error(`fromBase58Check: input version byte ${t} does not match encoded version byte ${i[0]}`);
    return i.slice(1);
  }
  function v2(e) {
    let t = 0;
    for (; e[t] === 0; ) t++;
    let n = [...e].map(BigInt).reverse(), r = Tt(n, 256n, 58n).reverse();
    return r = Array(t).fill(0n).concat(r), r.map((i) => J0[Number(i)]).join("");
  }
  function x2(e) {
    let t = [...e].map((i) => {
      let o = L0[i];
      if (o === void 0) throw Error("fromBase58: invalid character");
      return BigInt(o);
    }), n = 0;
    for (; t[n] === 0n; ) n++;
    let r = Tt(t.reverse(), 58n, 256n).reverse();
    return r = Array(n).fill(0n).concat(r), r.map(Number);
  }
  function D0(e) {
    let t = Kt.sha256.create();
    t.update(e);
    let n = Kt.sha256.create();
    return n.update(t.array()), n.array().slice(0, 4);
  }
  function Q(e, t) {
    return { toBase58(n) {
      let r = e.toBytes(n);
      return S2(r, t);
    }, fromBase58(n) {
      let r = k2(n, t);
      return e.fromBytes(r);
    } };
  }
  function at(e, t) {
    return { ...e, ...Q(e, t) };
  }
  function Ve(e, t, n) {
    let r = n !== void 0 ? j(e, n) : e;
    return Q(r, t);
  }
  var E2 = 1;
  var B2 = 1;
  var w2 = 1;
  var A2 = 1;
  function q0(e) {
    let t = Ve(e, M.tokenIdKey), n = Ve(e, M.receiptChainHash, E2), r = Ve(e, M.ledgerHash, B2), i = Ve(e, M.epochSeed, w2), o = Ve(e, M.stateHash, A2);
    return { TokenId: t, ReceiptChainHash: n, LedgerHash: r, EpochSeed: i, StateHash: o };
  }
  function I2(e, t) {
    if (e.length !== t.length) return false;
    for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return false;
    return true;
  }
  var X = /* @__PURE__ */ new Set(["object", "function"]);
  var Je = /* @__PURE__ */ new Set([Number, String, Boolean, BigInt, null, void 0]);
  function lt() {
    let e = zt();
    function t(r, i) {
      let o = typeof r == "object" && r !== null ? Object.keys(r) : [];
      if (!Je.has(r) && !X.has(typeof r)) throw Error(`provable: unsupported type "${r}"`);
      function l(m) {
        if (Je.has(m)) return 0;
        if (!X.has(typeof m)) throw Error(`provable: unsupported type "${m}"`);
        return Array.isArray(m) ? m.map(l).reduce((S, B) => S + B, 0) : "sizeInFields" in m ? m.sizeInFields() : Object.values(m).map(l).reduce((S, B) => S + B, 0);
      }
      function s(m, S, B = false) {
        if (Je.has(m)) return [];
        if (!X.has(typeof m)) throw Error(`provable: unsupported type "${m}"`);
        return Array.isArray(m) ? m.map((x, q) => s(x, S[q])).flat() : "toFields" in m ? m.toFields(S) : (B ? o : Object.keys(m)).map((x) => s(m[x], S[x])).flat();
      }
      function u(m, S, B = false) {
        if (m === Number) return [S ?? 0];
        if (m === String) return [S ?? ""];
        if (m === Boolean) return [S ?? false];
        if (m === BigInt) return [S ?? 0n];
        if (m == null) return [];
        if (!X.has(typeof m)) throw Error(`provable: unsupported type "${m}"`);
        return Array.isArray(m) ? m.map((x, q) => u(x, S?.[q])) : "toAuxiliary" in m ? m.toAuxiliary(S) : (B ? o : Object.keys(m)).map((x) => u(m[x], S?.[x]));
      }
      function p(m, S, B = [], x = false) {
        if (m === Number || m === String || m === Boolean || m === BigInt) return B[0];
        if (m == null) return m;
        if (!X.has(typeof m)) throw Error(`provable: unsupported type "${m}"`);
        if (Array.isArray(m)) {
          let Z = [], ee = 0, re = 0;
          for (let ue of m) {
            let ce = l(ue);
            Z.push(p(ue, S.slice(re, re + ce), B[ee])), re += ce, ee++;
          }
          return Z;
        }
        if ("fromFields" in m) return m.fromFields(S, B);
        let q = x ? o : Object.keys(m), be = p(q.map((Z) => m[Z]), S, B);
        return Object.fromEntries(q.map((Z, ee) => [Z, be[ee]]));
      }
      function a(m, S, B = false) {
        if (!Je.has(m)) {
          if (!X.has(typeof m)) throw Error(`provable: unsupported type "${m}"`);
          return Array.isArray(m) ? m.forEach((x, q) => a(x, S[q])) : "check" in m ? m.check(S) : (B ? o : Object.keys(m)).forEach((x) => a(m[x], S[x]));
        }
      }
      let c = Z0("toValue"), d = Z0("fromValue"), { empty: f, fromJSON: y, toJSON: h, toInput: b } = n(r);
      return i?.isPure === true ? { sizeInFields: () => l(r), toFields: (m) => s(r, m, true), toAuxiliary: () => [], fromFields: (m) => p(r, m, [], true), check: (m) => a(r, m, true), toValue(m) {
        return c(r, m);
      }, fromValue(m) {
        return d(r, m);
      }, toInput: (m) => b(m), toJSON: (m) => h(m), fromJSON: (m) => y(m), empty: () => f() } : { sizeInFields: () => l(r), toFields: (m) => s(r, m, true), toAuxiliary: (m) => u(r, m, true), fromFields: (m, S) => p(r, m, S, true), check: (m) => a(r, m, true), toValue(m) {
        return c(r, m);
      }, fromValue(m) {
        return d(r, m);
      }, toInput: (m) => b(m), toJSON: (m) => h(m), fromJSON: (m) => y(m), empty: () => f() };
    }
    function n(r) {
      let i = typeof r == "object" && r !== null ? Object.keys(r) : [], o = /* @__PURE__ */ new Set([Number, String, Boolean, BigInt, null, void 0]);
      if (!o.has(r) && !X.has(typeof r)) throw Error(`provable: unsupported type "${r}"`);
      function l(a, c, d = false) {
        if (o.has(a)) return {};
        if (!X.has(typeof a)) throw Error(`provable: unsupported type "${a}"`);
        return Array.isArray(a) ? a.map((f, y) => l(f, c[y])).reduce(e.append, e.empty) : "toInput" in a ? a.toInput(c) : "toFields" in a ? { fields: a.toFields(c) } : (d ? i : Object.keys(a)).map((f) => l(a[f], c[f])).reduce(e.append, e.empty);
      }
      function s(a, c, d = false) {
        if (a === BigInt) return c.toString();
        if (a === String || a === Number || a === Boolean) return c;
        if (a == null) return null;
        if (!X.has(typeof a)) throw Error(`provable: unsupported type "${a}"`);
        return Array.isArray(a) ? a.map((f, y) => s(f, c[y])) : "toJSON" in a ? a.toJSON(c) : Object.fromEntries((d ? i : Object.keys(a)).map((f) => [f, s(a[f], c[f])]));
      }
      function u(a, c, d = false) {
        if (a === BigInt) return BigInt(c);
        if (a === String || a === Number || a === Boolean) return c;
        if (a == null) return;
        if (!X.has(typeof a)) throw Error(`provable: unsupported type "${a}"`);
        if (Array.isArray(a)) return a.map((h, b) => u(h, c[b]));
        if ("fromJSON" in a) return a.fromJSON(c);
        let f = d ? i : Object.keys(a), y = u(f.map((h) => a[h]), f.map((h) => c[h]));
        return Object.fromEntries(f.map((h, b) => [h, y[b]]));
      }
      function p(a) {
        if (a === Number) return 0;
        if (a === String) return "";
        if (a === Boolean) return false;
        if (a === BigInt) return 0n;
        if (a == null) return a;
        if (!X.has(typeof a)) throw Error(`provable: unsupported type "${a}"`);
        return Array.isArray(a) ? a.map(p) : "empty" in a ? a.empty() : Object.fromEntries(Object.keys(a).map((c) => [c, p(a[c])]));
      }
      return { toInput: (a) => l(r, a, true), toJSON: (a) => s(r, a, true), fromJSON: (a) => u(r, a, true), empty: () => p(r) };
    }
    return { provable: t, signable: n };
  }
  function Z0(e) {
    function t(n, r) {
      if (Je.has(n)) return r;
      if (!X.has(typeof n)) throw Error(`provable: unsupported type "${n}"`);
      return Array.isArray(n) ? n.map((i, o) => t(i, r[o])) : e in n ? n[e](r) : Object.fromEntries(Object.keys(n).map((i) => [i, t(n[i], r[i])]));
    }
    return t;
  }
  function zt() {
    return { get empty() {
      return {};
    }, append(e, t) {
      return { fields: (e.fields ?? []).concat(t.fields ?? []), packed: (e.packed ?? []).concat(t.packed ?? []) };
    } };
  }
  var { signable: Vt } = lt();
  function we(e) {
    return { toInput(t) {
      return { fields: [t], packed: [] };
    }, toJSON(t) {
      return t.toString();
    }, fromJSON(t) {
      if (isNaN(t) || isNaN(parseFloat(t))) throw Error(`fromJSON: expected a numeric string, got "${t}"`);
      let n = BigInt(t);
      return e(n), n;
    }, empty() {
      return 0n;
    } };
  }
  function me(e, t) {
    let n = Math.ceil(e / 8);
    return ze(V({ toBytes(r) {
      return $(r, n);
    }, readBytes(r, i) {
      let o = 0n, l = 0n, s = Math.min(i + n, r.length);
      for (let u = i; u < s; u++) o += BigInt(r[u]) << l, l += 8n;
      return t(o), [o, s];
    } }), e);
  }
  function X0(e) {
    return ze(V({ toBytes(t) {
      return [t ? 1 : 0];
    }, readBytes(t, n) {
      let r = t[n];
      return e(r), [r === 1, n + 1];
    } }), 1);
  }
  var $0 = J.sizeInBits;
  var G0 = 0x40000000000000000000000000000000224698fc094cf91b992d30ed00000000n;
  var W0 = st(0n, J.modulus, "Field");
  var F2 = Lt(/* @__PURE__ */ new Set([0n, 1n]), "Bool");
  var T2 = Lt(/* @__PURE__ */ new Set([0, 1]), "Bool");
  var Jt = Lt(/* @__PURE__ */ new Set([1n, G0]), "Sign");
  var U2 = me(J.sizeInBits, W0);
  var P2 = we(W0);
  var v = Ae(function(t) {
    return g(BigInt(t), J.modulus);
  }, { ...P2, ...U2, ...J, toBigint: (e) => e });
  var C = Ae(function(t) {
    return t;
  }, { ...X0(T2), fromBigint(e) {
    return F2(e), e !== 0n;
  }, toBigint(e) {
    return e ? 1n : 0n;
  }, toInput(e) {
    return { fields: [], packed: [[C.toBigint(e), 1]] };
  }, toBoolean(e) {
    return e;
  }, toJSON(e) {
    return e;
  }, fromJSON(e) {
    return e;
  }, empty() {
    return false;
  }, sizeInBytes: 1, fromField(e) {
    return C.fromBigint(e);
  } });
  function j0(e) {
    let t = (1n << BigInt(e)) - 1n, n = st(0n, 1n << BigInt(e), `UInt${e}`), r = me(e, n), i = Math.ceil(e / 8);
    return Ae(function(l) {
      let s = BigInt(l);
      return n(s), s;
    }, { ...we(n), ...r, toInput(o) {
      return { fields: [], packed: [[o, e]] };
    }, maxValue: t, random() {
      return r.fromBytes([...Qe(i)]);
    } });
  }
  var D = j0(32);
  var ne = j0(64);
  var Le = Ae(function(t) {
    if (t !== 1 && t !== -1) throw Error("Sign: input must be 1 or -1.");
    return g(BigInt(t), J.modulus);
  }, { ...we(Jt), ...me(1, Jt), empty() {
    return 1n;
  }, toInput(e) {
    return { fields: [], packed: [[e === 1n ? 1n : 0n, 1]] };
  }, fromFields([e]) {
    return e === 0n ? 1n : (Jt(e), e);
  }, toJSON(e) {
    return e === 1n ? "Positive" : "Negative";
  }, fromJSON(e) {
    if (e !== "Positive" && e !== "Negative") throw Error("Sign: invalid input");
    return e === "Positive" ? 1n : G0;
  } });
  function Ae(e, t) {
    return Object.assign(e, t);
  }
  function st(e, t, n) {
    return (r) => {
      if (r < e) throw Error(`${n}: inputs smaller than ${e} are not allowed, got ${r}`);
      if (r >= t) throw Error(`${n}: inputs larger than ${t - 1n} are not allowed, got ${r}`);
    };
  }
  function Lt(e, t) {
    return (n) => {
      if (!e.has(n)) throw Error(`${t}: input must be one of ${[...e].join(", ")}, got ${n}`);
    };
  }
  var Ie = { field: 1, scalar: 1, publicKey: 1, signature: 1 };
  var A = { toProjective({ x: e, y: t }) {
    return W.fromAffine({ x: e, y: t, infinity: false });
  }, fromProjective(e) {
    let { x: t, y: n, infinity: r } = W.toAffine(e);
    if (r) throw Error("Group.fromProjective: point is infinity");
    return { x: t, y: n };
  }, get generatorMina() {
    return A.fromProjective(W.one);
  }, scale(e, t) {
    return A.fromProjective(W.scale(A.toProjective(e), t));
  }, b: W.b, toFields({ x: e, y: t }) {
    return [e, t];
  } };
  var C2 = j(v, Ie.field);
  var H2 = j(O0(N({ x: C2, isOdd: C }, ["x", "isOdd"]), ({ x: e }) => {
    let { mul: t, add: n } = v, r = n(t(e, t(e, e)), W.b);
    if (!v.isSquare(r)) throw Error("PublicKey: not a valid group element");
  }), Ie.publicKey);
  var k = { ...Vt({ x: v, isOdd: C }), ...at(H2, M.publicKey), toJSON(e) {
    return k.toBase58(e);
  }, fromJSON(e) {
    return k.fromBase58(e);
  }, toGroup({ x: e, isOdd: t }) {
    let { mul: n, add: r } = v, i = r(n(e, n(e, e)), W.b), o = v.sqrt(i);
    if (o === void 0) throw Error("PublicKey.toGroup: not a valid group element");
    return t !== !!(o & 1n) && (o = v.negate(o)), { x: e, y: o };
  }, fromGroup({ x: e, y: t }) {
    let n = !!(t & 1n);
    return { x: e, isOdd: n };
  }, equal(e, t) {
    return e.x === t.x && e.isOdd === t.isOdd;
  }, toInputLegacy({ x: e, isOdd: t }) {
    return { fields: [e], bits: [!!t] };
  } };
  var Y0 = st(0n, te.modulus, "Scalar");
  var I = Ae(function(t) {
    return g(BigInt(t), te.modulus);
  }, { ...we(Y0), ...me(te.sizeInBits, Y0), ...te });
  var Q0 = j(I, Ie.scalar);
  var N2 = Q(Q0, M.privateKey);
  var F = { ...I, ...Vt(I), ...N2, ...Q0, toPublicKey(e) {
    return k.fromGroup(A.scale(A.generatorMina, e));
  }, convertPrivateKeyToBase58WithMod: _2 };
  var R2 = me(256, () => {
  });
  var M2 = Q(j(R2, Ie.scalar), M.privateKey);
  function _2(e) {
    let t = M2.fromBase58(e);
    return t = g(t, te.modulus), F.toBase58(t);
  }
  function ut(e) {
    return e.hasOwnProperty("to") && e.hasOwnProperty("from") && e.hasOwnProperty("fee") && e.hasOwnProperty("nonce");
  }
  function e1(e) {
    return e.hasOwnProperty("zkappCommand") && e.hasOwnProperty("feePayer");
  }
  function t1(e) {
    return ut(e) && e.hasOwnProperty("amount");
  }
  function n1(e) {
    return ut(e) && !e.hasOwnProperty("amount");
  }
  function Dt(e) {
    return typeof e == "object" && "field" in e && "scalar" in e;
  }
  function r1(e) {
    return e.data.hasOwnProperty("zkappCommand") && e.data.hasOwnProperty("feePayer") && typeof e.signature == "string";
  }
  function i1(e) {
    return ut(e.data) && Dt(e.signature) && e.data.hasOwnProperty("amount");
  }
  function o1(e) {
    return ut(e.data) && Dt(e.signature) && !e.data.hasOwnProperty("amount");
  }
  function a1(e) {
    return typeof e.data == "string" && Dt(e.signature);
  }
  function l1({ Field: e, Poseidon: t }) {
    function n() {
      return [e(0), e(0), e(0)];
    }
    function r(a) {
      return t.update(n(), [Be(e, a)]);
    }
    function i(a, c) {
      let d = r(a);
      return t.update(d, c)[0];
    }
    function o(a) {
      return r(a)[0];
    }
    let l = { empty() {
      return { hash: o("MinaZkappEventsEmpty"), data: [] };
    }, pushEvent(a, c) {
      let d = i(T.event, c);
      return { hash: i(T.events, [a.hash, d]), data: [c, ...a.data] };
    }, fromList(a) {
      return [...a].reverse().reduce(l.pushEvent, l.empty());
    }, hash(a) {
      return l.fromList(a).hash;
    } }, s = { ...l, ...ct({ empty: l.empty, toValue(a) {
      return a.map((c) => c.map((d) => e.toBigint(d)));
    }, fromValue(a) {
      return a.map((c) => c.map((d) => e(d)));
    }, toJSON(a) {
      return a.map((c) => c.map((d) => e.toJSON(d)));
    }, fromJSON(a) {
      let c = a.map((f) => f.map((y) => e.fromJSON(y))), d = l.hash(c);
      return { data: c, hash: d };
    }, Field: e }) }, u = { empty() {
      return { hash: o("MinaZkappActionsEmpty"), data: [] };
    }, pushEvent(a, c) {
      let d = i(T.event, c);
      return { hash: i(T.sequenceEvents, [a.hash, d]), data: [c, ...a.data] };
    }, fromList(a) {
      return [...a].reverse().reduce(u.pushEvent, u.empty());
    }, hash(a) {
      return this.fromList(a).hash;
    }, emptyActionState() {
      return o("MinaZkappActionStateEmptyElt");
    }, updateSequenceState(a, c) {
      return i(T.sequenceEvents, [a, c]);
    } }, p = { ...u, ...ct({ empty: u.empty, toValue(a) {
      return a.map((c) => c.map((d) => e.toBigint(d)));
    }, fromValue(a) {
      return a.map((c) => c.map((d) => e(d)));
    }, toJSON(a) {
      return a.map((c) => c.map((d) => e.toJSON(d)));
    }, fromJSON(a) {
      let c = a.map((f) => f.map((y) => e.fromJSON(y))), d = u.hash(c);
      return { data: c, hash: d };
    }, Field: e }) };
    return { Events: s, Actions: p };
  }
  function ct({ empty: e, toValue: t, fromValue: n, toJSON: r, fromJSON: i, Field: o }) {
    return { empty: e, sizeInFields() {
      return 1;
    }, toFields({ hash: l }) {
      return [l];
    }, toAuxiliary(l) {
      return [l?.data ?? e().data];
    }, fromFields([l], [s]) {
      return { data: s, hash: l };
    }, toValue({ data: l, hash: s }) {
      return { data: t(l), hash: o.toBigint(s) };
    }, fromValue({ data: l, hash: s }) {
      return { data: n(l), hash: o(s) };
    }, toJSON({ data: l }) {
      return r(l);
    }, fromJSON(l) {
      return i(l);
    }, check() {
    }, toInput({ hash: l }) {
      return { fields: [l] };
    } };
  }
  var O2 = 6;
  function u1({ Field: e, Bool: t, HashHelpers: n, packToFields: r }) {
    let { signable: i } = lt(), o = q0(e), l = i(e);
    return { TokenId: s1(l, o.TokenId, e(K2)), StateHash: s1(l, o.StateHash), TokenSymbol: z2(i({ field: e, symbol: String }), e), AuthRequired: V2(i({ constant: t, signatureNecessary: t, signatureSufficient: t }), t), ZkappUri: J2(e, n, r) };
  }
  var K2 = 1;
  function s1(e, t, n) {
    return { ...e, empty: n !== void 0 ? () => n : e.empty, toJSON(r) {
      return t.toBase58(r);
    }, fromJSON(r) {
      return t.fromBase58(r);
    } };
  }
  function z2(e, t) {
    return { ...e, toInput({ field: r }) {
      return { packed: [[r, 48]] };
    }, toJSON({ symbol: r }) {
      return r;
    }, fromJSON(r) {
      let i = de(r);
      if (i > O2) throw Error(`Token symbol ${r} should be a maximum of 6 bytes, but is ${i}`);
      return { symbol: r, field: Be(t, r) };
    } };
  }
  function V2(e, t) {
    return { ...e, empty() {
      return { constant: t(true), signatureNecessary: t(false), signatureSufficient: t(true) };
    }, toJSON(n) {
      let r = Number(t.toJSON(n.constant)), i = Number(t.toJSON(n.signatureNecessary)), o = Number(t.toJSON(n.signatureSufficient));
      switch (`${r}${i}${o}`) {
        case "110":
          return "Impossible";
        case "101":
          return "None";
        case "000":
          return "Proof";
        case "011":
          return "Signature";
        case "001":
          return "Either";
        default:
          throw Error("Unexpected permission");
      }
    }, fromJSON(n) {
      let i = { Impossible: "110", None: "101", Proof: "000", Signature: "011", Either: "001" }[n];
      if (i === void 0) throw Error("Unexpected permission");
      let [o, l, s] = i.split("").map((u) => t(!!Number(u)));
      return { constant: o, signatureNecessary: l, signatureSufficient: s };
    } };
  }
  function J2(e, t, n) {
    function r(i) {
      let o = fe(Y(i));
      o.push(true);
      let l = { packed: o.map((u) => [e(Number(u)), 1]) }, s = n(l);
      return t.hashWithPrefix(T.zkappUri, s);
    }
    return ct({ empty() {
      return { data: "", hash: t.hashWithPrefix(T.zkappUri, [e(0), e(0)]) };
    }, toValue(i) {
      return i;
    }, fromValue(i) {
      return i;
    }, toJSON(i) {
      return i;
    }, fromJSON(i) {
      return { data: i, hash: r(i) };
    }, Field: e });
  }
  function L2(e) {
    let { potentialXs: t, tryDecode: n } = F0;
    return t(e).map((i) => n(i)).find((i) => i);
  }
  function D2(e) {
    return (t) => {
      let n = e(t), r = L2(n);
      if (r === void 0) return;
      let o = (r.y & 1n) === 1n ? J.negate(r.y) : r.y;
      return { x: r.x, y: o };
    };
  }
  var c1 = f1(J, N0);
  var ye = { ...c1, hashToGroup: D2(c1.hash) };
  var p1 = f1(J, R0);
  function f1(e, { fullRounds: t, partialRounds: n, hasInitialRoundConstant: r, stateSize: i, rate: o, power: l, roundConstants: s, mds: u }) {
    if (n !== 0) throw Error("we don't support partial rounds");
    tt(o, "rate must be a positive integer"), tt(t, "fullRounds must be a positive integer"), tt(l, "power must be a positive integer");
    let p = BigInt(l), a = s.map((b) => b.map(BigInt)), c = u.map((b) => b.map(BigInt));
    function d() {
      return Array(i).fill(0n);
    }
    function f(b) {
      return y(d(), b)[0];
    }
    function y([...b], m) {
      if (m.length === 0) return h(b), b;
      let S = Math.ceil(m.length / o) * o;
      m = m.concat(Array(S - m.length).fill(0n));
      for (let B = 0; B < S; B += o) {
        for (let x = 0; x < o; x++) b[x] = e.add(b[x], m[B + x]);
        h(b);
      }
      return b;
    }
    function h(b) {
      let m = 0;
      if (r) {
        for (let S = 0; S < i; S++) b[S] = e.add(b[S], a[0][S]);
        m = 1;
      }
      for (let S = 0; S < t; S++) {
        for (let x = 0; x < i; x++) b[x] = e.power(b[x], p);
        let B = [...b];
        for (let x = 0; x < i; x++) b[x] = e.dot(c[x], B), b[x] = e.add(b[x], a[S + m][x]);
      }
    }
    return { initialState: d, update: y, hash: f };
  }
  function qt(e, t) {
    function n(o) {
      return t.update(t.initialState(), [Be(e, o)]);
    }
    function r(o) {
      return n(o)[0];
    }
    function i(o, l) {
      let s = n(o);
      return t.update(s, l)[0];
    }
    return { salt: n, emptyHashWithPrefix: r, hashWithPrefix: i };
  }
  var Zt = zt();
  var pt = qt(v, ye);
  var { hashWithPrefix: ie } = pt;
  var d1 = qt(v, p1);
  function he({ fields: e = [], packed: t = [] }) {
    if (t.length === 0) return e;
    let n = [], r = 0n, i = 0;
    for (let [o, l] of t) i += l, i < 255 ? r = r * (1n << BigInt(l)) + o : (n.push(r), i = l, r = o);
    return n.push(r), e.concat(n);
  }
  function ft({ fields: e, bits: t }) {
    let n = [];
    for (; t.length > 0; ) {
      let r = t.splice(0, $0 - 1), i = v.fromBits(r);
      n.push(i);
    }
    return e.concat(n);
  }
  function m1({ fields: e, bits: t }) {
    return e.map(v.toBits).flat().concat(t);
  }
  var H = { empty() {
    return { fields: [], bits: [] };
  }, bits(e) {
    return { fields: [], bits: e };
  }, append(e, t) {
    return { fields: (e.fields ?? []).concat(t.fields ?? []), bits: (e.bits ?? []).concat(t.bits ?? []) };
  } };
  var { TokenId: y1, StateHash: h1, TokenSymbol: g1, AuthRequired: b1, ZkappUri: S1 } = u1({ Field: v, Bool: C, HashHelpers: pt, packToFields: he });
  var { Events: k1, Actions: Xt } = l1({ Field: v, Poseidon: ye });
  var v1 = { ...v, empty: Xt.emptyActionState };
  var x1 = { ...v, empty: () => v(xe.dummyVerificationKeyHash) };
  var E1 = { ...v, empty: () => pt.emptyHashWithPrefix("CodaReceiptEmpty") };
  var B1 = { ...D, empty: () => D(H0.txnVersion) };
  var dt = { sizeInFields: () => 0, toFields: () => [], toAuxiliary: () => [], fromFields: () => null, check: () => {
  }, toInput: () => ({}), toJSON: () => null, fromJSON: () => null, empty: () => null, toValue: () => null, fromValue: () => null };
  var h6 = { ...dt, fromFields: () => {
  }, toJSON: () => null, fromJSON: () => {
  }, empty: () => {
  }, toValue: () => {
  }, fromValue: () => {
  } };
  var $t = /* @__PURE__ */ new Set(["number", "string", "null"]);
  var Gt = { number: { ...dt, toAuxiliary: (e = 0) => [e], toJSON: (e) => e, fromJSON: (e) => e, fromFields: (e, [t]) => t, empty: () => 0, toValue: (e) => e, fromValue: (e) => e }, string: { ...dt, toAuxiliary: (e = "") => [e], toJSON: (e) => e, fromJSON: (e) => e, fromFields: (e, [t]) => t, empty: () => "", toValue: (e) => e, fromValue: (e) => e }, null: dt };
  function w1(e, t) {
    let n = e.Field;
    function r(a, c, d) {
      return De(e, t, a, c, d);
    }
    function i(a) {
      return { toJSON(c) {
        return o(a, c);
      }, fromJSON(c) {
        return l(a, c);
      }, toInput(c) {
        return u(a, c);
      }, empty() {
        return s(a);
      } };
    }
    function o(a, c) {
      return r({ map(d, f) {
        return d.toJSON(f);
      }, reduceArray(d) {
        return d;
      }, reduceObject(d, f) {
        return f;
      }, reduceFlaggedOption({ isSome: d, value: f }) {
        return d ? f : null;
      }, reduceOrUndefined(d) {
        return d ?? null;
      } }, a, c);
    }
    function l(a, c) {
      let { checkedTypeName: d } = a;
      if (d) return t[d].fromJSON(c);
      if (a.type === "array") {
        let f = a;
        return c.map((y) => l(f.inner, y));
      }
      if (a.type === "option") {
        let f = a;
        switch (f.optionType) {
          case "closedInterval":
          case "flaggedOption": {
            let y = e.Bool.fromJSON(c !== null), h;
            if (c !== null) h = l(f.inner, c);
            else if (h = s(f.inner), f.optionType === "closedInterval") {
              let b = f.inner.entries.lower, m = e[b.type];
              h.lower = m.fromJSON(f.rangeMin), h.upper = m.fromJSON(f.rangeMax);
            }
            return { isSome: y, value: h };
          }
          case "orUndefined":
            return c === null ? void 0 : l(f.inner, c);
          default:
            throw Error("bug");
        }
      }
      if (a.type === "object") {
        let { keys: f, entries: y } = a, h = {};
        for (let b = 0; b < f.length; b++) {
          let m = y[f[b]];
          h[f[b]] = l(m, c[f[b]]);
        }
        return h;
      }
      return $t.has(a.type) ? Gt[a.type].fromJSON(c) : e[a.type].fromJSON(c);
    }
    function s(a) {
      return r({ map(c) {
        return c.empty();
      }, reduceArray(c) {
        return c;
      }, reduceObject(c, d) {
        return d;
      }, reduceFlaggedOption({ isSome: c, value: d }, f) {
        if (f.optionType === "closedInterval") {
          let y = f.inner.entries.lower, h = e[y.type];
          d.lower = h.fromJSON(f.rangeMin), d.upper = h.fromJSON(f.rangeMax);
        }
        return { isSome: c, value: d };
      }, reduceOrUndefined() {
      } }, a, void 0);
    }
    function u(a, c) {
      return r({ map(d, f) {
        return d.toInput(f);
      }, reduceArray(d) {
        let f = { fields: [], packed: [] };
        for (let { fields: y, packed: h } of d) y && f.fields.push(...y), h && f.packed.push(...h);
        return f;
      }, reduceObject(d, f) {
        let y = { fields: [], packed: [] };
        for (let h of d) {
          let { fields: b, packed: m } = f[h];
          b && y.fields.push(...b), m && y.packed.push(...m);
        }
        return y;
      }, reduceFlaggedOption({ isSome: d, value: f }) {
        return { fields: f.fields, packed: d.packed.concat(f.packed ?? []) };
      }, reduceOrUndefined(d) {
        return {};
      } }, a, c);
    }
    function p(a, c) {
      return r({ map(d, f) {
        return d.toJSON(f);
      }, reduceArray(d) {
        return d.length === 0 || d.every((f) => f === null) ? null : d;
      }, reduceObject(d, f) {
        for (let y in f) f[y] === null && delete f[y];
        return Object.keys(f).length === 0 ? null : f;
      }, reduceFlaggedOption({ isSome: d, value: f }) {
        return d ? f : null;
      }, reduceOrUndefined(d) {
        return d ?? null;
      } }, a, c);
    }
    return { signableFromLayout: i, toInput: u, toJSON: o, fromJSON: l, empty: s, toJSONEssential: p };
  }
  function De(e, t, n, r, i) {
    let { checkedTypeName: o } = r;
    if (o) return n.map(t[o], i, o);
    if (r.type === "array") {
      let l = r, s = i;
      l.staticLength !== null && s === void 0 && (s = Array(l.staticLength).fill(void 0));
      let u = s?.map((p) => De(e, t, n, l.inner, p)) ?? [];
      return n.reduceArray(u, l);
    }
    if (r.type === "option") {
      let { optionType: l, inner: s } = r;
      switch (l) {
        case "closedInterval":
        case "flaggedOption":
          let u = i;
          return n.reduceFlaggedOption({ isSome: n.map(e.Bool, u?.isSome, "Bool"), value: De(e, t, n, s, u?.value) }, r);
        case "orUndefined":
          let p = i === void 0 ? void 0 : De(e, t, n, s, i);
          return n.reduceOrUndefined(p, s);
        default:
          throw Error("bug");
      }
    }
    if (r.type === "object") {
      let { keys: l, entries: s } = r, u = i, p = {};
      return l.forEach((a) => {
        p[a] = De(e, t, n, s[a], u?.[a]);
      }), n.reduceObject(l, p);
    }
    return $t.has(r.type) ? n.map(Gt[r.type], i, r.type) : n.map(e[r.type], i, r.type);
  }
  var mt = { ZkappCommand: { type: "object", name: "ZkappCommand", docs: null, keys: ["feePayer", "accountUpdates", "memo"], entries: { feePayer: { type: "object", name: "ZkappFeePayer", docs: null, keys: ["body", "authorization"], entries: { body: { type: "object", name: "FeePayerBody", docs: null, keys: ["publicKey", "fee", "validUntil", "nonce"], entries: { publicKey: { type: "PublicKey" }, fee: { type: "UInt64" }, validUntil: { type: "option", optionType: "orUndefined", inner: { type: "UInt32" } }, nonce: { type: "UInt32" } }, docEntries: { publicKey: null, fee: null, validUntil: null, nonce: null } }, authorization: { type: "string" } }, docEntries: { body: null, authorization: null } }, accountUpdates: { type: "array", inner: { type: "object", name: "ZkappAccountUpdate", docs: "An account update in a zkApp transaction", keys: ["body", "authorization"], entries: { body: { type: "object", name: "AccountUpdateBody", docs: null, keys: ["publicKey", "tokenId", "update", "balanceChange", "incrementNonce", "events", "actions", "callData", "callDepth", "preconditions", "useFullCommitment", "implicitAccountCreationFee", "mayUseToken", "authorizationKind"], entries: { publicKey: { type: "PublicKey" }, tokenId: { type: "TokenId" }, update: { type: "object", name: "AccountUpdateModification", docs: null, keys: ["appState", "delegate", "verificationKey", "permissions", "zkappUri", "tokenSymbol", "timing", "votingFor"], entries: { appState: { type: "array", inner: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, staticLength: 8 }, delegate: { type: "option", optionType: "flaggedOption", inner: { type: "PublicKey" } }, verificationKey: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "VerificationKeyWithHash", docs: null, keys: ["data", "hash"], entries: { data: { type: "string" }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } } }, permissions: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "Permissions", docs: null, keys: ["editState", "access", "send", "receive", "setDelegate", "setPermissions", "setVerificationKey", "setZkappUri", "editActionState", "setTokenSymbol", "incrementNonce", "setVotingFor", "setTiming"], entries: { editState: { type: "AuthRequired" }, access: { type: "AuthRequired" }, send: { type: "AuthRequired" }, receive: { type: "AuthRequired" }, setDelegate: { type: "AuthRequired" }, setPermissions: { type: "AuthRequired" }, setVerificationKey: { type: "object", name: "VerificationKeyPermission", docs: null, keys: ["auth", "txnVersion"], entries: { auth: { type: "AuthRequired" }, txnVersion: { type: "UInt32", checkedType: { type: "UInt32" }, checkedTypeName: "TransactionVersion" } }, docEntries: { auth: null, txnVersion: null } }, setZkappUri: { type: "AuthRequired" }, editActionState: { type: "AuthRequired" }, setTokenSymbol: { type: "AuthRequired" }, incrementNonce: { type: "AuthRequired" }, setVotingFor: { type: "AuthRequired" }, setTiming: { type: "AuthRequired" } }, docEntries: { editState: null, access: null, send: null, receive: null, setDelegate: null, setPermissions: null, setVerificationKey: null, setZkappUri: null, editActionState: null, setTokenSymbol: null, incrementNonce: null, setVotingFor: null, setTiming: null } } }, zkappUri: { type: "option", optionType: "flaggedOption", inner: { type: "string", checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "string" }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "ZkappUri" } }, tokenSymbol: { type: "option", optionType: "flaggedOption", inner: { type: "string", checkedType: { type: "object", name: "Anonymous", docs: null, keys: ["symbol", "field"], entries: { symbol: { type: "string" }, field: { type: "Field" } }, docEntries: { symbol: "", field: "" } }, checkedTypeName: "TokenSymbol" } }, timing: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "Timing", docs: null, keys: ["initialMinimumBalance", "cliffTime", "cliffAmount", "vestingPeriod", "vestingIncrement"], entries: { initialMinimumBalance: { type: "UInt64" }, cliffTime: { type: "UInt32" }, cliffAmount: { type: "UInt64" }, vestingPeriod: { type: "UInt32" }, vestingIncrement: { type: "UInt64" } }, docEntries: { initialMinimumBalance: null, cliffTime: null, cliffAmount: null, vestingPeriod: null, vestingIncrement: null } } }, votingFor: { type: "option", optionType: "flaggedOption", inner: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "StateHash" } } }, docEntries: { appState: null, delegate: null, verificationKey: null, permissions: null, zkappUri: null, tokenSymbol: null, timing: null, votingFor: null } }, balanceChange: { type: "object", name: "BalanceChange", docs: null, keys: ["magnitude", "sgn"], entries: { magnitude: { type: "UInt64" }, sgn: { type: "Sign" } }, docEntries: { magnitude: null, sgn: null } }, incrementNonce: { type: "Bool" }, events: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null, checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "Events" }, actions: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null, checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "Actions" }, callData: { type: "Field" }, callDepth: { type: "number" }, preconditions: { type: "object", name: "Preconditions", docs: null, keys: ["network", "account", "validWhile"], entries: { network: { type: "object", name: "NetworkPrecondition", docs: null, keys: ["snarkedLedgerHash", "blockchainLength", "minWindowDensity", "totalCurrency", "globalSlotSinceGenesis", "stakingEpochData", "nextEpochData"], entries: { snarkedLedgerHash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, blockchainLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, minWindowDensity: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } }, globalSlotSinceGenesis: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "GlobalSlotSinceGenesisInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, stakingEpochData: { type: "object", name: "EpochDataPrecondition", docs: null, keys: ["ledger", "seed", "startCheckpoint", "lockCheckpoint", "epochLength"], entries: { ledger: { type: "object", name: "EpochLedgerPrecondition", docs: null, keys: ["hash", "totalCurrency"], entries: { hash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { hash: null, totalCurrency: null } }, seed: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, startCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, lockCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, epochLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { ledger: null, seed: null, startCheckpoint: null, lockCheckpoint: null, epochLength: null } }, nextEpochData: { type: "object", name: "EpochDataPrecondition", docs: null, keys: ["ledger", "seed", "startCheckpoint", "lockCheckpoint", "epochLength"], entries: { ledger: { type: "object", name: "EpochLedgerPrecondition", docs: null, keys: ["hash", "totalCurrency"], entries: { hash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { hash: null, totalCurrency: null } }, seed: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, startCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, lockCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, epochLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { ledger: null, seed: null, startCheckpoint: null, lockCheckpoint: null, epochLength: null } } }, docEntries: { snarkedLedgerHash: null, blockchainLength: null, minWindowDensity: null, totalCurrency: null, globalSlotSinceGenesis: null, stakingEpochData: null, nextEpochData: null } }, account: { type: "object", name: "AccountPrecondition", docs: null, keys: ["balance", "nonce", "receiptChainHash", "delegate", "state", "actionState", "provedState", "isNew"], entries: { balance: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "BalanceInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } }, nonce: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "NonceInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, receiptChainHash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, delegate: { type: "option", optionType: "flaggedOption", inner: { type: "PublicKey" } }, state: { type: "array", inner: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, staticLength: 8 }, actionState: { type: "option", optionType: "flaggedOption", inner: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "ActionState" } }, provedState: { type: "option", optionType: "flaggedOption", inner: { type: "Bool" } }, isNew: { type: "option", optionType: "flaggedOption", inner: { type: "Bool" } } }, docEntries: { balance: null, nonce: null, receiptChainHash: null, delegate: null, state: null, actionState: null, provedState: null, isNew: null } }, validWhile: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "GlobalSlotSinceGenesisInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { network: null, account: null, validWhile: null } }, useFullCommitment: { type: "Bool" }, implicitAccountCreationFee: { type: "Bool" }, mayUseToken: { type: "object", name: "MayUseToken", docs: null, keys: ["parentsOwnToken", "inheritFromParent"], entries: { parentsOwnToken: { type: "Bool" }, inheritFromParent: { type: "Bool" } }, docEntries: { parentsOwnToken: null, inheritFromParent: null } }, authorizationKind: { type: "object", name: "AuthorizationKindStructured", docs: null, keys: ["isSigned", "isProved", "verificationKeyHash"], entries: { isSigned: { type: "Bool" }, isProved: { type: "Bool" }, verificationKeyHash: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "VerificationKeyHash" } }, docEntries: { isSigned: null, isProved: null, verificationKeyHash: null } } }, docEntries: { publicKey: null, tokenId: null, update: null, balanceChange: null, incrementNonce: null, events: null, actions: null, callData: null, callDepth: null, preconditions: null, useFullCommitment: null, implicitAccountCreationFee: null, mayUseToken: null, authorizationKind: null } }, authorization: { type: "object", name: "Control", docs: null, keys: ["proof", "signature"], entries: { proof: { type: "option", optionType: "orUndefined", inner: { type: "string" } }, signature: { type: "option", optionType: "orUndefined", inner: { type: "string" } } }, docEntries: { proof: null, signature: null } } }, docEntries: { body: null, authorization: null } }, staticLength: null }, memo: { type: "string" } }, docEntries: { feePayer: null, accountUpdates: null, memo: null } }, AccountUpdate: { type: "object", name: "ZkappAccountUpdate", docs: "An account update in a zkApp transaction", keys: ["body", "authorization"], entries: { body: { type: "object", name: "AccountUpdateBody", docs: null, keys: ["publicKey", "tokenId", "update", "balanceChange", "incrementNonce", "events", "actions", "callData", "callDepth", "preconditions", "useFullCommitment", "implicitAccountCreationFee", "mayUseToken", "authorizationKind"], entries: { publicKey: { type: "PublicKey" }, tokenId: { type: "TokenId" }, update: { type: "object", name: "AccountUpdateModification", docs: null, keys: ["appState", "delegate", "verificationKey", "permissions", "zkappUri", "tokenSymbol", "timing", "votingFor"], entries: { appState: { type: "array", inner: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, staticLength: 8 }, delegate: { type: "option", optionType: "flaggedOption", inner: { type: "PublicKey" } }, verificationKey: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "VerificationKeyWithHash", docs: null, keys: ["data", "hash"], entries: { data: { type: "string" }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } } }, permissions: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "Permissions", docs: null, keys: ["editState", "access", "send", "receive", "setDelegate", "setPermissions", "setVerificationKey", "setZkappUri", "editActionState", "setTokenSymbol", "incrementNonce", "setVotingFor", "setTiming"], entries: { editState: { type: "AuthRequired" }, access: { type: "AuthRequired" }, send: { type: "AuthRequired" }, receive: { type: "AuthRequired" }, setDelegate: { type: "AuthRequired" }, setPermissions: { type: "AuthRequired" }, setVerificationKey: { type: "object", name: "VerificationKeyPermission", docs: null, keys: ["auth", "txnVersion"], entries: { auth: { type: "AuthRequired" }, txnVersion: { type: "UInt32", checkedType: { type: "UInt32" }, checkedTypeName: "TransactionVersion" } }, docEntries: { auth: null, txnVersion: null } }, setZkappUri: { type: "AuthRequired" }, editActionState: { type: "AuthRequired" }, setTokenSymbol: { type: "AuthRequired" }, incrementNonce: { type: "AuthRequired" }, setVotingFor: { type: "AuthRequired" }, setTiming: { type: "AuthRequired" } }, docEntries: { editState: null, access: null, send: null, receive: null, setDelegate: null, setPermissions: null, setVerificationKey: null, setZkappUri: null, editActionState: null, setTokenSymbol: null, incrementNonce: null, setVotingFor: null, setTiming: null } } }, zkappUri: { type: "option", optionType: "flaggedOption", inner: { type: "string", checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "string" }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "ZkappUri" } }, tokenSymbol: { type: "option", optionType: "flaggedOption", inner: { type: "string", checkedType: { type: "object", name: "Anonymous", docs: null, keys: ["symbol", "field"], entries: { symbol: { type: "string" }, field: { type: "Field" } }, docEntries: { symbol: "", field: "" } }, checkedTypeName: "TokenSymbol" } }, timing: { type: "option", optionType: "flaggedOption", inner: { type: "object", name: "Timing", docs: null, keys: ["initialMinimumBalance", "cliffTime", "cliffAmount", "vestingPeriod", "vestingIncrement"], entries: { initialMinimumBalance: { type: "UInt64" }, cliffTime: { type: "UInt32" }, cliffAmount: { type: "UInt64" }, vestingPeriod: { type: "UInt32" }, vestingIncrement: { type: "UInt64" } }, docEntries: { initialMinimumBalance: null, cliffTime: null, cliffAmount: null, vestingPeriod: null, vestingIncrement: null } } }, votingFor: { type: "option", optionType: "flaggedOption", inner: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "StateHash" } } }, docEntries: { appState: null, delegate: null, verificationKey: null, permissions: null, zkappUri: null, tokenSymbol: null, timing: null, votingFor: null } }, balanceChange: { type: "object", name: "BalanceChange", docs: null, keys: ["magnitude", "sgn"], entries: { magnitude: { type: "UInt64" }, sgn: { type: "Sign" } }, docEntries: { magnitude: null, sgn: null } }, incrementNonce: { type: "Bool" }, events: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null, checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "Events" }, actions: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null, checkedType: { type: "object", name: "Events", docs: null, keys: ["data", "hash"], entries: { data: { type: "array", inner: { type: "array", inner: { type: "Field" }, staticLength: null }, staticLength: null }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } }, checkedTypeName: "Actions" }, callData: { type: "Field" }, callDepth: { type: "number" }, preconditions: { type: "object", name: "Preconditions", docs: null, keys: ["network", "account", "validWhile"], entries: { network: { type: "object", name: "NetworkPrecondition", docs: null, keys: ["snarkedLedgerHash", "blockchainLength", "minWindowDensity", "totalCurrency", "globalSlotSinceGenesis", "stakingEpochData", "nextEpochData"], entries: { snarkedLedgerHash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, blockchainLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, minWindowDensity: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } }, globalSlotSinceGenesis: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "GlobalSlotSinceGenesisInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, stakingEpochData: { type: "object", name: "EpochDataPrecondition", docs: null, keys: ["ledger", "seed", "startCheckpoint", "lockCheckpoint", "epochLength"], entries: { ledger: { type: "object", name: "EpochLedgerPrecondition", docs: null, keys: ["hash", "totalCurrency"], entries: { hash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { hash: null, totalCurrency: null } }, seed: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, startCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, lockCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, epochLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { ledger: null, seed: null, startCheckpoint: null, lockCheckpoint: null, epochLength: null } }, nextEpochData: { type: "object", name: "EpochDataPrecondition", docs: null, keys: ["ledger", "seed", "startCheckpoint", "lockCheckpoint", "epochLength"], entries: { ledger: { type: "object", name: "EpochLedgerPrecondition", docs: null, keys: ["hash", "totalCurrency"], entries: { hash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, totalCurrency: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "CurrencyAmountInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { hash: null, totalCurrency: null } }, seed: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, startCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, lockCheckpoint: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, epochLength: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "LengthInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { ledger: null, seed: null, startCheckpoint: null, lockCheckpoint: null, epochLength: null } } }, docEntries: { snarkedLedgerHash: null, blockchainLength: null, minWindowDensity: null, totalCurrency: null, globalSlotSinceGenesis: null, stakingEpochData: null, nextEpochData: null } }, account: { type: "object", name: "AccountPrecondition", docs: null, keys: ["balance", "nonce", "receiptChainHash", "delegate", "state", "actionState", "provedState", "isNew"], entries: { balance: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "18446744073709551615", inner: { type: "object", name: "BalanceInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt64" }, upper: { type: "UInt64" } }, docEntries: { lower: null, upper: null } } }, nonce: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "NonceInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } }, receiptChainHash: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, delegate: { type: "option", optionType: "flaggedOption", inner: { type: "PublicKey" } }, state: { type: "array", inner: { type: "option", optionType: "flaggedOption", inner: { type: "Field" } }, staticLength: 8 }, actionState: { type: "option", optionType: "flaggedOption", inner: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "ActionState" } }, provedState: { type: "option", optionType: "flaggedOption", inner: { type: "Bool" } }, isNew: { type: "option", optionType: "flaggedOption", inner: { type: "Bool" } } }, docEntries: { balance: null, nonce: null, receiptChainHash: null, delegate: null, state: null, actionState: null, provedState: null, isNew: null } }, validWhile: { type: "option", optionType: "closedInterval", rangeMin: "0", rangeMax: "4294967295", inner: { type: "object", name: "GlobalSlotSinceGenesisInterval", docs: null, keys: ["lower", "upper"], entries: { lower: { type: "UInt32" }, upper: { type: "UInt32" } }, docEntries: { lower: null, upper: null } } } }, docEntries: { network: null, account: null, validWhile: null } }, useFullCommitment: { type: "Bool" }, implicitAccountCreationFee: { type: "Bool" }, mayUseToken: { type: "object", name: "MayUseToken", docs: null, keys: ["parentsOwnToken", "inheritFromParent"], entries: { parentsOwnToken: { type: "Bool" }, inheritFromParent: { type: "Bool" } }, docEntries: { parentsOwnToken: null, inheritFromParent: null } }, authorizationKind: { type: "object", name: "AuthorizationKindStructured", docs: null, keys: ["isSigned", "isProved", "verificationKeyHash"], entries: { isSigned: { type: "Bool" }, isProved: { type: "Bool" }, verificationKeyHash: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "VerificationKeyHash" } }, docEntries: { isSigned: null, isProved: null, verificationKeyHash: null } } }, docEntries: { publicKey: null, tokenId: null, update: null, balanceChange: null, incrementNonce: null, events: null, actions: null, callData: null, callDepth: null, preconditions: null, useFullCommitment: null, implicitAccountCreationFee: null, mayUseToken: null, authorizationKind: null } }, authorization: { type: "object", name: "Control", docs: null, keys: ["proof", "signature"], entries: { proof: { type: "option", optionType: "orUndefined", inner: { type: "string" } }, signature: { type: "option", optionType: "orUndefined", inner: { type: "string" } } }, docEntries: { proof: null, signature: null } } }, docEntries: { body: null, authorization: null } }, Account: { type: "object", name: "Account", docs: null, keys: ["publicKey", "tokenId", "tokenSymbol", "balance", "nonce", "receiptChainHash", "delegate", "votingFor", "timing", "permissions", "zkapp"], entries: { publicKey: { type: "PublicKey" }, tokenId: { type: "TokenId" }, tokenSymbol: { type: "string" }, balance: { type: "UInt64" }, nonce: { type: "UInt32" }, receiptChainHash: { type: "Field", checkedType: { type: "Field" }, checkedTypeName: "ReceiptChainHash" }, delegate: { type: "option", optionType: "orUndefined", inner: { type: "PublicKey" } }, votingFor: { type: "Field" }, timing: { type: "object", name: "AccountTiming", docs: null, keys: ["isTimed", "initialMinimumBalance", "cliffTime", "cliffAmount", "vestingPeriod", "vestingIncrement"], entries: { isTimed: { type: "Bool" }, initialMinimumBalance: { type: "UInt64" }, cliffTime: { type: "UInt32" }, cliffAmount: { type: "UInt64" }, vestingPeriod: { type: "UInt32" }, vestingIncrement: { type: "UInt64" } }, docEntries: { isTimed: null, initialMinimumBalance: null, cliffTime: null, cliffAmount: null, vestingPeriod: null, vestingIncrement: null } }, permissions: { type: "object", name: "Permissions", docs: null, keys: ["editState", "access", "send", "receive", "setDelegate", "setPermissions", "setVerificationKey", "setZkappUri", "editActionState", "setTokenSymbol", "incrementNonce", "setVotingFor", "setTiming"], entries: { editState: { type: "AuthRequired" }, access: { type: "AuthRequired" }, send: { type: "AuthRequired" }, receive: { type: "AuthRequired" }, setDelegate: { type: "AuthRequired" }, setPermissions: { type: "AuthRequired" }, setVerificationKey: { type: "object", name: "VerificationKeyPermission", docs: null, keys: ["auth", "txnVersion"], entries: { auth: { type: "AuthRequired" }, txnVersion: { type: "UInt32", checkedType: { type: "UInt32" }, checkedTypeName: "TransactionVersion" } }, docEntries: { auth: null, txnVersion: null } }, setZkappUri: { type: "AuthRequired" }, editActionState: { type: "AuthRequired" }, setTokenSymbol: { type: "AuthRequired" }, incrementNonce: { type: "AuthRequired" }, setVotingFor: { type: "AuthRequired" }, setTiming: { type: "AuthRequired" } }, docEntries: { editState: null, access: null, send: null, receive: null, setDelegate: null, setPermissions: null, setVerificationKey: null, setZkappUri: null, editActionState: null, setTokenSymbol: null, incrementNonce: null, setVotingFor: null, setTiming: null } }, zkapp: { type: "option", optionType: "orUndefined", inner: { type: "object", name: "ZkappAccount", docs: null, keys: ["appState", "verificationKey", "zkappVersion", "actionState", "lastActionSlot", "provedState", "zkappUri"], entries: { appState: { type: "array", inner: { type: "Field" }, staticLength: 8 }, verificationKey: { type: "option", optionType: "orUndefined", inner: { type: "object", name: "VerificationKeyWithHash", docs: null, keys: ["data", "hash"], entries: { data: { type: "string" }, hash: { type: "Field" } }, docEntries: { data: null, hash: null } } }, zkappVersion: { type: "UInt32" }, actionState: { type: "array", inner: { type: "Field" }, staticLength: 5 }, lastActionSlot: { type: "UInt32" }, provedState: { type: "Bool" }, zkappUri: { type: "string" } }, docEntries: { appState: null, verificationKey: null, zkappVersion: null, actionState: null, lastActionSlot: null, provedState: null, zkappUri: null } } } }, docEntries: { publicKey: null, tokenId: null, tokenSymbol: null, balance: null, nonce: null, receiptChainHash: null, delegate: null, votingFor: null, timing: null, permissions: null, zkapp: null } } };
  var q2 = { PublicKey: k, UInt64: ne, UInt32: D, TokenId: y1, Field: v, Bool: C, AuthRequired: b1, Sign: Le };
  var Z2 = { TransactionVersion: B1, ZkappUri: S1, TokenSymbol: g1, StateHash: h1, Events: k1, Actions: Xt, ActionState: v1, VerificationKeyHash: x1, ReceiptChainHash: E1 };
  var { signableFromLayout: Wt, toJSONEssential: A6, empty: I6 } = w1(q2, Z2);
  var ge = Wt(mt.ZkappCommand);
  var jt = Wt(mt.AccountUpdate);
  var F6 = Wt(mt.Account);
  function X2(e) {
    let t = de(e);
    if (t > 32) throw Error("Memo.fromString: string too long");
    return `${String.fromCharCode(t)}${e}` + "\0".repeat(32 - t);
  }
  function $2(e) {
    let t = de(e);
    if (t !== 34) throw Error(`Memo.toString: length ${t} does not equal 34`);
    if (e[0] !== "") throw Error("Memo.toString: expected memo to start with 0x01 byte");
    let n = e.charCodeAt(1);
    if (n > 32) throw Error("Memo.toString: invalid length encoding");
    let r = Y(e).slice(2, 2 + n);
    return ot(r);
  }
  function G2(e) {
    let t = R.toBits(e), n = ft(H.bits(t));
    return ie(T.zkappMemo, n);
  }
  var Yt = 34;
  var A1 = V({ toBytes(e) {
    return Y(e);
  }, readBytes(e, t) {
    let n = t + Yt;
    return [ot(e.slice(t, n)), n];
  } });
  var R = { fromString: X2, toString: $2, hash: G2, ...ze(A1, Yt * 8), ...Q(A1, M.userCommandMemo), sizeInBytes: Yt, empty() {
    return R.fromString("");
  }, toValidString(e = "") {
    if (de(e) > 32) throw Error("Memo: string too long");
    return e;
  } };
  var r0 = It(n0(), 1);
  var St = { toString(e) {
    return typeof e == "string" ? e : e.custom;
  } };
  var o3 = 0x01n;
  var a3 = 0x00n;
  var Z1 = j(N({ r: v, s: I }, ["r", "s"]), Ie.signature);
  var U = { ...Z1, ...Q(Z1, M.signature), toJSON({ r: e, s: t }) {
    return { field: v.toJSON(e), scalar: I.toJSON(t) };
  }, fromJSON({ field: e, scalar: t }) {
    let n = v.fromJSON(e), r = I.fromJSON(t);
    return { r: n, s: r };
  }, dummy() {
    return { r: v(1), s: I(1) };
  } };
  function i0(e, t, n) {
    return a0({ fields: [e] }, t, n);
  }
  function o0(e, t, n, r) {
    return l0(e, { fields: [t] }, n, r);
  }
  function a0(e, t, n) {
    let r = A.scale(A.generatorMina, t), i = l3(e, r, t, n);
    if (I.equal(i, 0n)) throw Error("sign: derived nonce is 0");
    let { x: o, y: l } = A.scale(A.generatorMina, i), s = v.isEven(l) ? i : I.negate(i), u = X1(e, r, o, n), p = I.add(s, I.mul(u, t));
    return { r: o, s: p };
  }
  function l3(e, t, n, r) {
    let { x: i, y: o } = t, l = v(n), s = G1(r), u = Zt.append(e, { fields: [i, o, l], packed: [s] }), a = he(u).map(v.toBits).flat(), c = it(a), d = (0, r0.blake2b)(Uint8Array.from(c), void 0, 32);
    return d[d.length - 1] &= 63, I.fromBytes([...d]);
  }
  function X1(e, t, n, r) {
    let { x: i, y: o } = t, l = Zt.append(e, { fields: [i, o, n] });
    return ie(j1(r), he(l));
  }
  function l0(e, t, n, r) {
    let { r: i, s: o } = e, l = k.toGroup(n), s = X1(t, l, i, r), { scale: u, one: p, sub: a } = W, c = a(u(p, o), u(A.toProjective(l), s));
    try {
      let { x: d, y: f } = A.fromProjective(c);
      return v.isEven(f) && v.equal(d, i);
    } catch {
      return false;
    }
  }
  function s0(e, t, n) {
    let r = A.scale(A.generatorMina, t), i = s3(e, r, t, n);
    if (I.equal(i, 0n)) throw Error("sign: derived nonce is 0");
    let { x: o, y: l } = A.scale(A.generatorMina, i), s = v.isEven(l) ? i : I.negate(i), u = $1(e, r, o, n), p = I.add(s, I.mul(u, t));
    return { r: o, s: p };
  }
  function u0(e, t, n, r) {
    try {
      let { r: i, s: o } = e, l = k.toGroup(n), s = $1(t, l, i, r), { scale: u, one: p, sub: a } = W, c = a(u(p, o), u(A.toProjective(l), s)), { x: d, y: f } = A.fromProjective(c);
      return v.isEven(f) && v.equal(d, i);
    } catch {
      return false;
    }
  }
  function s3(e, t, n, r) {
    let { x: i, y: o } = t, l = I.toBits(n), s = G1(r)[0], u = fe([Number(s)]), p = H.append(e, { fields: [i, o], bits: [...l, ...u] }), a = m1(p), c = it(a), d = (0, r0.blake2b)(Uint8Array.from(c), void 0, 32);
    return d[d.length - 1] &= 63, I.fromBytes([...d]);
  }
  function $1(e, t, n, r) {
    let { x: i, y: o } = t, l = H.append(e, { fields: [i, o, n], bits: [] }), s = j1(r);
    return d1.hashWithPrefix(s, ft(l));
  }
  var u3 = (e) => e.toString(2).padStart(8, "0");
  function c3(e) {
    let t = e.length, n = "";
    for (let r = t - 1; r >= 0; r--) {
      let i = e.charCodeAt(r), o = u3(i);
      n = n.concat(o);
    }
    return [BigInt("0b" + n), n.length];
  }
  function G1(e) {
    let t = St.toString(e);
    switch (t) {
      case "mainnet":
        return [o3, 8];
      case "testnet":
        return [a3, 8];
      default:
        return c3(t);
    }
  }
  var W1 = (e) => {
    let n = "*", r = e.length;
    if (r <= 20) {
      let i = 20 - r;
      return e + n.repeat(i);
    } else return e.substring(0, 20);
  };
  var j1 = (e) => {
    let t = St.toString(e);
    switch (t) {
      case "mainnet":
        return T.signatureMainnet;
      case "testnet":
        return T.signatureTestnet;
      default:
        return W1(t + "Signature");
    }
  };
  var Y1 = (e) => {
    let t = St.toString(e);
    switch (t) {
      case "mainnet":
        return T.zkappBodyMainnet;
      case "testnet":
        return T.zkappBodyTestnet;
      default:
        return W1(t + "ZkappBody");
    }
  };
  function c0(e, t, n) {
    let r = ge.fromJSON(e), { commitment: i, fullCommitment: o } = Q1(r, n), l = F.fromBase58(t), s = r.feePayer.body.publicKey, u = i0(o, l, n);
    r.feePayer.authorization = U.toBase58(u);
    for (let p of r.accountUpdates) {
      if (!p.body.authorizationKind.isSigned || !k.equal(p.body.publicKey, s)) continue;
      let { useFullCommitment: a } = p.body, d = i0(a ? o : i, l, n);
      p.authorization = { signature: U.toBase58(d) };
    }
    return ge.toJSON(r);
  }
  function p0(e, t, n) {
    let r = ge.fromJSON(e), { commitment: i, fullCommitment: o } = Q1(r, n), l = k.fromBase58(t), s = U.fromBase58(r.feePayer.authorization), u = o0(s, o, l, n);
    if (!u) return false;
    for (let p of r.accountUpdates) {
      if (!p.body.authorizationKind.isSigned || !k.equal(p.body.publicKey, l)) continue;
      let { useFullCommitment: a } = p.body, c = a ? o : i;
      if (p.authorization.signature === void 0) return false;
      let d = U.fromBase58(p.authorization.signature);
      if (u = o0(d, c, l, n), !u) return false;
    }
    return u;
  }
  function Q1(e, t) {
    if (!m3(e)) throw Error("zkapp command: invalid call depth");
    let n = en(e.accountUpdates), r = p3(n, t), i = R.hash(R.fromBase58(e.memo)), o = f3(e.feePayer, t), l = ie(T.accountUpdateCons, [i, o, r]);
    return { commitment: r, fullCommitment: l };
  }
  function en(e, t = 0) {
    let n = t > 0 ? e : [...e], r = [];
    for (; n.length > 0; ) {
      let i = n[0];
      if (i.body.callDepth < t) return r;
      n.shift();
      let o = en(n, t + 1);
      r.push({ accountUpdate: i, children: o });
    }
    return r;
  }
  function tn(e, t) {
    y3(e);
    let n = jt.toInput(e), r = he(n);
    return ie(Y1(t), r);
  }
  function p3(e, t) {
    return nn(e, tn, ie, 0n, t);
  }
  function nn(e, t, n, r, i) {
    let o = r;
    for (let l of [...e].reverse()) {
      let s = nn(l.children, t, n, r, i), u = t(l.accountUpdate, i), p = n(T.accountUpdateNode, [u, s]);
      o = n(T.accountUpdateCons, [p, o]);
    }
    return o;
  }
  function f3(e, t) {
    let n = d3(e);
    return tn(n, t);
  }
  function d3({ body: { fee: e, nonce: t, publicKey: n, validUntil: r }, authorization: i }) {
    let { body: o } = jt.empty();
    return o.publicKey = n, o.balanceChange = { magnitude: e, sgn: Le(-1) }, o.incrementNonce = C(true), o.preconditions.network.globalSlotSinceGenesis = { isSome: C(true), value: { lower: D(0), upper: r ?? D.maxValue } }, o.preconditions.account.nonce = { isSome: C(true), value: { lower: t, upper: t } }, o.useFullCommitment = C(true), o.implicitAccountCreationFee = C(true), o.authorizationKind = { isProved: C(false), isSigned: C(true), verificationKeyHash: v(xe.dummyVerificationKeyHash) }, { body: o, authorization: { signature: i } };
  }
  function m3(e) {
    let t = e.accountUpdates.map((r) => r.body.callDepth), n = t.shift() ?? 0;
    if (n !== 0) return false;
    for (let r of t) {
      if (r < 0 || r - n > 1) return false;
      n = r;
    }
    return true;
  }
  function y3(e) {
    let { isSigned: t, isProved: n, verificationKeyHash: r } = e.body.authorizationKind;
    if (n && t) throw Error("Invalid authorization kind: Only one of `isProved` and `isSigned` may be true.");
    if (!n && r !== v(xe.dummyVerificationKeyHash)) throw Error(`Invalid authorization kind: If \`isProved\` is false, verification key hash must be ${xe.dummyVerificationKeyHash}, got ${r}`);
  }
  function kt(e, t, n) {
    let r = $e(e);
    return rn(r, t, n);
  }
  function vt(e, t, n) {
    let r = Ge(e);
    return rn(r, t, n);
  }
  function rn(e, t, n) {
    let r = an(e), i = F.fromBase58(t), o = s0(r, i, n);
    return U.toJSON(o);
  }
  function xt(e, t, n, r) {
    try {
      return on2($e(e), t, n, r);
    } catch {
      return false;
    }
  }
  function Et(e, t, n, r) {
    try {
      return on2(Ge(e), t, n, r);
    } catch {
      return false;
    }
  }
  function on2(e, t, n, r) {
    let i = an(e), o = U.fromJSON(t), l = k.fromBase58(n);
    return u0(o, i, l, r);
  }
  function an({ common: e, body: t }) {
    return H.append(g3(e), h3(t));
  }
  function h3({ tag: e, source: t, receiver: n, amount: r }) {
    return [b3(e), k.toInputLegacy(t), k.toInputLegacy(n), H.bits(ln), H.bits(ne.toBits(r)), H.bits([false])].reduce(H.append);
  }
  function g3({ fee: e, feePayer: t, nonce: n, validUntil: r, memo: i }) {
    return [H.bits(ne.toBits(e)), H.bits(ln), k.toInputLegacy(t), H.bits(D.toBits(n)), H.bits(D.toBits(r.value)), H.bits(R.toBits(i))].reduce(H.append);
  }
  function b3(e) {
    let t = { Payment: 0, StakeDelegation: 1 }[e], n = [t & 4, t & 2, t & 1].map(Boolean);
    return H.bits(n);
  }
  var ln = [true, ...Array(63).fill(false)];
  function $e({ common: e, body: { receiver: t, amount: n } }) {
    return { common: sn(e), body: { tag: "Payment", source: k.fromJSON(e.feePayer), receiver: k.fromJSON(t), amount: ne.fromJSON(n) } };
  }
  function Ge({ common: e, body: { newDelegate: t } }) {
    return { common: sn(e), body: { tag: "StakeDelegation", source: k.fromJSON(e.feePayer), receiver: k.fromJSON(t), amount: ne(0) } };
  }
  function sn(e) {
    return { fee: ne.fromJSON(e.fee), feePayer: k.fromJSON(e.feePayer), nonce: D.fromJSON(e.nonce), validUntil: { type: "SinceGenesis", value: D.fromJSON(e.validUntil) }, memo: R.fromString(e.memo) };
  }
  function un(e, t, n) {
    let r = pn(e), i = F.fromBase58(t), o = s0(r, i, n);
    return U.toJSON(o);
  }
  function cn(e, t, n, r) {
    try {
      let i = pn(e), o = U.fromJSON(t), l = k.fromBase58(n);
      return u0(o, i, l, r);
    } catch {
      return false;
    }
  }
  function pn(e) {
    let t = Y(e).map((n) => fe([n]).reverse()).flat();
    return H.bits(t);
  }
  var f0 = It(n0(), 1);
  var dn = { r: v(1), s: I(1) };
  function mn(e, { berkeley: t = false } = {}) {
    if (!t) return F3(e);
    let n = gn($e(e.data));
    return hn({ signer: k.fromBase58(e.data.common.feePayer), signature: dn, payload: n });
  }
  function yn(e, { berkeley: t = false } = {}) {
    if (!t) return T3(e);
    let n = gn(Ge(e.data));
    return hn({ signer: k.fromBase58(e.data.common.feePayer), signature: dn, payload: n });
  }
  function hn(e) {
    let t = I3.toBytes(e), n = (0, f0.blake2b)(Uint8Array.from(t), void 0, 32);
    return bn.toBase58(n);
  }
  function gn({ common: e, body: t }) {
    let { tag: n, ...r } = t;
    switch (n) {
      case "Payment":
        return { common: e, body: { type: n, value: { receiver: t.receiver, amount: t.amount } } };
      case "StakeDelegation":
        let { receiver: i } = r;
        return { common: e, body: { type: n, value: { type: "SetDelegate", value: { newDelegate: i } } } };
    }
  }
  var wt = N({ x: v, isOdd: C }, ["x", "isOdd"]);
  var S3 = Ee([{ type: "SinceGenesis", value: rt }]);
  var k3 = N({ fee: nt, feePayer: wt, nonce: rt, validUntil: S3, memo: _t }, ["fee", "feePayer", "nonce", "validUntil", "memo"]);
  var v3 = N({ receiver: wt, amount: nt }, ["receiver", "amount"]);
  var x3 = N({ newDelegate: wt }, ["newDelegate"]);
  var E3 = Ee([{ type: "SetDelegate", value: x3 }]);
  var B3 = Ee([{ type: "Payment", value: v3 }, { type: "StakeDelegation", value: E3 }]);
  var w3 = N({ common: k3, body: B3 }, ["common", "body"]);
  var A3 = N({ r: v, s: I }, ["r", "s"]);
  var I3 = N({ payload: w3, signer: wt, signature: A3 }, ["payload", "signer", "signature"]);
  var bn = Q(V({ toBytes(e) {
    return [e.length, ...e];
  }, readBytes(e) {
    return [Uint8Array.from(e.slice(1)), e.length];
  } }), M.transactionHash);
  function F3({ data: e, signature: t }) {
    let n = kn($e(e));
    return Sn({ signer: k.fromBase58(e.common.feePayer), signature: U.fromJSON(t), payload: n });
  }
  function T3({ data: e, signature: t }) {
    let n = kn(Ge(e));
    return Sn({ signer: k.fromBase58(e.common.feePayer), signature: U.fromJSON(t), payload: n });
  }
  function Sn(e) {
    let t = M3.toBase58(e), n = Y(t), r = (0, f0.blake2b)(Uint8Array.from(n), void 0, 32);
    return bn.toBase58(r);
  }
  function kn({ common: e, body: t }) {
    let { tag: n, ...r } = t, i = { ...e, validUntil: e.validUntil.value, feeToken: 1n };
    switch (n) {
      case "Payment":
        let o = { ...r, tokenId: 1n };
        return { common: i, body: { type: n, value: o } };
      case "StakeDelegation":
        let { source: l, receiver: s } = r;
        return { common: i, body: { type: n, value: { type: "SetDelegate", value: { delegator: l, newDelegate: s } } } };
    }
  }
  var P = (e) => j(e, 1);
  var Bt = P(P(nt));
  var fn = P(P(rt));
  var U3 = P(P(N({ fee: P(Bt), feeToken: P(Bt), feePayer: k, nonce: fn, validUntil: fn, memo: P(_t) }, ["fee", "feeToken", "feePayer", "nonce", "validUntil", "memo"])));
  var P3 = P(P(N({ source: k, receiver: k, tokenId: Bt, amount: P(Bt) }, ["source", "receiver", "tokenId", "amount"])));
  var C3 = N({ delegator: k, newDelegate: k }, ["delegator", "newDelegate"]);
  var H3 = P(Ee([{ type: "SetDelegate", value: C3 }]));
  var N3 = P(Ee([{ type: "Payment", value: P3 }, { type: "StakeDelegation", value: H3 }]));
  var R3 = P(N({ common: U3, body: N3 }, ["common", "body"]));
  var M3 = at(P(P(N({ payload: R3, signer: P(k), signature: P(N({ r: P(v), s: I }, ["r", "s"])) }, ["payload", "signer", "signature"]))), M.signedCommandV1);
  var En = "4294967295";
  function m0(e) {
    return d0(v, e.x, !!e.isOdd);
  }
  function Bn(e) {
    let t = e.length / 2, n = e.slice(0, t), r = e.slice(t);
    return { r: xn(v, n)[0], s: xn(I, r)[0] };
  }
  function vn(e) {
    return U.toJSON(Bn(e));
  }
  function _3(e) {
    return O3(U.fromJSON(e));
  }
  function O3(e) {
    let t = d0(v, e.r), n = d0(I, e.s);
    return `${t}${n}`;
  }
  function d0(e, t, n = false) {
    let r = e.toBytes(t);
    return r[r.length - 1] |= Number(n) << 7, r.map((i) => i.toString(16).padStart(2, "0")).join("");
  }
  function xn(e, t) {
    let n = [];
    for (let i = 0; i < t.length; i += 2) {
      let o = parseInt(t[i] + t[i + 1], 16);
      n.push(o);
    }
    let r = !!(n[n.length - 1] >> 7);
    return n[n.length - 1] &= 127, [e.fromBytes(n), r];
  }
  function y0(e, t, n) {
    let r;
    if (e.payment !== null) {
      let o = wn(e.payment);
      r = kt(o, t, n);
    } else if (e.stakeDelegation !== null) {
      let o = An(e.stakeDelegation);
      r = vt(o, t, n);
    } else throw Error("signTransaction: Unsupported transaction");
    let i = k.toBase58(F.toPublicKey(F.fromBase58(t)));
    return { data: e, signature: _3(r), publicKey: i };
  }
  function wn(e) {
    return { common: { fee: e.fee, feePayer: e.from, nonce: e.nonce, validUntil: e.valid_until ?? En, memo: e.memo ?? "" }, body: { receiver: e.to, amount: e.amount } };
  }
  function An(e) {
    return { common: { feePayer: e.delegator, fee: e.fee, validUntil: e.valid_until ?? En, memo: e.memo ?? "", nonce: e.nonce }, body: { newDelegate: e.new_delegate } };
  }
  function In(e, t) {
    if (e.data.payment !== null) return xt(wn(e.data.payment), vn(e.signature), e.publicKey, t);
    if (e.data.stakeDelegation !== null) return Et(An(e.data.stakeDelegation), vn(e.signature), e.publicKey, t);
    throw Error("verifyTransaction: Unsupported transaction");
  }
  function K3(e, t) {
    let n = k.fromBase58(e.publicKey);
    return { hex_bytes: e.signature, public_key: { hex_bytes: m0(n), curve_type: "pallas" }, signature_type: "schnorr_poseidon", signing_payload: t };
  }
  function Fn(e, t, n) {
    let r = y0(JSON.parse(e.unsigned_transaction), t, n), i = [K3(r, e.payloads[0])];
    return { network_identifier: { blockchain: "mina", network: n }, unsigned_transaction: e.unsigned_transaction, signatures: i };
  }
  function Tn({ signature: e, payment: t, stake_delegation: n }) {
    let r = Bn(e), i = U.toBase58(r), [o, l] = (() => {
      if (t !== null && n === null) {
        let u = t;
        return [{ receiver: u.to, source: u.from, kind: "Payment", fee_payer: u.from, fee_token: u.token, fee: u.fee, amount: u.amount, valid_until: u.valid_until, memo: u.memo }, u.nonce];
      } else if (t === null && n !== null) {
        let u = n;
        return [{ receiver: u.new_delegate, source: u.delegator, kind: "Delegation", fee_payer: u.delegator, fee_token: "1", fee: u.fee, amount: null, valid_until: u.valid_until, memo: u.memo }, u.nonce];
      } else throw Error("rosettaTransactionToSignedCommand: Unsupported transaction");
    })(), s = (() => {
      let u = o.fee_payer, p = o.source, a = o.receiver, c = R.toBase58(R.fromString(o.memo ?? "")), d = { fee: o.fee, fee_payer_pk: u, nonce: l, valid_until: o.valid_until, memo: c };
      if (o.kind === "Payment") return { common: d, body: ["Payment", { source_pk: p, receiver_pk: a, amount: o.amount }] };
      if (o.kind === "Delegation") return { common: d, body: ["Stake_delegation", ["Set_delegate", { delegator: p, new_delegate: a }]] };
      throw Error("rosettaTransactionToSignedCommand has a bug");
    })();
    return { signature: i, signer: s.common.fee_payer_pk, payload: s };
  }
  function Un(e, t) {
    let n = ye.hash, r = ye.hashToGroup, i = k.toGroup(F.toPublicKey(t)), o = A.generatorMina, l = I.random(), s = r([...e, ...A.toFields(i)]);
    if (!s) throw Error("hashToGroup: Point is undefined");
    let u = A.scale(s, t), p = A.scale(s, l), a = A.scale(o, l), c = n([...A.toFields(o), ...A.toFields(i), ...A.toFields(s), ...A.toFields(u), ...A.toFields(a), ...A.toFields(p)]), d = te.add(l, te.mul(t, c));
    return { publicKey: At(i), private: { c: c.toString(), g_r: At(a), h_m_pk_r: At(p) }, public: { nullifier: At(u), s: d.toString() } };
  }
  function At({ x: e, y: t }) {
    return { x: e.toString(), y: t.toString() };
  }
  var V3 = "4294967295";
  var Pn = class {
    constructor({ network: t }) {
      this.network = t;
    }
    genKeys() {
      let t = F.random(), n = F.toPublicKey(t);
      return { privateKey: F.toBase58(t), publicKey: k.toBase58(n) };
    }
    verifyKeypair({ privateKey: t, publicKey: n }) {
      let r = F.toPublicKey(F.fromBase58(t)), i = k.fromBase58(n);
      if (r.x !== i.x || r.isOdd !== i.isOdd) throw Error("Public key not derivable from private key");
      let o = ge.toJSON(ge.empty());
      o.feePayer.body.publicKey = n, o.memo = R.toBase58(R.empty());
      let l = c0(o, t, this.network);
      if (!p0(l, n, this.network)) throw Error("Could not sign a transaction with private key");
      return true;
    }
    derivePublicKey(t) {
      let n = F.fromBase58(t), r = F.toPublicKey(n);
      return k.toBase58(r);
    }
    derivePublicKeyUnsafe(t) {
      let n = F.fromBase58(F.convertPrivateKeyToBase58WithMod(t)), r = F.toPublicKey(n);
      return k.toBase58(r);
    }
    convertPrivateKeyToBase58WithMod(t) {
      return F.convertPrivateKeyToBase58WithMod(t);
    }
    signFields(t, n) {
      let r = F.fromBase58(n), i = a0({ fields: t }, r, "testnet");
      return { signature: U.toBase58(i), publicKey: k.toBase58(F.toPublicKey(r)), data: t };
    }
    verifyFields({ data: t, signature: n, publicKey: r }) {
      return l0(U.fromBase58(n), { fields: t }, k.fromBase58(r), "testnet");
    }
    signMessage(t, n) {
      let r = F.fromBase58(n), i = k.toBase58(F.toPublicKey(r));
      return { signature: un(t, n, this.network), publicKey: i, data: t };
    }
    verifyMessage({ data: t, signature: n, publicKey: r }) {
      return cn(t, n, r, this.network);
    }
    signRosettaTransaction(t, n) {
      return y0(t, n, this.network);
    }
    verifyRosettaTransaction(t) {
      return In(t, this.network);
    }
    signPayment(t, n) {
      let { fee: r, to: i, from: o, nonce: l, validUntil: s, memo: u } = Fe(t), p = String(t.amount);
      return { signature: kt({ common: { fee: r, feePayer: o, nonce: l, validUntil: s, memo: u }, body: { receiver: i, amount: p } }, n, this.network), publicKey: o, data: { to: i, from: o, fee: r, amount: p, nonce: l, memo: u, validUntil: s } };
    }
    verifyPayment({ data: t, signature: n, publicKey: r }) {
      let { fee: i, to: o, from: l, nonce: s, validUntil: u, memo: p } = Fe(t), a = se(t.amount);
      return xt({ common: { fee: i, feePayer: l, nonce: s, validUntil: u, memo: p }, body: { receiver: o, amount: a } }, n, r, this.network);
    }
    signStakeDelegation(t, n) {
      let { fee: r, to: i, from: o, nonce: l, validUntil: s, memo: u } = Fe(t);
      return { signature: vt({ common: { fee: r, feePayer: o, nonce: l, validUntil: s, memo: u }, body: { newDelegate: i } }, n, this.network), publicKey: o, data: { to: i, from: o, fee: r, nonce: l, memo: u, validUntil: s } };
    }
    verifyStakeDelegation({ data: t, signature: n, publicKey: r }) {
      let { fee: i, to: o, from: l, nonce: s, validUntil: u, memo: p } = Fe(t);
      return Et({ common: { fee: i, feePayer: l, nonce: s, validUntil: u, memo: p }, body: { newDelegate: o } }, n, r, this.network);
    }
    hashPayment({ data: t, signature: n }, r) {
      let { fee: i, to: o, from: l, nonce: s, validUntil: u, memo: p } = Fe(t), a = se(t.amount);
      return mn({ signature: n, data: { common: { fee: i, feePayer: l, nonce: s, validUntil: u, memo: p }, body: { receiver: o, amount: a } } }, r);
    }
    hashStakeDelegation({ data: t, signature: n }, r) {
      let { fee: i, to: o, from: l, nonce: s, validUntil: u, memo: p } = Fe(t);
      return yn({ signature: n, data: { common: { fee: i, feePayer: l, nonce: s, validUntil: u, memo: p }, body: { newDelegate: o } } }, r);
    }
    signZkappCommand({ feePayer: t, zkappCommand: n }, r) {
      let i = n.accountUpdates, o = this.getAccountUpdateMinimumFee(i), l = J3(t, o), { fee: s, nonce: u, validUntil: p, feePayer: a, memo: c } = l, d = { feePayer: { body: { publicKey: a, fee: s, nonce: u, validUntil: p }, authorization: "" }, accountUpdates: i, memo: R.toBase58(R.fromString(c)) }, f = c0(d, r, this.network);
      return { signature: f.feePayer.authorization, publicKey: a, data: { zkappCommand: f, feePayer: l } };
    }
    verifyZkappCommand({ data: t, publicKey: n, signature: r }) {
      return r === t.zkappCommand.feePayer.authorization && p0(t.zkappCommand, n, this.network);
    }
    signedRosettaTransactionToSignedCommand(t) {
      let n = JSON.parse(t), r = Tn(n);
      return JSON.stringify({ data: r });
    }
    rosettaCombinePayload(t, n) {
      return Fn(t, n, this.network);
    }
    publicKeyToRaw(t) {
      let n = k.fromBase58(t);
      return m0(n);
    }
    signTransaction(t, n) {
      if (typeof t == "string") return this.signMessage(t, n);
      if (t1(t)) return this.signPayment(t, n);
      if (n1(t)) return this.signStakeDelegation(t, n);
      if (e1(t)) return this.signZkappCommand(t, n);
      throw Error(`Expected signable payload, got '${t}'.`);
    }
    verifyTransaction(t) {
      if (a1(t)) return this.verifyMessage(t);
      if (i1(t)) return this.verifyPayment(t);
      if (o1(t)) return this.verifyStakeDelegation(t);
      if (r1(t)) return this.verifyZkappCommand(t);
      throw Error(`Expected signable payload, got '${JSON.stringify(t.data)}'.`);
    }
    getAccountUpdateMinimumFee(t) {
      return 1e-3 * t.length;
    }
    createNullifier(t, n) {
      let r = F.fromBase58(n);
      return Un(t, r);
    }
    get networkId() {
      return this.network;
    }
  };
  function se(e) {
    let t = BigInt(e);
    if (t < 0) throw Error("input must be non-negative");
    return t.toString();
  }
  function Fe(e) {
    let t = R.toValidString(e.memo);
    return { to: e.to, from: e.from, fee: se(e.fee), nonce: se(e.nonce), memo: t, validUntil: se(e.validUntil ?? V3) };
  }
  function J3(e, t) {
    if (e.fee === void 0) throw Error("Missing fee in fee payer");
    let n = se(e.fee);
    if (Number(n) < t) throw Error(`Fee must be greater than ${t}`);
    return { feePayer: e.feePayer, fee: n, nonce: se(e.nonce), memo: R.toValidString(e.memo), validUntil: e.validUntil === void 0 || e.validUntil === null ? null : se(e.validUntil) };
  }

  // src/seed.ts
  var client = new Pn({
    network: "mainnet"
  });
  function sign(message, privateKey) {
    const signed = client.signFields(message, privateKey);
    return signed.signature;
  }
  function getHDpath(account = 0) {
    const purpose = 44;
    const index = 0;
    const charge = 0;
    const hdPath = "m/" + purpose + "'/12586'/" + account + "'/" + charge + "/" + index;
    return hdPath;
  }
  function reverse(bytes) {
    const reversed = new import_safe_buffer.Buffer(bytes.length);
    for (let i = bytes.length; i > 0; i--) {
      reversed[bytes.length - i] = bytes[i - 1];
    }
    return reversed;
  }
  async function importWalletByMnemonic(mnemonic, index = 0) {
    const seed = bip39.mnemonicToSeedSync(mnemonic);
    const masterNode = bip32.fromSeed(seed);
    let hdPath = getHDpath(index);
    const child0 = masterNode.derivePath(hdPath);
    child0.privateKey[0] &= 63;
    const childPrivateKey = reverse(child0.privateKey);
    const privateKeyHex = `5a01${childPrivateKey.toString("hex")}`;
    const privateKey = import_bs58check.default.encode(import_safe_buffer.Buffer.from(privateKeyHex, "hex"));
    const publicKey = client.derivePublicKey(privateKey);
    return {
      privateKey,
      publicKey,
      hdIndex: index
    };
  }

  // src/embedded-wasm.js
  init_polyfills();
  var wasmBase64 = "";
  function getWasmBytes() {
    const binaryString = atob(wasmBase64);
    const bytes = new Uint8Array(binaryString.length);
    for (let i = 0; i < binaryString.length; i++) {
      bytes[i] = binaryString.charCodeAt(i);
    }
    return bytes;
  }

  // src/utils.ts
  init_polyfills();
  function uuid() {
    if (typeof crypto !== "undefined" && crypto.randomUUID) {
      return crypto.randomUUID();
    }
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
      const r = Math.random() * 16 | 0;
      const v4 = c === "x" ? r : r & 3 | 8;
      return v4.toString(16);
    });
  }

  // src/secrets.ts
  init_polyfills();
  var SecretStore = class {
    /** non-extractable AES-256-GCM key lives only in this iframe process */
    masterKey;
    vault = /* @__PURE__ */ new Map();
    constructor() {
      this.masterKey = crypto.subtle.generateKey(
        { name: "AES-GCM", length: 256 },
        /* extractable */
        false,
        ["encrypt", "decrypt"]
      );
    }
    /** Add or replace a secret (plaintext bytes). */
    async add(id, plain) {
      const iv = crypto.getRandomValues(new Uint8Array(12));
      const key = await this.masterKey;
      const ct2 = await crypto.subtle.encrypt({ name: "AES-GCM", iv }, key, plain);
      plain.fill(0);
      this.vault.set(id, { iv, ct: ct2 });
    }
    /**
     * Borrow the plaintext for the duration of `fn`.
     * The buffer is zeroed as soon as `fn` resolves, even on throw.
     */
    async withSecret(id, fn2) {
      const rec = this.vault.get(id);
      if (!rec) return void 0;
      const key = await this.masterKey;
      const plainBuf = await crypto.subtle.decrypt(
        { name: "AES-GCM", iv: rec.iv },
        key,
        rec.ct
      );
      const plain = new Uint8Array(plainBuf);
      try {
        return await fn2(plain);
      } finally {
        plain.fill(0);
      }
    }
    /** Delete a secret; ciphertext is GC-eligible immediately. */
    remove(id) {
      return this.vault.delete(id);
    }
  };

  // src/encrypt.ts
  init_polyfills();
  var { subtle } = crypto;
  async function generateKeyPair() {
    let { publicKey, privateKey } = await subtle.generateKey(
      {
        name: "RSA-OAEP",
        modulusLength: 4096,
        publicExponent: new Uint8Array([1, 0, 1]),
        hash: "SHA-512"
      },
      false,
      // extractable
      ["decrypt"]
      // usages
    );
    const spki = new Uint8Array(await subtle.exportKey("spki", publicKey));
    const pubB64 = btoa(String.fromCharCode(...spki));
    return { publicKey: pubB64, privateKey };
  }
  async function decryptShares(params) {
    console.log("decryptShares", params.data);
    const shares = [];
    for (const share of params.data) {
      const shareDecrypted = await decrypt({
        encrypted: share,
        privateKey: params.privateKey
      });
      if (shareDecrypted === null) {
        return null;
      }
      shares.push(shareDecrypted);
    }
    return await importWalletByMnemonic(recover_mnemonic(shares));
  }
  async function decrypt(params) {
    if (params.privateKey === null) {
      return null;
    }
    const cipher = Uint8Array.from(
      atob(params.encrypted),
      (c) => c.charCodeAt(0)
    );
    const plainBuf = await subtle.decrypt(
      { name: "RSA-OAEP" },
      params.privateKey,
      cipher
    );
    params.privateKey = null;
    return new Uint8Array(plainBuf);
  }

  // src/api.ts
  var secrets = new SecretStore();
  var keys2 = /* @__PURE__ */ new Map();
  var debug2 = (...args) => {
    if (true) {
      console.log("[iframe]", ...args);
    }
  };
  (async () => {
    debug2("starting up");
    initSync({ module: getWasmBytes() });
    debug2("sending ready message");
    parent.postMessage({ type: "ready" }, "*");
    self.addEventListener("message", async (ev) => {
      debug2("received message", ev.data);
      if (!ev.data || typeof ev.data !== "object" || !ev.data.id || !ev.data.type) {
        debug2("invalid message format, ignoring");
        return;
      }
      const { id, type } = ev.data;
      try {
        switch (type) {
          case "private_key_id": {
            debug2("processing private_key_id request", { id });
            const { privateKey, publicKey } = await generateKeyPair();
            if (privateKey === null) {
              throw new Error("Failed to generate key pair");
            }
            const privateKeyId = uuid();
            keys2.set(privateKeyId, privateKey);
            const resp = {
              id,
              type: "private_key_id",
              value: { privateKeyId, publicKey }
            };
            parent.postMessage(resp, "*");
            break;
          }
          case "decrypt_shares": {
            debug2("processing decrypt_shares request", { id });
            const key = keys2.get(ev.data.privateKeyId);
            if (!key) {
              throw new Error("Private key not found");
            }
            const decrypted = await decryptShares({
              data: ev.data.data,
              privateKey: key
            });
            if (!decrypted) {
              throw new Error("Failed to decrypt shares");
            }
            const { publicKey, privateKey } = decrypted;
            secrets.add(publicKey, new TextEncoder().encode(privateKey));
            const resp = {
              id,
              type: "decrypt_shares",
              value: publicKey
            };
            parent.postMessage(resp, "*");
            break;
          }
          case "sign": {
            debug2("processing sign request", {
              id,
              msgLength: ev.data.msg.length
            });
            const msg = ev.data.msg;
            const publicKey = ev.data.publicKey;
            const signature = await secrets.withSecret(
              publicKey,
              async (keyBytes) => {
                const key = new TextDecoder().decode(keyBytes);
                console.log("key", key);
                return sign(msg, key);
              }
            );
            if (!signature) {
              throw new Error("Failed to sign message");
            }
            const resp = {
              id,
              type: "sign",
              value: signature
            };
            debug2("sending sign response", { id, sigLength: resp.value.length });
            parent.postMessage(resp, "*");
            break;
          }
          default:
            debug2("unknown message type", type);
        }
      } catch (err) {
        debug2("error processing message", err);
        const e = {
          id,
          type: "error",
          reason: err.message
        };
        parent.postMessage(e, "*");
      }
    });
    debug2("message listener setup complete");
  })();
})();
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/*! Bundled license information:

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

mina-signer/dist/web/index.js:
  (*! Bundled license information:
  
  js-sha256/src/sha256.js:
    (**
     * [js-sha256]{@link https://github.com/emn178/js-sha256}
     *
     * @version 0.9.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2014-2017
     * @license MIT
     *)
  *)
*/
